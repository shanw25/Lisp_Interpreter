<Events startTimestamp="1700507886094" logVersion="1.0.0.202308221630">
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:18:09 EST 2023" docASTNodeCount="118" docActiveCodeLength="842" docExpressionCount="79" docLength="964" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3173">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{

	protected BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if(super.getTail().isNIL()) {
			return true;
		}else {
			return super.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		return "(" + super.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				super.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + super.getHead().toString() + " " + "." + " " +
				super.getTail().toString() + ")";
	}
	
//	public String toStringAsList() {
//		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
//	}
	
	public String toString() {
		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();
	}



}
]]></snapshot>
  </Command>
  <Command __id="1" _type="MoveCaretCommand" caretOffset="429" date="Mon Nov 20 14:18:09 EST 2023" docOffset="472" starttimestamp="1700507886094" timestamp="3301" />
  <Command __id="3" _type="MoveCaretCommand" caretOffset="1417" date="Mon Nov 20 14:18:10 EST 2023" docOffset="1546" starttimestamp="1700507886094" timestamp="4828" />
  <Command __id="2" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:18:10 EST 2023" docASTNodeCount="246" docActiveCodeLength="1571" docExpressionCount="118" docLength="2081" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4750">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="4" _type="MoveCaretCommand" caretOffset="1343" date="Mon Nov 20 14:18:12 EST 2023" docOffset="1472" starttimestamp="1700507886094" timestamp="6510" />
  <Command __id="5" _type="InsertStringCommand" date="Mon Nov 20 14:18:12 EST 2023" starttimestamp="1700507886094" timestamp="6658" timestamp2="6658">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="6" _type="MoveCaretCommand" caretOffset="1437" date="Mon Nov 20 14:18:13 EST 2023" docOffset="1566" starttimestamp="1700507886094" timestamp="7543" />
  <Command __id="7" _type="SelectTextCommand" caretOffset="1438" date="Mon Nov 20 14:18:13 EST 2023" end="1438" start="1434" starttimestamp="1700507886094" timestamp="7686" />
  <DocumentChange __id="8" _type="Replace" date="Mon Nov 20 14:18:15 EST 2023" docASTNodeCount="246" docActiveCodeLength="1568" docExpressionCount="118" docLength="2078" endLine="72" insertionLength="1" int_docASTNodeCount="245" int_docActiveCodeLength="1567" int_docExpressionCount="117" int_docLength="2077" length="4" offset="1563" startLine="72" starttimestamp="1700507886094" timestamp="9593">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[m]]></insertedText>
  </DocumentChange>
  <Command __id="9" _type="InsertStringCommand" date="Mon Nov 20 14:18:15 EST 2023" starttimestamp="1700507886094" timestamp="9611" timestamp2="9611">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="11" _type="InsertStringCommand" date="Mon Nov 20 14:18:15 EST 2023" starttimestamp="1700507886094" timestamp="9709" timestamp2="9709">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="13" _type="InsertStringCommand" date="Mon Nov 20 14:18:15 EST 2023" starttimestamp="1700507886094" timestamp="9801" timestamp2="9801">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="15" _type="InsertStringCommand" date="Mon Nov 20 14:18:15 EST 2023" starttimestamp="1700507886094" timestamp="9844" timestamp2="9844">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="17" _type="InsertStringCommand" date="Mon Nov 20 14:18:16 EST 2023" starttimestamp="1700507886094" timestamp="10091" timestamp2="10091">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="18" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:18:16 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="10116" />
  <Command __id="19" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:18:16 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="10785" />
  <Command __id="21" _type="InsertStringCommand" date="Mon Nov 20 14:18:16 EST 2023" starttimestamp="1700507886094" timestamp="10792" timestamp2="10792">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="22" _type="MoveCaretCommand" caretOffset="1424" date="Mon Nov 20 14:18:17 EST 2023" docOffset="1553" starttimestamp="1700507886094" timestamp="11598" />
  <Command __id="23" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:18:18 EST 2023" starttimestamp="1700507886094" timestamp="11947" />
  <Command __id="24" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 14:18:18 EST 2023" starttimestamp="1700507886094" timestamp="11979" />
  <Command __id="25" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:18:18 EST 2023" starttimestamp="1700507886094" timestamp="12002" />
  <Command __id="26" _type="MoveCaretCommand" caretOffset="1936" date="Mon Nov 20 14:18:33 EST 2023" docOffset="2065" starttimestamp="1700507886094" timestamp="27161" />
  <Command __id="27" _type="MoveCaretCommand" caretOffset="1882" date="Mon Nov 20 14:18:33 EST 2023" docOffset="2011" starttimestamp="1700507886094" timestamp="27649" />
  <Command __id="28" _type="MoveCaretCommand" caretOffset="1812" date="Mon Nov 20 14:18:34 EST 2023" docOffset="1941" starttimestamp="1700507886094" timestamp="28139" />
  <Command __id="29" _type="MoveCaretCommand" caretOffset="1703" date="Mon Nov 20 14:18:34 EST 2023" docOffset="1832" starttimestamp="1700507886094" timestamp="28577" />
  <Command __id="30" _type="MoveCaretCommand" caretOffset="1737" date="Mon Nov 20 14:18:35 EST 2023" docOffset="1866" starttimestamp="1700507886094" timestamp="29115" />
  <Command __id="31" _type="MoveCaretCommand" caretOffset="1792" date="Mon Nov 20 14:18:35 EST 2023" docOffset="1921" starttimestamp="1700507886094" timestamp="29548" />
  <Command __id="32" _type="MoveCaretCommand" caretOffset="1812" date="Mon Nov 20 14:18:36 EST 2023" docOffset="1941" starttimestamp="1700507886094" timestamp="29951" />
  <Command __id="33" _type="MoveCaretCommand" caretOffset="1815" date="Mon Nov 20 14:18:36 EST 2023" docOffset="1944" starttimestamp="1700507886094" timestamp="30407" />
  <Command __id="34" _type="MoveCaretCommand" caretOffset="1866" date="Mon Nov 20 14:18:36 EST 2023" docOffset="1995" starttimestamp="1700507886094" timestamp="30898" />
  <Command __id="35" _type="MoveCaretCommand" caretOffset="1957" date="Mon Nov 20 14:18:37 EST 2023" docOffset="2086" starttimestamp="1700507886094" timestamp="31376" />
  <Command __id="36" _type="MoveCaretCommand" caretOffset="1951" date="Mon Nov 20 14:18:37 EST 2023" docOffset="2080" starttimestamp="1700507886094" timestamp="31789" />
  <Command __id="37" _type="ShellCommand" date="Mon Nov 20 14:18:38 EST 2023" starttimestamp="1700507886094" timestamp="32849" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="38" _type="ShellCommand" date="Mon Nov 20 14:18:54 EST 2023" starttimestamp="1700507886094" timestamp="47983" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="39" _type="ShellCommand" date="Mon Nov 20 14:19:01 EST 2023" starttimestamp="1700507886094" timestamp="55236" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="40" _type="ShellCommand" date="Mon Nov 20 14:25:24 EST 2023" starttimestamp="1700507886094" timestamp="438360" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="41" _type="ShellCommand" date="Mon Nov 20 14:25:26 EST 2023" starttimestamp="1700507886094" timestamp="440662" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="42" _type="ShellCommand" date="Mon Nov 20 14:30:45 EST 2023" starttimestamp="1700507886094" timestamp="759288" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="43" _type="ShellCommand" date="Mon Nov 20 14:30:45 EST 2023" starttimestamp="1700507886094" timestamp="759810" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="44" _type="ShellCommand" date="Mon Nov 20 14:30:45 EST 2023" starttimestamp="1700507886094" timestamp="759889" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="45" _type="ShellCommand" date="Mon Nov 20 14:30:46 EST 2023" starttimestamp="1700507886094" timestamp="760681" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="46" _type="ShellCommand" date="Mon Nov 20 14:31:39 EST 2023" starttimestamp="1700507886094" timestamp="812996" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="47" _type="ShellCommand" date="Mon Nov 20 14:31:40 EST 2023" starttimestamp="1700507886094" timestamp="814288" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="48" _type="ShellCommand" date="Mon Nov 20 14:31:41 EST 2023" starttimestamp="1700507886094" timestamp="815015" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="50" _type="MoveCaretCommand" caretOffset="429" date="Mon Nov 20 14:31:41 EST 2023" docOffset="472" starttimestamp="1700507886094" timestamp="815793" />
  <Command __id="51" _type="MoveCaretCommand" caretOffset="215" date="Mon Nov 20 14:31:44 EST 2023" docOffset="258" starttimestamp="1700507886094" timestamp="818153" />
  <Command __id="52" _type="MoveCaretCommand" caretOffset="212" date="Mon Nov 20 14:31:44 EST 2023" docOffset="255" starttimestamp="1700507886094" timestamp="818572" />
  <Command __id="66" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:32:50 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="884363">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="67" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 14:32:50 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="884417" />
  <Command __id="69" _type="MoveCaretCommand" caretOffset="418" date="Mon Nov 20 14:32:52 EST 2023" docOffset="461" starttimestamp="1700507886094" timestamp="885907" />
  <Command __id="70" _type="InsertStringCommand" date="Mon Nov 20 14:32:52 EST 2023" starttimestamp="1700507886094" timestamp="886362" timestamp2="886362">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="71" _type="ShellCommand" date="Mon Nov 20 14:32:54 EST 2023" starttimestamp="1700507886094" timestamp="887917" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="72" _type="ShellCommand" date="Mon Nov 20 14:32:58 EST 2023" starttimestamp="1700507886094" timestamp="892144" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="73" _type="MoveCaretCommand" caretOffset="426" date="Mon Nov 20 14:32:59 EST 2023" docOffset="469" starttimestamp="1700507886094" timestamp="893354" />
  <Command __id="74" _type="ShellCommand" date="Mon Nov 20 14:33:01 EST 2023" starttimestamp="1700507886094" timestamp="895339" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="75" _type="ShellCommand" date="Mon Nov 20 14:33:02 EST 2023" starttimestamp="1700507886094" timestamp="896271" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="76" _type="ShellCommand" date="Mon Nov 20 14:33:03 EST 2023" starttimestamp="1700507886094" timestamp="897666" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="77" _type="ShellCommand" date="Mon Nov 20 14:33:08 EST 2023" starttimestamp="1700507886094" timestamp="901942" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="78" _type="MoveCaretCommand" caretOffset="346" date="Mon Nov 20 14:33:11 EST 2023" docOffset="389" starttimestamp="1700507886094" timestamp="905412" />
  <Command __id="79" _type="ShellCommand" date="Mon Nov 20 14:33:11 EST 2023" starttimestamp="1700507886094" timestamp="905722" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="80" _type="ShellCommand" date="Mon Nov 20 14:33:14 EST 2023" starttimestamp="1700507886094" timestamp="908138" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="81" _type="MoveCaretCommand" caretOffset="122" date="Mon Nov 20 14:33:17 EST 2023" docOffset="165" starttimestamp="1700507886094" timestamp="911378" />
  <Command __id="82" _type="ShellCommand" date="Mon Nov 20 14:33:18 EST 2023" starttimestamp="1700507886094" timestamp="911979" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="83" _type="ShellCommand" date="Mon Nov 20 14:33:32 EST 2023" starttimestamp="1700507886094" timestamp="926799" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="84" _type="InsertStringCommand" date="Mon Nov 20 14:33:34 EST 2023" starttimestamp="1700507886094" timestamp="928864" timestamp2="928864">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="85" _type="ShellCommand" date="Mon Nov 20 14:33:40 EST 2023" starttimestamp="1700507886094" timestamp="934406" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="86" _type="ShellCommand" date="Mon Nov 20 14:33:40 EST 2023" starttimestamp="1700507886094" timestamp="934488" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="87" _type="MoveCaretCommand" caretOffset="278" date="Mon Nov 20 14:33:45 EST 2023" docOffset="321" starttimestamp="1700507886094" timestamp="939048" />
  <Command __id="88" _type="MoveCaretCommand" caretOffset="258" date="Mon Nov 20 14:33:46 EST 2023" docOffset="301" starttimestamp="1700507886094" timestamp="940531" />
  <Command __id="89" _type="InsertStringCommand" date="Mon Nov 20 14:33:46 EST 2023" starttimestamp="1700507886094" timestamp="940731" timestamp2="940731">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="90" _type="InsertStringCommand" date="Mon Nov 20 14:33:49 EST 2023" starttimestamp="1700507886094" timestamp="943393" timestamp2="943393">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="91" _type="InsertStringCommand" date="Mon Nov 20 14:33:49 EST 2023" starttimestamp="1700507886094" timestamp="943478" timestamp2="943478">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="92" _type="InsertStringCommand" date="Mon Nov 20 14:33:49 EST 2023" starttimestamp="1700507886094" timestamp="943510" timestamp2="943510">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="93" _type="InsertStringCommand" date="Mon Nov 20 14:33:50 EST 2023" starttimestamp="1700507886094" timestamp="944135" timestamp2="944135">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="94" _type="InsertStringCommand" date="Mon Nov 20 14:33:50 EST 2023" starttimestamp="1700507886094" timestamp="944268" timestamp2="944268">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="95" _type="InsertStringCommand" date="Mon Nov 20 14:33:50 EST 2023" starttimestamp="1700507886094" timestamp="944553" timestamp2="944553">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="96" _type="InsertStringCommand" date="Mon Nov 20 14:33:50 EST 2023" starttimestamp="1700507886094" timestamp="944616" timestamp2="944616">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="97" _type="InsertStringCommand" date="Mon Nov 20 14:33:50 EST 2023" starttimestamp="1700507886094" timestamp="944676" timestamp2="944676">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="98" _type="InsertStringCommand" date="Mon Nov 20 14:33:50 EST 2023" starttimestamp="1700507886094" timestamp="944799" timestamp2="944799">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="99" _type="InsertStringCommand" date="Mon Nov 20 14:33:51 EST 2023" starttimestamp="1700507886094" timestamp="944959" timestamp2="944959">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="100" _type="InsertStringCommand" date="Mon Nov 20 14:33:51 EST 2023" starttimestamp="1700507886094" timestamp="945022" timestamp2="945022">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="101" _type="InsertStringCommand" date="Mon Nov 20 14:33:51 EST 2023" starttimestamp="1700507886094" timestamp="945144" timestamp2="945144">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="102" _type="InsertStringCommand" date="Mon Nov 20 14:33:51 EST 2023" starttimestamp="1700507886094" timestamp="945493" timestamp2="945493">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="103" _type="InsertStringCommand" date="Mon Nov 20 14:33:51 EST 2023" starttimestamp="1700507886094" timestamp="945630" timestamp2="945630">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="104" _type="InsertStringCommand" date="Mon Nov 20 14:33:51 EST 2023" starttimestamp="1700507886094" timestamp="945665" timestamp2="945665">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="105" _type="InsertStringCommand" date="Mon Nov 20 14:33:51 EST 2023" starttimestamp="1700507886094" timestamp="945804" timestamp2="945804">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="106" _type="InsertStringCommand" date="Mon Nov 20 14:33:52 EST 2023" starttimestamp="1700507886094" timestamp="945936" timestamp2="945936">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="107" _type="MoveCaretCommand" caretOffset="296" date="Mon Nov 20 14:33:53 EST 2023" docOffset="339" starttimestamp="1700507886094" timestamp="947600" />
  <Command __id="108" _type="SelectTextCommand" caretOffset="297" date="Mon Nov 20 14:33:53 EST 2023" end="297" start="293" starttimestamp="1700507886094" timestamp="947734" />
  <Command __id="109" _type="InsertStringCommand" date="Mon Nov 20 14:33:54 EST 2023" starttimestamp="1700507886094" timestamp="947945" timestamp2="947945">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="110" _type="InsertStringCommand" date="Mon Nov 20 14:33:54 EST 2023" starttimestamp="1700507886094" timestamp="948004" timestamp2="948004">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="111" _type="InsertStringCommand" date="Mon Nov 20 14:33:54 EST 2023" starttimestamp="1700507886094" timestamp="948063" timestamp2="948063">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="112" _type="InsertStringCommand" date="Mon Nov 20 14:33:54 EST 2023" starttimestamp="1700507886094" timestamp="948151" timestamp2="948151">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="113" _type="MoveCaretCommand" caretOffset="278" date="Mon Nov 20 14:33:55 EST 2023" docOffset="321" starttimestamp="1700507886094" timestamp="949082" />
  <Command __id="114" _type="MoveCaretCommand" caretOffset="322" date="Mon Nov 20 14:33:55 EST 2023" docOffset="365" starttimestamp="1700507886094" timestamp="949484" />
  <Command __id="115" _type="MoveCaretCommand" caretOffset="319" date="Mon Nov 20 14:33:56 EST 2023" docOffset="362" starttimestamp="1700507886094" timestamp="950017" />
  <Command __id="116" _type="InsertStringCommand" date="Mon Nov 20 14:33:56 EST 2023" starttimestamp="1700507886094" timestamp="950084" timestamp2="950084">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="117" _type="MoveCaretCommand" caretOffset="298" date="Mon Nov 20 14:33:56 EST 2023" docOffset="341" starttimestamp="1700507886094" timestamp="950535" />
  <Command __id="118" _type="MoveCaretCommand" caretOffset="319" date="Mon Nov 20 14:33:57 EST 2023" docOffset="362" starttimestamp="1700507886094" timestamp="950930" />
  <Command __id="119" _type="InsertStringCommand" date="Mon Nov 20 14:33:57 EST 2023" starttimestamp="1700507886094" timestamp="951103" timestamp2="951103">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="120" _type="InsertStringCommand" date="Mon Nov 20 14:33:58 EST 2023" starttimestamp="1700507886094" timestamp="952024" timestamp2="952024">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="121" _type="InsertStringCommand" date="Mon Nov 20 14:33:58 EST 2023" starttimestamp="1700507886094" timestamp="952362" timestamp2="952362">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="122" _type="InsertStringCommand" date="Mon Nov 20 14:33:58 EST 2023" starttimestamp="1700507886094" timestamp="952575" timestamp2="952575">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="123" _type="InsertStringCommand" date="Mon Nov 20 14:33:58 EST 2023" starttimestamp="1700507886094" timestamp="952772" timestamp2="952772">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="124" _type="SelectTextCommand" caretOffset="304" date="Mon Nov 20 14:34:00 EST 2023" end="319" start="304" starttimestamp="1700507886094" timestamp="954365" />
  <Command __id="125" _type="MoveCaretCommand" caretOffset="304" date="Mon Nov 20 14:34:00 EST 2023" docOffset="347" starttimestamp="1700507886094" timestamp="954780" />
  <Command __id="126" _type="InsertStringCommand" date="Mon Nov 20 14:34:01 EST 2023" starttimestamp="1700507886094" timestamp="954917" timestamp2="954917">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="127" _type="MoveCaretCommand" caretOffset="278" date="Mon Nov 20 14:34:02 EST 2023" docOffset="321" starttimestamp="1700507886094" timestamp="956229" />
  <Command __id="128" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:34:02 EST 2023" starttimestamp="1700507886094" timestamp="956650" />
  <Command __id="129" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:34:02 EST 2023" starttimestamp="1700507886094" timestamp="956668" />
  <Command __id="130" _type="MoveCaretCommand" caretOffset="258" date="Mon Nov 20 14:34:08 EST 2023" docOffset="301" starttimestamp="1700507886094" timestamp="962249" />
  <Command __id="131" _type="InsertStringCommand" date="Mon Nov 20 14:34:08 EST 2023" starttimestamp="1700507886094" timestamp="962729" timestamp2="962729">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="132" _type="InsertStringCommand" date="Mon Nov 20 14:34:09 EST 2023" starttimestamp="1700507886094" timestamp="963369" timestamp2="963369">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="133" _type="InsertStringCommand" date="Mon Nov 20 14:34:09 EST 2023" starttimestamp="1700507886094" timestamp="963476" timestamp2="963476">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="134" _type="InsertStringCommand" date="Mon Nov 20 14:34:09 EST 2023" starttimestamp="1700507886094" timestamp="963563" timestamp2="963563">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="135" _type="InsertStringCommand" date="Mon Nov 20 14:34:09 EST 2023" starttimestamp="1700507886094" timestamp="963647" timestamp2="963647">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="136" _type="InsertStringCommand" date="Mon Nov 20 14:34:09 EST 2023" starttimestamp="1700507886094" timestamp="963719" timestamp2="963719">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="137" _type="InsertStringCommand" date="Mon Nov 20 14:34:10 EST 2023" starttimestamp="1700507886094" timestamp="963931" timestamp2="963931">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="138" _type="InsertStringCommand" date="Mon Nov 20 14:34:10 EST 2023" starttimestamp="1700507886094" timestamp="964445" timestamp2="964445">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="139" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:34:10 EST 2023" starttimestamp="1700507886094" timestamp="964877" />
  <Command __id="140" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 14:34:11 EST 2023" starttimestamp="1700507886094" timestamp="965144" />
  <Command __id="141" _type="InsertStringCommand" date="Mon Nov 20 14:34:11 EST 2023" starttimestamp="1700507886094" timestamp="965392" timestamp2="965392">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="142" _type="MoveCaretCommand" caretOffset="289" date="Mon Nov 20 14:34:12 EST 2023" docOffset="332" starttimestamp="1700507886094" timestamp="966573" />
  <Command __id="143" _type="ShellCommand" date="Mon Nov 20 14:34:15 EST 2023" starttimestamp="1700507886094" timestamp="969604" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="144" _type="ShellCommand" date="Mon Nov 20 14:34:15 EST 2023" starttimestamp="1700507886094" timestamp="969667" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="145" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 14:34:16 EST 2023" docOffset="342" starttimestamp="1700507886094" timestamp="970217" />
  <Command __id="146" _type="MoveCaretCommand" caretOffset="319" date="Mon Nov 20 14:34:17 EST 2023" docOffset="362" starttimestamp="1700507886094" timestamp="971083" />
  <Command __id="147" _type="MoveCaretCommand" caretOffset="276" date="Mon Nov 20 14:34:17 EST 2023" docOffset="319" starttimestamp="1700507886094" timestamp="971699" />
  <Command __id="148" _type="SelectTextCommand" caretOffset="277" date="Mon Nov 20 14:34:17 EST 2023" end="277" start="273" starttimestamp="1700507886094" timestamp="971868" />
  <Command __id="149" _type="MoveCaretCommand" caretOffset="268" date="Mon Nov 20 14:34:18 EST 2023" docOffset="311" starttimestamp="1700507886094" timestamp="972399" />
  <Command __id="150" _type="SelectTextCommand" caretOffset="271" date="Mon Nov 20 14:34:18 EST 2023" end="271" start="267" starttimestamp="1700507886094" timestamp="972549" />
  <Command __id="151" _type="InsertStringCommand" date="Mon Nov 20 14:34:19 EST 2023" starttimestamp="1700507886094" timestamp="973875" timestamp2="973875">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="152" _type="InsertStringCommand" date="Mon Nov 20 14:34:20 EST 2023" starttimestamp="1700507886094" timestamp="973942" timestamp2="973942">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="153" _type="InsertStringCommand" date="Mon Nov 20 14:34:20 EST 2023" starttimestamp="1700507886094" timestamp="974136" timestamp2="974136">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="154" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:34:20 EST 2023" starttimestamp="1700507886094" timestamp="974702" />
  <Command __id="155" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:34:20 EST 2023" starttimestamp="1700507886094" timestamp="974812" />
  <Command __id="156" _type="InsertStringCommand" date="Mon Nov 20 14:34:20 EST 2023" starttimestamp="1700507886094" timestamp="974905" timestamp2="974905">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="157" _type="InsertStringCommand" date="Mon Nov 20 14:34:21 EST 2023" starttimestamp="1700507886094" timestamp="974982" timestamp2="974982">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="158" _type="InsertStringCommand" date="Mon Nov 20 14:34:21 EST 2023" starttimestamp="1700507886094" timestamp="975072" timestamp2="975072">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="159" _type="MoveCaretCommand" caretOffset="275" date="Mon Nov 20 14:34:21 EST 2023" docOffset="318" starttimestamp="1700507886094" timestamp="975518" />
  <Command __id="160" _type="MoveCaretCommand" caretOffset="299" date="Mon Nov 20 14:34:22 EST 2023" docOffset="342" starttimestamp="1700507886094" timestamp="976169" />
  <Command __id="161" _type="MoveCaretCommand" caretOffset="279" date="Mon Nov 20 14:34:23 EST 2023" docOffset="322" starttimestamp="1700507886094" timestamp="977781" />
  <Command __id="162" _type="MoveCaretCommand" caretOffset="154" date="Mon Nov 20 14:34:25 EST 2023" docOffset="197" starttimestamp="1700507886094" timestamp="978986" />
  <Command __id="163" _type="MoveCaretCommand" caretOffset="161" date="Mon Nov 20 14:34:25 EST 2023" docOffset="204" starttimestamp="1700507886094" timestamp="979718" />
  <Command __id="164" _type="MoveCaretCommand" caretOffset="213" date="Mon Nov 20 14:34:26 EST 2023" docOffset="256" starttimestamp="1700507886094" timestamp="980134" />
  <Command __id="165" _type="MoveCaretCommand" caretOffset="529" date="Mon Nov 20 14:34:27 EST 2023" docOffset="572" starttimestamp="1700507886094" timestamp="981534" />
  <Command __id="166" _type="MoveCaretCommand" caretOffset="388" date="Mon Nov 20 14:34:28 EST 2023" docOffset="431" starttimestamp="1700507886094" timestamp="981983" />
  <Command __id="167" _type="MoveCaretCommand" caretOffset="501" date="Mon Nov 20 14:34:28 EST 2023" docOffset="544" starttimestamp="1700507886094" timestamp="982499" />
  <Command __id="168" _type="MoveCaretCommand" caretOffset="429" date="Mon Nov 20 14:34:29 EST 2023" docOffset="472" starttimestamp="1700507886094" timestamp="982950" />
  <Command __id="169" _type="MoveCaretCommand" caretOffset="419" date="Mon Nov 20 14:34:30 EST 2023" docOffset="462" starttimestamp="1700507886094" timestamp="984484" />
  <Command __id="170" _type="MoveCaretCommand" caretOffset="423" date="Mon Nov 20 14:34:31 EST 2023" docOffset="466" starttimestamp="1700507886094" timestamp="985370" />
  <Command __id="171" _type="MoveCaretCommand" caretOffset="424" date="Mon Nov 20 14:34:32 EST 2023" docOffset="467" starttimestamp="1700507886094" timestamp="986386" />
  <Command __id="172" _type="MoveCaretCommand" caretOffset="392" date="Mon Nov 20 14:34:34 EST 2023" docOffset="435" starttimestamp="1700507886094" timestamp="988550" />
  <Command __id="173" _type="MoveCaretCommand" caretOffset="392" date="Mon Nov 20 14:34:35 EST 2023" docOffset="435" starttimestamp="1700507886094" timestamp="989668" />
  <Command __id="174" _type="ShellCommand" date="Mon Nov 20 14:34:38 EST 2023" starttimestamp="1700507886094" timestamp="992525" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="175" _type="ShellCommand" date="Mon Nov 20 14:34:45 EST 2023" starttimestamp="1700507886094" timestamp="999580" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="176" _type="ShellCommand" date="Mon Nov 20 14:34:48 EST 2023" starttimestamp="1700507886094" timestamp="1001972" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="177" _type="ShellCommand" date="Mon Nov 20 14:34:48 EST 2023" starttimestamp="1700507886094" timestamp="1002683" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="178" _type="ShellCommand" date="Mon Nov 20 14:34:49 EST 2023" starttimestamp="1700507886094" timestamp="1003259" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="179" _type="ShellCommand" date="Mon Nov 20 14:35:00 EST 2023" starttimestamp="1700507886094" timestamp="1014254" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="180" _type="MoveCaretCommand" caretOffset="529" date="Mon Nov 20 14:35:01 EST 2023" docOffset="572" starttimestamp="1700507886094" timestamp="1015552" />
  <Command __id="181" _type="MoveCaretCommand" caretOffset="382" date="Mon Nov 20 14:35:09 EST 2023" docOffset="425" starttimestamp="1700507886094" timestamp="1023637" />
  <Command __id="182" _type="MoveCaretCommand" caretOffset="426" date="Mon Nov 20 14:35:10 EST 2023" docOffset="469" starttimestamp="1700507886094" timestamp="1024104" />
  <Command __id="183" _type="MoveCaretCommand" caretOffset="417" date="Mon Nov 20 14:35:11 EST 2023" docOffset="460" starttimestamp="1700507886094" timestamp="1025800" />
  <Command __id="184" _type="MoveCaretCommand" caretOffset="386" date="Mon Nov 20 14:35:15 EST 2023" docOffset="429" starttimestamp="1700507886094" timestamp="1029369" />
  <Command __id="185" _type="ShellCommand" date="Mon Nov 20 14:35:16 EST 2023" starttimestamp="1700507886094" timestamp="1029907" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="186" _type="ShellCommand" date="Mon Nov 20 14:35:35 EST 2023" starttimestamp="1700507886094" timestamp="1049850" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="187" _type="MoveCaretCommand" caretOffset="488" date="Mon Nov 20 14:35:36 EST 2023" docOffset="531" starttimestamp="1700507886094" timestamp="1050721" />
  <Command __id="188" _type="ShellCommand" date="Mon Nov 20 14:35:37 EST 2023" starttimestamp="1700507886094" timestamp="1051407" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="189" _type="ShellCommand" date="Mon Nov 20 14:35:37 EST 2023" starttimestamp="1700507886094" timestamp="1051878" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="190" _type="MoveCaretCommand" caretOffset="292" date="Mon Nov 20 14:35:38 EST 2023" docOffset="335" starttimestamp="1700507886094" timestamp="1052505" />
  <Command __id="191" _type="MoveCaretCommand" caretOffset="238" date="Mon Nov 20 14:35:39 EST 2023" docOffset="281" starttimestamp="1700507886094" timestamp="1052989" />
  <Command __id="192" _type="MoveCaretCommand" caretOffset="267" date="Mon Nov 20 14:35:39 EST 2023" docOffset="310" starttimestamp="1700507886094" timestamp="1053507" />
  <Command __id="193" _type="MoveCaretCommand" caretOffset="259" date="Mon Nov 20 14:35:40 EST 2023" docOffset="302" starttimestamp="1700507886094" timestamp="1054090" />
  <Command __id="194" _type="MoveCaretCommand" caretOffset="302" date="Mon Nov 20 14:35:40 EST 2023" docOffset="345" starttimestamp="1700507886094" timestamp="1054540" />
  <Command __id="195" _type="MoveCaretCommand" caretOffset="316" date="Mon Nov 20 14:35:41 EST 2023" docOffset="359" starttimestamp="1700507886094" timestamp="1055057" />
  <Command __id="196" _type="MoveCaretCommand" caretOffset="322" date="Mon Nov 20 14:35:41 EST 2023" docOffset="365" starttimestamp="1700507886094" timestamp="1055556" />
  <Command __id="197" _type="MoveCaretCommand" caretOffset="331" date="Mon Nov 20 14:35:42 EST 2023" docOffset="374" starttimestamp="1700507886094" timestamp="1056056" />
  <Command __id="198" _type="MoveCaretCommand" caretOffset="324" date="Mon Nov 20 14:35:42 EST 2023" docOffset="367" starttimestamp="1700507886094" timestamp="1056519" />
  <Command __id="199" _type="MoveCaretCommand" caretOffset="330" date="Mon Nov 20 14:35:43 EST 2023" docOffset="373" starttimestamp="1700507886094" timestamp="1057009" />
  <Command __id="200" _type="MoveCaretCommand" caretOffset="330" date="Mon Nov 20 14:35:43 EST 2023" docOffset="373" starttimestamp="1700507886094" timestamp="1057555" />
  <Command __id="201" _type="SelectTextCommand" caretOffset="335" date="Mon Nov 20 14:35:43 EST 2023" end="335" start="329" starttimestamp="1700507886094" timestamp="1057722" />
  <Command __id="202" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 14:35:44 EST 2023" docOffset="379" starttimestamp="1700507886094" timestamp="1058257" />
  <Command __id="203" _type="ShellCommand" date="Mon Nov 20 14:35:45 EST 2023" starttimestamp="1700507886094" timestamp="1058967" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="204" _type="ShellCommand" date="Mon Nov 20 14:35:45 EST 2023" starttimestamp="1700507886094" timestamp="1059206" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="205" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:35:45 EST 2023" starttimestamp="1700507886094" timestamp="1059622" />
  <Command __id="206" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:35:45 EST 2023" starttimestamp="1700507886094" timestamp="1059632" />
  <Command __id="207" _type="MoveCaretCommand" caretOffset="345" date="Mon Nov 20 14:35:46 EST 2023" docOffset="388" starttimestamp="1700507886094" timestamp="1060138" />
  <Command __id="208" _type="ShellCommand" date="Mon Nov 20 14:35:48 EST 2023" starttimestamp="1700507886094" timestamp="1062708" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="68" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:32:51 EST 2023" docASTNodeCount="118" docActiveCodeLength="842" docExpressionCount="79" docLength="964" projectName="Assignment5" starttimestamp="1700507886094" timestamp="885846">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{	protected BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if(super.getTail().isNIL()) {			return true;		}else {			return super.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		return "(" + super.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				super.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + super.getHead().toString() + " " + "." + " " +				super.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="209" _type="ShellCommand" date="Mon Nov 20 14:39:11 EST 2023" starttimestamp="1700507886094" timestamp="1265746" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="210" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:39:13 EST 2023" docASTNodeCount="248" docActiveCodeLength="1577" docExpressionCount="119" docLength="2087" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1267267">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"main.class"), Diff(EQUAL,";	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return main.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return null;
	}

}
]]></snapshot>
  </Command>
  <Command __id="211" _type="MoveCaretCommand" caretOffset="1951" date="Mon Nov 20 14:39:13 EST 2023" docOffset="2080" starttimestamp="1700507886094" timestamp="1267315" />
  <Command __id="213" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 14:39:20 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="1274418" />
  <Command __id="214" _type="MoveCaretCommand" caretOffset="116" date="Mon Nov 20 14:39:21 EST 2023" docOffset="116" starttimestamp="1700507886094" timestamp="1275521" />
  <Command __id="215" _type="MoveCaretCommand" caretOffset="97" date="Mon Nov 20 14:39:22 EST 2023" docOffset="97" starttimestamp="1700507886094" timestamp="1276438" />
  <Command __id="217" _type="InsertStringCommand" date="Mon Nov 20 14:39:22 EST 2023" starttimestamp="1700507886094" timestamp="1276688" timestamp2="1276688">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="218" _type="MoveCaretCommand" caretOffset="33" date="Mon Nov 20 14:39:24 EST 2023" docOffset="33" starttimestamp="1700507886094" timestamp="1278056" />
  <Command __id="220" _type="InsertStringCommand" date="Mon Nov 20 14:39:24 EST 2023" starttimestamp="1700507886094" timestamp="1278261" timestamp2="1278261">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="222" _type="InsertStringCommand" date="Mon Nov 20 14:39:24 EST 2023" starttimestamp="1700507886094" timestamp="1278498" timestamp2="1278498">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="224" _type="InsertStringCommand" date="Mon Nov 20 14:39:24 EST 2023" starttimestamp="1700507886094" timestamp="1278587" timestamp2="1278587">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="226" _type="InsertStringCommand" date="Mon Nov 20 14:39:24 EST 2023" starttimestamp="1700507886094" timestamp="1278701" timestamp2="1278701">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="228" _type="InsertStringCommand" date="Mon Nov 20 14:39:24 EST 2023" starttimestamp="1700507886094" timestamp="1278901" timestamp2="1278901">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="230" _type="InsertStringCommand" date="Mon Nov 20 14:39:25 EST 2023" starttimestamp="1700507886094" timestamp="1278964" timestamp2="1278964">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="232" _type="InsertStringCommand" date="Mon Nov 20 14:39:25 EST 2023" starttimestamp="1700507886094" timestamp="1279133" timestamp2="1279133">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="234" _type="InsertStringCommand" date="Mon Nov 20 14:39:25 EST 2023" starttimestamp="1700507886094" timestamp="1279180" timestamp2="1279180">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="236" _type="InsertStringCommand" date="Mon Nov 20 14:39:25 EST 2023" starttimestamp="1700507886094" timestamp="1279247" timestamp2="1279247">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="238" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:39:25 EST 2023" starttimestamp="1700507886094" timestamp="1279709" />
  <Command __id="239" _type="ShellCommand" date="Mon Nov 20 14:39:25 EST 2023" starttimestamp="1700507886094" timestamp="1279846" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="240" _type="ShellCommand" date="Mon Nov 20 14:39:29 EST 2023" starttimestamp="1700507886094" timestamp="1283048" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="242" _type="PasteCommand" date="Mon Nov 20 14:39:29 EST 2023" starttimestamp="1700507886094" timestamp="1283261" />
  <Command __id="244" _type="InsertStringCommand" date="Mon Nov 20 14:39:29 EST 2023" starttimestamp="1700507886094" timestamp="1283505" timestamp2="1283505">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="212" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:39:20 EST 2023" docASTNodeCount="26" docActiveCodeLength="123" docExpressionCount="12" docLength="123" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1274366">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/main.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;

public class main {

	public static void main(String[] args) {
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="216" _type="Insert" date="Mon Nov 20 14:39:22 EST 2023" docASTNodeCount="26" docActiveCodeLength="126" docExpressionCount="12" docLength="126" length="3" offset="97" starttimestamp="1700507886094" timestamp="1276683">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="219" _type="Insert" date="Mon Nov 20 14:39:24 EST 2023" docASTNodeCount="28" docActiveCodeLength="135" docExpressionCount="13" docLength="135" length="9" offset="33" repeat="9" starttimestamp="1700507886094" timestamp="1278258" timestamp2="1279246">
    <text><![CDATA[
import t]]></text>
  </DocumentChange>
  <DocumentChange __id="237" _type="Delete" date="Mon Nov 20 14:39:25 EST 2023" docASTNodeCount="26" docActiveCodeLength="134" docExpressionCount="12" docLength="134" endLine="3" length="1" offset="41" startLine="3" starttimestamp="1700507886094" timestamp="1279706">
    <text><![CDATA[t]]></text>
  </DocumentChange>
  <DocumentChange __id="241" _type="Insert" date="Mon Nov 20 14:39:29 EST 2023" docASTNodeCount="36" docActiveCodeLength="175" docExpressionCount="21" docLength="175" length="41" offset="41" repeat="2" starttimestamp="1700507886094" timestamp="1283258" timestamp2="1283504">
    <text><![CDATA[main.lisp.parser.terms.ExpressionFactory;]]></text>
  </DocumentChange>
  <Command __id="245" _type="MoveCaretCommand" caretOffset="149" date="Mon Nov 20 14:39:30 EST 2023" docOffset="149" starttimestamp="1700507886094" timestamp="1284672" />
  <DocumentChange __id="246" _type="Insert" date="Mon Nov 20 14:39:31 EST 2023" docASTNodeCount="42" docActiveCodeLength="197" docExpressionCount="24" docLength="197" length="22" offset="149" repeat="22" starttimestamp="1700507886094" timestamp="1285444" timestamp2="1291236">
    <text><![CDATA[ExpressionFactory.setC]]></text>
  </DocumentChange>
  <Command __id="247" _type="InsertStringCommand" date="Mon Nov 20 14:39:31 EST 2023" starttimestamp="1700507886094" timestamp="1285446" timestamp2="1285446">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="249" _type="InsertStringCommand" date="Mon Nov 20 14:39:31 EST 2023" starttimestamp="1700507886094" timestamp="1285666" timestamp2="1285666">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="251" _type="InsertStringCommand" date="Mon Nov 20 14:39:31 EST 2023" starttimestamp="1700507886094" timestamp="1285811" timestamp2="1285811">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="253" _type="InsertStringCommand" date="Mon Nov 20 14:39:31 EST 2023" starttimestamp="1700507886094" timestamp="1285870" timestamp2="1285870">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="255" _type="InsertStringCommand" date="Mon Nov 20 14:39:32 EST 2023" starttimestamp="1700507886094" timestamp="1285924" timestamp2="1285924">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="257" _type="InsertStringCommand" date="Mon Nov 20 14:39:32 EST 2023" starttimestamp="1700507886094" timestamp="1286075" timestamp2="1286075">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="259" _type="InsertStringCommand" date="Mon Nov 20 14:39:33 EST 2023" starttimestamp="1700507886094" timestamp="1287305" timestamp2="1287305">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="261" _type="InsertStringCommand" date="Mon Nov 20 14:39:33 EST 2023" starttimestamp="1700507886094" timestamp="1287501" timestamp2="1287501">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="263" _type="InsertStringCommand" date="Mon Nov 20 14:39:33 EST 2023" starttimestamp="1700507886094" timestamp="1287557" timestamp2="1287557">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="265" _type="InsertStringCommand" date="Mon Nov 20 14:39:33 EST 2023" starttimestamp="1700507886094" timestamp="1287609" timestamp2="1287609">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="267" _type="InsertStringCommand" date="Mon Nov 20 14:39:33 EST 2023" starttimestamp="1700507886094" timestamp="1287789" timestamp2="1287789">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="269" _type="InsertStringCommand" date="Mon Nov 20 14:39:34 EST 2023" starttimestamp="1700507886094" timestamp="1287982" timestamp2="1287982">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="271" _type="InsertStringCommand" date="Mon Nov 20 14:39:34 EST 2023" starttimestamp="1700507886094" timestamp="1288144" timestamp2="1288144">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="273" _type="InsertStringCommand" date="Mon Nov 20 14:39:34 EST 2023" starttimestamp="1700507886094" timestamp="1288679" timestamp2="1288679">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="275" _type="InsertStringCommand" date="Mon Nov 20 14:39:35 EST 2023" starttimestamp="1700507886094" timestamp="1288929" timestamp2="1288929">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="277" _type="InsertStringCommand" date="Mon Nov 20 14:39:35 EST 2023" starttimestamp="1700507886094" timestamp="1289047" timestamp2="1289047">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="279" _type="InsertStringCommand" date="Mon Nov 20 14:39:35 EST 2023" starttimestamp="1700507886094" timestamp="1289145" timestamp2="1289145">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="281" _type="InsertStringCommand" date="Mon Nov 20 14:39:35 EST 2023" starttimestamp="1700507886094" timestamp="1289292" timestamp2="1289292">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="282" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:39:35 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1289298" />
  <Command __id="287" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:39:37 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1291466" />
  <DocumentChange __id="288" _type="Replace" date="Mon Nov 20 14:39:37 EST 2023" docASTNodeCount="41" docActiveCodeLength="208" docExpressionCount="25" docLength="208" endLine="8" insertionLength="15" int_docASTNodeCount="38" int_docActiveCodeLength="193" int_docExpressionCount="23" int_docLength="193" length="4" offset="167" startLine="8" starttimestamp="1700507886094" timestamp="1291469">
    <deletedText><![CDATA[setC]]></deletedText>
    <insertedText><![CDATA[setClass(null);]]></insertedText>
  </DocumentChange>
  <Command __id="289" _type="InsertStringCommand" date="Mon Nov 20 14:39:37 EST 2023" starttimestamp="1700507886094" timestamp="1291496" timestamp2="1291496">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="290" _type="Replace" date="Mon Nov 20 14:39:40 EST 2023" docASTNodeCount="41" docActiveCodeLength="205" docExpressionCount="25" docLength="205" endLine="8" insertionLength="1" int_docASTNodeCount="40" int_docActiveCodeLength="204" int_docExpressionCount="24" int_docLength="204" length="4" offset="176" startLine="8" starttimestamp="1700507886094" timestamp="1294142">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[B]]></insertedText>
  </DocumentChange>
  <Command __id="291" _type="InsertStringCommand" date="Mon Nov 20 14:39:40 EST 2023" starttimestamp="1700507886094" timestamp="1294148" timestamp2="1294148">
    <data><![CDATA[B]]></data>
  </Command>
  <DocumentChange __id="292" _type="Insert" date="Mon Nov 20 14:39:40 EST 2023" docASTNodeCount="43" docActiveCodeLength="228" docExpressionCount="27" docLength="228" length="23" offset="177" repeat="23" starttimestamp="1700507886094" timestamp="1294357" timestamp2="1298428">
    <text><![CDATA[asicExpressionImpl.clas]]></text>
  </DocumentChange>
  <Command __id="293" _type="InsertStringCommand" date="Mon Nov 20 14:39:40 EST 2023" starttimestamp="1700507886094" timestamp="1294358" timestamp2="1294358">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="295" _type="InsertStringCommand" date="Mon Nov 20 14:39:40 EST 2023" starttimestamp="1700507886094" timestamp="1294487" timestamp2="1294487">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="297" _type="InsertStringCommand" date="Mon Nov 20 14:39:40 EST 2023" starttimestamp="1700507886094" timestamp="1294694" timestamp2="1294694">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="299" _type="InsertStringCommand" date="Mon Nov 20 14:39:40 EST 2023" starttimestamp="1700507886094" timestamp="1294823" timestamp2="1294823">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="301" _type="InsertStringCommand" date="Mon Nov 20 14:39:41 EST 2023" starttimestamp="1700507886094" timestamp="1295615" timestamp2="1295615">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="303" _type="InsertStringCommand" date="Mon Nov 20 14:39:41 EST 2023" starttimestamp="1700507886094" timestamp="1295834" timestamp2="1295834">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="305" _type="InsertStringCommand" date="Mon Nov 20 14:39:42 EST 2023" starttimestamp="1700507886094" timestamp="1296310" timestamp2="1296310">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="307" _type="InsertStringCommand" date="Mon Nov 20 14:39:42 EST 2023" starttimestamp="1700507886094" timestamp="1296476" timestamp2="1296476">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="309" _type="InsertStringCommand" date="Mon Nov 20 14:39:42 EST 2023" starttimestamp="1700507886094" timestamp="1296555" timestamp2="1296555">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="311" _type="InsertStringCommand" date="Mon Nov 20 14:39:42 EST 2023" starttimestamp="1700507886094" timestamp="1296677" timestamp2="1296677">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="313" _type="InsertStringCommand" date="Mon Nov 20 14:39:42 EST 2023" starttimestamp="1700507886094" timestamp="1296821" timestamp2="1296821">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="315" _type="InsertStringCommand" date="Mon Nov 20 14:39:43 EST 2023" starttimestamp="1700507886094" timestamp="1296944" timestamp2="1296944">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="317" _type="InsertStringCommand" date="Mon Nov 20 14:39:43 EST 2023" starttimestamp="1700507886094" timestamp="1297015" timestamp2="1297015">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="319" _type="InsertStringCommand" date="Mon Nov 20 14:39:43 EST 2023" starttimestamp="1700507886094" timestamp="1297060" timestamp2="1297060">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="321" _type="InsertStringCommand" date="Mon Nov 20 14:39:43 EST 2023" starttimestamp="1700507886094" timestamp="1297286" timestamp2="1297286">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="323" _type="InsertStringCommand" date="Mon Nov 20 14:39:43 EST 2023" starttimestamp="1700507886094" timestamp="1297486" timestamp2="1297486">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="325" _type="InsertStringCommand" date="Mon Nov 20 14:39:43 EST 2023" starttimestamp="1700507886094" timestamp="1297583" timestamp2="1297583">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="327" _type="InsertStringCommand" date="Mon Nov 20 14:39:43 EST 2023" starttimestamp="1700507886094" timestamp="1297750" timestamp2="1297750">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="329" _type="InsertStringCommand" date="Mon Nov 20 14:39:44 EST 2023" starttimestamp="1700507886094" timestamp="1297942" timestamp2="1297942">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="330" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:39:44 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1297948" />
  <Command __id="335" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:39:44 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1298611" />
  <DocumentChange __id="336" _type="Replace" date="Mon Nov 20 14:39:44 EST 2023" docASTNodeCount="43" docActiveCodeLength="229" docExpressionCount="26" docLength="229" endLine="8" insertionLength="5" int_docASTNodeCount="43" int_docActiveCodeLength="224" int_docExpressionCount="26" int_docLength="224" length="4" offset="196" startLine="8" starttimestamp="1700507886094" timestamp="1298615">
    <deletedText><![CDATA[clas]]></deletedText>
    <insertedText><![CDATA[class]]></insertedText>
  </DocumentChange>
  <Command __id="337" _type="InsertStringCommand" date="Mon Nov 20 14:39:44 EST 2023" starttimestamp="1700507886094" timestamp="1298621" timestamp2="1298621">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="338" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:39:45 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1299529" />
  <Command __id="339" _type="MoveCaretCommand" caretOffset="222" date="Mon Nov 20 14:39:45 EST 2023" docOffset="222" starttimestamp="1700507886094" timestamp="1299541" />
  <Command __id="340" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 14:39:46 EST 2023" starttimestamp="1700507886094" timestamp="1300337" />
  <Command __id="341" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:39:46 EST 2023" starttimestamp="1700507886094" timestamp="1300440" />
  <Command __id="342" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:39:46 EST 2023" starttimestamp="1700507886094" timestamp="1300448" />
  <Command __id="343" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:39:49 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1302935">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment5.F23Assignment5Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment5Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="344" _type="MoveCaretCommand" caretOffset="776" date="Mon Nov 20 14:39:49 EST 2023" docOffset="893" starttimestamp="1700507886094" timestamp="1302992" />
  <Command __id="345" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:39:50 EST 2023" docASTNodeCount="118" docActiveCodeLength="843" docExpressionCount="79" docLength="965" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1303992">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{"), Diff(INSERT,"	"), Diff(EQUAL,"	protected BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if(super.getTail().isNIL()) {			return true;		}else {			return super.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		return "(" + super.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				super.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + super.getHead().toString() + " " + "." + " " +				super.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	protected BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if(super.getTail().isNIL()) {
			return true;
		}else {
			return super.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		return "(" + super.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				super.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + super.getHead().toString() + " " + "." + " " +
				super.getTail().toString() + ")";
	}
	
//	public String toStringAsList() {
//		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
//	}
	
	public String toString() {
		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();
	}



}
]]></snapshot>
  </Command>
  <Command __id="346" _type="MoveCaretCommand" caretOffset="345" date="Mon Nov 20 14:39:50 EST 2023" docOffset="388" starttimestamp="1700507886094" timestamp="1304032" />
  <Command __id="348" _type="MoveCaretCommand" caretOffset="776" date="Mon Nov 20 14:39:50 EST 2023" docOffset="893" starttimestamp="1700507886094" timestamp="1304540" />
  <Command __id="349" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 14:39:53 EST 2023" starttimestamp="1700507886094" timestamp="1307014" />
  <Command __id="350" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:39:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1307130" type="Run" />
  <Command __id="351" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:39:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1307130" type="Run" />
  <Command __id="352" _type="ShellCommand" date="Mon Nov 20 14:39:53 EST 2023" starttimestamp="1700507886094" timestamp="1307474" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="353" _type="ConsoleOutput" date="Mon Nov 20 14:39:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1311446" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="354" _type="ConsoleOutput" date="Mon Nov 20 14:39:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1311447" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="355" _type="ConsoleOutput" date="Mon Nov 20 14:39:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1311448" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="356" _type="ConsoleOutput" date="Mon Nov 20 14:39:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1311451" type="ConsoleOutput">
    <outputString><![CDATA[Execution exception caused by invocation exception caused by:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test e"), Diff(INSERT,"E"), Diff(EQUAL,"xecution "), Diff(DELETE,"time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"exception caused by invocation exception caused by:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="357" _type="ExceptionCommand" date="Mon Nov 20 14:39:57 EST 2023" starttimestamp="1700507886094" timestamp="1311452" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="358" _type="ExceptionCommand" date="Mon Nov 20 14:39:57 EST 2023" starttimestamp="1700507886094" timestamp="1311456" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'CONS'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="359" _type="ConsoleOutput" date="Mon Nov 20 14:39:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1311466" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Execution exception caused by invocation exception caused by:"), Diff(INSERT,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="360" _type="ExceptionCommand" date="Mon Nov 20 14:39:57 EST 2023" starttimestamp="1700507886094" timestamp="1311468" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):20
Test Result:BaseCaseSExpressionToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5 . 2)actual string 

Execution exception caused by invocation exception caused by:
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalStateException: No evaluator registered for operator 'CONS'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="361" _type="ExceptionCommand" date="Mon Nov 20 14:39:57 EST 2023" starttimestamp="1700507886094" timestamp="1311472" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'CONS'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="362" _type="ExceptionCommand" date="Mon Nov 20 14:39:57 EST 2023" starttimestamp="1700507886094" timestamp="1311474" type="Exception">
    <exceptionString><![CDATA[Execution exception caused by invocation exception caused by:
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="363" _type="ConsoleOutput" date="Mon Nov 20 14:39:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1311475" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶"), Diff(EQUAL,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶"), Diff(DELETE,"	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶")]]]></diff>
  </Command>
  <Command __id="364" _type="ConsoleOutput" date="Mon Nov 20 14:39:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1311550" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethod"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1444"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"46"), Diff(EQUAL,"9"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"Queue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"278"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"Queue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"277"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Cont"), Diff(INSERT,"base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDom"), Diff(EQUAL,"ain"), Diff(DELETE,"er"), Diff(EQUAL,".java:"), Diff(DELETE,"2263"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component"), Diff(INSERT,"EventQueue"), Diff(EQUAL,".dispatchEvent"), Diff(DELETE,"Impl(Component"), Diff(INSERT,"(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"5011"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Compon"), Diff(INSERT,"EventDispatchThread.pumpOneEventForFilters(Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"Event(Component"), Diff(INSERT,"Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"484"), Diff(INSERT,"20"), Diff(EQUAL,"3)¶	at java.desktop/java.awt."), Diff(DELETE,"Lightweigh"), Diff(INSERT,"Even"), Diff(EQUAL,"tDispatch"), Diff(DELETE,"er.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(INSERT,"Thread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"4556"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(INSERT,"EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"2307"), Diff(INSERT,"113"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Compon"), Diff(INSERT,"EventDispatchThread.pumpEvents(Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"Event(Component"), Diff(INSERT,"Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"4843"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java.desktop/java.awt.Event"), Diff(DELETE,"Queue.dispatch"), Diff(INSERT,"DispatchThread.pump"), Diff(EQUAL,"Event"), Diff(DELETE,"Impl"), Diff(INSERT,"s"), Diff(EQUAL,"(Event"), Diff(DELETE,"Queue"), Diff(INSERT,"DispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"772"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt.Event"), Diff(DELETE,"Queue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)"), Diff(INSERT,"DispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="365" _type="ExceptionCommand" date="Mon Nov 20 14:39:57 EST 2023" starttimestamp="1700507886094" timestamp="1311565" type="Exception">
    <exceptionString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

Execution exception caused by invocation exception caused by:
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalStateException: No evaluator registered for operator 'CONS'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="366" _type="ConsoleOutput" date="Mon Nov 20 14:39:59 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1313489" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):4"), Diff(INSERT,"¶Test execution time (ms):1¶Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="367" _type="ExceptionCommand" date="Mon Nov 20 14:39:59 EST 2023" starttimestamp="1700507886094" timestamp="1313493" type="Exception">
    <exceptionString><![CDATA[Execution exception caused by invocation exception caused by:
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalStateException: No evaluator registered for operator 'LOAD'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="368" _type="ConsoleOutput" date="Mon Nov 20 14:39:59 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1313510" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):1¶Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(INSERT,"	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="369" _type="ExceptionCommand" date="Mon Nov 20 14:39:59 EST 2023" starttimestamp="1700507886094" timestamp="1313518" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):25
Test Result:LoadChecker,0.0% complete,0.0,0.0,Index -1 out of bounds for length 0

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationChecker.java:49)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="370" _type="ConsoleOutput" date="Mon Nov 20 14:39:59 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1313531" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)¶"), Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶"), Diff(INSERT,"	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶")]]]></diff>
  </Command>
  <Command __id="371" _type="ConsoleOutput" date="Mon Nov 20 14:39:59 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1313533" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶")]]]></diff>
  </Command>
  <Command __id="372" _type="LocalChecksRawCommand" date="Mon Nov 20 14:39:59 EST 2023" starttimestamp="1700507886094" timestamp="1313533">
    <CSVRow><![CDATA[20,Mon Nov 20 14:39:57 EST 2023,3,2,A5ToStringSuite,ClassRegistryProvided MainClassProvided+ , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,5,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="373" _type="LocalChecksRawCommand" date="Mon Nov 20 14:39:59 EST 2023" starttimestamp="1700507886094" timestamp="1313533">
    <CSVRow><![CDATA[20,Mon Nov 20 14:39:57 EST 2023,3,2,A5ToStringSuite,ClassRegistryProvided MainClassProvided+ , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,5,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="374" _type="ExceptionCommand" date="Mon Nov 20 14:39:59 EST 2023" starttimestamp="1700507886094" timestamp="1313542" type="Exception">
    <exceptionString><![CDATA[Test Result:AndTestedChecker,0.0% complete,0.0,10.0,java.lang.IndexOutOfBoundsException Index 0 out of bounds for length 0


Test execution time (ms):1
Test Result:AndTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of AND

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.loadLogical.AbstractFunctionTestedLogicalChecker.test(AbstractFunctionTestedLogicalChecker.java:49)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="375" _type="ExceptionCommand" date="Mon Nov 20 14:39:59 EST 2023" starttimestamp="1700507886094" timestamp="1313545" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:NotTestedChecker,0.0% complete,0.0,10.0,java.lang.IndexOutOfBoundsException Index 0 out of bounds for length 0


Test execution time (ms):1
Test Result:NotTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of NOT

java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment1.testcases.loadLogical.AbstractFunctionTestedLogicalChecker.test(AbstractFunctionTestedLogicalChecker.java:49)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="376" _type="ConsoleOutput" date="Mon Nov 20 14:39:59 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1313628" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:OrTestedChecker,0.0% complete,0.0,10.0,java.lang.IndexOutOfBoundsException Index 0 out of bounds for length 0


Test execution time (ms):1
Test Result:OrTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of OR


Error finding call to CONS try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"11"), Diff(INSERT,"585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.reflect"), Diff(INSERT,"bus.uigen.controller"), Diff(EQUAL,".Method"), Diff(DELETE,".i"), Diff(INSERT,"I"), Diff(EQUAL,"nvo"), Diff(DELETE,"ke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"cationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"2"), Diff(INSERT,"406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(INSERT,"35"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(INSERT,"2"), Diff(EQUAL,"78)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"71"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Contai"), Diff(EQUAL,"ner.java:2"), Diff(DELETE,"68"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"5011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"2321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(EQUAL,"48"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"91"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(INSERT,"455"), Diff(EQUAL,"6"), Diff(DELETE,"2"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"3"), Diff(INSERT,"488"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:2"), Diff(INSERT,"30"), Diff(EQUAL,"7"), Diff(DELETE,"0"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:2"), Diff(DELETE,"19"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"1444"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1906"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1701"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1531"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"46"), Diff(EQUAL,"9"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"Queue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"278"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"Queue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"277"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.Component.processMouseEvent(Component.java:6638"), Diff(INSERT,"base/java.security.AccessController.doPrivileged(Native Method"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop"), Diff(INSERT,"base"), Diff(EQUAL,"/java"), Diff(DELETE,"x"), Diff(EQUAL,".s"), Diff(DELETE,"wing.JComponent.processMouseEvent(JComponent"), Diff(INSERT,"ecurity.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"3342"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processEvent(Component"), Diff(INSERT,"EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"6400"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Container.processEvent(Container"), Diff(INSERT,"EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:2"), Diff(DELETE,"26"), Diff(INSERT,"0"), Diff(EQUAL,"3)¶	at java.desktop/java.awt."), Diff(DELETE,"Compon"), Diff(INSERT,"Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"EventImpl(Component"), Diff(INSERT,"Thread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"5011"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Container.dispatchEventImpl(Container"), Diff(INSERT,"EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"2321"), Diff(INSERT,"113"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Compon"), Diff(INSERT,"Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"Event(Component"), Diff(INSERT,"Thread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"4843"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Lightweigh"), Diff(INSERT,"Even"), Diff(EQUAL,"tDispatch"), Diff(DELETE,"er.retargetMouseEvent(Container"), Diff(INSERT,"Thread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"4918"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488"), Diff(INSERT,"EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:OrTestedChecker,0.0% complete,0.0,10.0,java.lang.IndexOutOfBoundsException Index 0 out of bounds for length 0¶¶¶Test execution time (ms):1¶Test Result:OrTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of OR¶¶¶Error finding call to CONS try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="377" _type="ConsoleOutput" date="Mon Nov 20 14:39:59 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1313691" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Error finding call to COND try:
Make sure your load evaluator works properly
Check your lisp file for errors (extra parenthesis, misspellings, etc)
Try running your main class running the command "(load "<filename>.lisp")


Test execution time (ms):0
Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes


Test execution time (ms):1
Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS


Test execution time (ms):0
Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE


Test execution time (ms):0
Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST


Test execution time (ms):1
Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL


Test execution time (ms):0
Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases

Please run the checkstle plugin on your project
Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project 

Test execution time (ms):1
Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):1
Test Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):1
Test Result:MainSetsExpressionFactory,0.0% complete,0.0,2.0,No checkstyle output, check console error messages

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen."), Diff(INSERT,"Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,En"), Diff(EQUAL,"co"), Diff(INSERT,"u"), Diff(EQUAL,"nt"), Diff(DELETE,"roller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Com"), Diff(INSERT,"ered an unexpected error, see console for potential fixes¶¶¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):0¶Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for "), Diff(EQUAL,"po"), Diff(DELETE,"n"), Diff(INSERT,"t"), Diff(EQUAL,"ent"), Diff(DELETE,".dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doInters"), Diff(INSERT,"ial fixes¶¶¶Test execution time (ms):1¶Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS¶¶¶Test execution time (ms):0¶Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE¶¶¶Test execution time (ms):0¶Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST¶¶¶Test execution time (ms):1¶Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL¶¶¶Test ex"), Diff(EQUAL,"ec"), Diff(INSERT,"u"), Diff(EQUAL,"tion"), Diff(DELETE,"Privilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.P"), Diff(INSERT," time (ms):0¶Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases¶¶Please run the checkstle plugin on your p"), Diff(EQUAL,"ro"), Diff(DELETE,"t"), Diff(INSERT,"j"), Diff(EQUAL,"ect"), Diff(DELETE,"ionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):1¶Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"OrTestedChecker"), Diff(INSERT,"LoadCallsNewInput"), Diff(EQUAL,",0.0% complete,0.0,"), Diff(DELETE,"10"), Diff(INSERT,"2"), Diff(EQUAL,".0,"), Diff(DELETE,"java.lang.IndexOutOfBoundsException Index 0 out of bounds for length 0"), Diff(INSERT,"No checkstyle output, check console error messages"), Diff(EQUAL,"¶¶¶Test execution time (ms):1¶Test Result:"), Diff(DELETE,"OrTestedTwoResultsChecker"), Diff(INSERT,"MainSetsExpressionFactory"), Diff(EQUAL,",0.0% complete,0.0,"), Diff(DELETE,"10"), Diff(INSERT,"2"), Diff(EQUAL,".0,"), Diff(DELETE,"Expecting in test file two results of OR¶¶¶Error finding call to CONS try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)"), Diff(INSERT,"No checkstyle output, check console error messages¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="378" _type="ConsoleOutput" date="Mon Nov 20 14:40:02 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1316302" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:A5CommonSignaturesAreInherited,0.0% complete,0.0,3.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:EvalTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Error finding call to COND try:¶Make sure your load evaluator works properly¶Check your lisp file for errors (extra parenthesis, misspellings, etc)¶Try running your main class running the command "(load "<filename>.lisp")¶¶¶Test execution time (ms):0¶Test Result:CondTestedChecker,0.0% complete,0.0,10.0,Encountered an unexpected error, see console for potential fixes¶¶¶Test execution time (ms):1¶Test Result:ConsTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of CONS¶¶¶Test execution time (ms):0¶Test Result:QuoteTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of QUOTE¶¶¶Test execution time (ms):0¶Test Result:ListTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of LIST¶¶¶Test execution time (ms):1¶Test Result:EvalTestedTwoResultsChecker,0.0% complete,0.0,10.0,Expecting in test file two results of EVAL¶¶¶Test execution time (ms):0¶Test Result:CondTestedResultsChecker,0.0% complete,0.0,20.0,Expecting in test file 3 or more results of CONDwith 3 or more cases¶¶Please run the checkstle plugin on your project¶Could not initialize checkstyle. Please make sure you have installed the plugin and run checkstyle on the project ¶¶Test execution time (ms):1¶Test Result:MainCallsOperationRegisterer,0.0% complete,0.0,2"), Diff(INSERT,"¶Test execution time (ms):0¶Test Result:A5CommonPropertiesInherited,0.0% complete,0.0,1"), Diff(EQUAL,".0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:"), Diff(DELETE,"LoadCallsInterpreterModelSingleton,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:LoadCallsNewInput,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:MainSetsExpressionFactory"), Diff(INSERT,"A5CommonSignaturesAreInherited"), Diff(EQUAL,",0.0% complete,0.0,"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,".0,No checkstyle output, check console error messages¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="379" _type="ConsoleOutput" date="Mon Nov 20 14:40:02 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1316305" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
Test Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:A5NoHiddenFields,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:A5NonPublicAccessModifiersMatched,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:A5"), Diff(DELETE,"CommonPropertiesInherited"), Diff(INSERT,"Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5NoHiddenFields"), Diff(EQUAL,",0.0% complete,0.0,"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,".0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5"), Diff(DELETE,"CommonSignaturesAreInherit"), Diff(INSERT,"NonPublicAccessModifiersMatch"), Diff(EQUAL,"ed,0.0% complete,0.0,"), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,".0,No checkstyle output, check console error messages¶"), Diff(INSERT,"¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="380" _type="ConsoleOutput" date="Mon Nov 20 14:40:02 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1316307" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages


Test execution time (ms):0
Test Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):1¶Test Result:A5Encapsulation,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5NoHiddenFields"), Diff(INSERT,"Test Result:A5PublicMethodsOverride"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5No"), Diff(DELETE,"nPublicAccessModifiersMatched"), Diff(INSERT,"StarImports"), Diff(EQUAL,",0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶"), Diff(DELETE,"¶¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="381" _type="ConsoleOutput" date="Mon Nov 20 14:40:02 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1316307" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:A5PublicMethodsOverride,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:A5NoStarImports,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="382" _type="ConsoleOutput" date="Mon Nov 20 14:40:02 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1316308" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="383" _type="ConsoleOutput" date="Mon Nov 20 14:40:02 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1316308" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:A5PackageDeclarations,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="384" _type="ConsoleOutput" date="Mon Nov 20 14:40:02 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1316309" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="385" _type="ShellCommand" date="Mon Nov 20 14:40:04 EST 2023" starttimestamp="1700507886094" timestamp="1318482" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="386" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:40:04 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1318493" type="Run" />
  <Command __id="387" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:40:04 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1318493" type="Run" />
  <Command __id="388" _type="MoveCaretCommand" caretOffset="561" date="Mon Nov 20 14:40:05 EST 2023" docOffset="678" starttimestamp="1700507886094" timestamp="1319447" />
  <Command __id="389" _type="ShellCommand" date="Mon Nov 20 14:40:06 EST 2023" starttimestamp="1700507886094" timestamp="1319973" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="390" _type="ShellCommand" date="Mon Nov 20 14:40:53 EST 2023" starttimestamp="1700507886094" timestamp="1367719" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="391" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 14:40:56 EST 2023" starttimestamp="1700507886094" timestamp="1370176" />
  <Command __id="392" _type="LocalChecksRawCommand" date="Mon Nov 20 14:40:56 EST 2023" starttimestamp="1700507886094" timestamp="1370177">
    <CSVRow><![CDATA[22,Mon Nov 20 14:40:02 EST 2023,3,0,A5GeneralStyle,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,5,2,true,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,A5CommonPropertiesInherited-(0.0/1.0) A5CommonSignaturesAreInherited-(0.0/3.0) A5Encapsulation-(0.0/2.0) A5NoHiddenFields-(0.0/2.0) A5NoStarImports-(0.0/2.0) A5NonPublicAccessModifiersMatched-(0.0/2.0) A5PackageDeclarations-(0.0/2.0) A5PublicMethodsOverride-(0.0/2.0) F21A5NoCheckstyleWarnings-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="393" _type="LocalChecksRawCommand" date="Mon Nov 20 14:40:56 EST 2023" starttimestamp="1700507886094" timestamp="1370177">
    <CSVRow><![CDATA[22,Mon Nov 20 14:40:02 EST 2023,3,0,A5GeneralStyle,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,5,2,true,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride F21A5NoCheckstyleWarnings ,A5CommonPropertiesInherited-(0.0/1.0) A5CommonSignaturesAreInherited-(0.0/3.0) A5Encapsulation-(0.0/2.0) A5NoHiddenFields-(0.0/2.0) A5NoStarImports-(0.0/2.0) A5NonPublicAccessModifiersMatched-(0.0/2.0) A5PackageDeclarations-(0.0/2.0) A5PublicMethodsOverride-(0.0/2.0) F21A5NoCheckstyleWarnings-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="394" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:40:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1370289" type="Run" />
  <Command __id="395" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:40:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1370289" type="Run" />
  <Command __id="396" _type="ShellCommand" date="Mon Nov 20 14:40:56 EST 2023" starttimestamp="1700507886094" timestamp="1370581" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="397" _type="ConsoleOutput" date="Mon Nov 20 14:41:23 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1397485" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:F21A5NoCheckstyleWarnings,0.0% complete,0.0,10.0,Could not run checkstyle"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="398" _type="ConsoleOutput" date="Mon Nov 20 14:41:23 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1397486" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="399" _type="ConsoleOutput" date="Mon Nov 20 14:41:23 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1397488" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="400" _type="ConsoleOutput" date="Mon Nov 20 14:41:23 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1397490" type="ConsoleOutput">
    <outputString><![CDATA[Execution exception caused by invocation exception caused by:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test e"), Diff(INSERT,"E"), Diff(EQUAL,"xecution "), Diff(DELETE,"time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"exception caused by invocation exception caused by:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="401" _type="ExceptionCommand" date="Mon Nov 20 14:41:23 EST 2023" starttimestamp="1700507886094" timestamp="1397491" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="402" _type="ExceptionCommand" date="Mon Nov 20 14:41:23 EST 2023" starttimestamp="1700507886094" timestamp="1397494" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'CONS'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="403" _type="ConsoleOutput" date="Mon Nov 20 14:41:23 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1397496" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Execution exception caused by invocation exception caused by:"), Diff(INSERT,"	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="404" _type="ConsoleOutput" date="Mon Nov 20 14:41:23 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1397551" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"69"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(INSERT,"144"), Diff(EQUAL,"4"), Diff(DELETE,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:19"), Diff(INSERT,"06"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:6"), Diff(DELETE,"2"), Diff(INSERT,"400"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk."), Diff(INSERT,"desktop/java.awt.Conta"), Diff(EQUAL,"in"), Diff(DELETE,"t"), Diff(EQUAL,"er"), Diff(DELETE,"nal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,".processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"2321"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"7"), Diff(INSERT,"21"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"32"), Diff(INSERT,"71"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"7"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(INSERT,"9"), Diff(EQUAL,"5"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5"), Diff(EQUAL,".run("), Diff(DELETE,"ParentRunner"), Diff(INSERT,"EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"1"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"28"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"268"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"36"), Diff(INSERT,"11"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"191"), Diff(INSERT,"90"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="405" _type="ConsoleOutput" date="Mon Nov 20 14:41:23 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1397565" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):21
Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"¶Test execution time (ms):21¶Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="406" _type="ExceptionCommand" date="Mon Nov 20 14:41:25 EST 2023" starttimestamp="1700507886094" timestamp="1399381" type="Exception">
    <exceptionString><![CDATA[Execution exception caused by invocation exception caused by:
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalStateException: No evaluator registered for operator 'CONS'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="407" _type="ConsoleOutput" date="Mon Nov 20 14:41:25 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1399384" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
Test Result:BaseCaseSExpressionToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5 . 2)actual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"21"), Diff(INSERT,"8"), Diff(EQUAL,"¶Test Result:BaseCase"), Diff(DELETE,"List"), Diff(INSERT,"SExpression"), Diff(EQUAL,"ToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5"), Diff(INSERT," . 2"), Diff(EQUAL,")actual string ¶")]]]></diff>
  </Command>
  <Command __id="408" _type="ExceptionCommand" date="Mon Nov 20 14:41:29 EST 2023" starttimestamp="1700507886094" timestamp="1403775" type="Exception">
    <exceptionString><![CDATA[Execution exception caused by invocation exception caused by:
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalStateException: No evaluator registered for operator 'CONS'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="409" _type="ConsoleOutput" date="Mon Nov 20 14:41:29 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1403782" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):8¶Test Result:BaseCaseSExpressionToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5 . 2)actual string "), Diff(INSERT,"	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="410" _type="ConsoleOutput" date="Mon Nov 20 14:41:29 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1403826" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):9
Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"325"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:7"), Diff(INSERT,"2"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/java."), Diff(DELETE,"lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1444"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1701"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"469"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"Queue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"278"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"DispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:2"), Diff(DELETE,"77"), Diff(INSERT,"03"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(INSERT,"EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"3342"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(INSERT,"EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"226"), Diff(INSERT,"11"), Diff(EQUAL,"3)¶	at java.desktop/java.awt."), Diff(DELETE,"Compon"), Diff(INSERT,"Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"EventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(INSERT,"Thread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"2321"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Compon"), Diff(INSERT,"Ev"), Diff(EQUAL,"ent"), Diff(DELETE,".d"), Diff(INSERT,"D"), Diff(EQUAL,"ispatch"), Diff(DELETE,"Event(Component.java:4843)¶	at java.desktop/java.awt.Lightweigh"), Diff(INSERT,"Thread.pumpEvents(Even"), Diff(EQUAL,"tDispatch"), Diff(DELETE,"er.retargetMouseEvent(Container"), Diff(INSERT,"Thread"), Diff(EQUAL,".java:"), Diff(DELETE,"4918"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)"), Diff(INSERT,"EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):9¶Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="411" _type="ExceptionCommand" date="Mon Nov 20 14:41:32 EST 2023" starttimestamp="1700507886094" timestamp="1406576" type="Exception">
    <exceptionString><![CDATA[Execution exception caused by invocation exception caused by:
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="412" _type="ConsoleOutput" date="Mon Nov 20 14:41:32 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1406579" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):9
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶"), Diff(EQUAL,"	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):9¶Test Result:ListToStringChecker"), Diff(DELETE,"Basic"), Diff(INSERT,"Advanced"), Diff(EQUAL,",0.0% complete,0.0,15.0,Expected strings:("), Diff(DELETE,"5 (("A" . "6")) (7"), Diff(INSERT,""a" (1 . 2) (1 T"), Diff(EQUAL,"))actual string ¶")]]]></diff>
  </Command>
  <Command __id="413" _type="ExceptionCommand" date="Mon Nov 20 14:41:33 EST 2023" starttimestamp="1700507886094" timestamp="1407858" type="Exception">
    <exceptionString><![CDATA[Execution exception caused by invocation exception caused by:
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalStateException: No evaluator registered for operator 'CONS'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="414" _type="ExceptionCommand" date="Mon Nov 20 14:41:33 EST 2023" starttimestamp="1700507886094" timestamp="1407864" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f20.assignment5.testcases.toString.AbstractLispExpressionResultDeepChecker.actualOutput(AbstractLispExpressionResultDeepChecker.java:7)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="415" _type="ConsoleOutput" date="Mon Nov 20 14:41:33 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1407866" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):13
Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶"), Diff(EQUAL,"	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶"), Diff(DELETE,""), Diff(EQUAL,"	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):"), Diff(DELETE,"9"), Diff(INSERT,"13"), Diff(EQUAL,"¶Test Result:ListToString"), Diff(INSERT,"Deep"), Diff(EQUAL,"Checker"), Diff(DELETE,"Advanced"), Diff(INSERT,"Basic"), Diff(EQUAL,",0.0% complete,0.0,"), Diff(DELETE,"1"), Diff(EQUAL,"5.0,"), Diff(DELETE,"Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(INSERT,"Index 0 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="416" _type="ExceptionCommand" date="Mon Nov 20 14:41:35 EST 2023" starttimestamp="1700507886094" timestamp="1408910" type="Exception">
    <exceptionString><![CDATA[Execution exception caused by invocation exception caused by:
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalArgumentException: S-expression class' constructor is not accessible by the factory (is it private?)
	at main.lisp.parser.terms.ExpressionFactory.setClass(ExpressionFactory.java:47)
	at index.main.main(main.java:9)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at grader.basics.execution.AMethodExecutionCallable.call(AMethodExecutionCallable.java:22)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="417" _type="ConsoleOutput" date="Mon Nov 20 14:41:35 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="1408947" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticas"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSui"), Diff(EQUAL,"te"), Diff(DELETE,"r"), Diff(EQUAL,".java:"), Diff(DELETE,"278"), Diff(INSERT,"191"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(INSERT,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:6"), Diff(DELETE,"638"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(INSERT,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(INSERT,"4"), Diff(EQUAL,"3"), Diff(DELETE,"342"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.Component.processEvent(Component"), Diff(INSERT,"base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"6400"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Container.processEvent(Container"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(EQUAL,".java:2"), Diff(DELETE,"263"), Diff(INSERT,"70"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"5011"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Container.dispatchEventImpl(Contain"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"2321"), Diff(INSERT,"1444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"4843"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4918"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contain"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4556"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contain"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4488"), Diff(INSERT,"1585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Container.dispatchEventImpl(Contain"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"2307"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"2772"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"4843"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"772"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(EQUAL,".java:"), Diff(DELETE,"721"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(INSERT,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Queue$4.run(EventQueue"), Diff(INSERT,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"715"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(INSERT,"663"), Diff(EQUAL,"8"), Diff(DELETE,"5"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base"), Diff(INSERT,"desktop"), Diff(EQUAL,"/java"), Diff(INSERT,"x"), Diff(EQUAL,".s"), Diff(DELETE,"ecurity.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"wing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"95"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventQueue$5.run(EventQueue"), Diff(INSERT,"Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"745"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventQueue$5.run(EventQueue"), Diff(INSERT,"Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"74"), Diff(INSERT,"226"), Diff(EQUAL,"3)¶	at java."), Diff(DELETE,"base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"85"), Diff(INSERT,"2321"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventQueue"), Diff(INSERT,"Component"), Diff(EQUAL,".dispatchEvent("), Diff(DELETE,"EventQueue"), Diff(INSERT,"Component"), Diff(EQUAL,".java:"), Diff(DELETE,"742"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Even"), Diff(INSERT,"Lightweigh"), Diff(EQUAL,"tDispatch"), Diff(DELETE,"Thread.pumpOneEventForFilters(EventDispatchThread"), Diff(INSERT,"er.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"203"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(INSERT,"LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"124"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(INSERT,"LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"113"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(INSERT,"Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"109"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(INSERT,"Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"101"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Ev"), Diff(INSERT,"Compon"), Diff(EQUAL,"ent"), Diff(DELETE,"D"), Diff(INSERT,".d"), Diff(EQUAL,"ispatch"), Diff(DELETE,"Thread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):13¶Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(INSERT,"Event(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="418" _type="ExceptionCommand" date="Mon Nov 20 14:41:35 EST 2023" starttimestamp="1700507886094" timestamp="1408950" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f20.assignment5.testcases.toString.AbstractLispExpressionResultDeepChecker.actualOutput(AbstractLispExpressionResultDeepChecker.java:7)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="347" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:39:50 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1304498">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="419" _type="ShellCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430558" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="420" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[23,Mon Nov 20 14:41:23 EST 2023,3,0,BaseCaseListToStringChecker,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,0,false, ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="421" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[23,Mon Nov 20 14:41:23 EST 2023,3,0,BaseCaseListToStringChecker,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,0,false, ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="422" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[24,Mon Nov 20 14:41:25 EST 2023,3,0,BaseCaseSExpressionToStringChecker,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,1,false, , , ,BaseCaseSExpressionToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="423" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[24,Mon Nov 20 14:41:25 EST 2023,3,0,BaseCaseSExpressionToStringChecker,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,1,false, , , ,BaseCaseSExpressionToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="424" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[25,Mon Nov 20 14:41:29 EST 2023,3,0,ListToStringCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,2,false, , , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="425" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[25,Mon Nov 20 14:41:29 EST 2023,3,0,ListToStringCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,2,false, , , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="426" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[26,Mon Nov 20 14:41:32 EST 2023,3,0,ListToStringCheckerAdvanced,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,3,false, , , ,ListToStringCheckerAdvanced-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="427" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[26,Mon Nov 20 14:41:32 EST 2023,3,0,ListToStringCheckerAdvanced,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,3,false, , , ,ListToStringCheckerAdvanced-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="428" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[27,Mon Nov 20 14:41:33 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,4,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="429" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[27,Mon Nov 20 14:41:33 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,4,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="430" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[28,Mon Nov 20 14:41:35 EST 2023,3,0,ListToStringDeepCheckerAdvanced,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,5,false, , , ,ListToStringDeepCheckerAdvanced-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="431" _type="LocalChecksRawCommand" date="Mon Nov 20 14:41:56 EST 2023" starttimestamp="1700507886094" timestamp="1430562">
    <CSVRow><![CDATA[28,Mon Nov 20 14:41:35 EST 2023,3,0,ListToStringDeepCheckerAdvanced,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,6,5,false, , , ,ListToStringDeepCheckerAdvanced-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="432" _type="MoveCaretCommand" caretOffset="214" date="Mon Nov 20 14:41:56 EST 2023" docOffset="331" starttimestamp="1700507886094" timestamp="1430640" />
  <Command __id="434" _type="MoveCaretCommand" caretOffset="345" date="Mon Nov 20 14:41:58 EST 2023" docOffset="388" starttimestamp="1700507886094" timestamp="1432015" />
  <Command __id="433" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:41:58 EST 2023" docASTNodeCount="118" docActiveCodeLength="843" docExpressionCount="79" docLength="965" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1431976">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		protected BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if(super.getTail().isNIL()) {			return true;		}else {			return super.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		return "(" + super.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				super.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + super.getHead().toString() + " " + "." + " " +				super.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="435" _type="MoveCaretCommand" caretOffset="132" date="Mon Nov 20 14:41:59 EST 2023" docOffset="175" starttimestamp="1700507886094" timestamp="1433414" />
  <Command __id="436" _type="MoveCaretCommand" caretOffset="132" date="Mon Nov 20 14:41:59 EST 2023" docOffset="175" starttimestamp="1700507886094" timestamp="1433414" />
  <Command __id="437" _type="SelectTextCommand" caretOffset="134" date="Mon Nov 20 14:41:59 EST 2023" end="134" start="125" starttimestamp="1700507886094" timestamp="1433550" />
  <Command __id="438" _type="SelectTextCommand" caretOffset="134" date="Mon Nov 20 14:41:59 EST 2023" end="134" start="125" starttimestamp="1700507886094" timestamp="1433550" />
  <DocumentChange __id="439" _type="Replace" date="Mon Nov 20 14:42:00 EST 2023" docASTNodeCount="119" docActiveCodeLength="835" docExpressionCount="80" docLength="957" endLine="7" insertionLength="1" int_docASTNodeCount="117" int_docActiveCodeLength="834" int_docExpressionCount="79" int_docLength="956" length="9" offset="168" startLine="7" starttimestamp="1700507886094" timestamp="1434809">
    <deletedText><![CDATA[protected]]></deletedText>
    <insertedText><![CDATA[p]]></insertedText>
  </DocumentChange>
  <Command __id="440" _type="InsertStringCommand" date="Mon Nov 20 14:42:00 EST 2023" starttimestamp="1700507886094" timestamp="1434816" timestamp2="1434816">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="441" _type="InsertStringCommand" date="Mon Nov 20 14:42:00 EST 2023" starttimestamp="1700507886094" timestamp="1434816" timestamp2="1434816">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="443" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1434923" timestamp2="1434923">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="444" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1434923" timestamp2="1434923">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="446" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1434966" timestamp2="1434966">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="447" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1434966" timestamp2="1434966">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="449" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1435083" timestamp2="1435083">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="450" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1435083" timestamp2="1435083">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="452" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1435137" timestamp2="1435137">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="453" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1435137" timestamp2="1435137">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="455" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1435172" timestamp2="1435172">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="456" _type="InsertStringCommand" date="Mon Nov 20 14:42:01 EST 2023" starttimestamp="1700507886094" timestamp="1435172" timestamp2="1435172">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="457" _type="MoveCaretCommand" caretOffset="379" date="Mon Nov 20 14:42:01 EST 2023" docOffset="422" starttimestamp="1700507886094" timestamp="1435798" />
  <Command __id="458" _type="MoveCaretCommand" caretOffset="379" date="Mon Nov 20 14:42:01 EST 2023" docOffset="422" starttimestamp="1700507886094" timestamp="1435798" />
  <Command __id="459" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 14:42:02 EST 2023" starttimestamp="1700507886094" timestamp="1435925" />
  <Command __id="460" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:42:02 EST 2023" starttimestamp="1700507886094" timestamp="1436029" />
  <Command __id="461" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:42:02 EST 2023" starttimestamp="1700507886094" timestamp="1436040" />
  <DocumentChange __id="442" _type="Insert" date="Mon Nov 20 14:42:01 EST 2023" docASTNodeCount="118" docActiveCodeLength="840" docExpressionCount="79" docLength="962" length="5" offset="169" repeat="5" starttimestamp="1700507886094" timestamp="1434921" timestamp2="1435171">
    <text><![CDATA[ublic]]></text>
  </DocumentChange>
  <Command __id="462" _type="ShellCommand" date="Mon Nov 20 14:42:04 EST 2023" starttimestamp="1700507886094" timestamp="1438355" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="463" _type="ShellCommand" date="Mon Nov 20 14:42:04 EST 2023" starttimestamp="1700507886094" timestamp="1438848" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="464" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:42:04 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1438852" type="Run" />
  <Command __id="465" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:42:04 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1438852" type="Run" />
  <Command __id="467" _type="MoveCaretCommand" caretOffset="214" date="Mon Nov 20 14:42:06 EST 2023" docOffset="331" starttimestamp="1700507886094" timestamp="1440592" />
  <Command __id="468" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 14:42:08 EST 2023" starttimestamp="1700507886094" timestamp="1442855" />
  <Command __id="469" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:42:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1443002" type="Run" />
  <Command __id="470" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:42:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1443002" type="Run" />
  <Command __id="471" _type="ShellCommand" date="Mon Nov 20 14:42:09 EST 2023" starttimestamp="1700507886094" timestamp="1443291" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="483" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:42:16 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1450145" type="Run" />
  <Command __id="484" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 14:42:16 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1450145" type="Run" />
  <Command __id="485" _type="ShellCommand" date="Mon Nov 20 14:42:16 EST 2023" starttimestamp="1700507886094" timestamp="1450148" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="466" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:42:06 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1440544">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="486" _type="MoveCaretCommand" caretOffset="248" date="Mon Nov 20 14:42:17 EST 2023" docOffset="365" starttimestamp="1700507886094" timestamp="1451353" />
  <Command __id="487" _type="LocalChecksRawCommand" date="Mon Nov 20 14:42:17 EST 2023" starttimestamp="1700507886094" timestamp="1451354">
    <CSVRow><![CDATA[29,Mon Nov 20 14:42:11 EST 2023,3,0,A5AssignmentSpecificSourceChecks,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,7,0,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="488" _type="LocalChecksRawCommand" date="Mon Nov 20 14:42:17 EST 2023" starttimestamp="1700507886094" timestamp="1451354">
    <CSVRow><![CDATA[29,Mon Nov 20 14:42:11 EST 2023,3,0,A5AssignmentSpecificSourceChecks,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,7,0,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="490" _type="MoveCaretCommand" caretOffset="379" date="Mon Nov 20 14:42:18 EST 2023" docOffset="422" starttimestamp="1700507886094" timestamp="1452660" />
  <Command __id="491" _type="MoveCaretCommand" caretOffset="344" date="Mon Nov 20 14:42:20 EST 2023" docOffset="387" starttimestamp="1700507886094" timestamp="1454700" />
  <Command __id="492" _type="MoveCaretCommand" caretOffset="344" date="Mon Nov 20 14:42:20 EST 2023" docOffset="387" starttimestamp="1700507886094" timestamp="1454700" />
  <Command __id="493" _type="MoveCaretCommand" caretOffset="273" date="Mon Nov 20 14:42:26 EST 2023" docOffset="316" starttimestamp="1700507886094" timestamp="1460063" />
  <Command __id="494" _type="MoveCaretCommand" caretOffset="273" date="Mon Nov 20 14:42:26 EST 2023" docOffset="316" starttimestamp="1700507886094" timestamp="1460063" />
  <Command __id="495" _type="MoveCaretCommand" caretOffset="342" date="Mon Nov 20 14:42:26 EST 2023" docOffset="385" starttimestamp="1700507886094" timestamp="1460499" />
  <Command __id="496" _type="MoveCaretCommand" caretOffset="342" date="Mon Nov 20 14:42:26 EST 2023" docOffset="385" starttimestamp="1700507886094" timestamp="1460500" />
  <Command __id="497" _type="MoveCaretCommand" caretOffset="433" date="Mon Nov 20 14:42:27 EST 2023" docOffset="476" starttimestamp="1700507886094" timestamp="1461001" />
  <Command __id="498" _type="MoveCaretCommand" caretOffset="433" date="Mon Nov 20 14:42:27 EST 2023" docOffset="476" starttimestamp="1700507886094" timestamp="1461001" />
  <Command __id="499" _type="ShellCommand" date="Mon Nov 20 14:42:28 EST 2023" starttimestamp="1700507886094" timestamp="1462611" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="500" _type="ShellCommand" date="Mon Nov 20 14:43:11 EST 2023" starttimestamp="1700507886094" timestamp="1505460" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="501" _type="MoveCaretCommand" caretOffset="528" date="Mon Nov 20 14:43:12 EST 2023" docOffset="571" starttimestamp="1700507886094" timestamp="1506286" />
  <Command __id="502" _type="MoveCaretCommand" caretOffset="528" date="Mon Nov 20 14:43:12 EST 2023" docOffset="571" starttimestamp="1700507886094" timestamp="1506286" />
  <Command __id="503" _type="MoveCaretCommand" caretOffset="344" date="Mon Nov 20 14:43:13 EST 2023" docOffset="387" starttimestamp="1700507886094" timestamp="1507120" />
  <Command __id="504" _type="MoveCaretCommand" caretOffset="344" date="Mon Nov 20 14:43:13 EST 2023" docOffset="387" starttimestamp="1700507886094" timestamp="1507120" />
  <Command __id="505" _type="MoveCaretCommand" caretOffset="257" date="Mon Nov 20 14:43:14 EST 2023" docOffset="300" starttimestamp="1700507886094" timestamp="1508670" />
  <Command __id="506" _type="MoveCaretCommand" caretOffset="257" date="Mon Nov 20 14:43:14 EST 2023" docOffset="300" starttimestamp="1700507886094" timestamp="1508670" />
  <Command __id="507" _type="MoveCaretCommand" caretOffset="241" date="Mon Nov 20 14:43:18 EST 2023" docOffset="284" starttimestamp="1700507886094" timestamp="1512236" />
  <Command __id="508" _type="MoveCaretCommand" caretOffset="241" date="Mon Nov 20 14:43:18 EST 2023" docOffset="284" starttimestamp="1700507886094" timestamp="1512237" />
  <Command __id="509" _type="MoveCaretCommand" caretOffset="263" date="Mon Nov 20 14:43:19 EST 2023" docOffset="306" starttimestamp="1700507886094" timestamp="1513608" />
  <Command __id="510" _type="MoveCaretCommand" caretOffset="263" date="Mon Nov 20 14:43:19 EST 2023" docOffset="306" starttimestamp="1700507886094" timestamp="1513608" />
  <Command __id="489" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:42:18 EST 2023" docASTNodeCount="118" docActiveCodeLength="840" docExpressionCount="79" docLength="962" projectName="Assignment5" starttimestamp="1700507886094" timestamp="1452620">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		p"), Diff(DELETE,"rotected"), Diff(INSERT,"ublic"), Diff(EQUAL," BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if(super.getTail().isNIL()) {			return true;		}else {			return super.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		return "(" + super.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				super.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + super.getHead().toString() + " " + "." + " " +				super.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if(super.getTail().isNIL()) {
			return true;
		}else {
			return super.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		return "(" + super.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				super.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + super.getHead().toString() + " " + "." + " " +
				super.getTail().toString() + ")";
	}
	
//	public String toStringAsList() {
//		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
//	}
	
	public String toString() {
		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();
	}



}
]]></snapshot>
  </Command>
  <Command __id="511" _type="SelectTextCommand" caretOffset="270" date="Mon Nov 20 14:43:25 EST 2023" end="270" start="262" starttimestamp="1700507886094" timestamp="1519572" />
  <Command __id="512" _type="SelectTextCommand" caretOffset="270" date="Mon Nov 20 14:43:25 EST 2023" end="270" start="262" starttimestamp="1700507886094" timestamp="1519573" />
  <DocumentChange __id="513" _type="Replace" date="Mon Nov 20 14:43:27 EST 2023" docASTNodeCount="116" docActiveCodeLength="833" docExpressionCount="77" docLength="955" endLine="12" insertionLength="1" int_docASTNodeCount="116" int_docActiveCodeLength="832" int_docExpressionCount="77" int_docLength="954" length="8" offset="305" startLine="12" starttimestamp="1700507886094" timestamp="1521811">
    <deletedText><![CDATA[.isNIL()]]></deletedText>
    <insertedText><![CDATA[ ]]></insertedText>
  </DocumentChange>
  <Command __id="514" _type="InsertStringCommand" date="Mon Nov 20 14:43:27 EST 2023" starttimestamp="1700507886094" timestamp="1521819" timestamp2="1521819">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="515" _type="InsertStringCommand" date="Mon Nov 20 14:43:27 EST 2023" starttimestamp="1700507886094" timestamp="1521819" timestamp2="1521819">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="516" _type="Insert" date="Mon Nov 20 14:43:28 EST 2023" docASTNodeCount="116" docActiveCodeLength="837" docExpressionCount="77" docLength="959" length="4" offset="306" repeat="4" starttimestamp="1700507886094" timestamp="1522086" timestamp2="1522390">
    <text><![CDATA[inst]]></text>
  </DocumentChange>
  <Command __id="517" _type="InsertStringCommand" date="Mon Nov 20 14:43:28 EST 2023" starttimestamp="1700507886094" timestamp="1522088" timestamp2="1522088">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="518" _type="InsertStringCommand" date="Mon Nov 20 14:43:28 EST 2023" starttimestamp="1700507886094" timestamp="1522088" timestamp2="1522088">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="520" _type="InsertStringCommand" date="Mon Nov 20 14:43:28 EST 2023" starttimestamp="1700507886094" timestamp="1522169" timestamp2="1522169">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="521" _type="InsertStringCommand" date="Mon Nov 20 14:43:28 EST 2023" starttimestamp="1700507886094" timestamp="1522169" timestamp2="1522169">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="523" _type="InsertStringCommand" date="Mon Nov 20 14:43:28 EST 2023" starttimestamp="1700507886094" timestamp="1522288" timestamp2="1522288">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="524" _type="InsertStringCommand" date="Mon Nov 20 14:43:28 EST 2023" starttimestamp="1700507886094" timestamp="1522288" timestamp2="1522288">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="526" _type="InsertStringCommand" date="Mon Nov 20 14:43:28 EST 2023" starttimestamp="1700507886094" timestamp="1522392" timestamp2="1522392">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="527" _type="InsertStringCommand" date="Mon Nov 20 14:43:28 EST 2023" starttimestamp="1700507886094" timestamp="1522392" timestamp2="1522392">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="528" _type="Delete" date="Mon Nov 20 14:43:29 EST 2023" docASTNodeCount="116" docActiveCodeLength="835" docExpressionCount="77" docLength="957" endLine="12" length="2" offset="308" repeat="2" startLine="12" starttimestamp="1700507886094" timestamp="1523384" timestamp2="1523504">
    <text><![CDATA[st]]></text>
  </DocumentChange>
  <Command __id="529" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:43:29 EST 2023" starttimestamp="1700507886094" timestamp="1523387" />
  <Command __id="530" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:43:29 EST 2023" starttimestamp="1700507886094" timestamp="1523387" />
  <Command __id="532" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:43:29 EST 2023" starttimestamp="1700507886094" timestamp="1523508" />
  <Command __id="533" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:43:29 EST 2023" starttimestamp="1700507886094" timestamp="1523508" />
  <Command __id="535" _type="InsertStringCommand" date="Mon Nov 20 14:43:29 EST 2023" starttimestamp="1700507886094" timestamp="1523861" timestamp2="1523861">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="536" _type="InsertStringCommand" date="Mon Nov 20 14:43:29 EST 2023" starttimestamp="1700507886094" timestamp="1523861" timestamp2="1523861">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="538" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524099" timestamp2="1524099">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="539" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524099" timestamp2="1524099">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="541" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524195" timestamp2="1524195">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="542" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524195" timestamp2="1524195">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="544" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524340" timestamp2="1524340">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="545" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524340" timestamp2="1524340">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="547" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524455" timestamp2="1524455">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="548" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524455" timestamp2="1524455">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="550" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524611" timestamp2="1524611">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="551" _type="InsertStringCommand" date="Mon Nov 20 14:43:30 EST 2023" starttimestamp="1700507886094" timestamp="1524611" timestamp2="1524611">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="553" _type="InsertStringCommand" date="Mon Nov 20 14:43:31 EST 2023" starttimestamp="1700507886094" timestamp="1525226" timestamp2="1525226">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="554" _type="InsertStringCommand" date="Mon Nov 20 14:43:31 EST 2023" starttimestamp="1700507886094" timestamp="1525226" timestamp2="1525226">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="556" _type="InsertStringCommand" date="Mon Nov 20 14:43:31 EST 2023" starttimestamp="1700507886094" timestamp="1525299" timestamp2="1525299">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="557" _type="InsertStringCommand" date="Mon Nov 20 14:43:31 EST 2023" starttimestamp="1700507886094" timestamp="1525299" timestamp2="1525299">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="558" _type="ShellCommand" date="Mon Nov 20 14:43:31 EST 2023" starttimestamp="1700507886094" timestamp="1525794" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="559" _type="ShellCommand" date="Mon Nov 20 14:43:38 EST 2023" starttimestamp="1700507886094" timestamp="1532072" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="561" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1532932" timestamp2="1532932">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="562" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1532932" timestamp2="1532932">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="564" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1533167" timestamp2="1533167">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="565" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1533167" timestamp2="1533167">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="567" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1533409" timestamp2="1533409">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="568" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1533409" timestamp2="1533409">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="570" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1533514" timestamp2="1533514">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="571" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1533515" timestamp2="1533515">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="573" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1533600" timestamp2="1533600">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="574" _type="InsertStringCommand" date="Mon Nov 20 14:43:39 EST 2023" starttimestamp="1700507886094" timestamp="1533600" timestamp2="1533600">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="575" _type="ShellCommand" date="Mon Nov 20 14:43:40 EST 2023" starttimestamp="1700507886094" timestamp="1534791" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="576" _type="ShellCommand" date="Mon Nov 20 14:43:56 EST 2023" starttimestamp="1700507886094" timestamp="1550776" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="577" _type="ShellCommand" date="Mon Nov 20 14:43:59 EST 2023" starttimestamp="1700507886094" timestamp="1553527" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="578" _type="ShellCommand" date="Mon Nov 20 14:43:59 EST 2023" starttimestamp="1700507886094" timestamp="1553606" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="534" _type="Insert" date="Mon Nov 20 14:43:29 EST 2023" docASTNodeCount="104" docActiveCodeLength="843" docExpressionCount="70" docLength="965" length="8" offset="308" repeat="8" starttimestamp="1700507886094" timestamp="1523858" timestamp2="1525296">
    <text><![CDATA[stanceof]]></text>
  </DocumentChange>
  <DocumentChange __id="560" _type="Insert" date="Mon Nov 20 14:43:39 EST 2023" docASTNodeCount="119" docActiveCodeLength="848" docExpressionCount="79" docLength="970" length="5" offset="316" repeat="5" starttimestamp="1700507886094" timestamp="1532930" timestamp2="1533598">
    <text><![CDATA[ Atom]]></text>
  </DocumentChange>
  <DocumentChange __id="579" _type="Insert" date="Mon Nov 20 14:43:59 EST 2023" docASTNodeCount="129" docActiveCodeLength="884" docExpressionCount="88" docLength="1006" length="36" offset="16" repeat="2" starttimestamp="1700507886094" timestamp="1553615" timestamp2="1553615">
    <text><![CDATA[import main.lisp.parser.terms.Atom;
]]></text>
  </DocumentChange>
  <Command __id="581" _type="MoveCaretCommand" caretOffset="286" date="Mon Nov 20 14:44:01 EST 2023" docOffset="376" starttimestamp="1700507886094" timestamp="1554990" />
  <Command __id="582" _type="MoveCaretCommand" caretOffset="286" date="Mon Nov 20 14:44:01 EST 2023" docOffset="376" starttimestamp="1700507886094" timestamp="1554990" />
  <Command __id="583" _type="MoveCaretCommand" caretOffset="286" date="Mon Nov 20 14:44:01 EST 2023" docOffset="376" starttimestamp="1700507886094" timestamp="1555423" />
  <Command __id="584" _type="MoveCaretCommand" caretOffset="286" date="Mon Nov 20 14:44:01 EST 2023" docOffset="376" starttimestamp="1700507886094" timestamp="1555423" />
  <Command __id="585" _type="MoveCaretCommand" caretOffset="267" date="Mon Nov 20 14:44:02 EST 2023" docOffset="357" starttimestamp="1700507886094" timestamp="1556007" />
  <Command __id="586" _type="MoveCaretCommand" caretOffset="267" date="Mon Nov 20 14:44:02 EST 2023" docOffset="357" starttimestamp="1700507886094" timestamp="1556007" />
  <Command __id="588" _type="InsertStringCommand" date="Mon Nov 20 14:44:03 EST 2023" starttimestamp="1700507886094" timestamp="1557646" timestamp2="1557646">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="589" _type="InsertStringCommand" date="Mon Nov 20 14:44:03 EST 2023" starttimestamp="1700507886094" timestamp="1557647" timestamp2="1557647">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="591" _type="InsertStringCommand" date="Mon Nov 20 14:44:03 EST 2023" starttimestamp="1700507886094" timestamp="1557819" timestamp2="1557819">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="592" _type="InsertStringCommand" date="Mon Nov 20 14:44:03 EST 2023" starttimestamp="1700507886094" timestamp="1557820" timestamp2="1557820">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="594" _type="InsertStringCommand" date="Mon Nov 20 14:44:04 EST 2023" starttimestamp="1700507886094" timestamp="1557931" timestamp2="1557931">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="595" _type="InsertStringCommand" date="Mon Nov 20 14:44:04 EST 2023" starttimestamp="1700507886094" timestamp="1557931" timestamp2="1557931">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="597" _type="InsertStringCommand" date="Mon Nov 20 14:44:04 EST 2023" starttimestamp="1700507886094" timestamp="1558031" timestamp2="1558031">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="598" _type="InsertStringCommand" date="Mon Nov 20 14:44:04 EST 2023" starttimestamp="1700507886094" timestamp="1558031" timestamp2="1558031">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="587" _type="Insert" date="Mon Nov 20 14:44:03 EST 2023" docASTNodeCount="114" docActiveCodeLength="888" docExpressionCount="79" docLength="1010" length="4" offset="357" repeat="4" starttimestamp="1700507886094" timestamp="1557643" timestamp2="1558028">
    <text><![CDATA[ && ]]></text>
  </DocumentChange>
  <DocumentChange __id="601" _type="Insert" date="Mon Nov 20 14:44:06 EST 2023" docASTNodeCount="130" docActiveCodeLength="889" docExpressionCount="89" docLength="1011" length="1" offset="326" starttimestamp="1700507886094" timestamp="1560434">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="606" _type="Insert" date="Mon Nov 20 14:44:08 EST 2023" docASTNodeCount="114" docActiveCodeLength="890" docExpressionCount="79" docLength="1012" length="1" offset="358" starttimestamp="1700507886094" timestamp="1562176">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="599" _type="MoveCaretCommand" caretOffset="236" date="Mon Nov 20 14:44:05 EST 2023" docOffset="326" starttimestamp="1700507886094" timestamp="1559492" />
  <Command __id="600" _type="MoveCaretCommand" caretOffset="236" date="Mon Nov 20 14:44:05 EST 2023" docOffset="326" starttimestamp="1700507886094" timestamp="1559492" />
  <Command __id="602" _type="InsertStringCommand" date="Mon Nov 20 14:44:06 EST 2023" starttimestamp="1700507886094" timestamp="1560438" timestamp2="1560438">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="603" _type="InsertStringCommand" date="Mon Nov 20 14:44:06 EST 2023" starttimestamp="1700507886094" timestamp="1560438" timestamp2="1560438">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="604" _type="MoveCaretCommand" caretOffset="268" date="Mon Nov 20 14:44:07 EST 2023" docOffset="358" starttimestamp="1700507886094" timestamp="1561392" />
  <Command __id="605" _type="MoveCaretCommand" caretOffset="268" date="Mon Nov 20 14:44:07 EST 2023" docOffset="358" starttimestamp="1700507886094" timestamp="1561392" />
  <Command __id="607" _type="InsertStringCommand" date="Mon Nov 20 14:44:08 EST 2023" starttimestamp="1700507886094" timestamp="1562181" timestamp2="1562181">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="608" _type="InsertStringCommand" date="Mon Nov 20 14:44:08 EST 2023" starttimestamp="1700507886094" timestamp="1562181" timestamp2="1562181">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="609" _type="MoveCaretCommand" caretOffset="273" date="Mon Nov 20 14:44:08 EST 2023" docOffset="363" starttimestamp="1700507886094" timestamp="1562829" />
  <Command __id="610" _type="MoveCaretCommand" caretOffset="273" date="Mon Nov 20 14:44:08 EST 2023" docOffset="363" starttimestamp="1700507886094" timestamp="1562829" />
  <Command __id="612" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567331" timestamp2="1567331">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="613" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567331" timestamp2="1567331">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="615" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567412" timestamp2="1567412">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="616" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567412" timestamp2="1567412">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="618" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567492" timestamp2="1567492">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="619" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567492" timestamp2="1567492">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="621" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567568" timestamp2="1567568">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="622" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567569" timestamp2="1567569">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="624" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567653" timestamp2="1567653">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="625" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567653" timestamp2="1567653">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="627" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567720" timestamp2="1567720">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="628" _type="InsertStringCommand" date="Mon Nov 20 14:44:13 EST 2023" starttimestamp="1700507886094" timestamp="1567720" timestamp2="1567720">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="629" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:44:13 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1567725" />
  <Command __id="640" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:44:17 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1571157" />
  <Command __id="642" _type="InsertStringCommand" date="Mon Nov 20 14:44:17 EST 2023" starttimestamp="1700507886094" timestamp="1571214" timestamp2="1571214">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="643" _type="InsertStringCommand" date="Mon Nov 20 14:44:17 EST 2023" starttimestamp="1700507886094" timestamp="1571215" timestamp2="1571215">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="645" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:44:17 EST 2023" starttimestamp="1700507886094" timestamp="1571390" />
  <Command __id="646" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:44:17 EST 2023" starttimestamp="1700507886094" timestamp="1571391" />
  <Command __id="648" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:44:17 EST 2023" starttimestamp="1700507886094" timestamp="1571489" />
  <Command __id="649" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:44:17 EST 2023" starttimestamp="1700507886094" timestamp="1571489" />
  <Command __id="651" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:44:17 EST 2023" starttimestamp="1700507886094" timestamp="1571841" />
  <Command __id="652" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:44:17 EST 2023" starttimestamp="1700507886094" timestamp="1571841" />
  <Command __id="654" _type="InsertStringCommand" date="Mon Nov 20 14:44:18 EST 2023" starttimestamp="1700507886094" timestamp="1572143" timestamp2="1572143">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="655" _type="InsertStringCommand" date="Mon Nov 20 14:44:18 EST 2023" starttimestamp="1700507886094" timestamp="1572143" timestamp2="1572143">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="656" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:44:18 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1572151" />
  <Command __id="660" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:44:19 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1573588" />
  <Command __id="662" _type="InsertStringCommand" date="Mon Nov 20 14:44:19 EST 2023" starttimestamp="1700507886094" timestamp="1573598" timestamp2="1573598">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="663" _type="InsertStringCommand" date="Mon Nov 20 14:44:19 EST 2023" starttimestamp="1700507886094" timestamp="1573598" timestamp2="1573598">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="664" _type="MoveCaretCommand" caretOffset="315" date="Mon Nov 20 14:44:20 EST 2023" docOffset="405" starttimestamp="1700507886094" timestamp="1574826" />
  <Command __id="665" _type="MoveCaretCommand" caretOffset="315" date="Mon Nov 20 14:44:20 EST 2023" docOffset="405" starttimestamp="1700507886094" timestamp="1574827" />
  <Command __id="666" _type="MoveCaretCommand" caretOffset="361" date="Mon Nov 20 14:44:21 EST 2023" docOffset="451" starttimestamp="1700507886094" timestamp="1575291" />
  <Command __id="667" _type="MoveCaretCommand" caretOffset="361" date="Mon Nov 20 14:44:21 EST 2023" docOffset="451" starttimestamp="1700507886094" timestamp="1575291" />
  <Command __id="668" _type="MoveCaretCommand" caretOffset="325" date="Mon Nov 20 14:44:21 EST 2023" docOffset="415" starttimestamp="1700507886094" timestamp="1575840" />
  <Command __id="669" _type="MoveCaretCommand" caretOffset="325" date="Mon Nov 20 14:44:21 EST 2023" docOffset="415" starttimestamp="1700507886094" timestamp="1575840" />
  <Command __id="670" _type="SelectTextCommand" caretOffset="364" date="Mon Nov 20 14:44:22 EST 2023" end="364" start="325" starttimestamp="1700507886094" timestamp="1576147" />
  <Command __id="671" _type="SelectTextCommand" caretOffset="364" date="Mon Nov 20 14:44:22 EST 2023" end="364" start="325" starttimestamp="1700507886094" timestamp="1576147" />
  <Command __id="672" _type="MoveCaretCommand" caretOffset="361" date="Mon Nov 20 14:44:22 EST 2023" docOffset="451" starttimestamp="1700507886094" timestamp="1576625" />
  <Command __id="673" _type="MoveCaretCommand" caretOffset="361" date="Mon Nov 20 14:44:22 EST 2023" docOffset="451" starttimestamp="1700507886094" timestamp="1576625" />
  <Command __id="674" _type="MoveCaretCommand" caretOffset="361" date="Mon Nov 20 14:44:23 EST 2023" docOffset="451" starttimestamp="1700507886094" timestamp="1577408" />
  <Command __id="675" _type="MoveCaretCommand" caretOffset="361" date="Mon Nov 20 14:44:23 EST 2023" docOffset="451" starttimestamp="1700507886094" timestamp="1577408" />
  <Command __id="676" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 14:44:23 EST 2023" starttimestamp="1700507886094" timestamp="1577663" />
  <Command __id="677" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:44:23 EST 2023" starttimestamp="1700507886094" timestamp="1577764" />
  <Command __id="678" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:44:23 EST 2023" starttimestamp="1700507886094" timestamp="1577772" />
  <Command __id="679" _type="MoveCaretCommand" caretOffset="590" date="Mon Nov 20 14:44:24 EST 2023" docOffset="680" starttimestamp="1700507886094" timestamp="1578124" />
  <Command __id="680" _type="MoveCaretCommand" caretOffset="590" date="Mon Nov 20 14:44:24 EST 2023" docOffset="680" starttimestamp="1700507886094" timestamp="1578124" />
  <Command __id="681" _type="MoveCaretCommand" caretOffset="404" date="Mon Nov 20 14:44:25 EST 2023" docOffset="494" starttimestamp="1700507886094" timestamp="1579242" />
  <Command __id="682" _type="MoveCaretCommand" caretOffset="404" date="Mon Nov 20 14:44:25 EST 2023" docOffset="494" starttimestamp="1700507886094" timestamp="1579243" />
  <Command __id="683" _type="SelectTextCommand" caretOffset="411" date="Mon Nov 20 14:44:25 EST 2023" end="411" start="386" starttimestamp="1700507886094" timestamp="1579392" />
  <Command __id="684" _type="SelectTextCommand" caretOffset="411" date="Mon Nov 20 14:44:25 EST 2023" end="411" start="386" starttimestamp="1700507886094" timestamp="1579392" />
  <Command __id="685" _type="MoveCaretCommand" caretOffset="626" date="Mon Nov 20 14:44:25 EST 2023" docOffset="716" starttimestamp="1700507886094" timestamp="1579897" />
  <Command __id="686" _type="MoveCaretCommand" caretOffset="626" date="Mon Nov 20 14:44:25 EST 2023" docOffset="716" starttimestamp="1700507886094" timestamp="1579897" />
  <Command __id="687" _type="MoveCaretCommand" caretOffset="939" date="Mon Nov 20 14:44:26 EST 2023" docOffset="1029" starttimestamp="1700507886094" timestamp="1580741" />
  <Command __id="688" _type="MoveCaretCommand" caretOffset="939" date="Mon Nov 20 14:44:26 EST 2023" docOffset="1029" starttimestamp="1700507886094" timestamp="1580741" />
  <Command __id="689" _type="SelectTextCommand" caretOffset="938" date="Mon Nov 20 14:44:26 EST 2023" end="938" start="855" starttimestamp="1700507886094" timestamp="1580877" />
  <Command __id="690" _type="SelectTextCommand" caretOffset="938" date="Mon Nov 20 14:44:26 EST 2023" end="938" start="855" starttimestamp="1700507886094" timestamp="1580877" />
  <Command __id="691" _type="MoveCaretCommand" caretOffset="875" date="Mon Nov 20 14:44:27 EST 2023" docOffset="965" starttimestamp="1700507886094" timestamp="1581339" />
  <Command __id="692" _type="MoveCaretCommand" caretOffset="875" date="Mon Nov 20 14:44:27 EST 2023" docOffset="965" starttimestamp="1700507886094" timestamp="1581340" />
  <Command __id="693" _type="SelectTextCommand" caretOffset="877" date="Mon Nov 20 14:44:27 EST 2023" end="877" start="871" starttimestamp="1700507886094" timestamp="1581457" />
  <Command __id="694" _type="SelectTextCommand" caretOffset="877" date="Mon Nov 20 14:44:27 EST 2023" end="877" start="871" starttimestamp="1700507886094" timestamp="1581457" />
  <Command __id="695" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 14:44:27 EST 2023" docOffset="970" starttimestamp="1700507886094" timestamp="1581876" />
  <Command __id="696" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 14:44:27 EST 2023" docOffset="970" starttimestamp="1700507886094" timestamp="1581876" />
  <Command __id="697" _type="MoveCaretCommand" caretOffset="442" date="Mon Nov 20 14:44:29 EST 2023" docOffset="532" starttimestamp="1700507886094" timestamp="1583258" />
  <Command __id="698" _type="MoveCaretCommand" caretOffset="442" date="Mon Nov 20 14:44:29 EST 2023" docOffset="532" starttimestamp="1700507886094" timestamp="1583258" />
  <Command __id="699" _type="MoveCaretCommand" caretOffset="402" date="Mon Nov 20 14:44:29 EST 2023" docOffset="492" starttimestamp="1700507886094" timestamp="1583676" />
  <Command __id="700" _type="MoveCaretCommand" caretOffset="402" date="Mon Nov 20 14:44:29 EST 2023" docOffset="492" starttimestamp="1700507886094" timestamp="1583676" />
  <Command __id="701" _type="SelectTextCommand" caretOffset="411" date="Mon Nov 20 14:44:29 EST 2023" end="411" start="386" starttimestamp="1700507886094" timestamp="1583823" />
  <Command __id="702" _type="SelectTextCommand" caretOffset="411" date="Mon Nov 20 14:44:29 EST 2023" end="411" start="386" starttimestamp="1700507886094" timestamp="1583823" />
  <Command __id="703" _type="MoveCaretCommand" caretOffset="443" date="Mon Nov 20 14:44:30 EST 2023" docOffset="533" starttimestamp="1700507886094" timestamp="1584311" />
  <Command __id="704" _type="MoveCaretCommand" caretOffset="443" date="Mon Nov 20 14:44:30 EST 2023" docOffset="533" starttimestamp="1700507886094" timestamp="1584311" />
  <Command __id="705" _type="SelectTextCommand" caretOffset="444" date="Mon Nov 20 14:44:30 EST 2023" end="444" start="437" starttimestamp="1700507886094" timestamp="1584445" />
  <Command __id="706" _type="SelectTextCommand" caretOffset="444" date="Mon Nov 20 14:44:30 EST 2023" end="444" start="437" starttimestamp="1700507886094" timestamp="1584445" />
  <Command __id="707" _type="MoveCaretCommand" caretOffset="397" date="Mon Nov 20 14:44:31 EST 2023" docOffset="487" starttimestamp="1700507886094" timestamp="1584928" />
  <Command __id="708" _type="MoveCaretCommand" caretOffset="397" date="Mon Nov 20 14:44:31 EST 2023" docOffset="487" starttimestamp="1700507886094" timestamp="1584928" />
  <Command __id="709" _type="SelectTextCommand" caretOffset="411" date="Mon Nov 20 14:44:31 EST 2023" end="411" start="386" starttimestamp="1700507886094" timestamp="1585077" />
  <Command __id="710" _type="SelectTextCommand" caretOffset="411" date="Mon Nov 20 14:44:31 EST 2023" end="411" start="386" starttimestamp="1700507886094" timestamp="1585077" />
  <Command __id="711" _type="MoveCaretCommand" caretOffset="396" date="Mon Nov 20 14:44:31 EST 2023" docOffset="486" starttimestamp="1700507886094" timestamp="1585508" />
  <Command __id="712" _type="MoveCaretCommand" caretOffset="396" date="Mon Nov 20 14:44:31 EST 2023" docOffset="486" starttimestamp="1700507886094" timestamp="1585508" />
  <Command __id="713" _type="MoveCaretCommand" caretOffset="439" date="Mon Nov 20 14:44:32 EST 2023" docOffset="529" starttimestamp="1700507886094" timestamp="1585994" />
  <Command __id="714" _type="MoveCaretCommand" caretOffset="439" date="Mon Nov 20 14:44:32 EST 2023" docOffset="529" starttimestamp="1700507886094" timestamp="1585994" />
  <Command __id="715" _type="SelectTextCommand" caretOffset="444" date="Mon Nov 20 14:44:32 EST 2023" end="444" start="437" starttimestamp="1700507886094" timestamp="1586143" />
  <Command __id="716" _type="SelectTextCommand" caretOffset="444" date="Mon Nov 20 14:44:32 EST 2023" end="444" start="437" starttimestamp="1700507886094" timestamp="1586143" />
  <Command __id="717" _type="MoveCaretCommand" caretOffset="439" date="Mon Nov 20 14:44:32 EST 2023" docOffset="529" starttimestamp="1700507886094" timestamp="1586680" />
  <Command __id="718" _type="MoveCaretCommand" caretOffset="439" date="Mon Nov 20 14:44:32 EST 2023" docOffset="529" starttimestamp="1700507886094" timestamp="1586680" />
  <Command __id="719" _type="SelectTextCommand" caretOffset="444" date="Mon Nov 20 14:44:32 EST 2023" end="444" start="437" starttimestamp="1700507886094" timestamp="1586825" />
  <Command __id="720" _type="SelectTextCommand" caretOffset="444" date="Mon Nov 20 14:44:32 EST 2023" end="444" start="437" starttimestamp="1700507886094" timestamp="1586825" />
  <Command __id="721" _type="MoveCaretCommand" caretOffset="400" date="Mon Nov 20 14:44:33 EST 2023" docOffset="490" starttimestamp="1700507886094" timestamp="1587326" />
  <Command __id="722" _type="MoveCaretCommand" caretOffset="400" date="Mon Nov 20 14:44:33 EST 2023" docOffset="490" starttimestamp="1700507886094" timestamp="1587326" />
  <Command __id="723" _type="SelectTextCommand" caretOffset="411" date="Mon Nov 20 14:44:33 EST 2023" end="411" start="386" starttimestamp="1700507886094" timestamp="1587491" />
  <Command __id="724" _type="SelectTextCommand" caretOffset="411" date="Mon Nov 20 14:44:33 EST 2023" end="411" start="386" starttimestamp="1700507886094" timestamp="1587491" />
  <Command __id="725" _type="MoveCaretCommand" caretOffset="554" date="Mon Nov 20 14:44:34 EST 2023" docOffset="644" starttimestamp="1700507886094" timestamp="1587976" />
  <Command __id="726" _type="MoveCaretCommand" caretOffset="554" date="Mon Nov 20 14:44:34 EST 2023" docOffset="644" starttimestamp="1700507886094" timestamp="1587976" />
  <Command __id="727" _type="MoveCaretCommand" caretOffset="580" date="Mon Nov 20 14:44:34 EST 2023" docOffset="670" starttimestamp="1700507886094" timestamp="1588408" />
  <Command __id="728" _type="MoveCaretCommand" caretOffset="580" date="Mon Nov 20 14:44:34 EST 2023" docOffset="670" starttimestamp="1700507886094" timestamp="1588408" />
  <Command __id="729" _type="SelectTextCommand" caretOffset="591" date="Mon Nov 20 14:44:34 EST 2023" end="591" start="570" starttimestamp="1700507886094" timestamp="1588559" />
  <Command __id="730" _type="SelectTextCommand" caretOffset="591" date="Mon Nov 20 14:44:34 EST 2023" end="591" start="570" starttimestamp="1700507886094" timestamp="1588559" />
  <Command __id="731" _type="ShellCommand" date="Mon Nov 20 14:44:35 EST 2023" starttimestamp="1700507886094" timestamp="1589047" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="732" _type="ShellCommand" date="Mon Nov 20 14:44:35 EST 2023" starttimestamp="1700507886094" timestamp="1589119" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="733" _type="SelectTextCommand" caretOffset="591" date="Mon Nov 20 14:44:35 EST 2023" end="591" start="570" starttimestamp="1700507886094" timestamp="1589207" />
  <Command __id="734" _type="SelectTextCommand" caretOffset="591" date="Mon Nov 20 14:44:35 EST 2023" end="591" start="570" starttimestamp="1700507886094" timestamp="1589207" />
  <Command __id="735" _type="MoveCaretCommand" caretOffset="583" date="Mon Nov 20 14:44:35 EST 2023" docOffset="673" starttimestamp="1700507886094" timestamp="1589727" />
  <Command __id="736" _type="MoveCaretCommand" caretOffset="583" date="Mon Nov 20 14:44:35 EST 2023" docOffset="673" starttimestamp="1700507886094" timestamp="1589727" />
  <Command __id="737" _type="SelectTextCommand" caretOffset="591" date="Mon Nov 20 14:44:36 EST 2023" end="591" start="570" starttimestamp="1700507886094" timestamp="1589924" />
  <Command __id="738" _type="SelectTextCommand" caretOffset="591" date="Mon Nov 20 14:44:36 EST 2023" end="591" start="570" starttimestamp="1700507886094" timestamp="1589924" />
  <Command __id="739" _type="ShellCommand" date="Mon Nov 20 14:44:36 EST 2023" starttimestamp="1700507886094" timestamp="1590428" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="740" _type="ShellCommand" date="Mon Nov 20 14:44:36 EST 2023" starttimestamp="1700507886094" timestamp="1590501" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="741" _type="SelectTextCommand" caretOffset="591" date="Mon Nov 20 14:44:36 EST 2023" end="591" start="570" starttimestamp="1700507886094" timestamp="1590591" />
  <Command __id="742" _type="SelectTextCommand" caretOffset="591" date="Mon Nov 20 14:44:36 EST 2023" end="591" start="570" starttimestamp="1700507886094" timestamp="1590591" />
  <Command __id="743" _type="MoveCaretCommand" caretOffset="584" date="Mon Nov 20 14:44:37 EST 2023" docOffset="674" starttimestamp="1700507886094" timestamp="1591026" />
  <Command __id="744" _type="MoveCaretCommand" caretOffset="584" date="Mon Nov 20 14:44:37 EST 2023" docOffset="674" starttimestamp="1700507886094" timestamp="1591026" />
  <Command __id="745" _type="MoveCaretCommand" caretOffset="552" date="Mon Nov 20 14:44:37 EST 2023" docOffset="642" starttimestamp="1700507886094" timestamp="1591527" />
  <Command __id="746" _type="MoveCaretCommand" caretOffset="552" date="Mon Nov 20 14:44:37 EST 2023" docOffset="642" starttimestamp="1700507886094" timestamp="1591527" />
  <Command __id="747" _type="MoveCaretCommand" caretOffset="584" date="Mon Nov 20 14:44:38 EST 2023" docOffset="674" starttimestamp="1700507886094" timestamp="1592008" />
  <Command __id="748" _type="MoveCaretCommand" caretOffset="584" date="Mon Nov 20 14:44:38 EST 2023" docOffset="674" starttimestamp="1700507886094" timestamp="1592008" />
  <Command __id="749" _type="MoveCaretCommand" caretOffset="621" date="Mon Nov 20 14:44:38 EST 2023" docOffset="711" starttimestamp="1700507886094" timestamp="1592615" />
  <Command __id="750" _type="MoveCaretCommand" caretOffset="621" date="Mon Nov 20 14:44:38 EST 2023" docOffset="711" starttimestamp="1700507886094" timestamp="1592615" />
  <Command __id="751" _type="MoveCaretCommand" caretOffset="886" date="Mon Nov 20 14:44:40 EST 2023" docOffset="976" starttimestamp="1700507886094" timestamp="1594324" />
  <Command __id="752" _type="MoveCaretCommand" caretOffset="886" date="Mon Nov 20 14:44:40 EST 2023" docOffset="976" starttimestamp="1700507886094" timestamp="1594324" />
  <Command __id="753" _type="MoveCaretCommand" caretOffset="885" date="Mon Nov 20 14:44:41 EST 2023" docOffset="975" starttimestamp="1700507886094" timestamp="1595089" />
  <Command __id="754" _type="MoveCaretCommand" caretOffset="885" date="Mon Nov 20 14:44:41 EST 2023" docOffset="975" starttimestamp="1700507886094" timestamp="1595089" />
  <Command __id="755" _type="MoveCaretCommand" caretOffset="891" date="Mon Nov 20 14:44:41 EST 2023" docOffset="981" starttimestamp="1700507886094" timestamp="1595609" />
  <Command __id="756" _type="MoveCaretCommand" caretOffset="891" date="Mon Nov 20 14:44:41 EST 2023" docOffset="981" starttimestamp="1700507886094" timestamp="1595609" />
  <Command __id="757" _type="MoveCaretCommand" caretOffset="855" date="Mon Nov 20 14:44:42 EST 2023" docOffset="945" starttimestamp="1700507886094" timestamp="1596092" />
  <Command __id="758" _type="MoveCaretCommand" caretOffset="855" date="Mon Nov 20 14:44:42 EST 2023" docOffset="945" starttimestamp="1700507886094" timestamp="1596092" />
  <Command __id="759" _type="SelectTextCommand" caretOffset="701" date="Mon Nov 20 14:44:47 EST 2023" end="825" start="701" starttimestamp="1700507886094" timestamp="1601727" />
  <Command __id="760" _type="SelectTextCommand" caretOffset="701" date="Mon Nov 20 14:44:47 EST 2023" end="825" start="701" starttimestamp="1700507886094" timestamp="1601728" />
  <Command __id="764" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Mon Nov 20 14:44:48 EST 2023" starttimestamp="1700507886094" timestamp="1602262" />
  <Command __id="765" _type="MoveCaretCommand" caretOffset="700" date="Mon Nov 20 14:44:48 EST 2023" docOffset="790" starttimestamp="1700507886094" timestamp="1602693" />
  <Command __id="766" _type="MoveCaretCommand" caretOffset="700" date="Mon Nov 20 14:44:48 EST 2023" docOffset="790" starttimestamp="1700507886094" timestamp="1602694" />
  <Command __id="767" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 14:44:48 EST 2023" starttimestamp="1700507886094" timestamp="1602771" />
  <Command __id="768" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:44:48 EST 2023" starttimestamp="1700507886094" timestamp="1602870" />
  <Command __id="769" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:44:48 EST 2023" starttimestamp="1700507886094" timestamp="1602883" />
  <Command __id="770" _type="ShellCommand" date="Mon Nov 20 14:44:49 EST 2023" starttimestamp="1700507886094" timestamp="1602999" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="771" _type="ShellCommand" date="Mon Nov 20 14:44:49 EST 2023" starttimestamp="1700507886094" timestamp="1603529" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="772" _type="ShellCommand" date="Mon Nov 20 14:44:50 EST 2023" starttimestamp="1700507886094" timestamp="1603961" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="773" _type="ShellCommand" date="Mon Nov 20 14:45:26 EST 2023" starttimestamp="1700507886094" timestamp="1640872" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="774" _type="ShellCommand" date="Mon Nov 20 14:45:27 EST 2023" starttimestamp="1700507886094" timestamp="1641547" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="775" _type="ShellCommand" date="Mon Nov 20 14:45:28 EST 2023" starttimestamp="1700507886094" timestamp="1642532" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="776" _type="ShellCommand" date="Mon Nov 20 14:45:29 EST 2023" starttimestamp="1700507886094" timestamp="1643158" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="777" _type="ShellCommand" date="Mon Nov 20 14:46:09 EST 2023" starttimestamp="1700507886094" timestamp="1682922" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="778" _type="MoveCaretCommand" caretOffset="395" date="Mon Nov 20 14:46:10 EST 2023" docOffset="485" starttimestamp="1700507886094" timestamp="1684298" />
  <Command __id="779" _type="MoveCaretCommand" caretOffset="395" date="Mon Nov 20 14:46:10 EST 2023" docOffset="485" starttimestamp="1700507886094" timestamp="1684298" />
  <Command __id="780" _type="MoveCaretCommand" caretOffset="695" date="Mon Nov 20 14:46:11 EST 2023" docOffset="785" starttimestamp="1700507886094" timestamp="1685581" />
  <Command __id="781" _type="MoveCaretCommand" caretOffset="695" date="Mon Nov 20 14:46:11 EST 2023" docOffset="785" starttimestamp="1700507886094" timestamp="1685582" />
  <Command __id="782" _type="MoveCaretCommand" caretOffset="552" date="Mon Nov 20 14:46:12 EST 2023" docOffset="642" starttimestamp="1700507886094" timestamp="1686048" />
  <Command __id="783" _type="MoveCaretCommand" caretOffset="552" date="Mon Nov 20 14:46:12 EST 2023" docOffset="642" starttimestamp="1700507886094" timestamp="1686048" />
  <Command __id="784" _type="MoveCaretCommand" caretOffset="590" date="Mon Nov 20 14:46:20 EST 2023" docOffset="680" starttimestamp="1700507886094" timestamp="1694282" />
  <Command __id="785" _type="MoveCaretCommand" caretOffset="590" date="Mon Nov 20 14:46:20 EST 2023" docOffset="680" starttimestamp="1700507886094" timestamp="1694283" />
  <Command __id="786" _type="ShellCommand" date="Mon Nov 20 14:46:25 EST 2023" starttimestamp="1700507886094" timestamp="1699860" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="787" _type="ShellCommand" date="Mon Nov 20 14:46:40 EST 2023" starttimestamp="1700507886094" timestamp="1714620" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="788" _type="ShellCommand" date="Mon Nov 20 14:46:41 EST 2023" starttimestamp="1700507886094" timestamp="1715416" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="789" _type="ShellCommand" date="Mon Nov 20 14:46:44 EST 2023" starttimestamp="1700507886094" timestamp="1718629" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="790" _type="MoveCaretCommand" caretOffset="442" date="Mon Nov 20 14:46:45 EST 2023" docOffset="532" starttimestamp="1700507886094" timestamp="1719806" />
  <Command __id="791" _type="MoveCaretCommand" caretOffset="442" date="Mon Nov 20 14:46:45 EST 2023" docOffset="532" starttimestamp="1700507886094" timestamp="1719807" />
  <Command __id="792" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 14:46:46 EST 2023" docOffset="542" starttimestamp="1700507886094" timestamp="1720319" />
  <Command __id="793" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 14:46:46 EST 2023" docOffset="542" starttimestamp="1700507886094" timestamp="1720319" />
  <Command __id="794" _type="MoveCaretCommand" caretOffset="514" date="Mon Nov 20 14:46:47 EST 2023" docOffset="604" starttimestamp="1700507886094" timestamp="1721618" />
  <Command __id="795" _type="MoveCaretCommand" caretOffset="514" date="Mon Nov 20 14:46:47 EST 2023" docOffset="604" starttimestamp="1700507886094" timestamp="1721618" />
  <Command __id="796" _type="MoveCaretCommand" caretOffset="415" date="Mon Nov 20 14:46:48 EST 2023" docOffset="505" starttimestamp="1700507886094" timestamp="1722675" />
  <Command __id="797" _type="MoveCaretCommand" caretOffset="415" date="Mon Nov 20 14:46:48 EST 2023" docOffset="505" starttimestamp="1700507886094" timestamp="1722675" />
  <DocumentChange __id="611" _type="Insert" date="Mon Nov 20 14:44:13 EST 2023" docASTNodeCount="133" docActiveCodeLength="908" docExpressionCount="92" docLength="1030" length="18" offset="363" repeat="17" starttimestamp="1700507886094" timestamp="1567328" timestamp2="1571213">
    <text><![CDATA[super.getTail() is]]></text>
  </DocumentChange>
  <DocumentChange __id="644" _type="Delete" date="Mon Nov 20 14:44:17 EST 2023" docASTNodeCount="133" docActiveCodeLength="905" docExpressionCount="92" docLength="1027" endLine="13" length="3" offset="378" repeat="3" startLine="13" starttimestamp="1700507886094" timestamp="1571384" timestamp2="1571838">
    <text><![CDATA[ is]]></text>
  </DocumentChange>
  <DocumentChange __id="653" _type="Insert" date="Mon Nov 20 14:44:18 EST 2023" docASTNodeCount="135" docActiveCodeLength="909" docExpressionCount="94" docLength="1031" length="4" offset="378" repeat="4" starttimestamp="1700507886094" timestamp="1572139" timestamp2="1573124">
    <text><![CDATA[.isN]]></text>
  </DocumentChange>
  <DocumentChange __id="661" _type="Replace" date="Mon Nov 20 14:44:19 EST 2023" docASTNodeCount="135" docActiveCodeLength="913" docExpressionCount="94" docLength="1035" endLine="13" insertionLength="7" int_docASTNodeCount="135" int_docActiveCodeLength="906" int_docExpressionCount="94" int_docLength="1028" length="3" offset="379" startLine="13" starttimestamp="1700507886094" timestamp="1573591">
    <deletedText><![CDATA[isN]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="761" _type="Delete" date="Mon Nov 20 14:44:48 EST 2023" docASTNodeCount="141" docActiveCodeLength="946" docExpressionCount="96" docLength="1033" endLine="30" length="2" offset="791" startLine="30" starttimestamp="1700507886094" timestamp="1602239">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="762" _type="Delete" date="Mon Nov 20 14:44:48 EST 2023" docASTNodeCount="141" docActiveCodeLength="1027" docExpressionCount="96" docLength="1031" endLine="31" length="2" offset="825" startLine="31" starttimestamp="1700507886094" timestamp="1602246">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="763" _type="Delete" date="Mon Nov 20 14:44:48 EST 2023" docASTNodeCount="156" docActiveCodeLength="1029" docExpressionCount="110" docLength="1029" endLine="32" length="2" offset="907" startLine="32" starttimestamp="1700507886094" timestamp="1602248">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="798" _type="MoveCaretCommand" caretOffset="433" date="Mon Nov 20 14:46:57 EST 2023" docOffset="523" starttimestamp="1700507886094" timestamp="1731484" />
  <Command __id="799" _type="MoveCaretCommand" caretOffset="433" date="Mon Nov 20 14:46:57 EST 2023" docOffset="523" starttimestamp="1700507886094" timestamp="1731484" />
  <Command __id="800" _type="SelectTextCommand" caretOffset="436" date="Mon Nov 20 14:46:57 EST 2023" end="436" start="431" starttimestamp="1700507886094" timestamp="1731617" />
  <Command __id="801" _type="SelectTextCommand" caretOffset="436" date="Mon Nov 20 14:46:57 EST 2023" end="436" start="431" starttimestamp="1700507886094" timestamp="1731617" />
  <DocumentChange __id="802" _type="Replace" date="Mon Nov 20 14:46:59 EST 2023" docASTNodeCount="157" docActiveCodeLength="1025" docExpressionCount="111" docLength="1025" endLine="21" insertionLength="1" int_docASTNodeCount="156" int_docActiveCodeLength="1024" int_docExpressionCount="110" int_docLength="1024" length="5" offset="521" startLine="21" starttimestamp="1700507886094" timestamp="1733071">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="803" _type="InsertStringCommand" date="Mon Nov 20 14:46:59 EST 2023" starttimestamp="1700507886094" timestamp="1733079" timestamp2="1733079">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="804" _type="InsertStringCommand" date="Mon Nov 20 14:46:59 EST 2023" starttimestamp="1700507886094" timestamp="1733079" timestamp2="1733079">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="806" _type="InsertStringCommand" date="Mon Nov 20 14:46:59 EST 2023" starttimestamp="1700507886094" timestamp="1733148" timestamp2="1733148">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="807" _type="InsertStringCommand" date="Mon Nov 20 14:46:59 EST 2023" starttimestamp="1700507886094" timestamp="1733148" timestamp2="1733148">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="809" _type="InsertStringCommand" date="Mon Nov 20 14:46:59 EST 2023" starttimestamp="1700507886094" timestamp="1733213" timestamp2="1733213">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="810" _type="InsertStringCommand" date="Mon Nov 20 14:46:59 EST 2023" starttimestamp="1700507886094" timestamp="1733213" timestamp2="1733213">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="812" _type="InsertStringCommand" date="Mon Nov 20 14:46:59 EST 2023" starttimestamp="1700507886094" timestamp="1733277" timestamp2="1733277">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="813" _type="InsertStringCommand" date="Mon Nov 20 14:46:59 EST 2023" starttimestamp="1700507886094" timestamp="1733277" timestamp2="1733277">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="814" _type="MoveCaretCommand" caretOffset="501" date="Mon Nov 20 14:47:00 EST 2023" docOffset="591" starttimestamp="1700507886094" timestamp="1734604" />
  <Command __id="815" _type="MoveCaretCommand" caretOffset="501" date="Mon Nov 20 14:47:00 EST 2023" docOffset="591" starttimestamp="1700507886094" timestamp="1734604" />
  <Command __id="816" _type="SelectTextCommand" caretOffset="503" date="Mon Nov 20 14:47:00 EST 2023" end="503" start="498" starttimestamp="1700507886094" timestamp="1734773" />
  <Command __id="817" _type="SelectTextCommand" caretOffset="503" date="Mon Nov 20 14:47:00 EST 2023" end="503" start="498" starttimestamp="1700507886094" timestamp="1734773" />
  <Command __id="819" _type="InsertStringCommand" date="Mon Nov 20 14:47:01 EST 2023" starttimestamp="1700507886094" timestamp="1734934" timestamp2="1734934">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="820" _type="InsertStringCommand" date="Mon Nov 20 14:47:01 EST 2023" starttimestamp="1700507886094" timestamp="1734934" timestamp2="1734934">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="822" _type="InsertStringCommand" date="Mon Nov 20 14:47:01 EST 2023" starttimestamp="1700507886094" timestamp="1735058" timestamp2="1735058">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="823" _type="InsertStringCommand" date="Mon Nov 20 14:47:01 EST 2023" starttimestamp="1700507886094" timestamp="1735058" timestamp2="1735058">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="825" _type="InsertStringCommand" date="Mon Nov 20 14:47:01 EST 2023" starttimestamp="1700507886094" timestamp="1735120" timestamp2="1735120">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="826" _type="InsertStringCommand" date="Mon Nov 20 14:47:01 EST 2023" starttimestamp="1700507886094" timestamp="1735120" timestamp2="1735120">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="828" _type="InsertStringCommand" date="Mon Nov 20 14:47:01 EST 2023" starttimestamp="1700507886094" timestamp="1735155" timestamp2="1735155">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="829" _type="InsertStringCommand" date="Mon Nov 20 14:47:01 EST 2023" starttimestamp="1700507886094" timestamp="1735155" timestamp2="1735155">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="830" _type="MoveCaretCommand" caretOffset="401" date="Mon Nov 20 14:47:01 EST 2023" docOffset="491" starttimestamp="1700507886094" timestamp="1735735" />
  <Command __id="831" _type="MoveCaretCommand" caretOffset="401" date="Mon Nov 20 14:47:01 EST 2023" docOffset="491" starttimestamp="1700507886094" timestamp="1735735" />
  <Command __id="832" _type="MoveCaretCommand" caretOffset="611" date="Mon Nov 20 14:47:02 EST 2023" docOffset="701" starttimestamp="1700507886094" timestamp="1736854" />
  <Command __id="833" _type="MoveCaretCommand" caretOffset="611" date="Mon Nov 20 14:47:02 EST 2023" docOffset="701" starttimestamp="1700507886094" timestamp="1736855" />
  <Command __id="834" _type="SelectTextCommand" caretOffset="614" date="Mon Nov 20 14:47:03 EST 2023" end="614" start="609" starttimestamp="1700507886094" timestamp="1736987" />
  <Command __id="835" _type="SelectTextCommand" caretOffset="614" date="Mon Nov 20 14:47:03 EST 2023" end="614" start="609" starttimestamp="1700507886094" timestamp="1736987" />
  <Command __id="837" _type="InsertStringCommand" date="Mon Nov 20 14:47:03 EST 2023" starttimestamp="1700507886094" timestamp="1737115" timestamp2="1737115">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="838" _type="InsertStringCommand" date="Mon Nov 20 14:47:03 EST 2023" starttimestamp="1700507886094" timestamp="1737115" timestamp2="1737115">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="840" _type="InsertStringCommand" date="Mon Nov 20 14:47:03 EST 2023" starttimestamp="1700507886094" timestamp="1737220" timestamp2="1737220">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="841" _type="InsertStringCommand" date="Mon Nov 20 14:47:03 EST 2023" starttimestamp="1700507886094" timestamp="1737220" timestamp2="1737220">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="843" _type="InsertStringCommand" date="Mon Nov 20 14:47:03 EST 2023" starttimestamp="1700507886094" timestamp="1737298" timestamp2="1737298">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="844" _type="InsertStringCommand" date="Mon Nov 20 14:47:03 EST 2023" starttimestamp="1700507886094" timestamp="1737298" timestamp2="1737298">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="846" _type="InsertStringCommand" date="Mon Nov 20 14:47:03 EST 2023" starttimestamp="1700507886094" timestamp="1737352" timestamp2="1737352">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="847" _type="InsertStringCommand" date="Mon Nov 20 14:47:03 EST 2023" starttimestamp="1700507886094" timestamp="1737352" timestamp2="1737352">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="848" _type="MoveCaretCommand" caretOffset="661" date="Mon Nov 20 14:47:03 EST 2023" docOffset="751" starttimestamp="1700507886094" timestamp="1737869" />
  <Command __id="849" _type="MoveCaretCommand" caretOffset="661" date="Mon Nov 20 14:47:03 EST 2023" docOffset="751" starttimestamp="1700507886094" timestamp="1737869" />
  <Command __id="850" _type="SelectTextCommand" caretOffset="664" date="Mon Nov 20 14:47:04 EST 2023" end="664" start="659" starttimestamp="1700507886094" timestamp="1738002" />
  <Command __id="851" _type="SelectTextCommand" caretOffset="664" date="Mon Nov 20 14:47:04 EST 2023" end="664" start="659" starttimestamp="1700507886094" timestamp="1738002" />
  <Command __id="853" _type="InsertStringCommand" date="Mon Nov 20 14:47:04 EST 2023" starttimestamp="1700507886094" timestamp="1738060" timestamp2="1738060">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="854" _type="InsertStringCommand" date="Mon Nov 20 14:47:04 EST 2023" starttimestamp="1700507886094" timestamp="1738060" timestamp2="1738060">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="856" _type="InsertStringCommand" date="Mon Nov 20 14:47:04 EST 2023" starttimestamp="1700507886094" timestamp="1738185" timestamp2="1738185">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="857" _type="InsertStringCommand" date="Mon Nov 20 14:47:04 EST 2023" starttimestamp="1700507886094" timestamp="1738185" timestamp2="1738185">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="859" _type="InsertStringCommand" date="Mon Nov 20 14:47:04 EST 2023" starttimestamp="1700507886094" timestamp="1738261" timestamp2="1738261">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="860" _type="InsertStringCommand" date="Mon Nov 20 14:47:04 EST 2023" starttimestamp="1700507886094" timestamp="1738261" timestamp2="1738261">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="862" _type="InsertStringCommand" date="Mon Nov 20 14:47:04 EST 2023" starttimestamp="1700507886094" timestamp="1738303" timestamp2="1738303">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="863" _type="InsertStringCommand" date="Mon Nov 20 14:47:04 EST 2023" starttimestamp="1700507886094" timestamp="1738303" timestamp2="1738303">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="864" _type="MoveCaretCommand" caretOffset="445" date="Mon Nov 20 14:47:04 EST 2023" docOffset="535" starttimestamp="1700507886094" timestamp="1738737" />
  <Command __id="865" _type="MoveCaretCommand" caretOffset="445" date="Mon Nov 20 14:47:04 EST 2023" docOffset="535" starttimestamp="1700507886094" timestamp="1738737" />
  <DocumentChange __id="805" _type="Insert" date="Mon Nov 20 14:46:59 EST 2023" docASTNodeCount="157" docActiveCodeLength="1028" docExpressionCount="111" docLength="1028" length="3" offset="522" repeat="3" starttimestamp="1700507886094" timestamp="1733147" timestamp2="1733275">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="818" _type="Replace" date="Mon Nov 20 14:47:01 EST 2023" docASTNodeCount="158" docActiveCodeLength="1024" docExpressionCount="112" docLength="1024" endLine="22" insertionLength="1" int_docASTNodeCount="157" int_docActiveCodeLength="1023" int_docExpressionCount="111" int_docLength="1023" length="5" offset="588" startLine="22" starttimestamp="1700507886094" timestamp="1734930">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="821" _type="Insert" date="Mon Nov 20 14:47:01 EST 2023" docASTNodeCount="158" docActiveCodeLength="1027" docExpressionCount="112" docLength="1027" length="3" offset="589" repeat="3" starttimestamp="1700507886094" timestamp="1735056" timestamp2="1735153">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="836" _type="Replace" date="Mon Nov 20 14:47:03 EST 2023" docASTNodeCount="159" docActiveCodeLength="1023" docExpressionCount="113" docLength="1023" endLine="26" insertionLength="1" int_docASTNodeCount="158" int_docActiveCodeLength="1022" int_docExpressionCount="112" int_docLength="1022" length="5" offset="699" startLine="26" starttimestamp="1700507886094" timestamp="1737110">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="839" _type="Insert" date="Mon Nov 20 14:47:03 EST 2023" docASTNodeCount="159" docActiveCodeLength="1026" docExpressionCount="113" docLength="1026" length="3" offset="700" repeat="3" starttimestamp="1700507886094" timestamp="1737218" timestamp2="1737349">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="852" _type="Replace" date="Mon Nov 20 14:47:04 EST 2023" docASTNodeCount="160" docActiveCodeLength="1022" docExpressionCount="114" docLength="1022" endLine="27" insertionLength="1" int_docASTNodeCount="159" int_docActiveCodeLength="1021" int_docExpressionCount="113" int_docLength="1021" length="5" offset="749" startLine="27" starttimestamp="1700507886094" timestamp="1738057">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="855" _type="Insert" date="Mon Nov 20 14:47:04 EST 2023" docASTNodeCount="160" docActiveCodeLength="1025" docExpressionCount="114" docLength="1025" length="3" offset="750" repeat="3" starttimestamp="1700507886094" timestamp="1738182" timestamp2="1738300">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="866" _type="MoveCaretCommand" caretOffset="239" date="Mon Nov 20 14:47:17 EST 2023" docOffset="329" starttimestamp="1700507886094" timestamp="1751155" />
  <Command __id="867" _type="MoveCaretCommand" caretOffset="239" date="Mon Nov 20 14:47:17 EST 2023" docOffset="329" starttimestamp="1700507886094" timestamp="1751156" />
  <Command __id="868" _type="SelectTextCommand" caretOffset="242" date="Mon Nov 20 14:47:17 EST 2023" end="242" start="237" starttimestamp="1700507886094" timestamp="1751306" />
  <Command __id="869" _type="SelectTextCommand" caretOffset="242" date="Mon Nov 20 14:47:17 EST 2023" end="242" start="237" starttimestamp="1700507886094" timestamp="1751306" />
  <DocumentChange __id="870" _type="Replace" date="Mon Nov 20 14:47:18 EST 2023" docASTNodeCount="161" docActiveCodeLength="1021" docExpressionCount="115" docLength="1021" endLine="13" insertionLength="1" int_docASTNodeCount="160" int_docActiveCodeLength="1020" int_docExpressionCount="114" int_docLength="1020" length="5" offset="327" startLine="13" starttimestamp="1700507886094" timestamp="1752839">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="871" _type="InsertStringCommand" date="Mon Nov 20 14:47:18 EST 2023" starttimestamp="1700507886094" timestamp="1752843" timestamp2="1752843">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="872" _type="InsertStringCommand" date="Mon Nov 20 14:47:18 EST 2023" starttimestamp="1700507886094" timestamp="1752843" timestamp2="1752843">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="874" _type="InsertStringCommand" date="Mon Nov 20 14:47:19 EST 2023" starttimestamp="1700507886094" timestamp="1752939" timestamp2="1752939">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="875" _type="InsertStringCommand" date="Mon Nov 20 14:47:19 EST 2023" starttimestamp="1700507886094" timestamp="1752939" timestamp2="1752939">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="877" _type="InsertStringCommand" date="Mon Nov 20 14:47:19 EST 2023" starttimestamp="1700507886094" timestamp="1752986" timestamp2="1752986">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="878" _type="InsertStringCommand" date="Mon Nov 20 14:47:19 EST 2023" starttimestamp="1700507886094" timestamp="1752986" timestamp2="1752986">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="880" _type="InsertStringCommand" date="Mon Nov 20 14:47:19 EST 2023" starttimestamp="1700507886094" timestamp="1753027" timestamp2="1753027">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="881" _type="InsertStringCommand" date="Mon Nov 20 14:47:19 EST 2023" starttimestamp="1700507886094" timestamp="1753027" timestamp2="1753027">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="882" _type="MoveCaretCommand" caretOffset="274" date="Mon Nov 20 14:47:20 EST 2023" docOffset="364" starttimestamp="1700507886094" timestamp="1754105" />
  <Command __id="883" _type="MoveCaretCommand" caretOffset="274" date="Mon Nov 20 14:47:20 EST 2023" docOffset="364" starttimestamp="1700507886094" timestamp="1754106" />
  <Command __id="884" _type="SelectTextCommand" caretOffset="277" date="Mon Nov 20 14:47:20 EST 2023" end="277" start="272" starttimestamp="1700507886094" timestamp="1754238" />
  <Command __id="885" _type="SelectTextCommand" caretOffset="277" date="Mon Nov 20 14:47:20 EST 2023" end="277" start="272" starttimestamp="1700507886094" timestamp="1754238" />
  <Command __id="887" _type="InsertStringCommand" date="Mon Nov 20 14:47:20 EST 2023" starttimestamp="1700507886094" timestamp="1754361" timestamp2="1754361">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="888" _type="InsertStringCommand" date="Mon Nov 20 14:47:20 EST 2023" starttimestamp="1700507886094" timestamp="1754361" timestamp2="1754361">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="890" _type="InsertStringCommand" date="Mon Nov 20 14:47:20 EST 2023" starttimestamp="1700507886094" timestamp="1754485" timestamp2="1754485">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="891" _type="InsertStringCommand" date="Mon Nov 20 14:47:20 EST 2023" starttimestamp="1700507886094" timestamp="1754485" timestamp2="1754485">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="893" _type="InsertStringCommand" date="Mon Nov 20 14:47:20 EST 2023" starttimestamp="1700507886094" timestamp="1754545" timestamp2="1754545">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="894" _type="InsertStringCommand" date="Mon Nov 20 14:47:20 EST 2023" starttimestamp="1700507886094" timestamp="1754545" timestamp2="1754545">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="896" _type="InsertStringCommand" date="Mon Nov 20 14:47:20 EST 2023" starttimestamp="1700507886094" timestamp="1754596" timestamp2="1754596">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="897" _type="InsertStringCommand" date="Mon Nov 20 14:47:20 EST 2023" starttimestamp="1700507886094" timestamp="1754596" timestamp2="1754596">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="898" _type="MoveCaretCommand" caretOffset="323" date="Mon Nov 20 14:47:21 EST 2023" docOffset="413" starttimestamp="1700507886094" timestamp="1754972" />
  <Command __id="899" _type="MoveCaretCommand" caretOffset="323" date="Mon Nov 20 14:47:21 EST 2023" docOffset="413" starttimestamp="1700507886094" timestamp="1754972" />
  <DocumentChange __id="873" _type="Insert" date="Mon Nov 20 14:47:19 EST 2023" docASTNodeCount="161" docActiveCodeLength="1024" docExpressionCount="115" docLength="1024" length="3" offset="328" repeat="3" starttimestamp="1700507886094" timestamp="1752937" timestamp2="1753026">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="886" _type="Replace" date="Mon Nov 20 14:47:20 EST 2023" docASTNodeCount="162" docActiveCodeLength="1020" docExpressionCount="116" docLength="1020" endLine="13" insertionLength="1" int_docASTNodeCount="161" int_docActiveCodeLength="1019" int_docExpressionCount="115" int_docLength="1019" length="5" offset="362" startLine="13" starttimestamp="1700507886094" timestamp="1754357">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="889" _type="Insert" date="Mon Nov 20 14:47:20 EST 2023" docASTNodeCount="162" docActiveCodeLength="1023" docExpressionCount="116" docLength="1023" length="3" offset="363" repeat="3" starttimestamp="1700507886094" timestamp="1754482" timestamp2="1754594">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="900" _type="MoveCaretCommand" caretOffset="337" date="Mon Nov 20 14:47:23 EST 2023" docOffset="427" starttimestamp="1700507886094" timestamp="1757590" />
  <Command __id="901" _type="MoveCaretCommand" caretOffset="337" date="Mon Nov 20 14:47:23 EST 2023" docOffset="427" starttimestamp="1700507886094" timestamp="1757590" />
  <Command __id="902" _type="SelectTextCommand" caretOffset="339" date="Mon Nov 20 14:47:23 EST 2023" end="339" start="334" starttimestamp="1700507886094" timestamp="1757739" />
  <Command __id="903" _type="SelectTextCommand" caretOffset="339" date="Mon Nov 20 14:47:23 EST 2023" end="339" start="334" starttimestamp="1700507886094" timestamp="1757739" />
  <DocumentChange __id="904" _type="Replace" date="Mon Nov 20 14:47:25 EST 2023" docASTNodeCount="163" docActiveCodeLength="1019" docExpressionCount="117" docLength="1019" endLine="16" insertionLength="1" int_docASTNodeCount="162" int_docActiveCodeLength="1018" int_docExpressionCount="116" int_docLength="1018" length="5" offset="424" startLine="16" starttimestamp="1700507886094" timestamp="1759120">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="905" _type="InsertStringCommand" date="Mon Nov 20 14:47:25 EST 2023" starttimestamp="1700507886094" timestamp="1759123" timestamp2="1759123">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="906" _type="InsertStringCommand" date="Mon Nov 20 14:47:25 EST 2023" starttimestamp="1700507886094" timestamp="1759123" timestamp2="1759123">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="908" _type="InsertStringCommand" date="Mon Nov 20 14:47:26 EST 2023" starttimestamp="1700507886094" timestamp="1760211" timestamp2="1760211">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="909" _type="InsertStringCommand" date="Mon Nov 20 14:47:26 EST 2023" starttimestamp="1700507886094" timestamp="1760211" timestamp2="1760211">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="911" _type="InsertStringCommand" date="Mon Nov 20 14:47:26 EST 2023" starttimestamp="1700507886094" timestamp="1760241" timestamp2="1760241">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="912" _type="InsertStringCommand" date="Mon Nov 20 14:47:26 EST 2023" starttimestamp="1700507886094" timestamp="1760241" timestamp2="1760241">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="914" _type="InsertStringCommand" date="Mon Nov 20 14:47:26 EST 2023" starttimestamp="1700507886094" timestamp="1760326" timestamp2="1760326">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="915" _type="InsertStringCommand" date="Mon Nov 20 14:47:26 EST 2023" starttimestamp="1700507886094" timestamp="1760326" timestamp2="1760326">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="916" _type="MoveCaretCommand" caretOffset="313" date="Mon Nov 20 14:47:26 EST 2023" docOffset="403" starttimestamp="1700507886094" timestamp="1760785" />
  <Command __id="917" _type="MoveCaretCommand" caretOffset="313" date="Mon Nov 20 14:47:26 EST 2023" docOffset="403" starttimestamp="1700507886094" timestamp="1760785" />
  <Command __id="918" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 14:47:32 EST 2023" starttimestamp="1700507886094" timestamp="1766588" />
  <Command __id="919" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:47:32 EST 2023" starttimestamp="1700507886094" timestamp="1766689" />
  <Command __id="920" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:47:32 EST 2023" starttimestamp="1700507886094" timestamp="1766698" />
  <Command __id="921" _type="MoveCaretCommand" caretOffset="580" date="Mon Nov 20 14:47:33 EST 2023" docOffset="670" starttimestamp="1700507886094" timestamp="1767125" />
  <Command __id="922" _type="MoveCaretCommand" caretOffset="580" date="Mon Nov 20 14:47:33 EST 2023" docOffset="670" starttimestamp="1700507886094" timestamp="1767125" />
  <Command __id="923" _type="MoveCaretCommand" caretOffset="549" date="Mon Nov 20 14:47:33 EST 2023" docOffset="639" starttimestamp="1700507886094" timestamp="1767571" />
  <Command __id="924" _type="MoveCaretCommand" caretOffset="549" date="Mon Nov 20 14:47:33 EST 2023" docOffset="639" starttimestamp="1700507886094" timestamp="1767571" />
  <Command __id="925" _type="MoveCaretCommand" caretOffset="549" date="Mon Nov 20 14:47:34 EST 2023" docOffset="639" starttimestamp="1700507886094" timestamp="1768004" />
  <Command __id="926" _type="MoveCaretCommand" caretOffset="549" date="Mon Nov 20 14:47:34 EST 2023" docOffset="639" starttimestamp="1700507886094" timestamp="1768004" />
  <Command __id="927" _type="MoveCaretCommand" caretOffset="549" date="Mon Nov 20 14:47:34 EST 2023" docOffset="639" starttimestamp="1700507886094" timestamp="1768511" />
  <Command __id="928" _type="MoveCaretCommand" caretOffset="549" date="Mon Nov 20 14:47:34 EST 2023" docOffset="639" starttimestamp="1700507886094" timestamp="1768511" />
  <Command __id="929" _type="MoveCaretCommand" caretOffset="535" date="Mon Nov 20 14:47:35 EST 2023" docOffset="625" starttimestamp="1700507886094" timestamp="1769036" />
  <Command __id="930" _type="MoveCaretCommand" caretOffset="535" date="Mon Nov 20 14:47:35 EST 2023" docOffset="625" starttimestamp="1700507886094" timestamp="1769037" />
  <Command __id="931" _type="MoveCaretCommand" caretOffset="412" date="Mon Nov 20 14:47:35 EST 2023" docOffset="502" starttimestamp="1700507886094" timestamp="1769487" />
  <Command __id="932" _type="MoveCaretCommand" caretOffset="412" date="Mon Nov 20 14:47:35 EST 2023" docOffset="502" starttimestamp="1700507886094" timestamp="1769488" />
  <Command __id="933" _type="ShellCommand" date="Mon Nov 20 14:47:39 EST 2023" starttimestamp="1700507886094" timestamp="1773761" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="934" _type="ShellCommand" date="Mon Nov 20 14:48:23 EST 2023" starttimestamp="1700507886094" timestamp="1817872" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="935" _type="ShellCommand" date="Mon Nov 20 14:48:33 EST 2023" starttimestamp="1700507886094" timestamp="1827871" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="936" _type="ShellCommand" date="Mon Nov 20 14:48:34 EST 2023" starttimestamp="1700507886094" timestamp="1828409" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="937" _type="ShellCommand" date="Mon Nov 20 14:48:34 EST 2023" starttimestamp="1700507886094" timestamp="1828698" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="938" _type="ShellCommand" date="Mon Nov 20 14:48:36 EST 2023" starttimestamp="1700507886094" timestamp="1830781" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="939" _type="ShellCommand" date="Mon Nov 20 14:48:38 EST 2023" starttimestamp="1700507886094" timestamp="1832410" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="940" _type="ShellCommand" date="Mon Nov 20 14:48:39 EST 2023" starttimestamp="1700507886094" timestamp="1832990" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="941" _type="ShellCommand" date="Mon Nov 20 14:48:39 EST 2023" starttimestamp="1700507886094" timestamp="1833502" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="942" _type="ShellCommand" date="Mon Nov 20 14:48:40 EST 2023" starttimestamp="1700507886094" timestamp="1834163" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="907" _type="Insert" date="Mon Nov 20 14:47:26 EST 2023" docASTNodeCount="163" docActiveCodeLength="1022" docExpressionCount="117" docLength="1022" length="3" offset="425" repeat="3" starttimestamp="1700507886094" timestamp="1760209" timestamp2="1760325">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="943" _type="ShellCommand" date="Mon Nov 20 14:48:42 EST 2023" starttimestamp="1700507886094" timestamp="1836768" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="944" _type="ShellCommand" date="Mon Nov 20 14:48:43 EST 2023" starttimestamp="1700507886094" timestamp="1837391" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="945" _type="Insert" date="Mon Nov 20 14:48:44 EST 2023" docASTNodeCount="167" docActiveCodeLength="1037" docExpressionCount="120" docLength="1037" length="15" offset="502" repeat="12" starttimestamp="1700507886094" timestamp="1838149" timestamp2="1841923">
    <text><![CDATA[
		if(this.get)]]></text>
  </DocumentChange>
  <Command __id="946" _type="InsertStringCommand" date="Mon Nov 20 14:48:44 EST 2023" starttimestamp="1700507886094" timestamp="1838154" timestamp2="1838154">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="947" _type="InsertStringCommand" date="Mon Nov 20 14:48:44 EST 2023" starttimestamp="1700507886094" timestamp="1838154" timestamp2="1838154">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="949" _type="InsertStringCommand" date="Mon Nov 20 14:48:44 EST 2023" starttimestamp="1700507886094" timestamp="1838368" timestamp2="1838368">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="950" _type="InsertStringCommand" date="Mon Nov 20 14:48:44 EST 2023" starttimestamp="1700507886094" timestamp="1838368" timestamp2="1838368">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="952" _type="InsertStringCommand" date="Mon Nov 20 14:48:44 EST 2023" starttimestamp="1700507886094" timestamp="1838444" timestamp2="1838444">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="953" _type="InsertStringCommand" date="Mon Nov 20 14:48:44 EST 2023" starttimestamp="1700507886094" timestamp="1838444" timestamp2="1838444">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="955" _type="InsertStringCommand" date="Mon Nov 20 14:48:44 EST 2023" starttimestamp="1700507886094" timestamp="1838575" timestamp2="1838575">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="956" _type="InsertStringCommand" date="Mon Nov 20 14:48:44 EST 2023" starttimestamp="1700507886094" timestamp="1838575" timestamp2="1838575">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="958" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840126" timestamp2="1840126">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="959" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840127" timestamp2="1840127">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="961" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840210" timestamp2="1840210">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="962" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840211" timestamp2="1840211">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="964" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840267" timestamp2="1840267">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="965" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840267" timestamp2="1840267">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="967" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840366" timestamp2="1840366">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="968" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840366" timestamp2="1840366">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="970" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840476" timestamp2="1840476">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="971" _type="InsertStringCommand" date="Mon Nov 20 14:48:46 EST 2023" starttimestamp="1700507886094" timestamp="1840476" timestamp2="1840476">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="972" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:48:46 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1840484" />
  <DocumentChange __id="976" _type="Delete" date="Mon Nov 20 14:48:48 EST 2023" docASTNodeCount="163" docActiveCodeLength="1025" docExpressionCount="117" docLength="1025" endLine="21" length="12" offset="505" repeat="12" startLine="21" starttimestamp="1700507886094" timestamp="1842285" timestamp2="1844044">
    <text><![CDATA[if(this.get)]]></text>
  </DocumentChange>
  <Command __id="988" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:48:51 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1845352" />
  <Command __id="989" _type="MoveCaretCommand" caretOffset="415" date="Mon Nov 20 14:48:51 EST 2023" docOffset="505" starttimestamp="1700507886094" timestamp="1845427" />
  <Command __id="990" _type="MoveCaretCommand" caretOffset="415" date="Mon Nov 20 14:48:51 EST 2023" docOffset="505" starttimestamp="1700507886094" timestamp="1845427" />
  <DocumentChange __id="991" _type="Insert" date="Mon Nov 20 14:48:52 EST 2023" docASTNodeCount="167" docActiveCodeLength="1037" docExpressionCount="120" docLength="1037" length="12" offset="505" repeat="11" starttimestamp="1700507886094" timestamp="1846886" timestamp2="1850404">
    <text><![CDATA[if(this.isA)]]></text>
  </DocumentChange>
  <Command __id="992" _type="InsertStringCommand" date="Mon Nov 20 14:48:52 EST 2023" starttimestamp="1700507886094" timestamp="1846889" timestamp2="1846889">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="993" _type="InsertStringCommand" date="Mon Nov 20 14:48:52 EST 2023" starttimestamp="1700507886094" timestamp="1846889" timestamp2="1846889">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="995" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1846924" timestamp2="1846924">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="996" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1846924" timestamp2="1846924">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="998" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847083" timestamp2="1847083">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="999" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847083" timestamp2="1847083">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1001" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847502" timestamp2="1847502">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1002" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847502" timestamp2="1847502">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1004" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847574" timestamp2="1847574">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1005" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847575" timestamp2="1847575">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1007" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847620" timestamp2="1847620">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1008" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847620" timestamp2="1847620">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1010" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847669" timestamp2="1847669">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1011" _type="InsertStringCommand" date="Mon Nov 20 14:48:53 EST 2023" starttimestamp="1700507886094" timestamp="1847669" timestamp2="1847669">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1013" _type="InsertStringCommand" date="Mon Nov 20 14:48:55 EST 2023" starttimestamp="1700507886094" timestamp="1849257" timestamp2="1849257">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1014" _type="InsertStringCommand" date="Mon Nov 20 14:48:55 EST 2023" starttimestamp="1700507886094" timestamp="1849257" timestamp2="1849257">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1015" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:48:55 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1849264" />
  <Command __id="1019" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:48:56 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1850649" />
  <Command __id="1021" _type="InsertStringCommand" date="Mon Nov 20 14:48:56 EST 2023" starttimestamp="1700507886094" timestamp="1850656" timestamp2="1850656">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1022" _type="InsertStringCommand" date="Mon Nov 20 14:48:56 EST 2023" starttimestamp="1700507886094" timestamp="1850656" timestamp2="1850656">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1020" _type="Replace" date="Mon Nov 20 14:48:56 EST 2023" docASTNodeCount="167" docActiveCodeLength="1042" docExpressionCount="120" docLength="1042" endLine="21" insertionLength="8" int_docASTNodeCount="167" int_docActiveCodeLength="1034" int_docExpressionCount="120" int_docLength="1034" length="3" offset="513" startLine="21" starttimestamp="1700507886094" timestamp="1850652">
    <deletedText><![CDATA[isA]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <Command __id="1023" _type="MoveCaretCommand" caretOffset="432" date="Mon Nov 20 14:48:58 EST 2023" docOffset="522" starttimestamp="1700507886094" timestamp="1852646" />
  <Command __id="1024" _type="MoveCaretCommand" caretOffset="432" date="Mon Nov 20 14:48:58 EST 2023" docOffset="522" starttimestamp="1700507886094" timestamp="1852646" />
  <DocumentChange __id="1025" _type="Insert" date="Mon Nov 20 14:48:59 EST 2023" docASTNodeCount="170" docActiveCodeLength="1062" docExpressionCount="121" docLength="1062" length="20" offset="522" repeat="12" starttimestamp="1700507886094" timestamp="1853266" timestamp2="1856787">
    <text><![CDATA[ {
			return get
		}]]></text>
  </DocumentChange>
  <Command __id="1026" _type="InsertStringCommand" date="Mon Nov 20 14:48:59 EST 2023" starttimestamp="1700507886094" timestamp="1853267" timestamp2="1853267">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1027" _type="InsertStringCommand" date="Mon Nov 20 14:48:59 EST 2023" starttimestamp="1700507886094" timestamp="1853267" timestamp2="1853267">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1029" _type="InsertStringCommand" date="Mon Nov 20 14:48:59 EST 2023" starttimestamp="1700507886094" timestamp="1853426" timestamp2="1853426">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1030" _type="InsertStringCommand" date="Mon Nov 20 14:48:59 EST 2023" starttimestamp="1700507886094" timestamp="1853426" timestamp2="1853426">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1032" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855059" timestamp2="1855059">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1033" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855059" timestamp2="1855059">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1035" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855122" timestamp2="1855122">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1036" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855122" timestamp2="1855122">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1038" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855268" timestamp2="1855268">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1039" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855268" timestamp2="1855268">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1041" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855377" timestamp2="1855377">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1042" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855377" timestamp2="1855377">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1044" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855455" timestamp2="1855455">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1045" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855455" timestamp2="1855455">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1047" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855537" timestamp2="1855537">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1048" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855537" timestamp2="1855537">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1050" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855663" timestamp2="1855663">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1051" _type="InsertStringCommand" date="Mon Nov 20 14:49:01 EST 2023" starttimestamp="1700507886094" timestamp="1855663" timestamp2="1855663">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1053" _type="InsertStringCommand" date="Mon Nov 20 14:49:02 EST 2023" starttimestamp="1700507886094" timestamp="1856626" timestamp2="1856626">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1054" _type="InsertStringCommand" date="Mon Nov 20 14:49:02 EST 2023" starttimestamp="1700507886094" timestamp="1856626" timestamp2="1856626">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1056" _type="InsertStringCommand" date="Mon Nov 20 14:49:02 EST 2023" starttimestamp="1700507886094" timestamp="1856681" timestamp2="1856681">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1057" _type="InsertStringCommand" date="Mon Nov 20 14:49:02 EST 2023" starttimestamp="1700507886094" timestamp="1856681" timestamp2="1856681">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1059" _type="InsertStringCommand" date="Mon Nov 20 14:49:02 EST 2023" starttimestamp="1700507886094" timestamp="1856790" timestamp2="1856790">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1060" _type="InsertStringCommand" date="Mon Nov 20 14:49:02 EST 2023" starttimestamp="1700507886094" timestamp="1856790" timestamp2="1856790">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="1061" _type="Delete" date="Mon Nov 20 14:49:03 EST 2023" docASTNodeCount="169" docActiveCodeLength="1058" docExpressionCount="120" docLength="1058" endLine="22" length="4" offset="534" repeat="4" startLine="22" starttimestamp="1700507886094" timestamp="1856971" timestamp2="1857354">
    <text><![CDATA[ get]]></text>
  </DocumentChange>
  <Command __id="1062" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1856974" />
  <Command __id="1063" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1856974" />
  <Command __id="1065" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1857070" />
  <Command __id="1066" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1857070" />
  <Command __id="1068" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1857203" />
  <Command __id="1069" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1857203" />
  <Command __id="1071" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1857357" />
  <Command __id="1072" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1857357" />
  <DocumentChange __id="1073" _type="Insert" date="Mon Nov 20 14:49:03 EST 2023" docASTNodeCount="169" docActiveCodeLength="1059" docExpressionCount="120" docLength="1059" length="1" offset="534" starttimestamp="1700507886094" timestamp="1857865">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="1074" _type="InsertStringCommand" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1857868" timestamp2="1857868">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1075" _type="InsertStringCommand" date="Mon Nov 20 14:49:03 EST 2023" starttimestamp="1700507886094" timestamp="1857868" timestamp2="1857868">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="1076" _type="Delete" date="Mon Nov 20 14:49:04 EST 2023" docASTNodeCount="169" docActiveCodeLength="1058" docExpressionCount="120" docLength="1058" endLine="22" length="1" offset="534" startLine="22" starttimestamp="1700507886094" timestamp="1858264">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="1077" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:04 EST 2023" starttimestamp="1700507886094" timestamp="1858267" />
  <Command __id="1078" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:04 EST 2023" starttimestamp="1700507886094" timestamp="1858267" />
  <DocumentChange __id="1079" _type="Insert" date="Mon Nov 20 14:49:04 EST 2023" docASTNodeCount="169" docActiveCodeLength="1059" docExpressionCount="120" docLength="1059" length="1" offset="534" starttimestamp="1700507886094" timestamp="1858633">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="1080" _type="InsertStringCommand" date="Mon Nov 20 14:49:04 EST 2023" starttimestamp="1700507886094" timestamp="1858636" timestamp2="1858636">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1081" _type="InsertStringCommand" date="Mon Nov 20 14:49:04 EST 2023" starttimestamp="1700507886094" timestamp="1858636" timestamp2="1858636">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="1082" _type="Insert" date="Mon Nov 20 14:49:06 EST 2023" docASTNodeCount="170" docActiveCodeLength="1065" docExpressionCount="121" docLength="1065" length="6" offset="535" repeat="6" starttimestamp="1700507886094" timestamp="1860677" timestamp2="1863538">
    <text><![CDATA["(" _ ]]></text>
  </DocumentChange>
  <Command __id="1083" _type="InsertStringCommand" date="Mon Nov 20 14:49:06 EST 2023" starttimestamp="1700507886094" timestamp="1860680" timestamp2="1860680">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1084" _type="InsertStringCommand" date="Mon Nov 20 14:49:06 EST 2023" starttimestamp="1700507886094" timestamp="1860680" timestamp2="1860680">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1086" _type="InsertStringCommand" date="Mon Nov 20 14:49:07 EST 2023" starttimestamp="1700507886094" timestamp="1861601" timestamp2="1861601">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1087" _type="InsertStringCommand" date="Mon Nov 20 14:49:07 EST 2023" starttimestamp="1700507886094" timestamp="1861601" timestamp2="1861601">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1088" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 14:49:07 EST 2023" starttimestamp="1700507886094" timestamp="1861889" />
  <Command __id="1089" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 14:49:07 EST 2023" starttimestamp="1700507886094" timestamp="1861889" />
  <Command __id="1091" _type="InsertStringCommand" date="Mon Nov 20 14:49:08 EST 2023" starttimestamp="1700507886094" timestamp="1862592" timestamp2="1862592">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1092" _type="InsertStringCommand" date="Mon Nov 20 14:49:08 EST 2023" starttimestamp="1700507886094" timestamp="1862592" timestamp2="1862592">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1093" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 14:49:08 EST 2023" starttimestamp="1700507886094" timestamp="1862810" />
  <Command __id="1094" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 14:49:08 EST 2023" starttimestamp="1700507886094" timestamp="1862810" />
  <Command __id="1096" _type="InsertStringCommand" date="Mon Nov 20 14:49:09 EST 2023" starttimestamp="1700507886094" timestamp="1863063" timestamp2="1863063">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1097" _type="InsertStringCommand" date="Mon Nov 20 14:49:09 EST 2023" starttimestamp="1700507886094" timestamp="1863063" timestamp2="1863063">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1099" _type="InsertStringCommand" date="Mon Nov 20 14:49:09 EST 2023" starttimestamp="1700507886094" timestamp="1863413" timestamp2="1863413">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="1100" _type="InsertStringCommand" date="Mon Nov 20 14:49:09 EST 2023" starttimestamp="1700507886094" timestamp="1863413" timestamp2="1863413">
    <data><![CDATA[_]]></data>
  </Command>
  <Command __id="1102" _type="InsertStringCommand" date="Mon Nov 20 14:49:09 EST 2023" starttimestamp="1700507886094" timestamp="1863541" timestamp2="1863541">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1103" _type="InsertStringCommand" date="Mon Nov 20 14:49:09 EST 2023" starttimestamp="1700507886094" timestamp="1863541" timestamp2="1863541">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="1104" _type="Delete" date="Mon Nov 20 14:49:09 EST 2023" docASTNodeCount="170" docActiveCodeLength="1063" docExpressionCount="121" docLength="1063" endLine="22" length="2" offset="539" repeat="2" startLine="22" starttimestamp="1700507886094" timestamp="1863846" timestamp2="1863970">
    <text><![CDATA[_ ]]></text>
  </DocumentChange>
  <Command __id="1105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:09 EST 2023" starttimestamp="1700507886094" timestamp="1863849" />
  <Command __id="1106" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:09 EST 2023" starttimestamp="1700507886094" timestamp="1863850" />
  <Command __id="1108" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1863973" />
  <Command __id="1109" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1863973" />
  <DocumentChange __id="1110" _type="Insert" date="Mon Nov 20 14:49:10 EST 2023" docASTNodeCount="174" docActiveCodeLength="1073" docExpressionCount="125" docLength="1073" length="10" offset="539" repeat="10" starttimestamp="1700507886094" timestamp="1864159" timestamp2="1865392">
    <text><![CDATA[+ this.get]]></text>
  </DocumentChange>
  <Command __id="1111" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864161" timestamp2="1864161">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="1112" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864161" timestamp2="1864161">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="1114" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864272" timestamp2="1864272">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1115" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864273" timestamp2="1864273">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1117" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864632" timestamp2="1864632">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1118" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864633" timestamp2="1864633">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1120" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864719" timestamp2="1864719">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1121" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864719" timestamp2="1864719">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1123" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864751" timestamp2="1864751">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1124" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864751" timestamp2="1864751">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1126" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864848" timestamp2="1864848">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1127" _type="InsertStringCommand" date="Mon Nov 20 14:49:10 EST 2023" starttimestamp="1700507886094" timestamp="1864848" timestamp2="1864848">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1129" _type="InsertStringCommand" date="Mon Nov 20 14:49:11 EST 2023" starttimestamp="1700507886094" timestamp="1864949" timestamp2="1864949">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1130" _type="InsertStringCommand" date="Mon Nov 20 14:49:11 EST 2023" starttimestamp="1700507886094" timestamp="1864949" timestamp2="1864949">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1131" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:49:11 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1864956" />
  <DocumentChange __id="1135" _type="Delete" date="Mon Nov 20 14:49:12 EST 2023" docASTNodeCount="172" docActiveCodeLength="1069" docExpressionCount="123" docLength="1069" endLine="22" length="4" offset="545" repeat="4" startLine="22" starttimestamp="1700507886094" timestamp="1866572" timestamp2="1866932">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <DocumentChange __id="1139" _type="Insert" date="Mon Nov 20 14:49:13 EST 2023" docASTNodeCount="172" docActiveCodeLength="1070" docExpressionCount="123" docLength="1070" length="1" offset="545" starttimestamp="1700507886094" timestamp="1867775">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="1140" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:49:13 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1867786" />
  <Command __id="1141" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:49:13 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1867787" />
  <DocumentChange __id="1142" _type="Delete" date="Mon Nov 20 14:49:14 EST 2023" docASTNodeCount="170" docActiveCodeLength="1065" docExpressionCount="121" docLength="1065" endLine="22" length="5" offset="541" repeat="5" startLine="22" starttimestamp="1700507886094" timestamp="1868515" timestamp2="1869226">
    <text><![CDATA[this.]]></text>
  </DocumentChange>
  <DocumentChange __id="1147" _type="Insert" date="Mon Nov 20 14:49:15 EST 2023" docASTNodeCount="174" docActiveCodeLength="1073" docExpressionCount="125" docLength="1073" length="8" offset="541" repeat="8" starttimestamp="1700507886094" timestamp="1869879" timestamp2="1870852">
    <text><![CDATA[this.toS]]></text>
  </DocumentChange>
  <Command __id="1150" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:49:16 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1870131" />
  <Command __id="1152" _type="InsertStringCommand" date="Mon Nov 20 14:49:16 EST 2023" starttimestamp="1700507886094" timestamp="1870133" timestamp2="1870133">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1153" _type="InsertStringCommand" date="Mon Nov 20 14:49:16 EST 2023" starttimestamp="1700507886094" timestamp="1870133" timestamp2="1870133">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1155" _type="InsertStringCommand" date="Mon Nov 20 14:49:16 EST 2023" starttimestamp="1700507886094" timestamp="1870220" timestamp2="1870220">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1156" _type="InsertStringCommand" date="Mon Nov 20 14:49:16 EST 2023" starttimestamp="1700507886094" timestamp="1870220" timestamp2="1870220">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1157" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:49:16 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1870223" />
  <DocumentChange __id="1161" _type="Delete" date="Mon Nov 20 14:49:22 EST 2023" docASTNodeCount="172" docActiveCodeLength="1069" docExpressionCount="123" docLength="1069" endLine="22" length="4" offset="545" repeat="4" startLine="22" starttimestamp="1700507886094" timestamp="1875911" timestamp2="1876591">
    <text><![CDATA[.toS]]></text>
  </DocumentChange>
  <DocumentChange __id="1165" _type="Insert" date="Mon Nov 20 14:49:23 EST 2023" docASTNodeCount="174" docActiveCodeLength="1073" docExpressionCount="125" docLength="1073" length="4" offset="545" repeat="4" starttimestamp="1700507886094" timestamp="1877004" timestamp2="1877661">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <Command __id="1166" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:49:23 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1877017" />
  <Command __id="1167" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:49:23 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1877017" />
  <Command __id="1180" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:49:26 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1880470" />
  <Command __id="1181" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:49:26 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1880470" />
  <Command __id="1182" _type="ShellCommand" date="Mon Nov 20 14:49:26 EST 2023" starttimestamp="1700507886094" timestamp="1880700" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1183" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:49:27 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1881375" />
  <Command __id="1184" _type="ShellCommand" date="Mon Nov 20 14:49:30 EST 2023" starttimestamp="1700507886094" timestamp="1884520" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1185" _type="ShellCommand" date="Mon Nov 20 14:49:31 EST 2023" starttimestamp="1700507886094" timestamp="1885466" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1186" _type="ShellCommand" date="Mon Nov 20 14:49:33 EST 2023" starttimestamp="1700507886094" timestamp="1887246" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1187" _type="SelectTextCommand" caretOffset="415" date="Mon Nov 20 14:49:36 EST 2023" end="460" start="415" starttimestamp="1700507886094" timestamp="1890813" />
  <Command __id="1188" _type="SelectTextCommand" caretOffset="415" date="Mon Nov 20 14:49:36 EST 2023" end="460" start="415" starttimestamp="1700507886094" timestamp="1890813" />
  <Command __id="1189" _type="ShellCommand" date="Mon Nov 20 14:49:37 EST 2023" starttimestamp="1700507886094" timestamp="1891748" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1190" _type="ShellCommand" date="Mon Nov 20 14:49:43 EST 2023" starttimestamp="1700507886094" timestamp="1897498" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1191" _type="ShellCommand" date="Mon Nov 20 14:49:45 EST 2023" starttimestamp="1700507886094" timestamp="1899366" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1192" _type="ShellCommand" date="Mon Nov 20 14:49:46 EST 2023" starttimestamp="1700507886094" timestamp="1899947" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1193" _type="ShellCommand" date="Mon Nov 20 14:49:51 EST 2023" starttimestamp="1700507886094" timestamp="1905069" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1194" _type="ShellCommand" date="Mon Nov 20 14:49:51 EST 2023" starttimestamp="1700507886094" timestamp="1905667" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1195" _type="MoveCaretCommand" caretOffset="447" date="Mon Nov 20 14:49:53 EST 2023" docOffset="537" starttimestamp="1700507886094" timestamp="1907408" />
  <Command __id="1196" _type="MoveCaretCommand" caretOffset="447" date="Mon Nov 20 14:49:53 EST 2023" docOffset="537" starttimestamp="1700507886094" timestamp="1907408" />
  <Command __id="1197" _type="SelectTextCommand" caretOffset="431" date="Mon Nov 20 14:49:55 EST 2023" end="431" start="423" starttimestamp="1700507886094" timestamp="1909599" />
  <Command __id="1198" _type="SelectTextCommand" caretOffset="431" date="Mon Nov 20 14:49:55 EST 2023" end="431" start="423" starttimestamp="1700507886094" timestamp="1909600" />
  <Command __id="1200" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:55 EST 2023" starttimestamp="1700507886094" timestamp="1909882" />
  <Command __id="1201" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:55 EST 2023" starttimestamp="1700507886094" timestamp="1909882" />
  <Command __id="1203" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:56 EST 2023" starttimestamp="1700507886094" timestamp="1910374" />
  <Command __id="1204" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:56 EST 2023" starttimestamp="1700507886094" timestamp="1910374" />
  <Command __id="1206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:56 EST 2023" starttimestamp="1700507886094" timestamp="1910506" />
  <Command __id="1207" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:49:56 EST 2023" starttimestamp="1700507886094" timestamp="1910506" />
  <Command __id="1209" _type="InsertStringCommand" date="Mon Nov 20 14:49:57 EST 2023" starttimestamp="1700507886094" timestamp="1911137" timestamp2="1911137">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1210" _type="InsertStringCommand" date="Mon Nov 20 14:49:57 EST 2023" starttimestamp="1700507886094" timestamp="1911137" timestamp2="1911137">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1212" _type="InsertStringCommand" date="Mon Nov 20 14:49:57 EST 2023" starttimestamp="1700507886094" timestamp="1911303" timestamp2="1911303">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1213" _type="InsertStringCommand" date="Mon Nov 20 14:49:57 EST 2023" starttimestamp="1700507886094" timestamp="1911303" timestamp2="1911303">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1214" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:49:57 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1911311" />
  <Command __id="1219" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:49:58 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1912710" />
  <Command __id="1221" _type="InsertStringCommand" date="Mon Nov 20 14:49:58 EST 2023" starttimestamp="1700507886094" timestamp="1912718" timestamp2="1912718">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1222" _type="InsertStringCommand" date="Mon Nov 20 14:49:58 EST 2023" starttimestamp="1700507886094" timestamp="1912718" timestamp2="1912718">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1224" _type="InsertStringCommand" date="Mon Nov 20 14:49:59 EST 2023" starttimestamp="1700507886094" timestamp="1913247" timestamp2="1913247">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1225" _type="InsertStringCommand" date="Mon Nov 20 14:49:59 EST 2023" starttimestamp="1700507886094" timestamp="1913247" timestamp2="1913247">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1226" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:49:59 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1913252" />
  <Command __id="1229" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:50:00 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1914402" />
  <Command __id="1231" _type="InsertStringCommand" date="Mon Nov 20 14:50:00 EST 2023" starttimestamp="1700507886094" timestamp="1914411" timestamp2="1914411">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1232" _type="InsertStringCommand" date="Mon Nov 20 14:50:00 EST 2023" starttimestamp="1700507886094" timestamp="1914412" timestamp2="1914412">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1233" _type="SelectTextCommand" caretOffset="455" date="Mon Nov 20 14:50:06 EST 2023" end="466" start="455" starttimestamp="1700507886094" timestamp="1920666" />
  <Command __id="1234" _type="SelectTextCommand" caretOffset="455" date="Mon Nov 20 14:50:06 EST 2023" end="466" start="455" starttimestamp="1700507886094" timestamp="1920667" />
  <Command __id="1235" _type="MoveCaretCommand" caretOffset="466" date="Mon Nov 20 14:50:08 EST 2023" docOffset="556" starttimestamp="1700507886094" timestamp="1922715" />
  <Command __id="1236" _type="MoveCaretCommand" caretOffset="466" date="Mon Nov 20 14:50:08 EST 2023" docOffset="556" starttimestamp="1700507886094" timestamp="1922715" />
  <Command __id="1238" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:09 EST 2023" starttimestamp="1700507886094" timestamp="1923304" />
  <Command __id="1239" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:09 EST 2023" starttimestamp="1700507886094" timestamp="1923304" />
  <Command __id="1241" _type="InsertStringCommand" date="Mon Nov 20 14:50:09 EST 2023" starttimestamp="1700507886094" timestamp="1923496" timestamp2="1923496">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1242" _type="InsertStringCommand" date="Mon Nov 20 14:50:09 EST 2023" starttimestamp="1700507886094" timestamp="1923496" timestamp2="1923496">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1243" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:50:09 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1923504" />
  <Command __id="1247" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:50:10 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1924135" />
  <Command __id="1249" _type="InsertStringCommand" date="Mon Nov 20 14:50:10 EST 2023" starttimestamp="1700507886094" timestamp="1924145" timestamp2="1924145">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1250" _type="InsertStringCommand" date="Mon Nov 20 14:50:10 EST 2023" starttimestamp="1700507886094" timestamp="1924145" timestamp2="1924145">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1252" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:10 EST 2023" starttimestamp="1700507886094" timestamp="1924690" />
  <Command __id="1253" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:10 EST 2023" starttimestamp="1700507886094" timestamp="1924690" />
  <Command __id="1255" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:10 EST 2023" starttimestamp="1700507886094" timestamp="1924791" />
  <Command __id="1256" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:10 EST 2023" starttimestamp="1700507886094" timestamp="1924791" />
  <Command __id="1258" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1924917" />
  <Command __id="1259" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1924917" />
  <Command __id="1261" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925042" />
  <Command __id="1262" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925042" />
  <Command __id="1264" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925174" />
  <Command __id="1265" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925174" />
  <Command __id="1267" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925309" />
  <Command __id="1268" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925309" />
  <Command __id="1270" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925446" />
  <Command __id="1271" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925446" />
  <DocumentChange __id="1171" _type="Delete" date="Mon Nov 20 14:49:24 EST 2023" docASTNodeCount="172" docActiveCodeLength="1070" docExpressionCount="123" docLength="1070" endLine="22" length="3" offset="546" repeat="3" startLine="22" starttimestamp="1700507886094" timestamp="1878434" timestamp2="1878697">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <DocumentChange __id="1174" _type="Insert" date="Mon Nov 20 14:49:25 EST 2023" docASTNodeCount="174" docActiveCodeLength="1072" docExpressionCount="125" docLength="1072" length="2" offset="546" repeat="2" starttimestamp="1700507886094" timestamp="1878932" timestamp2="1879025">
    <text><![CDATA[va]]></text>
  </DocumentChange>
  <DocumentChange __id="1176" _type="Delete" date="Mon Nov 20 14:49:25 EST 2023" docASTNodeCount="172" docActiveCodeLength="1069" docExpressionCount="123" docLength="1069" endLine="22" length="3" offset="545" repeat="3" startLine="22" starttimestamp="1700507886094" timestamp="1879570" timestamp2="1880268">
    <text><![CDATA[.va]]></text>
  </DocumentChange>
  <DocumentChange __id="1179" _type="Insert" date="Mon Nov 20 14:49:26 EST 2023" docASTNodeCount="172" docActiveCodeLength="1070" docExpressionCount="123" docLength="1070" length="1" offset="545" starttimestamp="1700507886094" timestamp="1880463">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="1199" _type="Delete" date="Mon Nov 20 14:49:55 EST 2023" docASTNodeCount="170" docActiveCodeLength="1060" docExpressionCount="121" docLength="1060" endLine="21" length="10" offset="511" repeat="3" startLine="21" starttimestamp="1700507886094" timestamp="1909877" timestamp2="1910503">
    <text><![CDATA[s.isAtom()]]></text>
  </DocumentChange>
  <DocumentChange __id="1208" _type="Insert" date="Mon Nov 20 14:49:57 EST 2023" docASTNodeCount="172" docActiveCodeLength="1066" docExpressionCount="123" docLength="1066" length="6" offset="511" repeat="6" starttimestamp="1700507886094" timestamp="1911135" timestamp2="1912093">
    <text><![CDATA[s.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="1220" _type="Replace" date="Mon Nov 20 14:49:58 EST 2023" docASTNodeCount="172" docActiveCodeLength="1071" docExpressionCount="123" docLength="1071" endLine="21" insertionLength="9" int_docASTNodeCount="172" int_docActiveCodeLength="1062" int_docExpressionCount="123" int_docLength="1062" length="4" offset="513" startLine="21" starttimestamp="1700507886094" timestamp="1912713">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1223" _type="Insert" date="Mon Nov 20 14:49:59 EST 2023" docASTNodeCount="174" docActiveCodeLength="1074" docExpressionCount="125" docLength="1074" length="3" offset="522" repeat="3" starttimestamp="1700507886094" timestamp="1913246" timestamp2="1913734">
    <text><![CDATA[.is]]></text>
  </DocumentChange>
  <DocumentChange __id="1230" _type="Replace" date="Mon Nov 20 14:50:00 EST 2023" docASTNodeCount="174" docActiveCodeLength="1080" docExpressionCount="125" docLength="1080" endLine="21" insertionLength="8" int_docASTNodeCount="174" int_docActiveCodeLength="1072" int_docExpressionCount="125" int_docLength="1072" length="2" offset="523" startLine="21" starttimestamp="1700507886094" timestamp="1914406">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1237" _type="Delete" date="Mon Nov 20 14:50:09 EST 2023" docASTNodeCount="174" docActiveCodeLength="1079" docExpressionCount="125" docLength="1079" endLine="22" length="1" offset="555" startLine="22" starttimestamp="1700507886094" timestamp="1923302">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="1240" _type="Insert" date="Mon Nov 20 14:50:09 EST 2023" docASTNodeCount="176" docActiveCodeLength="1083" docExpressionCount="127" docLength="1083" length="4" offset="555" repeat="4" starttimestamp="1700507886094" timestamp="1923492" timestamp2="1923873">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <DocumentChange __id="1248" _type="Replace" date="Mon Nov 20 14:50:10 EST 2023" docASTNodeCount="176" docActiveCodeLength="1090" docExpressionCount="127" docLength="1090" endLine="22" insertionLength="10" int_docASTNodeCount="174" int_docActiveCodeLength="1080" int_docExpressionCount="125" int_docLength="1080" length="3" offset="556" startLine="22" starttimestamp="1700507886094" timestamp="1924139">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getClass()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1251" _type="Delete" date="Mon Nov 20 14:50:10 EST 2023" docASTNodeCount="176" docActiveCodeLength="1083" docExpressionCount="127" docLength="1083" endLine="22" length="7" offset="559" repeat="7" startLine="22" starttimestamp="1700507886094" timestamp="1924689" timestamp2="1925443">
    <text><![CDATA[Class()]]></text>
  </DocumentChange>
  <DocumentChange __id="1272" _type="Insert" date="Mon Nov 20 14:50:11 EST 2023" docASTNodeCount="178" docActiveCodeLength="1094" docExpressionCount="129" docLength="1094" length="11" offset="559" repeat="10" starttimestamp="1700507886094" timestamp="1925678" timestamp2="1929719">
    <text><![CDATA[Head().getV]]></text>
  </DocumentChange>
  <Command __id="1273" _type="InsertStringCommand" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925680" timestamp2="1925680">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="1274" _type="InsertStringCommand" date="Mon Nov 20 14:50:11 EST 2023" starttimestamp="1700507886094" timestamp="1925681" timestamp2="1925681">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="1276" _type="InsertStringCommand" date="Mon Nov 20 14:50:12 EST 2023" starttimestamp="1700507886094" timestamp="1926189" timestamp2="1926189">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1277" _type="InsertStringCommand" date="Mon Nov 20 14:50:12 EST 2023" starttimestamp="1700507886094" timestamp="1926189" timestamp2="1926189">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1279" _type="InsertStringCommand" date="Mon Nov 20 14:50:12 EST 2023" starttimestamp="1700507886094" timestamp="1926278" timestamp2="1926278">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1280" _type="InsertStringCommand" date="Mon Nov 20 14:50:12 EST 2023" starttimestamp="1700507886094" timestamp="1926278" timestamp2="1926278">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1282" _type="InsertStringCommand" date="Mon Nov 20 14:50:12 EST 2023" starttimestamp="1700507886094" timestamp="1926398" timestamp2="1926398">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1283" _type="InsertStringCommand" date="Mon Nov 20 14:50:12 EST 2023" starttimestamp="1700507886094" timestamp="1926398" timestamp2="1926398">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1285" _type="InsertStringCommand" date="Mon Nov 20 14:50:13 EST 2023" starttimestamp="1700507886094" timestamp="1927652" timestamp2="1927652">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1286" _type="InsertStringCommand" date="Mon Nov 20 14:50:13 EST 2023" starttimestamp="1700507886094" timestamp="1927652" timestamp2="1927652">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1287" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 14:50:14 EST 2023" starttimestamp="1700507886094" timestamp="1928287" />
  <Command __id="1288" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 14:50:14 EST 2023" starttimestamp="1700507886094" timestamp="1928287" />
  <Command __id="1290" _type="InsertStringCommand" date="Mon Nov 20 14:50:14 EST 2023" starttimestamp="1700507886094" timestamp="1928542" timestamp2="1928542">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1291" _type="InsertStringCommand" date="Mon Nov 20 14:50:14 EST 2023" starttimestamp="1700507886094" timestamp="1928542" timestamp2="1928542">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1292" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:50:14 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1928551" />
  <Command __id="1297" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:50:15 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1929740" />
  <DocumentChange __id="1298" _type="Delete" date="Mon Nov 20 14:50:16 EST 2023" docASTNodeCount="176" docActiveCodeLength="1089" docExpressionCount="127" docLength="1089" endLine="22" length="5" offset="565" repeat="5" startLine="22" starttimestamp="1700507886094" timestamp="1930232" timestamp2="1930957">
    <text><![CDATA[.getV]]></text>
  </DocumentChange>
  <Command __id="1299" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:16 EST 2023" starttimestamp="1700507886094" timestamp="1930235" />
  <Command __id="1300" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:16 EST 2023" starttimestamp="1700507886094" timestamp="1930235" />
  <Command __id="1302" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:16 EST 2023" starttimestamp="1700507886094" timestamp="1930345" />
  <Command __id="1303" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:16 EST 2023" starttimestamp="1700507886094" timestamp="1930345" />
  <Command __id="1305" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:16 EST 2023" starttimestamp="1700507886094" timestamp="1930483" />
  <Command __id="1306" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:16 EST 2023" starttimestamp="1700507886094" timestamp="1930483" />
  <Command __id="1308" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:16 EST 2023" starttimestamp="1700507886094" timestamp="1930626" />
  <Command __id="1309" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:16 EST 2023" starttimestamp="1700507886094" timestamp="1930626" />
  <Command __id="1311" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:17 EST 2023" starttimestamp="1700507886094" timestamp="1930960" />
  <Command __id="1312" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:50:17 EST 2023" starttimestamp="1700507886094" timestamp="1930960" />
  <DocumentChange __id="1313" _type="Insert" date="Mon Nov 20 14:50:17 EST 2023" docASTNodeCount="176" docActiveCodeLength="1090" docExpressionCount="127" docLength="1090" length="1" offset="565" starttimestamp="1700507886094" timestamp="1931166">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="1314" _type="InsertStringCommand" date="Mon Nov 20 14:50:17 EST 2023" starttimestamp="1700507886094" timestamp="1931170" timestamp2="1931170">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1315" _type="InsertStringCommand" date="Mon Nov 20 14:50:17 EST 2023" starttimestamp="1700507886094" timestamp="1931170" timestamp2="1931170">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1316" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:50:17 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="1931178" />
  <Command __id="1318" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:50:33 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="1947430" />
  <Command __id="1319" _type="MoveCaretCommand" caretOffset="367" date="Mon Nov 20 14:50:33 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="1947442" />
  <Command __id="1320" _type="MoveCaretCommand" caretOffset="367" date="Mon Nov 20 14:50:33 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="1947443" />
  <Command __id="1321" _type="ShellCommand" date="Mon Nov 20 14:50:34 EST 2023" starttimestamp="1700507886094" timestamp="1948867" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1322" _type="ShellCommand" date="Mon Nov 20 14:51:06 EST 2023" starttimestamp="1700507886094" timestamp="1980888" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1323" _type="MoveCaretCommand" caretOffset="475" date="Mon Nov 20 14:51:07 EST 2023" docOffset="565" starttimestamp="1700507886094" timestamp="1980984" />
  <Command __id="1324" _type="MoveCaretCommand" caretOffset="475" date="Mon Nov 20 14:51:07 EST 2023" docOffset="565" starttimestamp="1700507886094" timestamp="1980984" />
  <Command __id="1325" _type="ShellCommand" date="Mon Nov 20 14:51:08 EST 2023" starttimestamp="1700507886094" timestamp="1982405" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="1317" _type="Delete" date="Mon Nov 20 14:50:32 EST 2023" docASTNodeCount="176" docActiveCodeLength="1089" docExpressionCount="127" docLength="1089" endLine="22" length="1" offset="565" startLine="22" starttimestamp="1700507886094" timestamp="1946022">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="1326" _type="ShellCommand" date="Mon Nov 20 14:51:18 EST 2023" starttimestamp="1700507886094" timestamp="1992627" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1327" _type="Insert" date="Mon Nov 20 14:51:35 EST 2023" docASTNodeCount="176" docActiveCodeLength="1090" docExpressionCount="127" docLength="1090" length="1" offset="565" starttimestamp="1700507886094" timestamp="2009581">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="1328" _type="InsertStringCommand" date="Mon Nov 20 14:51:35 EST 2023" starttimestamp="1700507886094" timestamp="2009585" timestamp2="2009585">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1329" _type="InsertStringCommand" date="Mon Nov 20 14:51:35 EST 2023" starttimestamp="1700507886094" timestamp="2009585" timestamp2="2009585">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1330" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:51:35 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="2009594" />
  <DocumentChange __id="1331" _type="Delete" date="Mon Nov 20 14:51:44 EST 2023" docASTNodeCount="176" docActiveCodeLength="1089" docExpressionCount="127" docLength="1089" endLine="22" length="1" offset="565" startLine="22" starttimestamp="1700507886094" timestamp="2018445">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="1332" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:51:45 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="2019187" />
  <DocumentChange __id="1333" _type="Insert" date="Mon Nov 20 14:51:45 EST 2023" docASTNodeCount="179" docActiveCodeLength="1097" docExpressionCount="129" docLength="1097" length="8" offset="565" starttimestamp="1700507886094" timestamp="2019193">
    <text><![CDATA[clone().]]></text>
  </DocumentChange>
  <Command __id="1334" _type="InsertStringCommand" date="Mon Nov 20 14:51:45 EST 2023" starttimestamp="1700507886094" timestamp="2019196" timestamp2="2019196">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1335" _type="InsertStringCommand" date="Mon Nov 20 14:51:45 EST 2023" starttimestamp="1700507886094" timestamp="2019197" timestamp2="2019197">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1336" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:51:45 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="2019206" />
  <DocumentChange __id="1337" _type="Delete" date="Mon Nov 20 14:51:45 EST 2023" docASTNodeCount="176" docActiveCodeLength="1089" docExpressionCount="127" docLength="1089" endLine="22" length="8" offset="565" repeat="8" startLine="22" starttimestamp="1700507886094" timestamp="2019839" timestamp2="2021024">
    <text><![CDATA[clone().]]></text>
  </DocumentChange>
  <Command __id="1345" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:51:47 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="2021322" />
  <DocumentChange __id="1346" _type="Insert" date="Mon Nov 20 14:51:47 EST 2023" docASTNodeCount="179" docActiveCodeLength="1097" docExpressionCount="129" docLength="1097" length="8" offset="565" starttimestamp="1700507886094" timestamp="2021328">
    <text><![CDATA[clone().]]></text>
  </DocumentChange>
  <Command __id="1347" _type="InsertStringCommand" date="Mon Nov 20 14:51:47 EST 2023" starttimestamp="1700507886094" timestamp="2021331" timestamp2="2021331">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1348" _type="InsertStringCommand" date="Mon Nov 20 14:51:47 EST 2023" starttimestamp="1700507886094" timestamp="2021331" timestamp2="2021331">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1349" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:51:47 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="2021341" />
  <DocumentChange __id="1350" _type="Delete" date="Mon Nov 20 14:51:47 EST 2023" docASTNodeCount="176" docActiveCodeLength="1089" docExpressionCount="127" docLength="1089" endLine="22" length="8" offset="565" repeat="8" startLine="22" starttimestamp="1700507886094" timestamp="2021713" timestamp2="2022685">
    <text><![CDATA[clone().]]></text>
  </DocumentChange>
  <Command __id="1358" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:51:49 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="2023756" />
  <DocumentChange __id="1359" _type="Insert" date="Mon Nov 20 14:51:49 EST 2023" docASTNodeCount="179" docActiveCodeLength="1097" docExpressionCount="129" docLength="1097" length="8" offset="565" starttimestamp="1700507886094" timestamp="2023762">
    <text><![CDATA[clone().]]></text>
  </DocumentChange>
  <Command __id="1360" _type="InsertStringCommand" date="Mon Nov 20 14:51:49 EST 2023" starttimestamp="1700507886094" timestamp="2023766" timestamp2="2023766">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1361" _type="InsertStringCommand" date="Mon Nov 20 14:51:49 EST 2023" starttimestamp="1700507886094" timestamp="2023766" timestamp2="2023766">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1362" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:51:49 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="2023779" />
  <DocumentChange __id="1363" _type="Delete" date="Mon Nov 20 14:51:50 EST 2023" docASTNodeCount="176" docActiveCodeLength="1087" docExpressionCount="127" docLength="1087" endLine="22" length="10" offset="563" repeat="10" startLine="22" starttimestamp="1700507886094" timestamp="2024305" timestamp2="2026286">
    <text><![CDATA[()clone().]]></text>
  </DocumentChange>
  <DocumentChange __id="1373" _type="Insert" date="Mon Nov 20 14:51:53 EST 2023" docASTNodeCount="176" docActiveCodeLength="1089" docExpressionCount="127" docLength="1089" length="2" offset="563" starttimestamp="1700507886094" timestamp="2026971">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="1374" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:51:53 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="2027170" />
  <Command __id="1376" _type="InsertStringCommand" date="Mon Nov 20 14:51:53 EST 2023" starttimestamp="1700507886094" timestamp="2027179" timestamp2="2027179">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1377" _type="InsertStringCommand" date="Mon Nov 20 14:51:53 EST 2023" starttimestamp="1700507886094" timestamp="2027180" timestamp2="2027180">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1378" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 14:51:53 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="2027195" />
  <Command __id="1379" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 14:52:00 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="2034035" />
  <Command __id="1380" _type="MoveCaretCommand" caretOffset="367" date="Mon Nov 20 14:52:00 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="2034047" />
  <Command __id="1381" _type="MoveCaretCommand" caretOffset="367" date="Mon Nov 20 14:52:00 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="2034047" />
  <Command __id="1382" _type="MoveCaretCommand" caretOffset="476" date="Mon Nov 20 14:52:01 EST 2023" docOffset="566" starttimestamp="1700507886094" timestamp="2035210" />
  <Command __id="1383" _type="MoveCaretCommand" caretOffset="476" date="Mon Nov 20 14:52:01 EST 2023" docOffset="566" starttimestamp="1700507886094" timestamp="2035211" />
  <Command __id="1384" _type="SelectTextCommand" caretOffset="461" date="Mon Nov 20 14:52:03 EST 2023" end="476" start="461" starttimestamp="1700507886094" timestamp="2036977" />
  <Command __id="1385" _type="SelectTextCommand" caretOffset="461" date="Mon Nov 20 14:52:03 EST 2023" end="476" start="461" starttimestamp="1700507886094" timestamp="2036977" />
  <Command __id="1387" _type="InsertStringCommand" date="Mon Nov 20 14:52:03 EST 2023" starttimestamp="1700507886094" timestamp="2037256" timestamp2="2037256">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="1388" _type="InsertStringCommand" date="Mon Nov 20 14:52:03 EST 2023" starttimestamp="1700507886094" timestamp="2037256" timestamp2="2037256">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="1389" _type="ShellCommand" date="Mon Nov 20 14:52:06 EST 2023" starttimestamp="1700507886094" timestamp="2039923" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="1375" _type="Replace" date="Mon Nov 20 14:51:53 EST 2023" docASTNodeCount="176" docActiveCodeLength="1090" docExpressionCount="127" docLength="1090" endLine="22" insertionLength="10" int_docASTNodeCount="174" int_docActiveCodeLength="1080" int_docExpressionCount="125" int_docLength="1080" length="9" offset="556" startLine="22" starttimestamp="1700507886094" timestamp="2027173">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[getHead().]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1386" _type="Replace" date="Mon Nov 20 14:52:03 EST 2023" docASTNodeCount="172" docActiveCodeLength="1076" docExpressionCount="124" docLength="1076" endLine="22" insertionLength="1" int_docASTNodeCount="172" int_docActiveCodeLength="1075" int_docExpressionCount="123" int_docLength="1075" length="15" offset="551" startLine="22" starttimestamp="1700507886094" timestamp="2037252">
    <deletedText><![CDATA[this.getHead().]]></deletedText>
    <insertedText><![CDATA[\]]></insertedText>
  </DocumentChange>
  <Command __id="1390" _type="ShellCommand" date="Mon Nov 20 14:52:50 EST 2023" starttimestamp="1700507886094" timestamp="2084786" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1392" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:52:52 EST 2023" starttimestamp="1700507886094" timestamp="2086411" />
  <Command __id="1393" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:52:52 EST 2023" starttimestamp="1700507886094" timestamp="2086411" />
  <Command __id="1394" _type="ShellCommand" date="Mon Nov 20 14:53:19 EST 2023" starttimestamp="1700507886094" timestamp="2113403" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1395" _type="ShellCommand" date="Mon Nov 20 14:54:54 EST 2023" starttimestamp="1700507886094" timestamp="2208668" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1396" _type="ShellCommand" date="Mon Nov 20 14:54:55 EST 2023" starttimestamp="1700507886094" timestamp="2208934" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1397" _type="ShellCommand" date="Mon Nov 20 14:55:05 EST 2023" starttimestamp="1700507886094" timestamp="2219021" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1398" _type="ShellCommand" date="Mon Nov 20 14:55:05 EST 2023" starttimestamp="1700507886094" timestamp="2219780" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1400" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:55:51 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="2265362">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1401" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 14:55:51 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="2265366" />
  <Command __id="1402" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 14:55:51 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="2265411" />
  <Command __id="1404" _type="MoveCaretCommand" caretOffset="99" date="Mon Nov 20 14:55:53 EST 2023" docOffset="189" starttimestamp="1700507886094" timestamp="2267557" />
  <Command __id="1405" _type="MoveCaretCommand" caretOffset="91" date="Mon Nov 20 14:55:56 EST 2023" docOffset="91" starttimestamp="1700507886094" timestamp="2270125" />
  <Command __id="1406" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 14:55:56 EST 2023" docOffset="98" starttimestamp="1700507886094" timestamp="2270655" />
  <Command __id="1407" _type="InsertStringCommand" date="Mon Nov 20 14:55:57 EST 2023" starttimestamp="1700507886094" timestamp="2271562" timestamp2="2271562">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1408" _type="InsertStringCommand" date="Mon Nov 20 14:55:58 EST 2023" starttimestamp="1700507886094" timestamp="2272238" timestamp2="2272238">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1409" _type="InsertStringCommand" date="Mon Nov 20 14:55:58 EST 2023" starttimestamp="1700507886094" timestamp="2272332" timestamp2="2272332">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1410" _type="InsertStringCommand" date="Mon Nov 20 14:55:58 EST 2023" starttimestamp="1700507886094" timestamp="2272413" timestamp2="2272413">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1411" _type="InsertStringCommand" date="Mon Nov 20 14:55:58 EST 2023" starttimestamp="1700507886094" timestamp="2272583" timestamp2="2272583">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1412" _type="InsertStringCommand" date="Mon Nov 20 14:55:58 EST 2023" starttimestamp="1700507886094" timestamp="2272628" timestamp2="2272628">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1413" _type="InsertStringCommand" date="Mon Nov 20 14:55:58 EST 2023" starttimestamp="1700507886094" timestamp="2272789" timestamp2="2272789">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1414" _type="InsertStringCommand" date="Mon Nov 20 14:55:58 EST 2023" starttimestamp="1700507886094" timestamp="2272874" timestamp2="2272874">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1415" _type="InsertStringCommand" date="Mon Nov 20 14:55:59 EST 2023" starttimestamp="1700507886094" timestamp="2273051" timestamp2="2273051">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1416" _type="InsertStringCommand" date="Mon Nov 20 14:55:59 EST 2023" starttimestamp="1700507886094" timestamp="2273132" timestamp2="2273132">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1417" _type="InsertStringCommand" date="Mon Nov 20 14:55:59 EST 2023" starttimestamp="1700507886094" timestamp="2273254" timestamp2="2273254">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1418" _type="InsertStringCommand" date="Mon Nov 20 14:55:59 EST 2023" starttimestamp="1700507886094" timestamp="2273307" timestamp2="2273307">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1419" _type="InsertStringCommand" date="Mon Nov 20 14:55:59 EST 2023" starttimestamp="1700507886094" timestamp="2273438" timestamp2="2273438">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1420" _type="InsertStringCommand" date="Mon Nov 20 14:55:59 EST 2023" starttimestamp="1700507886094" timestamp="2273659" timestamp2="2273659">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1421" _type="InsertStringCommand" date="Mon Nov 20 14:55:59 EST 2023" starttimestamp="1700507886094" timestamp="2273817" timestamp2="2273817">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1422" _type="InsertStringCommand" date="Mon Nov 20 14:56:00 EST 2023" starttimestamp="1700507886094" timestamp="2273920" timestamp2="2273920">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1423" _type="InsertStringCommand" date="Mon Nov 20 14:56:00 EST 2023" starttimestamp="1700507886094" timestamp="2274006" timestamp2="2274006">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1424" _type="InsertStringCommand" date="Mon Nov 20 14:56:00 EST 2023" starttimestamp="1700507886094" timestamp="2274340" timestamp2="2274340">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1425" _type="InsertStringCommand" date="Mon Nov 20 14:56:00 EST 2023" starttimestamp="1700507886094" timestamp="2274740" timestamp2="2274740">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1426" _type="InsertStringCommand" date="Mon Nov 20 14:56:00 EST 2023" starttimestamp="1700507886094" timestamp="2274813" timestamp2="2274813">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1427" _type="InsertStringCommand" date="Mon Nov 20 14:56:00 EST 2023" starttimestamp="1700507886094" timestamp="2274901" timestamp2="2274901">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1428" _type="InsertStringCommand" date="Mon Nov 20 14:56:01 EST 2023" starttimestamp="1700507886094" timestamp="2275092" timestamp2="2275092">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1429" _type="InsertStringCommand" date="Mon Nov 20 14:56:01 EST 2023" starttimestamp="1700507886094" timestamp="2275216" timestamp2="2275216">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1430" _type="InsertStringCommand" date="Mon Nov 20 14:56:01 EST 2023" starttimestamp="1700507886094" timestamp="2275363" timestamp2="2275363">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1431" _type="InsertStringCommand" date="Mon Nov 20 14:56:01 EST 2023" starttimestamp="1700507886094" timestamp="2275392" timestamp2="2275392">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1432" _type="InsertStringCommand" date="Mon Nov 20 14:56:01 EST 2023" starttimestamp="1700507886094" timestamp="2275569" timestamp2="2275569">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1433" _type="InsertStringCommand" date="Mon Nov 20 14:56:01 EST 2023" starttimestamp="1700507886094" timestamp="2275626" timestamp2="2275626">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1434" _type="InsertStringCommand" date="Mon Nov 20 14:56:01 EST 2023" starttimestamp="1700507886094" timestamp="2275763" timestamp2="2275763">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1435" _type="InsertStringCommand" date="Mon Nov 20 14:56:01 EST 2023" starttimestamp="1700507886094" timestamp="2275865" timestamp2="2275865">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1436" _type="InsertStringCommand" date="Mon Nov 20 14:56:02 EST 2023" starttimestamp="1700507886094" timestamp="2276065" timestamp2="2276065">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1437" _type="InsertStringCommand" date="Mon Nov 20 14:56:02 EST 2023" starttimestamp="1700507886094" timestamp="2276447" timestamp2="2276447">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1438" _type="InsertStringCommand" date="Mon Nov 20 14:56:02 EST 2023" starttimestamp="1700507886094" timestamp="2276665" timestamp2="2276665">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1439" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:56:03 EST 2023" starttimestamp="1700507886094" timestamp="2277140" />
  <Command __id="1440" _type="InsertStringCommand" date="Mon Nov 20 14:56:03 EST 2023" starttimestamp="1700507886094" timestamp="2277258" timestamp2="2277258">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1441" _type="InsertStringCommand" date="Mon Nov 20 14:56:03 EST 2023" starttimestamp="1700507886094" timestamp="2277480" timestamp2="2277480">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1442" _type="InsertStringCommand" date="Mon Nov 20 14:56:03 EST 2023" starttimestamp="1700507886094" timestamp="2277683" timestamp2="2277683">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1443" _type="InsertStringCommand" date="Mon Nov 20 14:56:03 EST 2023" starttimestamp="1700507886094" timestamp="2277840" timestamp2="2277840">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1444" _type="InsertStringCommand" date="Mon Nov 20 14:56:04 EST 2023" starttimestamp="1700507886094" timestamp="2277986" timestamp2="2277986">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1445" _type="InsertStringCommand" date="Mon Nov 20 14:56:04 EST 2023" starttimestamp="1700507886094" timestamp="2278048" timestamp2="2278048">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1446" _type="InsertStringCommand" date="Mon Nov 20 14:56:04 EST 2023" starttimestamp="1700507886094" timestamp="2278241" timestamp2="2278241">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1447" _type="InsertStringCommand" date="Mon Nov 20 14:56:04 EST 2023" starttimestamp="1700507886094" timestamp="2278408" timestamp2="2278408">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1448" _type="InsertStringCommand" date="Mon Nov 20 14:56:04 EST 2023" starttimestamp="1700507886094" timestamp="2278720" timestamp2="2278720">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1449" _type="InsertStringCommand" date="Mon Nov 20 14:56:05 EST 2023" starttimestamp="1700507886094" timestamp="2278934" timestamp2="2278934">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1450" _type="InsertStringCommand" date="Mon Nov 20 14:56:05 EST 2023" starttimestamp="1700507886094" timestamp="2279263" timestamp2="2279263">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1451" _type="InsertStringCommand" date="Mon Nov 20 14:56:05 EST 2023" starttimestamp="1700507886094" timestamp="2279383" timestamp2="2279383">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1452" _type="InsertStringCommand" date="Mon Nov 20 14:56:05 EST 2023" starttimestamp="1700507886094" timestamp="2279435" timestamp2="2279435">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1453" _type="InsertStringCommand" date="Mon Nov 20 14:56:05 EST 2023" starttimestamp="1700507886094" timestamp="2279569" timestamp2="2279569">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1454" _type="InsertStringCommand" date="Mon Nov 20 14:56:05 EST 2023" starttimestamp="1700507886094" timestamp="2279728" timestamp2="2279728">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1455" _type="InsertStringCommand" date="Mon Nov 20 14:56:05 EST 2023" starttimestamp="1700507886094" timestamp="2279810" timestamp2="2279810">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1456" _type="InsertStringCommand" date="Mon Nov 20 14:56:05 EST 2023" starttimestamp="1700507886094" timestamp="2279851" timestamp2="2279851">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1457" _type="InsertStringCommand" date="Mon Nov 20 14:56:06 EST 2023" starttimestamp="1700507886094" timestamp="2279932" timestamp2="2279932">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1458" _type="InsertStringCommand" date="Mon Nov 20 14:56:06 EST 2023" starttimestamp="1700507886094" timestamp="2280047" timestamp2="2280047">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1459" _type="MoveCaretCommand" caretOffset="192" date="Mon Nov 20 14:56:06 EST 2023" docOffset="192" starttimestamp="1700507886094" timestamp="2280824" />
  <Command __id="1460" _type="MoveCaretCommand" caretOffset="142" date="Mon Nov 20 14:56:07 EST 2023" docOffset="142" starttimestamp="1700507886094" timestamp="2281425" />
  <Command __id="1461" _type="ShellCommand" date="Mon Nov 20 14:56:08 EST 2023" starttimestamp="1700507886094" timestamp="2282873" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1403" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:55:53 EST 2023" docASTNodeCount="172" docActiveCodeLength="1075" docExpressionCount="123" docLength="1075" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2267508">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;"), Diff(INSERT,"import main.lisp.parser.terms.Atom;"), Diff(EQUAL,"import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if("), Diff(DELETE,"super"), Diff(INSERT,"(this.getTail() instanceof Atom) && this"), Diff(EQUAL,".getTail().isNIL()) {			return true;		}else {			return "), Diff(DELETE,"super"), Diff(INSERT,"this"), Diff(EQUAL,".getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		"), Diff(DELETE,"return "(" + super"), Diff(INSERT,"if(this.getHead().isAtom()) {			return "(" + 		}		return "(" + this"), Diff(EQUAL,".getHead().toStringAsSExpressionDeep() + " " + "." + " " +				"), Diff(DELETE,"super"), Diff(INSERT,"this"), Diff(EQUAL,".getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + "), Diff(DELETE,"super"), Diff(INSERT,"this"), Diff(EQUAL,".getHead().toString() + " " + "." + " " +				"), Diff(DELETE,"super"), Diff(INSERT,"this"), Diff(EQUAL,".getTail().toString() + ")";	}	"), Diff(DELETE,"//"), Diff(EQUAL,"	public String toStringAsList() {"), Diff(DELETE,"//"), Diff(EQUAL,"		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";"), Diff(DELETE,"//"), Diff(EQUAL,"	}		public String toString() {		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {
			return true;
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.getHead().isAtom()) {
			return "(" + 
		}
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
	}
	
	public String toString() {
		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();
	}



}
]]></snapshot>
  </Command>
  <Command __id="1467" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:56:14 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="2288867">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1473" _type="ShellCommand" date="Mon Nov 20 14:56:34 EST 2023" starttimestamp="1700507886094" timestamp="2308836" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1475" _type="MoveCaretCommand" caretOffset="143" date="Mon Nov 20 14:56:44 EST 2023" docOffset="143" starttimestamp="1700507886094" timestamp="2318562" />
  <Command __id="1476" _type="MoveCaretCommand" caretOffset="144" date="Mon Nov 20 14:56:45 EST 2023" docOffset="144" starttimestamp="1700507886094" timestamp="2319492" />
  <Command __id="1477" _type="MoveCaretCommand" caretOffset="149" date="Mon Nov 20 14:56:46 EST 2023" docOffset="149" starttimestamp="1700507886094" timestamp="2319910" />
  <Command __id="1478" _type="InsertStringCommand" date="Mon Nov 20 14:56:46 EST 2023" starttimestamp="1700507886094" timestamp="2320011" timestamp2="2320011">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1479" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 14:56:46 EST 2023" docOffset="98" starttimestamp="1700507886094" timestamp="2320478" />
  <Command __id="1480" _type="MoveCaretCommand" caretOffset="149" date="Mon Nov 20 14:56:46 EST 2023" docOffset="149" starttimestamp="1700507886094" timestamp="2320878" />
  <Command __id="1481" _type="MoveCaretCommand" caretOffset="98" date="Mon Nov 20 14:56:48 EST 2023" docOffset="98" starttimestamp="1700507886094" timestamp="2321908" />
  <Command __id="1482" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:56:48 EST 2023" starttimestamp="1700507886094" timestamp="2322118" />
  <Command __id="1483" _type="EclipseCommand" commandID="" date="Mon Nov 20 14:56:48 EST 2023" starttimestamp="1700507886094" timestamp="2322127" />
  <Command __id="1484" _type="ShellCommand" date="Mon Nov 20 14:56:53 EST 2023" starttimestamp="1700507886094" timestamp="2327655" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1485" _type="ShellCommand" date="Mon Nov 20 14:57:50 EST 2023" starttimestamp="1700507886094" timestamp="2384154" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1486" _type="MoveCaretCommand" caretOffset="551" date="Mon Nov 20 14:58:10 EST 2023" docOffset="551" starttimestamp="1700507886094" timestamp="2404117" />
  <Command __id="1487" _type="InsertStringCommand" date="Mon Nov 20 14:58:17 EST 2023" starttimestamp="1700507886094" timestamp="2410987" timestamp2="2410987">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1488" _type="InsertStringCommand" date="Mon Nov 20 14:58:17 EST 2023" starttimestamp="1700507886094" timestamp="2411047" timestamp2="2411047">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1489" _type="InsertStringCommand" date="Mon Nov 20 14:58:17 EST 2023" starttimestamp="1700507886094" timestamp="2411110" timestamp2="2411110">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1490" _type="InsertStringCommand" date="Mon Nov 20 14:58:17 EST 2023" starttimestamp="1700507886094" timestamp="2411343" timestamp2="2411343">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1491" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:17 EST 2023" starttimestamp="1700507886094" timestamp="2411701" />
  <Command __id="1492" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:17 EST 2023" starttimestamp="1700507886094" timestamp="2411817" />
  <Command __id="1493" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:18 EST 2023" starttimestamp="1700507886094" timestamp="2411960" />
  <Command __id="1494" _type="InsertStringCommand" date="Mon Nov 20 14:58:18 EST 2023" starttimestamp="1700507886094" timestamp="2412063" timestamp2="2412063">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1495" _type="InsertStringCommand" date="Mon Nov 20 14:58:18 EST 2023" starttimestamp="1700507886094" timestamp="2412135" timestamp2="2412135">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1496" _type="InsertStringCommand" date="Mon Nov 20 14:58:18 EST 2023" starttimestamp="1700507886094" timestamp="2412243" timestamp2="2412243">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1497" _type="InsertStringCommand" date="Mon Nov 20 14:58:18 EST 2023" starttimestamp="1700507886094" timestamp="2412355" timestamp2="2412355">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1498" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:19 EST 2023" starttimestamp="1700507886094" timestamp="2413436" />
  <Command __id="1499" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:19 EST 2023" starttimestamp="1700507886094" timestamp="2413554" />
  <Command __id="1500" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:19 EST 2023" starttimestamp="1700507886094" timestamp="2413677" />
  <Command __id="1501" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:19 EST 2023" starttimestamp="1700507886094" timestamp="2413823" />
  <Command __id="1502" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:20 EST 2023" starttimestamp="1700507886094" timestamp="2413954" />
  <Command __id="1503" _type="InsertStringCommand" date="Mon Nov 20 14:58:20 EST 2023" starttimestamp="1700507886094" timestamp="2414184" timestamp2="2414184">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1504" _type="InsertStringCommand" date="Mon Nov 20 14:58:20 EST 2023" starttimestamp="1700507886094" timestamp="2414257" timestamp2="2414257">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1505" _type="InsertStringCommand" date="Mon Nov 20 14:58:20 EST 2023" starttimestamp="1700507886094" timestamp="2414324" timestamp2="2414324">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1506" _type="InsertStringCommand" date="Mon Nov 20 14:58:20 EST 2023" starttimestamp="1700507886094" timestamp="2414410" timestamp2="2414410">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1507" _type="InsertStringCommand" date="Mon Nov 20 14:58:20 EST 2023" starttimestamp="1700507886094" timestamp="2414519" timestamp2="2414519">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1508" _type="InsertStringCommand" date="Mon Nov 20 14:58:20 EST 2023" starttimestamp="1700507886094" timestamp="2414700" timestamp2="2414700">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1509" _type="InsertStringCommand" date="Mon Nov 20 14:58:20 EST 2023" starttimestamp="1700507886094" timestamp="2414764" timestamp2="2414764">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1510" _type="InsertStringCommand" date="Mon Nov 20 14:58:20 EST 2023" starttimestamp="1700507886094" timestamp="2414827" timestamp2="2414827">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1511" _type="InsertStringCommand" date="Mon Nov 20 14:58:21 EST 2023" starttimestamp="1700507886094" timestamp="2414932" timestamp2="2414932">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1512" _type="InsertStringCommand" date="Mon Nov 20 14:58:21 EST 2023" starttimestamp="1700507886094" timestamp="2415037" timestamp2="2415037">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1513" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 14:58:24 EST 2023" starttimestamp="1700507886094" timestamp="2418788" />
  <Command __id="1514" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 14:58:25 EST 2023" starttimestamp="1700507886094" timestamp="2418924" />
  <Command __id="1515" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 14:58:25 EST 2023" starttimestamp="1700507886094" timestamp="2419086" />
  <Command __id="1516" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 14:58:25 EST 2023" starttimestamp="1700507886094" timestamp="2419223" />
  <Command __id="1517" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 14:58:25 EST 2023" starttimestamp="1700507886094" timestamp="2419375" />
  <Command __id="1518" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Mon Nov 20 14:58:25 EST 2023" starttimestamp="1700507886094" timestamp="2419531" />
  <Command __id="1519" _type="InsertStringCommand" date="Mon Nov 20 14:58:26 EST 2023" starttimestamp="1700507886094" timestamp="2420696" timestamp2="2420696">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1520" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:29 EST 2023" starttimestamp="1700507886094" timestamp="2423900" />
  <Command __id="1521" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:30 EST 2023" starttimestamp="1700507886094" timestamp="2424092" />
  <Command __id="1522" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:30 EST 2023" starttimestamp="1700507886094" timestamp="2424222" />
  <Command __id="1523" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:30 EST 2023" starttimestamp="1700507886094" timestamp="2424367" />
  <Command __id="1524" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:30 EST 2023" starttimestamp="1700507886094" timestamp="2424522" />
  <Command __id="1525" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:30 EST 2023" starttimestamp="1700507886094" timestamp="2424770" />
  <Command __id="1526" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 14:58:31 EST 2023" starttimestamp="1700507886094" timestamp="2425217" />
  <Command __id="1527" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:31 EST 2023" starttimestamp="1700507886094" timestamp="2425353" />
  <Command __id="1528" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:31 EST 2023" starttimestamp="1700507886094" timestamp="2425582" />
  <Command __id="1529" _type="InsertStringCommand" date="Mon Nov 20 14:58:32 EST 2023" starttimestamp="1700507886094" timestamp="2426377" timestamp2="2426377">
    <data><![CDATA[。]]></data>
  </Command>
  <Command __id="1530" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 14:58:33 EST 2023" starttimestamp="1700507886094" timestamp="2427305" />
  <Command __id="1531" _type="InsertStringCommand" date="Mon Nov 20 14:58:33 EST 2023" starttimestamp="1700507886094" timestamp="2427702" timestamp2="2427702">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1538" _type="ShellCommand" date="Mon Nov 20 14:59:25 EST 2023" starttimestamp="1700507886094" timestamp="2479820" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1539" _type="ShellCommand" date="Mon Nov 20 14:59:26 EST 2023" starttimestamp="1700507886094" timestamp="2480490" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1540" _type="ShellCommand" date="Mon Nov 20 14:59:26 EST 2023" starttimestamp="1700507886094" timestamp="2480858" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1542" _type="MoveCaretCommand" caretOffset="568" date="Mon Nov 20 14:59:27 EST 2023" docOffset="568" starttimestamp="1700507886094" timestamp="2481688" />
  <Command __id="1543" _type="ShellCommand" date="Mon Nov 20 14:59:30 EST 2023" starttimestamp="1700507886094" timestamp="2484864" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1544" _type="ShellCommand" date="Mon Nov 20 14:59:31 EST 2023" starttimestamp="1700507886094" timestamp="2485581" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1545" _type="ShellCommand" date="Mon Nov 20 14:59:33 EST 2023" starttimestamp="1700507886094" timestamp="2487852" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1546" _type="ShellCommand" date="Mon Nov 20 14:59:34 EST 2023" starttimestamp="1700507886094" timestamp="2488805" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1549" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:59:38 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="2492193">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1550" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 14:59:38 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="2492198" />
  <Command __id="1551" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 14:59:38 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="2492225" />
  <Command __id="1553" _type="MoveCaretCommand" caretOffset="527" date="Mon Nov 20 14:59:40 EST 2023" docOffset="527" starttimestamp="1700507886094" timestamp="2494129" />
  <Command __id="1554" _type="ShellCommand" date="Mon Nov 20 14:59:41 EST 2023" starttimestamp="1700507886094" timestamp="2495184" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1555" _type="ShellCommand" date="Mon Nov 20 14:59:48 EST 2023" starttimestamp="1700507886094" timestamp="2502574" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1556" _type="SelectTextCommand" caretOffset="566" date="Mon Nov 20 14:59:50 EST 2023" end="576" start="566" starttimestamp="1700507886094" timestamp="2504607" />
  <Command __id="1557" _type="InsertStringCommand" date="Mon Nov 20 14:59:51 EST 2023" starttimestamp="1700507886094" timestamp="2505211" timestamp2="2505211">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1558" _type="InsertStringCommand" date="Mon Nov 20 14:59:51 EST 2023" starttimestamp="1700507886094" timestamp="2505291" timestamp2="2505291">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1559" _type="InsertStringCommand" date="Mon Nov 20 14:59:51 EST 2023" starttimestamp="1700507886094" timestamp="2505685" timestamp2="2505685">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1560" _type="InsertStringCommand" date="Mon Nov 20 14:59:51 EST 2023" starttimestamp="1700507886094" timestamp="2505890" timestamp2="2505890">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1561" _type="InsertStringCommand" date="Mon Nov 20 14:59:52 EST 2023" starttimestamp="1700507886094" timestamp="2506021" timestamp2="2506021">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1562" _type="InsertStringCommand" date="Mon Nov 20 14:59:52 EST 2023" starttimestamp="1700507886094" timestamp="2506112" timestamp2="2506112">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1563" _type="InsertStringCommand" date="Mon Nov 20 14:59:52 EST 2023" starttimestamp="1700507886094" timestamp="2506171" timestamp2="2506171">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1564" _type="InsertStringCommand" date="Mon Nov 20 14:59:52 EST 2023" starttimestamp="1700507886094" timestamp="2506252" timestamp2="2506252">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1565" _type="InsertStringCommand" date="Mon Nov 20 14:59:52 EST 2023" starttimestamp="1700507886094" timestamp="2506391" timestamp2="2506391">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 14:59:53 EST 2023" starttimestamp="1700507886094" timestamp="2507705" />
  <Command __id="1567" _type="InsertStringCommand" date="Mon Nov 20 15:00:01 EST 2023" starttimestamp="1700507886094" timestamp="2514925" timestamp2="2514925">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1568" _type="InsertStringCommand" date="Mon Nov 20 15:00:01 EST 2023" starttimestamp="1700507886094" timestamp="2515122" timestamp2="2515122">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="1569" _type="InsertStringCommand" date="Mon Nov 20 15:00:01 EST 2023" starttimestamp="1700507886094" timestamp="2515250" timestamp2="2515250">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1570" _type="InsertStringCommand" date="Mon Nov 20 15:00:02 EST 2023" starttimestamp="1700507886094" timestamp="2516459" timestamp2="2516459">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1571" _type="InsertStringCommand" date="Mon Nov 20 15:00:03 EST 2023" starttimestamp="1700507886094" timestamp="2517461" timestamp2="2517461">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1572" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 15:00:03 EST 2023" starttimestamp="1700507886094" timestamp="2517895" />
  <Command __id="1573" _type="InsertStringCommand" date="Mon Nov 20 15:00:04 EST 2023" starttimestamp="1700507886094" timestamp="2518314" timestamp2="2518314">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1574" _type="MoveCaretCommand" caretOffset="587" date="Mon Nov 20 15:00:05 EST 2023" docOffset="587" starttimestamp="1700507886094" timestamp="2519605" />
  <Command __id="1575" _type="InsertStringCommand" date="Mon Nov 20 15:00:06 EST 2023" starttimestamp="1700507886094" timestamp="2520585" timestamp2="2520585">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1576" _type="MoveCaretCommand" caretOffset="534" date="Mon Nov 20 15:00:10 EST 2023" docOffset="534" starttimestamp="1700507886094" timestamp="2524504" />
  <Command __id="1577" _type="SelectTextCommand" caretOffset="586" date="Mon Nov 20 15:00:11 EST 2023" end="586" start="534" starttimestamp="1700507886094" timestamp="2524927" />
  <Command __id="1578" _type="MoveCaretCommand" caretOffset="583" date="Mon Nov 20 15:00:11 EST 2023" docOffset="583" starttimestamp="1700507886094" timestamp="2525690" />
  <Command __id="1579" _type="MoveCaretCommand" caretOffset="587" date="Mon Nov 20 15:00:19 EST 2023" docOffset="587" starttimestamp="1700507886094" timestamp="2533342" />
  <Command __id="1580" _type="SelectTextCommand" caretOffset="538" date="Mon Nov 20 15:00:20 EST 2023" end="587" start="538" starttimestamp="1700507886094" timestamp="2534893" />
  <Command __id="1581" _type="MoveCaretCommand" caretOffset="539" date="Mon Nov 20 15:00:21 EST 2023" docOffset="539" starttimestamp="1700507886094" timestamp="2535287" />
  <Command __id="1582" _type="SelectTextCommand" caretOffset="522" date="Mon Nov 20 15:00:23 EST 2023" end="522" start="508" starttimestamp="1700507886094" timestamp="2536976" />
  <Command __id="1583" _type="InsertStringCommand" date="Mon Nov 20 15:00:23 EST 2023" starttimestamp="1700507886094" timestamp="2537373" timestamp2="2537373">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1584" _type="InsertStringCommand" date="Mon Nov 20 15:00:23 EST 2023" starttimestamp="1700507886094" timestamp="2537506" timestamp2="2537506">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1585" _type="InsertStringCommand" date="Mon Nov 20 15:00:23 EST 2023" starttimestamp="1700507886094" timestamp="2537566" timestamp2="2537566">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1586" _type="InsertStringCommand" date="Mon Nov 20 15:00:23 EST 2023" starttimestamp="1700507886094" timestamp="2537599" timestamp2="2537599">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1587" _type="SelectTextCommand" caretOffset="556" date="Mon Nov 20 15:00:26 EST 2023" end="556" start="545" starttimestamp="1700507886094" timestamp="2539995" />
  <Command __id="1588" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:00:26 EST 2023" starttimestamp="1700507886094" timestamp="2540237" />
  <Command __id="1589" _type="MoveCaretCommand" caretOffset="545" date="Mon Nov 20 15:00:27 EST 2023" docOffset="545" starttimestamp="1700507886094" timestamp="2541161" />
  <Command __id="1590" _type="InsertStringCommand" date="Mon Nov 20 15:00:28 EST 2023" starttimestamp="1700507886094" timestamp="2542047" timestamp2="2542047">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1591" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:00:28 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="2542689" />
  <Command __id="1592" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:00:29 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="2543247" />
  <Command __id="1593" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:00:29 EST 2023" starttimestamp="1700507886094" timestamp="2543667" />
  <Command __id="1594" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:00:29 EST 2023" starttimestamp="1700507886094" timestamp="2543676" />
  <Command __id="1595" _type="SelectTextCommand" caretOffset="852" date="Mon Nov 20 15:00:32 EST 2023" end="970" start="852" starttimestamp="1700507886094" timestamp="2546901" />
  <Command __id="1596" _type="MoveCaretCommand" caretOffset="767" date="Mon Nov 20 15:00:34 EST 2023" docOffset="767" starttimestamp="1700507886094" timestamp="2548201" />
  <Command __id="1597" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:00:35 EST 2023" starttimestamp="1700507886094" timestamp="2549071" />
  <Command __id="1598" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:00:35 EST 2023" starttimestamp="1700507886094" timestamp="2549082" />
  <Command __id="1599" _type="ShellCommand" date="Mon Nov 20 15:00:37 EST 2023" starttimestamp="1700507886094" timestamp="2551432" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1552" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 14:59:40 EST 2023" docASTNodeCount="179" docActiveCodeLength="1100" docExpressionCount="130" docLength="1100" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2494079">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.getHead().isAtom()) {			return "(" + this.getHead().eval(null)		}		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";	}		public String toString() {		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1600" _type="ShellCommand" date="Mon Nov 20 15:00:39 EST 2023" starttimestamp="1700507886094" timestamp="2553012" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1602" _type="MoveCaretCommand" caretOffset="248" date="Mon Nov 20 15:00:40 EST 2023" docOffset="365" starttimestamp="1700507886094" timestamp="2554569" />
  <Command __id="1603" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 15:00:42 EST 2023" starttimestamp="1700507886094" timestamp="2556712" />
  <Command __id="1604" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:00:42 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2556810" type="Run" />
  <Command __id="1605" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:00:42 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2556810" type="Run" />
  <Command __id="1606" _type="ShellCommand" date="Mon Nov 20 15:00:43 EST 2023" starttimestamp="1700507886094" timestamp="2557143" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1607" _type="ConsoleOutput" date="Mon Nov 20 15:00:48 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2562852" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test Result:LTECallsTAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):1¶Test Result:LTECallsNilAtomFactory,0.0% complete,0.0,1.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:ToStringAsListCallsHelper,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:ToStringCallsToStringAsList,0.0% complete,0.0,2.0,No checkstyle output, check console error messages¶¶¶Test execution time (ms):0¶Test Result:ToStringAsListHelperIsRecursive,0.0% complete,0.0,2.0,No checkstyle output, check console error messages"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1608" _type="ConsoleOutput" date="Mon Nov 20 15:00:48 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2562853" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1609" _type="ConsoleOutput" date="Mon Nov 20 15:00:48 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2562855" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="1610" _type="ExceptionCommand" date="Mon Nov 20 15:00:48 EST 2023" starttimestamp="1700507886094" timestamp="2562871" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.isList(BasicExpression.java:46)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1611" _type="ConsoleOutput" date="Mon Nov 20 15:00:48 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2562874" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1612" _type="ExceptionCommand" date="Mon Nov 20 15:00:48 EST 2023" starttimestamp="1700507886094" timestamp="2562877" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1613" _type="ConsoleOutput" date="Mon Nov 20 15:00:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2562929" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):30
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java."), Diff(DELETE,"base/java.lang.String.valueOf(String"), Diff(INSERT,"desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"951"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.StringBuilder.append(StringBuild"), Diff(INSERT,"desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"173"), Diff(INSERT,"277"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"77"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:64"), Diff(INSERT,"00"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicPars"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"71"), Diff(INSERT,"2263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"64"), Diff(INSERT,"5011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicPars"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"232"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"4"), Diff(INSERT,"843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicPars"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"77"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicPars"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"53"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicPars"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"15"), Diff(INSERT,"448"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"277"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"19"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(INSERT,"7"), Diff(EQUAL,"2"), Diff(DELETE,"3"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"111"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/java."), Diff(DELETE,"lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(INSERT,"9"), Diff(EQUAL,"5"), Diff(DELETE,"0"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(EQUAL,"7"), Diff(INSERT,"45"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"325"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"28"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"36"), Diff(INSERT,"20"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"9"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):30"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1614" _type="ConsoleOutput" date="Mon Nov 20 15:00:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2562938" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):3"), Diff(INSERT,"Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Index 0 out of bounds for length "), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="1615" _type="ShellCommand" date="Mon Nov 20 15:00:52 EST 2023" starttimestamp="1700507886094" timestamp="2566205" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1617" _type="MoveCaretCommand" caretOffset="767" date="Mon Nov 20 15:00:52 EST 2023" docOffset="767" starttimestamp="1700507886094" timestamp="2566382" />
  <Command __id="1618" _type="ShellCommand" date="Mon Nov 20 15:01:03 EST 2023" starttimestamp="1700507886094" timestamp="2576936" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1619" _type="ShellCommand" date="Mon Nov 20 15:01:03 EST 2023" starttimestamp="1700507886094" timestamp="2577293" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1620" _type="ShellCommand" date="Mon Nov 20 15:01:04 EST 2023" starttimestamp="1700507886094" timestamp="2577988" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1621" _type="ShellCommand" date="Mon Nov 20 15:01:04 EST 2023" starttimestamp="1700507886094" timestamp="2578351" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1622" _type="ShellCommand" date="Mon Nov 20 15:01:04 EST 2023" starttimestamp="1700507886094" timestamp="2578634" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1623" _type="ShellCommand" date="Mon Nov 20 15:01:04 EST 2023" starttimestamp="1700507886094" timestamp="2578845" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1624" _type="ShellCommand" date="Mon Nov 20 15:01:05 EST 2023" starttimestamp="1700507886094" timestamp="2579742" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1625" _type="ConsoleOutput" date="Mon Nov 20 15:01:10 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2584068" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringDeepCheckerBasic@18ece2df . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(INSERT,"Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringDeepCheckerBasic@18ece2df . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1626" _type="LocalChecksRawCommand" date="Mon Nov 20 15:01:10 EST 2023" starttimestamp="1700507886094" timestamp="2584071">
    <CSVRow><![CDATA[30,Mon Nov 20 15:00:48 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,8,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1627" _type="LocalChecksRawCommand" date="Mon Nov 20 15:01:10 EST 2023" starttimestamp="1700507886094" timestamp="2584071">
    <CSVRow><![CDATA[30,Mon Nov 20 15:00:48 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,8,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1628" _type="LocalChecksRawCommand" date="Mon Nov 20 15:01:10 EST 2023" starttimestamp="1700507886094" timestamp="2584071">
    <CSVRow><![CDATA[31,Mon Nov 20 15:01:10 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,8,1,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1629" _type="LocalChecksRawCommand" date="Mon Nov 20 15:01:10 EST 2023" starttimestamp="1700507886094" timestamp="2584071">
    <CSVRow><![CDATA[31,Mon Nov 20 15:01:10 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,8,1,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1630" _type="ShellCommand" date="Mon Nov 20 15:01:19 EST 2023" starttimestamp="1700507886094" timestamp="2592908" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1631" _type="MoveCaretCommand" caretOffset="570" date="Mon Nov 20 15:01:19 EST 2023" docOffset="570" starttimestamp="1700507886094" timestamp="2592978" />
  <Command __id="1632" _type="MoveCaretCommand" caretOffset="570" date="Mon Nov 20 15:01:19 EST 2023" docOffset="570" starttimestamp="1700507886094" timestamp="2592978" />
  <Command __id="1633" _type="MoveCaretCommand" caretOffset="707" date="Mon Nov 20 15:04:30 EST 2023" docOffset="707" starttimestamp="1700507886094" timestamp="2784073" />
  <Command __id="1634" _type="MoveCaretCommand" caretOffset="707" date="Mon Nov 20 15:04:30 EST 2023" docOffset="707" starttimestamp="1700507886094" timestamp="2784073" />
  <Command __id="1635" _type="MoveCaretCommand" caretOffset="851" date="Mon Nov 20 15:04:31 EST 2023" docOffset="851" starttimestamp="1700507886094" timestamp="2785176" />
  <Command __id="1636" _type="MoveCaretCommand" caretOffset="851" date="Mon Nov 20 15:04:31 EST 2023" docOffset="851" starttimestamp="1700507886094" timestamp="2785176" />
  <Command __id="1637" _type="ShellCommand" date="Mon Nov 20 15:04:34 EST 2023" starttimestamp="1700507886094" timestamp="2788399" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1638" _type="ConsoleOutput" date="Mon Nov 20 15:04:35 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2789880" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringDeepCheckerBasic@18ece2df . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringDeepCheckerBasic@18ece2df . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1640" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:04:47 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="2801012">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1643" _type="ShellCommand" date="Mon Nov 20 15:04:50 EST 2023" starttimestamp="1700507886094" timestamp="2803949" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1645" _type="MoveCaretCommand" caretOffset="851" date="Mon Nov 20 15:04:51 EST 2023" docOffset="851" starttimestamp="1700507886094" timestamp="2805491" />
  <Command __id="1646" _type="ShellCommand" date="Mon Nov 20 15:04:53 EST 2023" starttimestamp="1700507886094" timestamp="2807852" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1647" _type="ShellCommand" date="Mon Nov 20 15:04:54 EST 2023" starttimestamp="1700507886094" timestamp="2808417" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1648" _type="ShellCommand" date="Mon Nov 20 15:04:55 EST 2023" starttimestamp="1700507886094" timestamp="2809383" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1644" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:04:51 EST 2023" docASTNodeCount="154" docActiveCodeLength="974" docExpressionCount="110" docLength="1096" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2805448">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1649" _type="ShellCommand" date="Mon Nov 20 15:04:56 EST 2023" starttimestamp="1700507886094" timestamp="2810698" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1650" _type="LocalChecksRawCommand" date="Mon Nov 20 15:04:56 EST 2023" starttimestamp="1700507886094" timestamp="2810700">
    <CSVRow><![CDATA[32,Mon Nov 20 15:04:35 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,8,2,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1651" _type="LocalChecksRawCommand" date="Mon Nov 20 15:04:56 EST 2023" starttimestamp="1700507886094" timestamp="2810700">
    <CSVRow><![CDATA[32,Mon Nov 20 15:04:35 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,8,2,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1652" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:05:05 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2819719">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1653" _type="MoveCaretCommand" caretOffset="248" date="Mon Nov 20 15:05:05 EST 2023" docOffset="365" starttimestamp="1700507886094" timestamp="2819778" />
  <Command __id="1655" _type="MoveCaretCommand" caretOffset="222" date="Mon Nov 20 15:05:06 EST 2023" docOffset="222" starttimestamp="1700507886094" timestamp="2820568" />
  <Command __id="1656" _type="MoveCaretCommand" caretOffset="172" date="Mon Nov 20 15:05:07 EST 2023" docOffset="172" starttimestamp="1700507886094" timestamp="2821726" />
  <Command __id="1657" _type="MoveCaretCommand" caretOffset="182" date="Mon Nov 20 15:05:08 EST 2023" docOffset="182" starttimestamp="1700507886094" timestamp="2822327" />
  <Command __id="1658" _type="MoveCaretCommand" caretOffset="182" date="Mon Nov 20 15:05:09 EST 2023" docOffset="182" starttimestamp="1700507886094" timestamp="2823829" />
  <Command __id="1659" _type="SelectTextCommand" caretOffset="195" date="Mon Nov 20 15:05:10 EST 2023" end="195" start="176" starttimestamp="1700507886094" timestamp="2823993" />
  <Command __id="1661" _type="MoveCaretCommand" caretOffset="851" date="Mon Nov 20 15:05:10 EST 2023" docOffset="851" starttimestamp="1700507886094" timestamp="2824842" />
  <Command __id="1662" _type="MoveCaretCommand" caretOffset="202" date="Mon Nov 20 15:05:32 EST 2023" docOffset="202" starttimestamp="1700507886094" timestamp="2846427" />
  <Command __id="1663" _type="MoveCaretCommand" caretOffset="202" date="Mon Nov 20 15:05:32 EST 2023" docOffset="202" starttimestamp="1700507886094" timestamp="2846427" />
  <Command __id="1664" _type="SelectTextCommand" caretOffset="210" date="Mon Nov 20 15:05:32 EST 2023" end="210" start="202" starttimestamp="1700507886094" timestamp="2846827" />
  <Command __id="1665" _type="SelectTextCommand" caretOffset="210" date="Mon Nov 20 15:05:32 EST 2023" end="210" start="202" starttimestamp="1700507886094" timestamp="2846828" />
  <Command __id="1666" _type="SelectTextCommand" caretOffset="203" date="Mon Nov 20 15:05:33 EST 2023" end="203" start="201" starttimestamp="1700507886094" timestamp="2847012" />
  <Command __id="1667" _type="SelectTextCommand" caretOffset="203" date="Mon Nov 20 15:05:33 EST 2023" end="203" start="201" starttimestamp="1700507886094" timestamp="2847012" />
  <Command __id="1668" _type="MoveCaretCommand" caretOffset="186" date="Mon Nov 20 15:05:33 EST 2023" docOffset="186" starttimestamp="1700507886094" timestamp="2847629" />
  <Command __id="1669" _type="MoveCaretCommand" caretOffset="186" date="Mon Nov 20 15:05:33 EST 2023" docOffset="186" starttimestamp="1700507886094" timestamp="2847629" />
  <Command __id="1670" _type="ShellCommand" date="Mon Nov 20 15:05:34 EST 2023" starttimestamp="1700507886094" timestamp="2848081" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1671" _type="ShellCommand" date="Mon Nov 20 15:05:53 EST 2023" starttimestamp="1700507886094" timestamp="2867895" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1672" _type="ShellCommand" date="Mon Nov 20 15:05:57 EST 2023" starttimestamp="1700507886094" timestamp="2871172" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1673" _type="ShellCommand" date="Mon Nov 20 15:06:07 EST 2023" starttimestamp="1700507886094" timestamp="2881650" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1674" _type="ShellCommand" date="Mon Nov 20 15:06:09 EST 2023" starttimestamp="1700507886094" timestamp="2883351" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1675" _type="ShellCommand" date="Mon Nov 20 15:06:13 EST 2023" starttimestamp="1700507886094" timestamp="2887070" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1676" _type="ShellCommand" date="Mon Nov 20 15:06:13 EST 2023" starttimestamp="1700507886094" timestamp="2887734" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1677" _type="ShellCommand" date="Mon Nov 20 15:06:49 EST 2023" starttimestamp="1700507886094" timestamp="2923197" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1678" _type="ShellCommand" date="Mon Nov 20 15:06:50 EST 2023" starttimestamp="1700507886094" timestamp="2924364" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1679" _type="ShellCommand" date="Mon Nov 20 15:06:50 EST 2023" starttimestamp="1700507886094" timestamp="2924784" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1680" _type="MoveCaretCommand" caretOffset="702" date="Mon Nov 20 15:07:07 EST 2023" docOffset="702" starttimestamp="1700507886094" timestamp="2941013" />
  <Command __id="1681" _type="MoveCaretCommand" caretOffset="702" date="Mon Nov 20 15:07:07 EST 2023" docOffset="702" starttimestamp="1700507886094" timestamp="2941013" />
  <Command __id="1682" _type="MoveCaretCommand" caretOffset="610" date="Mon Nov 20 15:07:07 EST 2023" docOffset="610" starttimestamp="1700507886094" timestamp="2941538" />
  <Command __id="1683" _type="MoveCaretCommand" caretOffset="610" date="Mon Nov 20 15:07:07 EST 2023" docOffset="610" starttimestamp="1700507886094" timestamp="2941538" />
  <Command __id="1684" _type="SelectTextCommand" caretOffset="626" date="Mon Nov 20 15:07:07 EST 2023" end="626" start="601" starttimestamp="1700507886094" timestamp="2941715" />
  <Command __id="1685" _type="SelectTextCommand" caretOffset="626" date="Mon Nov 20 15:07:07 EST 2023" end="626" start="601" starttimestamp="1700507886094" timestamp="2941715" />
  <Command __id="1686" _type="MoveCaretCommand" caretOffset="702" date="Mon Nov 20 15:07:09 EST 2023" docOffset="702" starttimestamp="1700507886094" timestamp="2942929" />
  <Command __id="1687" _type="MoveCaretCommand" caretOffset="702" date="Mon Nov 20 15:07:09 EST 2023" docOffset="702" starttimestamp="1700507886094" timestamp="2942930" />
  <Command __id="1688" _type="MoveCaretCommand" caretOffset="1035" date="Mon Nov 20 15:07:13 EST 2023" docOffset="1035" starttimestamp="1700507886094" timestamp="2947752" />
  <Command __id="1689" _type="MoveCaretCommand" caretOffset="1035" date="Mon Nov 20 15:07:13 EST 2023" docOffset="1035" starttimestamp="1700507886094" timestamp="2947753" />
  <Command __id="1690" _type="SelectTextCommand" caretOffset="1037" date="Mon Nov 20 15:07:13 EST 2023" end="1037" start="1032" starttimestamp="1700507886094" timestamp="2947885" />
  <Command __id="1691" _type="SelectTextCommand" caretOffset="1037" date="Mon Nov 20 15:07:13 EST 2023" end="1037" start="1032" starttimestamp="1700507886094" timestamp="2947885" />
  <Command __id="1692" _type="MoveCaretCommand" caretOffset="1019" date="Mon Nov 20 15:07:14 EST 2023" docOffset="1019" starttimestamp="1700507886094" timestamp="2948618" />
  <Command __id="1693" _type="MoveCaretCommand" caretOffset="1019" date="Mon Nov 20 15:07:14 EST 2023" docOffset="1019" starttimestamp="1700507886094" timestamp="2948618" />
  <Command __id="1694" _type="SelectTextCommand" caretOffset="1021" date="Mon Nov 20 15:07:14 EST 2023" end="1021" start="1016" starttimestamp="1700507886094" timestamp="2948768" />
  <Command __id="1695" _type="SelectTextCommand" caretOffset="1021" date="Mon Nov 20 15:07:14 EST 2023" end="1021" start="1016" starttimestamp="1700507886094" timestamp="2948768" />
  <Command __id="1697" _type="InsertStringCommand" date="Mon Nov 20 15:07:15 EST 2023" starttimestamp="1700507886094" timestamp="2949512" timestamp2="2949512">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1698" _type="InsertStringCommand" date="Mon Nov 20 15:07:15 EST 2023" starttimestamp="1700507886094" timestamp="2949512" timestamp2="2949512">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1700" _type="InsertStringCommand" date="Mon Nov 20 15:07:15 EST 2023" starttimestamp="1700507886094" timestamp="2949590" timestamp2="2949590">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1701" _type="InsertStringCommand" date="Mon Nov 20 15:07:15 EST 2023" starttimestamp="1700507886094" timestamp="2949590" timestamp2="2949590">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1703" _type="InsertStringCommand" date="Mon Nov 20 15:07:15 EST 2023" starttimestamp="1700507886094" timestamp="2949640" timestamp2="2949640">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1704" _type="InsertStringCommand" date="Mon Nov 20 15:07:15 EST 2023" starttimestamp="1700507886094" timestamp="2949640" timestamp2="2949640">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1706" _type="InsertStringCommand" date="Mon Nov 20 15:07:15 EST 2023" starttimestamp="1700507886094" timestamp="2949675" timestamp2="2949675">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1707" _type="InsertStringCommand" date="Mon Nov 20 15:07:15 EST 2023" starttimestamp="1700507886094" timestamp="2949675" timestamp2="2949675">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1708" _type="MoveCaretCommand" caretOffset="1034" date="Mon Nov 20 15:07:16 EST 2023" docOffset="1034" starttimestamp="1700507886094" timestamp="2950785" />
  <Command __id="1709" _type="MoveCaretCommand" caretOffset="1034" date="Mon Nov 20 15:07:16 EST 2023" docOffset="1034" starttimestamp="1700507886094" timestamp="2950786" />
  <Command __id="1710" _type="SelectTextCommand" caretOffset="1036" date="Mon Nov 20 15:07:17 EST 2023" end="1036" start="1031" starttimestamp="1700507886094" timestamp="2950951" />
  <Command __id="1711" _type="SelectTextCommand" caretOffset="1036" date="Mon Nov 20 15:07:17 EST 2023" end="1036" start="1031" starttimestamp="1700507886094" timestamp="2950951" />
  <Command __id="1713" _type="InsertStringCommand" date="Mon Nov 20 15:07:17 EST 2023" starttimestamp="1700507886094" timestamp="2951025" timestamp2="2951025">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1714" _type="InsertStringCommand" date="Mon Nov 20 15:07:17 EST 2023" starttimestamp="1700507886094" timestamp="2951025" timestamp2="2951025">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1716" _type="InsertStringCommand" date="Mon Nov 20 15:07:17 EST 2023" starttimestamp="1700507886094" timestamp="2951133" timestamp2="2951133">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1717" _type="InsertStringCommand" date="Mon Nov 20 15:07:17 EST 2023" starttimestamp="1700507886094" timestamp="2951133" timestamp2="2951133">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1719" _type="InsertStringCommand" date="Mon Nov 20 15:07:17 EST 2023" starttimestamp="1700507886094" timestamp="2951193" timestamp2="2951193">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1720" _type="InsertStringCommand" date="Mon Nov 20 15:07:17 EST 2023" starttimestamp="1700507886094" timestamp="2951193" timestamp2="2951193">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1722" _type="InsertStringCommand" date="Mon Nov 20 15:07:17 EST 2023" starttimestamp="1700507886094" timestamp="2951228" timestamp2="2951228">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1723" _type="InsertStringCommand" date="Mon Nov 20 15:07:17 EST 2023" starttimestamp="1700507886094" timestamp="2951228" timestamp2="2951228">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1724" _type="MoveCaretCommand" caretOffset="1056" date="Mon Nov 20 15:07:18 EST 2023" docOffset="1056" starttimestamp="1700507886094" timestamp="2952002" />
  <Command __id="1725" _type="MoveCaretCommand" caretOffset="1056" date="Mon Nov 20 15:07:18 EST 2023" docOffset="1056" starttimestamp="1700507886094" timestamp="2952002" />
  <Command __id="1726" _type="SelectTextCommand" caretOffset="1060" date="Mon Nov 20 15:07:18 EST 2023" end="1060" start="1055" starttimestamp="1700507886094" timestamp="2952150" />
  <Command __id="1727" _type="SelectTextCommand" caretOffset="1060" date="Mon Nov 20 15:07:18 EST 2023" end="1060" start="1055" starttimestamp="1700507886094" timestamp="2952150" />
  <Command __id="1729" _type="InsertStringCommand" date="Mon Nov 20 15:07:18 EST 2023" starttimestamp="1700507886094" timestamp="2952216" timestamp2="2952216">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1730" _type="InsertStringCommand" date="Mon Nov 20 15:07:18 EST 2023" starttimestamp="1700507886094" timestamp="2952216" timestamp2="2952216">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1732" _type="InsertStringCommand" date="Mon Nov 20 15:07:18 EST 2023" starttimestamp="1700507886094" timestamp="2952325" timestamp2="2952325">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1733" _type="InsertStringCommand" date="Mon Nov 20 15:07:18 EST 2023" starttimestamp="1700507886094" timestamp="2952326" timestamp2="2952326">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1735" _type="InsertStringCommand" date="Mon Nov 20 15:07:18 EST 2023" starttimestamp="1700507886094" timestamp="2952384" timestamp2="2952384">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1736" _type="InsertStringCommand" date="Mon Nov 20 15:07:18 EST 2023" starttimestamp="1700507886094" timestamp="2952384" timestamp2="2952384">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1738" _type="InsertStringCommand" date="Mon Nov 20 15:07:18 EST 2023" starttimestamp="1700507886094" timestamp="2952425" timestamp2="2952425">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1739" _type="InsertStringCommand" date="Mon Nov 20 15:07:18 EST 2023" starttimestamp="1700507886094" timestamp="2952426" timestamp2="2952426">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1740" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:07:18 EST 2023" docOffset="978" starttimestamp="1700507886094" timestamp="2952819" />
  <Command __id="1741" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:07:18 EST 2023" docOffset="978" starttimestamp="1700507886094" timestamp="2952821" />
  <Command __id="1742" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:07:19 EST 2023" starttimestamp="1700507886094" timestamp="2952943" />
  <Command __id="1743" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:07:19 EST 2023" starttimestamp="1700507886094" timestamp="2953046" />
  <Command __id="1744" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:07:19 EST 2023" starttimestamp="1700507886094" timestamp="2953054" />
  <Command __id="1745" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:07:21 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="2955849" />
  <Command __id="1746" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:07:21 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="2955849" />
  <Command __id="1748" _type="MoveCaretCommand" caretOffset="248" date="Mon Nov 20 15:07:22 EST 2023" docOffset="365" starttimestamp="1700507886094" timestamp="2956773" />
  <Command __id="1749" _type="ShellCommand" date="Mon Nov 20 15:07:23 EST 2023" starttimestamp="1700507886094" timestamp="2957623" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1750" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:07:24 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2957911" type="Run" />
  <Command __id="1751" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:07:24 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2957911" type="Run" />
  <Command __id="1752" _type="ShellCommand" date="Mon Nov 20 15:07:24 EST 2023" starttimestamp="1700507886094" timestamp="2957921" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1753" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 15:07:26 EST 2023" starttimestamp="1700507886094" timestamp="2960687" />
  <Command __id="1754" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:07:26 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2960824" type="Run" />
  <Command __id="1755" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:07:26 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2960824" type="Run" />
  <Command __id="1756" _type="ShellCommand" date="Mon Nov 20 15:07:27 EST 2023" starttimestamp="1700507886094" timestamp="2961124" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1757" _type="ConsoleOutput" date="Mon Nov 20 15:07:30 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2963936" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringDeepCheckerBasic@18ece2df . Results may change."), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1758" _type="ConsoleOutput" date="Mon Nov 20 15:07:30 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2963939" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1759" _type="ExceptionCommand" date="Mon Nov 20 15:07:30 EST 2023" starttimestamp="1700507886094" timestamp="2963954" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1760" _type="ConsoleOutput" date="Mon Nov 20 15:07:30 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2963958" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1761" _type="ConsoleOutput" date="Mon Nov 20 15:07:30 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="2964019" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.base/java.lang.StringBuilder.append(StringBuilder"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(EQUAL,".java:1"), Diff(DELETE,"73"), Diff(INSERT,"91"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"79"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"77"), Diff(INSERT,"270"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicPars"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"77"), Diff(INSERT,"1444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseStart(BasicParser"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"53"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parse(BasicPars"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndo"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"99"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.giveToken(BasicPars"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:1"), Diff(DELETE,"58"), Diff(INSERT,"906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"72"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:1"), Diff(DELETE,"9"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:4"), Diff(DELETE,"4"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"31"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk."), Diff(INSERT,"desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Conta"), Diff(EQUAL,"in"), Diff(DELETE,"t"), Diff(EQUAL,"er"), Diff(DELETE,"nal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,".processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"5011"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk."), Diff(INSERT,"desktop/java.awt.Conta"), Diff(EQUAL,"in"), Diff(DELETE,"t"), Diff(EQUAL,"er"), Diff(DELETE,"nal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,".dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(INSERT,"48"), Diff(EQUAL,"43)¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"7"), Diff(INSERT,"21"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"32"), Diff(INSERT,"71"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"7"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(INSERT,"9"), Diff(EQUAL,"5"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"1"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"28"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:2"), Diff(DELETE,"68"), Diff(INSERT,"03"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"348"), Diff(INSERT,"90"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1762" _type="ExceptionCommand" date="Mon Nov 20 15:07:30 EST 2023" starttimestamp="1700507886094" timestamp="2964024" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):29
Test Result:BaseCaseSExpressionToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5 . 2)actual string 

java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1763" _type="ShellCommand" date="Mon Nov 20 15:07:33 EST 2023" starttimestamp="1700507886094" timestamp="2967024" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1764" _type="LocalChecksRawCommand" date="Mon Nov 20 15:07:33 EST 2023" starttimestamp="1700507886094" timestamp="2967026">
    <CSVRow><![CDATA[33,Mon Nov 20 15:07:30 EST 2023,3,0,A5ToStringSuite,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,9,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1765" _type="LocalChecksRawCommand" date="Mon Nov 20 15:07:33 EST 2023" starttimestamp="1700507886094" timestamp="2967026">
    <CSVRow><![CDATA[33,Mon Nov 20 15:07:30 EST 2023,3,0,A5ToStringSuite,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,9,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1654" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:05:06 EST 2023" docASTNodeCount="43" docActiveCodeLength="229" docExpressionCount="26" docLength="229" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2820531">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/main.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;"), Diff(INSERT,"import main.lisp.parser.terms.ExpressionFactory;"), Diff(EQUAL,"public class main {	public static void main(String[] args) {		"), Diff(INSERT,"ExpressionFactory.setClass(BasicExpressionImpl.class);		"), Diff(EQUAL,"Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;
import main.lisp.parser.terms.ExpressionFactory;

public class main {

	public static void main(String[] args) {
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <Command __id="1660" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:05:10 EST 2023" docASTNodeCount="154" docActiveCodeLength="974" docExpressionCount="110" docLength="1096" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2824789">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return super.isList()? super.toStringAsList() : super.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1696" _type="Replace" date="Mon Nov 20 15:07:15 EST 2023" docASTNodeCount="155" docActiveCodeLength="970" docExpressionCount="111" docLength="1092" endLine="39" insertionLength="1" int_docASTNodeCount="154" int_docActiveCodeLength="969" int_docExpressionCount="110" int_docLength="1091" length="5" offset="1016" startLine="39" starttimestamp="1700507886094" timestamp="2949504">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1699" _type="Insert" date="Mon Nov 20 15:07:15 EST 2023" docASTNodeCount="155" docActiveCodeLength="973" docExpressionCount="111" docLength="1095" length="3" offset="1017" repeat="3" starttimestamp="1700507886094" timestamp="2949588" timestamp2="2949674">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="1712" _type="Replace" date="Mon Nov 20 15:07:17 EST 2023" docASTNodeCount="156" docActiveCodeLength="969" docExpressionCount="112" docLength="1091" endLine="39" insertionLength="1" int_docASTNodeCount="155" int_docActiveCodeLength="968" int_docExpressionCount="111" int_docLength="1090" length="5" offset="1031" startLine="39" starttimestamp="1700507886094" timestamp="2951020">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1715" _type="Insert" date="Mon Nov 20 15:07:17 EST 2023" docASTNodeCount="156" docActiveCodeLength="972" docExpressionCount="112" docLength="1094" length="3" offset="1032" repeat="3" starttimestamp="1700507886094" timestamp="2951131" timestamp2="2951225">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="1728" _type="Replace" date="Mon Nov 20 15:07:18 EST 2023" docASTNodeCount="157" docActiveCodeLength="968" docExpressionCount="113" docLength="1090" endLine="39" insertionLength="1" int_docASTNodeCount="156" int_docActiveCodeLength="967" int_docExpressionCount="112" int_docLength="1089" length="5" offset="1055" startLine="39" starttimestamp="1700507886094" timestamp="2952211">
    <deletedText><![CDATA[super]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1731" _type="Insert" date="Mon Nov 20 15:07:18 EST 2023" docASTNodeCount="157" docActiveCodeLength="971" docExpressionCount="113" docLength="1093" length="3" offset="1056" repeat="3" starttimestamp="1700507886094" timestamp="2952322" timestamp2="2952423">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <Command __id="1747" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:07:22 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2956713">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1770" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:07:45 EST 2023" docASTNodeCount="157" docActiveCodeLength="971" docExpressionCount="113" docLength="1093" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2979624">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return "), Diff(DELETE,"super"), Diff(INSERT,"this"), Diff(EQUAL,".isList()? "), Diff(DELETE,"super"), Diff(INSERT,"this"), Diff(EQUAL,".toStringAsList() : "), Diff(DELETE,"super"), Diff(INSERT,"this"), Diff(EQUAL,".toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {
			return true;
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
//	public String toStringAsList() {
//		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
//	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}



}
]]></snapshot>
  </Command>
  <Command __id="1772" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:07:46 EST 2023" docASTNodeCount="43" docActiveCodeLength="229" docExpressionCount="26" docLength="229" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2980665">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/main.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class main {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1774" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:07:50 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2984245">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1776" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:07:51 EST 2023" docASTNodeCount="157" docActiveCodeLength="971" docExpressionCount="113" docLength="1093" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2985328">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1778" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:07:55 EST 2023" docASTNodeCount="248" docActiveCodeLength="1577" docExpressionCount="119" docLength="2087" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2989242">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return main.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1766" _type="ShellCommand" date="Mon Nov 20 15:07:44 EST 2023" starttimestamp="1700507886094" timestamp="2978590" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1767" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:07:44 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2978833" type="Run" />
  <Command __id="1768" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:07:44 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2978833" type="Run" />
  <Command __id="1769" _type="ShellCommand" date="Mon Nov 20 15:07:44 EST 2023" starttimestamp="1700507886094" timestamp="2978842" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1771" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:07:45 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="2979669" />
  <Command __id="1773" _type="SelectTextCommand" caretOffset="195" date="Mon Nov 20 15:07:46 EST 2023" end="195" start="176" starttimestamp="1700507886094" timestamp="2980718" />
  <Command __id="1775" _type="MoveCaretCommand" caretOffset="248" date="Mon Nov 20 15:07:50 EST 2023" docOffset="365" starttimestamp="1700507886094" timestamp="2984292" />
  <Command __id="1777" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:07:51 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="2985370" />
  <Command __id="1779" _type="MoveCaretCommand" caretOffset="1951" date="Mon Nov 20 15:07:55 EST 2023" docOffset="2080" starttimestamp="1700507886094" timestamp="2989290" />
  <Command __id="1781" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:08:02 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="2996724" />
  <Command __id="1783" _type="MoveCaretCommand" caretOffset="248" date="Mon Nov 20 15:08:03 EST 2023" docOffset="365" starttimestamp="1700507886094" timestamp="2997672" />
  <Command __id="1780" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:08:02 EST 2023" docASTNodeCount="157" docActiveCodeLength="971" docExpressionCount="113" docLength="1093" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2996678">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1782" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:08:03 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="2997631">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1787" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:08:11 EST 2023" docASTNodeCount="157" docActiveCodeLength="971" docExpressionCount="113" docLength="1093" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3005405">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1784" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 15:08:09 EST 2023" docOffset="368" starttimestamp="1700507886094" timestamp="3003853" />
  <Command __id="1785" _type="MoveCaretCommand" caretOffset="136" date="Mon Nov 20 15:08:10 EST 2023" docOffset="253" starttimestamp="1700507886094" timestamp="3004336" />
  <Command __id="1786" _type="MoveCaretCommand" caretOffset="54" date="Mon Nov 20 15:08:10 EST 2023" docOffset="54" starttimestamp="1700507886094" timestamp="3004834" />
  <Command __id="1788" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:08:11 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="3005439" />
  <Command __id="1790" _type="MoveCaretCommand" caretOffset="1951" date="Mon Nov 20 15:08:14 EST 2023" docOffset="2080" starttimestamp="1700507886094" timestamp="3008770" />
  <Command __id="1789" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:08:14 EST 2023" docASTNodeCount="248" docActiveCodeLength="1577" docExpressionCount="119" docLength="2087" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3008716">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return main.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return null;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1791" _type="MoveCaretCommand" caretOffset="1949" date="Mon Nov 20 15:08:19 EST 2023" docOffset="2078" starttimestamp="1700507886094" timestamp="3013223" />
  <Command __id="1792" _type="SelectTextCommand" caretOffset="1950" date="Mon Nov 20 15:08:19 EST 2023" end="1950" start="1946" starttimestamp="1700507886094" timestamp="3013371" />
  <DocumentChange __id="1793" _type="Replace" date="Mon Nov 20 15:08:22 EST 2023" docASTNodeCount="248" docActiveCodeLength="1574" docExpressionCount="119" docLength="2084" endLine="96" insertionLength="1" int_docASTNodeCount="247" int_docActiveCodeLength="1573" int_docExpressionCount="118" int_docLength="2083" length="4" offset="2075" startLine="96" starttimestamp="1700507886094" timestamp="3016849">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[B]]></insertedText>
  </DocumentChange>
  <Command __id="1794" _type="InsertStringCommand" date="Mon Nov 20 15:08:22 EST 2023" starttimestamp="1700507886094" timestamp="3016856" timestamp2="3016856">
    <data><![CDATA[B]]></data>
  </Command>
  <DocumentChange __id="1795" _type="Insert" date="Mon Nov 20 15:08:23 EST 2023" docASTNodeCount="250" docActiveCodeLength="1593" docExpressionCount="120" docLength="2103" length="19" offset="2076" repeat="19" starttimestamp="1700507886094" timestamp="3017100" timestamp2="3019938">
    <text><![CDATA[asicExpressionImpl.]]></text>
  </DocumentChange>
  <Command __id="1796" _type="InsertStringCommand" date="Mon Nov 20 15:08:23 EST 2023" starttimestamp="1700507886094" timestamp="3017102" timestamp2="3017102">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1798" _type="InsertStringCommand" date="Mon Nov 20 15:08:23 EST 2023" starttimestamp="1700507886094" timestamp="3017282" timestamp2="3017282">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1800" _type="InsertStringCommand" date="Mon Nov 20 15:08:23 EST 2023" starttimestamp="1700507886094" timestamp="3017419" timestamp2="3017419">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1802" _type="InsertStringCommand" date="Mon Nov 20 15:08:23 EST 2023" starttimestamp="1700507886094" timestamp="3017483" timestamp2="3017483">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1804" _type="InsertStringCommand" date="Mon Nov 20 15:08:23 EST 2023" starttimestamp="1700507886094" timestamp="3017780" timestamp2="3017780">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1806" _type="InsertStringCommand" date="Mon Nov 20 15:08:24 EST 2023" starttimestamp="1700507886094" timestamp="3018011" timestamp2="3018011">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1808" _type="InsertStringCommand" date="Mon Nov 20 15:08:24 EST 2023" starttimestamp="1700507886094" timestamp="3018411" timestamp2="3018411">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1810" _type="InsertStringCommand" date="Mon Nov 20 15:08:24 EST 2023" starttimestamp="1700507886094" timestamp="3018481" timestamp2="3018481">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1812" _type="InsertStringCommand" date="Mon Nov 20 15:08:24 EST 2023" starttimestamp="1700507886094" timestamp="3018538" timestamp2="3018538">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1814" _type="InsertStringCommand" date="Mon Nov 20 15:08:24 EST 2023" starttimestamp="1700507886094" timestamp="3018726" timestamp2="3018726">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1816" _type="InsertStringCommand" date="Mon Nov 20 15:08:24 EST 2023" starttimestamp="1700507886094" timestamp="3018896" timestamp2="3018896">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1818" _type="InsertStringCommand" date="Mon Nov 20 15:08:25 EST 2023" starttimestamp="1700507886094" timestamp="3019016" timestamp2="3019016">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1820" _type="InsertStringCommand" date="Mon Nov 20 15:08:25 EST 2023" starttimestamp="1700507886094" timestamp="3019069" timestamp2="3019069">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1822" _type="InsertStringCommand" date="Mon Nov 20 15:08:25 EST 2023" starttimestamp="1700507886094" timestamp="3019136" timestamp2="3019136">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1824" _type="InsertStringCommand" date="Mon Nov 20 15:08:25 EST 2023" starttimestamp="1700507886094" timestamp="3019329" timestamp2="3019329">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1826" _type="InsertStringCommand" date="Mon Nov 20 15:08:25 EST 2023" starttimestamp="1700507886094" timestamp="3019475" timestamp2="3019475">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1828" _type="InsertStringCommand" date="Mon Nov 20 15:08:25 EST 2023" starttimestamp="1700507886094" timestamp="3019586" timestamp2="3019586">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1830" _type="InsertStringCommand" date="Mon Nov 20 15:08:25 EST 2023" starttimestamp="1700507886094" timestamp="3019758" timestamp2="3019758">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1832" _type="InsertStringCommand" date="Mon Nov 20 15:08:26 EST 2023" starttimestamp="1700507886094" timestamp="3019941" timestamp2="3019941">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1833" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:08:26 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="3019948" />
  <DocumentChange __id="1834" _type="Delete" date="Mon Nov 20 15:08:27 EST 2023" docASTNodeCount="248" docActiveCodeLength="1591" docExpressionCount="119" docLength="2101" endLine="96" length="2" offset="2093" repeat="2" startLine="96" starttimestamp="1700507886094" timestamp="3021015" timestamp2="3021127">
    <text><![CDATA[l.]]></text>
  </DocumentChange>
  <DocumentChange __id="1836" _type="Insert" date="Mon Nov 20 15:08:27 EST 2023" docASTNodeCount="248" docActiveCodeLength="1592" docExpressionCount="119" docLength="2102" length="1" offset="2093" starttimestamp="1700507886094" timestamp="3021814">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="1837" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:08:28 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="3021988" />
  <DocumentChange __id="1838" _type="Replace" date="Mon Nov 20 15:08:28 EST 2023" docASTNodeCount="250" docActiveCodeLength="1593" docExpressionCount="120" docLength="2103" endLine="96" insertionLength="20" int_docASTNodeCount="247" int_docActiveCodeLength="1573" int_docExpressionCount="118" int_docLength="2083" length="19" offset="2075" startLine="96" starttimestamp="1700507886094" timestamp="3021991">
    <deletedText><![CDATA[BasicExpressionImpl]]></deletedText>
    <insertedText><![CDATA[BasicExpressionImpl.]]></insertedText>
  </DocumentChange>
  <Command __id="1839" _type="InsertStringCommand" date="Mon Nov 20 15:08:28 EST 2023" starttimestamp="1700507886094" timestamp="3021999" timestamp2="3021999">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1840" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:08:28 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="3022011" />
  <DocumentChange __id="1841" _type="Insert" date="Mon Nov 20 15:08:28 EST 2023" docASTNodeCount="250" docActiveCodeLength="1597" docExpressionCount="121" docLength="2107" length="4" offset="2095" repeat="4" starttimestamp="1700507886094" timestamp="3022557" timestamp2="3022968">
    <text><![CDATA[clas]]></text>
  </DocumentChange>
  <Command __id="1845" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:08:29 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="3023090" />
  <DocumentChange __id="1846" _type="Replace" date="Mon Nov 20 15:08:29 EST 2023" docASTNodeCount="250" docActiveCodeLength="1598" docExpressionCount="120" docLength="2108" endLine="96" insertionLength="5" int_docASTNodeCount="250" int_docActiveCodeLength="1593" int_docExpressionCount="120" int_docLength="2103" length="4" offset="2095" startLine="96" starttimestamp="1700507886094" timestamp="3023093">
    <deletedText><![CDATA[clas]]></deletedText>
    <insertedText><![CDATA[class]]></insertedText>
  </DocumentChange>
  <Command __id="1847" _type="InsertStringCommand" date="Mon Nov 20 15:08:29 EST 2023" starttimestamp="1700507886094" timestamp="3023098" timestamp2="3023098">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1848" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:08:30 EST 2023" starttimestamp="1700507886094" timestamp="3023980" />
  <Command __id="1849" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:08:30 EST 2023" starttimestamp="1700507886094" timestamp="3024081" />
  <Command __id="1850" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:08:30 EST 2023" starttimestamp="1700507886094" timestamp="3024089" />
  <Command __id="1852" _type="MoveCaretCommand" caretOffset="54" date="Mon Nov 20 15:08:31 EST 2023" docOffset="54" starttimestamp="1700507886094" timestamp="3025427" />
  <Command __id="1853" _type="MoveCaretCommand" caretOffset="177" date="Mon Nov 20 15:08:31 EST 2023" docOffset="294" starttimestamp="1700507886094" timestamp="3025789" />
  <Command __id="1854" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 15:08:34 EST 2023" starttimestamp="1700507886094" timestamp="3028750" />
  <Command __id="1855" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:08:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3028865" type="Run" />
  <Command __id="1856" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:08:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3028865" type="Run" />
  <Command __id="1857" _type="ShellCommand" date="Mon Nov 20 15:08:35 EST 2023" starttimestamp="1700507886094" timestamp="3029175" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1858" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031311" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1859" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031312" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1860" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031313" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1861" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031313" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1862" _type="ExceptionCommand" date="Mon Nov 20 15:08:37 EST 2023" starttimestamp="1700507886094" timestamp="3031328" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1863" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031332" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1864" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031336" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):28
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)"), Diff(INSERT,"Test execution time (ms):28"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1865" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031336" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5 . 2)actual string 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):28"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5 . 2)actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1866" _type="ExceptionCommand" date="Mon Nov 20 15:08:37 EST 2023" starttimestamp="1700507886094" timestamp="3031338" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1867" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031339" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5 . 2)actual string "), Diff(INSERT,"	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)¶	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1868" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031354" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.BasicExpressionImpl.toString(BasicExpressionImpl"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(EQUAL,".java:4"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.String.valueOf(String"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(EQUAL,".java:"), Diff(DELETE,"295"), Diff(INSERT,"11"), Diff(EQUAL,"1)¶	at java.base/j"), Diff(DELETE,"ava.lang.StringBuilder.append(StringBuilder"), Diff(INSERT,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"4"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s."), Diff(DELETE,"ExpressionFactory.newInstance(ExpressionFactory"), Diff(INSERT,"model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicPars"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(EQUAL,"er.java:7"), Diff(DELETE,"9"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicPars"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:7"), Diff(DELETE,"7"), Diff(INSERT,"1"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicPars"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"77"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseStart(BasicParser"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"3"), Diff(INSERT,"17"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.pars"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grad"), Diff(EQUAL,"er."), Diff(DELETE,"B"), Diff(INSERT,"b"), Diff(EQUAL,"asic"), Diff(DELETE,"Parser.parse(BasicParser"), Diff(INSERT,"s.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.giveToken(BasicPars"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:1"), Diff(DELETE,"58"), Diff(INSERT,"444"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"72"), Diff(INSERT,"1406"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1869" _type="ExceptionCommand" date="Mon Nov 20 15:08:37 EST 2023" starttimestamp="1700507886094" timestamp="3031358" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 

java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1870" _type="ConsoleOutput" date="Mon Nov 20 15:08:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3031410" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInput"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticas"), Diff(EQUAL,"ter.java:"), Diff(DELETE,"69"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInput"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticas"), Diff(EQUAL,"ter.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"19"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"2263"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"5011"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"2321"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"325"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(INSERT,"230"), Diff(EQUAL,"7"), Diff(DELETE,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"57"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"1"), Diff(INSERT,"72"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(INSERT,"71"), Diff(EQUAL,"5"), Diff(DELETE,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"348"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMetho"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThrea"), Diff(EQUAL,"d.java:2"), Diff(DELETE,"7"), Diff(EQUAL,"0"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"44"), Diff(INSERT,"2"), Diff(EQUAL,"4)¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"113"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(INSERT,"0"), Diff(EQUAL,"9"), Diff(DELETE,"06"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"7"), Diff(EQUAL,"01)¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1871" _type="ConsoleOutput" date="Mon Nov 20 15:08:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3035152" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f19.assignment1.testcases.toString.BaseCaseSExpressionToStringChecker@2a3c8381 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(INSERT,"Re-running test gradingTools.comp524f19.assignment1.testcases.toString.BaseCaseSExpressionToStringChecker@2a3c8381 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1872" _type="ConsoleOutput" date="Mon Nov 20 15:08:46 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3040440" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringDeepCheckerBasic@62d1e51f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f"), Diff(INSERT,"2"), Diff(EQUAL,"1"), Diff(DELETE,"9"), Diff(EQUAL,".assignment"), Diff(DELETE,"1.testcases.toString.BaseCaseSExpression"), Diff(INSERT,"5.toString.List"), Diff(EQUAL,"ToString"), Diff(INSERT,"Deep"), Diff(EQUAL,"Checker"), Diff(DELETE,"@2a3c8381"), Diff(INSERT,"Basic@62d1e51f"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1873" _type="ConsoleOutput" date="Mon Nov 20 15:08:51 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3045621" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f19.assignment1.testcases.toString.BaseCaseListToStringChecker@21ffbe7f . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f"), Diff(DELETE,"2"), Diff(EQUAL,"1"), Diff(INSERT,"9"), Diff(EQUAL,".assignment"), Diff(DELETE,"5"), Diff(INSERT,"1.testcases"), Diff(EQUAL,".toString."), Diff(INSERT,"BaseCase"), Diff(EQUAL,"ListToString"), Diff(DELETE,"Deep"), Diff(EQUAL,"Checker"), Diff(DELETE,"Basic@62d1e51"), Diff(INSERT,"@21ffbe7"), Diff(EQUAL,"f . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1874" _type="ConsoleOutput" date="Mon Nov 20 15:08:55 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3048992" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringCheckerBasic@3746ea7b . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp524f"), Diff(INSERT,"2"), Diff(EQUAL,"1"), Diff(DELETE,"9"), Diff(EQUAL,".assignment"), Diff(DELETE,"1.testcases"), Diff(INSERT,"5"), Diff(EQUAL,".toString."), Diff(DELETE,"BaseCase"), Diff(EQUAL,"ListToStringChecker"), Diff(DELETE,"@21ffbe7f"), Diff(INSERT,"Basic@3746ea7b"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="1851" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:08:31 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3025383">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1875" _type="ShellCommand" date="Mon Nov 20 15:08:57 EST 2023" starttimestamp="1700507886094" timestamp="3051169" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1876" _type="MoveCaretCommand" caretOffset="200" date="Mon Nov 20 15:08:57 EST 2023" docOffset="317" starttimestamp="1700507886094" timestamp="3051241" />
  <Command __id="1877" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:08:59 EST 2023" docASTNodeCount="157" docActiveCodeLength="971" docExpressionCount="113" docLength="1093" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3053114">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1878" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:08:59 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="3053157" />
  <Command __id="1879" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:09:07 EST 2023" docASTNodeCount="250" docActiveCodeLength="1598" docExpressionCount="120" docLength="2108" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3061117">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return main.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"null"), Diff(INSERT,"BasicExpressionImpl.class"), Diff(EQUAL,";	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return main.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="1880" _type="MoveCaretCommand" caretOffset="1971" date="Mon Nov 20 15:09:07 EST 2023" docOffset="2100" starttimestamp="1700507886094" timestamp="3061161" />
  <Command __id="1882" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:09:07 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="3061745" />
  <Command __id="1883" _type="ShellCommand" date="Mon Nov 20 15:09:08 EST 2023" starttimestamp="1700507886094" timestamp="3062598" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1884" _type="ShellCommand" date="Mon Nov 20 15:11:52 EST 2023" starttimestamp="1700507886094" timestamp="3226144" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1885" _type="LocalChecksRawCommand" date="Mon Nov 20 15:11:52 EST 2023" starttimestamp="1700507886094" timestamp="3226149">
    <CSVRow><![CDATA[35,Mon Nov 20 15:08:41 EST 2023,3,0,BaseCaseSExpressionToStringChecker,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,10,1,false, , , ,BaseCaseSExpressionToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1886" _type="LocalChecksRawCommand" date="Mon Nov 20 15:11:52 EST 2023" starttimestamp="1700507886094" timestamp="3226149">
    <CSVRow><![CDATA[35,Mon Nov 20 15:08:41 EST 2023,3,0,BaseCaseSExpressionToStringChecker,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,10,1,false, , , ,BaseCaseSExpressionToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1887" _type="LocalChecksRawCommand" date="Mon Nov 20 15:11:52 EST 2023" starttimestamp="1700507886094" timestamp="3226149">
    <CSVRow><![CDATA[36,Mon Nov 20 15:08:46 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,10,2,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1888" _type="LocalChecksRawCommand" date="Mon Nov 20 15:11:52 EST 2023" starttimestamp="1700507886094" timestamp="3226149">
    <CSVRow><![CDATA[36,Mon Nov 20 15:08:46 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,10,2,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1889" _type="LocalChecksRawCommand" date="Mon Nov 20 15:11:52 EST 2023" starttimestamp="1700507886094" timestamp="3226149">
    <CSVRow><![CDATA[37,Mon Nov 20 15:08:51 EST 2023,3,0,BaseCaseListToStringChecker,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,10,3,false, , , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1890" _type="LocalChecksRawCommand" date="Mon Nov 20 15:11:52 EST 2023" starttimestamp="1700507886094" timestamp="3226149">
    <CSVRow><![CDATA[37,Mon Nov 20 15:08:51 EST 2023,3,0,BaseCaseListToStringChecker,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,10,3,false, , , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1891" _type="LocalChecksRawCommand" date="Mon Nov 20 15:11:52 EST 2023" starttimestamp="1700507886094" timestamp="3226149">
    <CSVRow><![CDATA[38,Mon Nov 20 15:08:55 EST 2023,3,0,ListToStringCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,10,4,false, , , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1892" _type="LocalChecksRawCommand" date="Mon Nov 20 15:11:52 EST 2023" starttimestamp="1700507886094" timestamp="3226149">
    <CSVRow><![CDATA[38,Mon Nov 20 15:08:55 EST 2023,3,0,ListToStringCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,10,4,false, , , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1893" _type="MoveCaretCommand" caretOffset="189" date="Mon Nov 20 15:11:57 EST 2023" docOffset="189" starttimestamp="1700507886094" timestamp="3231635" />
  <Command __id="1894" _type="MoveCaretCommand" caretOffset="189" date="Mon Nov 20 15:11:57 EST 2023" docOffset="189" starttimestamp="1700507886094" timestamp="3231635" />
  <Command __id="1895" _type="SelectTextCommand" caretOffset="199" date="Mon Nov 20 15:11:57 EST 2023" end="199" start="184" starttimestamp="1700507886094" timestamp="3231781" />
  <Command __id="1896" _type="SelectTextCommand" caretOffset="199" date="Mon Nov 20 15:11:57 EST 2023" end="199" start="184" starttimestamp="1700507886094" timestamp="3231781" />
  <Command __id="1897" _type="ShellCommand" date="Mon Nov 20 15:11:59 EST 2023" starttimestamp="1700507886094" timestamp="3232966" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1898" _type="ShellCommand" date="Mon Nov 20 15:11:59 EST 2023" starttimestamp="1700507886094" timestamp="3233585" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1899" _type="ShellCommand" date="Mon Nov 20 15:12:00 EST 2023" starttimestamp="1700507886094" timestamp="3234185" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1900" _type="ShellCommand" date="Mon Nov 20 15:12:06 EST 2023" starttimestamp="1700507886094" timestamp="3240604" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1901" _type="MoveCaretCommand" caretOffset="1018" date="Mon Nov 20 15:12:09 EST 2023" docOffset="1018" starttimestamp="1700507886094" timestamp="3243471" />
  <Command __id="1902" _type="MoveCaretCommand" caretOffset="1018" date="Mon Nov 20 15:12:09 EST 2023" docOffset="1018" starttimestamp="1700507886094" timestamp="3243471" />
  <Command __id="1903" _type="SelectTextCommand" caretOffset="1020" date="Mon Nov 20 15:12:09 EST 2023" end="1020" start="1016" starttimestamp="1700507886094" timestamp="3243700" />
  <Command __id="1904" _type="SelectTextCommand" caretOffset="1020" date="Mon Nov 20 15:12:09 EST 2023" end="1020" start="1016" starttimestamp="1700507886094" timestamp="3243700" />
  <Command __id="1905" _type="SelectTextCommand" caretOffset="1085" date="Mon Nov 20 15:12:09 EST 2023" end="1085" start="1007" starttimestamp="1700507886094" timestamp="3243881" />
  <Command __id="1906" _type="SelectTextCommand" caretOffset="1085" date="Mon Nov 20 15:12:09 EST 2023" end="1085" start="1007" starttimestamp="1700507886094" timestamp="3243881" />
  <Command __id="1907" _type="MoveCaretCommand" caretOffset="1087" date="Mon Nov 20 15:12:10 EST 2023" docOffset="1087" starttimestamp="1700507886094" timestamp="3244268" />
  <Command __id="1908" _type="MoveCaretCommand" caretOffset="1087" date="Mon Nov 20 15:12:10 EST 2023" docOffset="1087" starttimestamp="1700507886094" timestamp="3244268" />
  <Command __id="1909" _type="MoveCaretCommand" caretOffset="1089" date="Mon Nov 20 15:12:10 EST 2023" docOffset="1089" starttimestamp="1700507886094" timestamp="3244683" />
  <Command __id="1910" _type="MoveCaretCommand" caretOffset="1089" date="Mon Nov 20 15:12:10 EST 2023" docOffset="1089" starttimestamp="1700507886094" timestamp="3244683" />
  <Command __id="1911" _type="MoveCaretCommand" caretOffset="1089" date="Mon Nov 20 15:12:11 EST 2023" docOffset="1089" starttimestamp="1700507886094" timestamp="3245234" />
  <Command __id="1912" _type="MoveCaretCommand" caretOffset="1089" date="Mon Nov 20 15:12:11 EST 2023" docOffset="1089" starttimestamp="1700507886094" timestamp="3245234" />
  <Command __id="1914" _type="InsertStringCommand" date="Mon Nov 20 15:12:11 EST 2023" starttimestamp="1700507886094" timestamp="3245437" timestamp2="3245437">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="1915" _type="InsertStringCommand" date="Mon Nov 20 15:12:11 EST 2023" starttimestamp="1700507886094" timestamp="3245437" timestamp2="3245437">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="1917" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246332" timestamp2="3246332">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1918" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246332" timestamp2="3246332">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1920" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246422" timestamp2="3246422">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1921" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246422" timestamp2="3246422">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1923" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246472" timestamp2="3246472">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1924" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246472" timestamp2="3246472">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1926" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246563" timestamp2="3246563">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1927" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246563" timestamp2="3246563">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1929" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246622" timestamp2="3246622">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1930" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246622" timestamp2="3246622">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1881" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:09:07 EST 2023" docASTNodeCount="157" docActiveCodeLength="971" docExpressionCount="113" docLength="1093" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3061697">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1913" _type="Insert" date="Mon Nov 20 15:12:11 EST 2023" docASTNodeCount="157" docActiveCodeLength="984" docExpressionCount="113" docLength="1106" length="13" offset="1089" repeat="13" starttimestamp="1700507886094" timestamp="3245435" timestamp2="3248484">
    <text><![CDATA[	public Class]]></text>
  </DocumentChange>
  <Command __id="1932" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246684" timestamp2="3246684">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1933" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246685" timestamp2="3246685">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1935" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246732" timestamp2="3246732">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1936" _type="InsertStringCommand" date="Mon Nov 20 15:12:12 EST 2023" starttimestamp="1700507886094" timestamp="3246732" timestamp2="3246732">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1938" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248010" timestamp2="3248010">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1939" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248010" timestamp2="3248010">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1941" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248219" timestamp2="3248219">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1942" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248219" timestamp2="3248219">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1944" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248286" timestamp2="3248286">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1945" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248286" timestamp2="3248286">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1947" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248327" timestamp2="3248327">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1948" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248327" timestamp2="3248327">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1950" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248486" timestamp2="3248486">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1951" _type="InsertStringCommand" date="Mon Nov 20 15:12:14 EST 2023" starttimestamp="1700507886094" timestamp="3248486" timestamp2="3248486">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1953" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:15 EST 2023" starttimestamp="1700507886094" timestamp="3249773" />
  <Command __id="1954" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:15 EST 2023" starttimestamp="1700507886094" timestamp="3249773" />
  <Command __id="1956" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:15 EST 2023" starttimestamp="1700507886094" timestamp="3249881" />
  <Command __id="1957" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:15 EST 2023" starttimestamp="1700507886094" timestamp="3249881" />
  <Command __id="1959" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:16 EST 2023" starttimestamp="1700507886094" timestamp="3249992" />
  <Command __id="1960" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:16 EST 2023" starttimestamp="1700507886094" timestamp="3249992" />
  <Command __id="1962" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:16 EST 2023" starttimestamp="1700507886094" timestamp="3250128" />
  <Command __id="1963" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:16 EST 2023" starttimestamp="1700507886094" timestamp="3250129" />
  <Command __id="1965" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:16 EST 2023" starttimestamp="1700507886094" timestamp="3250262" />
  <Command __id="1966" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:12:16 EST 2023" starttimestamp="1700507886094" timestamp="3250262" />
  <DocumentChange __id="1952" _type="Delete" date="Mon Nov 20 15:12:15 EST 2023" docASTNodeCount="157" docActiveCodeLength="979" docExpressionCount="113" docLength="1101" endLine="42" length="5" offset="1097" repeat="5" startLine="42" starttimestamp="1700507886094" timestamp="3249770" timestamp2="3250260">
    <text><![CDATA[Class]]></text>
  </DocumentChange>
  <Command __id="1969" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:12:19 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3253015">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1971" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:12:20 EST 2023" docASTNodeCount="43" docActiveCodeLength="229" docExpressionCount="26" docLength="229" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3254723">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/main.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class main {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1967" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 15:12:18 EST 2023" docOffset="320" starttimestamp="1700507886094" timestamp="3252601" />
  <Command __id="1968" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 15:12:18 EST 2023" docOffset="320" starttimestamp="1700507886094" timestamp="3252602" />
  <Command __id="1970" _type="MoveCaretCommand" caretOffset="200" date="Mon Nov 20 15:12:19 EST 2023" docOffset="317" starttimestamp="1700507886094" timestamp="3253068" />
  <Command __id="1972" _type="SelectTextCommand" caretOffset="195" date="Mon Nov 20 15:12:20 EST 2023" end="195" start="176" starttimestamp="1700507886094" timestamp="3254758" />
  <Command __id="1974" _type="MoveCaretCommand" caretOffset="1971" date="Mon Nov 20 15:12:22 EST 2023" docOffset="2100" starttimestamp="1700507886094" timestamp="3255908" />
  <Command __id="1973" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:12:21 EST 2023" docASTNodeCount="250" docActiveCodeLength="1598" docExpressionCount="120" docLength="2108" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3255861">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return main.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1975" _type="SelectTextCommand" caretOffset="1864" date="Mon Nov 20 15:12:27 EST 2023" end="1864" start="1836" starttimestamp="1700507886094" timestamp="3261820" />
  <Command __id="1976" _type="CopyCommand" date="Mon Nov 20 15:12:28 EST 2023" starttimestamp="1700507886094" timestamp="3261978" />
  <Command __id="1977" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:12:30 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3263909">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1978" _type="MoveCaretCommand" caretOffset="200" date="Mon Nov 20 15:12:30 EST 2023" docOffset="317" starttimestamp="1700507886094" timestamp="3263957" />
  <Command __id="1980" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 15:12:30 EST 2023" docOffset="320" starttimestamp="1700507886094" timestamp="3264776" />
  <Command __id="1981" _type="MoveCaretCommand" caretOffset="1097" date="Mon Nov 20 15:12:32 EST 2023" docOffset="1097" starttimestamp="1700507886094" timestamp="3265953" />
  <Command __id="1982" _type="MoveCaretCommand" caretOffset="1097" date="Mon Nov 20 15:12:32 EST 2023" docOffset="1097" starttimestamp="1700507886094" timestamp="3265953" />
  <Command __id="1984" _type="PasteCommand" date="Mon Nov 20 15:12:32 EST 2023" starttimestamp="1700507886094" timestamp="3266416" />
  <Command __id="1985" _type="MoveCaretCommand" caretOffset="1125" date="Mon Nov 20 15:12:33 EST 2023" docOffset="1125" starttimestamp="1700507886094" timestamp="3267652" />
  <Command __id="1986" _type="MoveCaretCommand" caretOffset="1125" date="Mon Nov 20 15:12:33 EST 2023" docOffset="1125" starttimestamp="1700507886094" timestamp="3267652" />
  <Command __id="1988" _type="InsertStringCommand" date="Mon Nov 20 15:12:33 EST 2023" starttimestamp="1700507886094" timestamp="3267893" timestamp2="3267893">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1989" _type="InsertStringCommand" date="Mon Nov 20 15:12:33 EST 2023" starttimestamp="1700507886094" timestamp="3267893" timestamp2="3267893">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1991" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268038" timestamp2="3268038">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1992" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268038" timestamp2="3268038">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1994" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268124" timestamp2="3268124">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1995" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268124" timestamp2="3268124">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1997" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268241" timestamp2="3268241">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1998" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268241" timestamp2="3268241">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2000" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268524" timestamp2="3268524">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2001" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268524" timestamp2="3268524">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2003" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268722" timestamp2="3268722">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2004" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268722" timestamp2="3268722">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2006" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268766" timestamp2="3268766">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2007" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268766" timestamp2="3268766">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2009" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268820" timestamp2="3268820">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2010" _type="InsertStringCommand" date="Mon Nov 20 15:12:34 EST 2023" starttimestamp="1700507886094" timestamp="3268820" timestamp2="3268820">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2012" _type="InsertStringCommand" date="Mon Nov 20 15:12:35 EST 2023" starttimestamp="1700507886094" timestamp="3268987" timestamp2="3268987">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2013" _type="InsertStringCommand" date="Mon Nov 20 15:12:35 EST 2023" starttimestamp="1700507886094" timestamp="3268988" timestamp2="3268988">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2015" _type="InsertStringCommand" date="Mon Nov 20 15:12:35 EST 2023" starttimestamp="1700507886094" timestamp="3269411" timestamp2="3269411">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2016" _type="InsertStringCommand" date="Mon Nov 20 15:12:35 EST 2023" starttimestamp="1700507886094" timestamp="3269411" timestamp2="3269411">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 15:12:35 EST 2023" starttimestamp="1700507886094" timestamp="3269711" />
  <Command __id="2018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 15:12:35 EST 2023" starttimestamp="1700507886094" timestamp="3269711" />
  <Command __id="1979" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:12:30 EST 2023" docASTNodeCount="157" docActiveCodeLength="979" docExpressionCount="113" docLength="1101" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3264731">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}"), Diff(INSERT,"	public "), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {
			return true;
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
//	public String toStringAsList() {
//		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
//	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}

	public 

}
]]></snapshot>
  </Command>
  <Command __id="2020" _type="InsertStringCommand" date="Mon Nov 20 15:12:36 EST 2023" starttimestamp="1700507886094" timestamp="3270460" timestamp2="3270460">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2021" _type="InsertStringCommand" date="Mon Nov 20 15:12:36 EST 2023" starttimestamp="1700507886094" timestamp="3270461" timestamp2="3270461">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2023" _type="InsertStringCommand" date="Mon Nov 20 15:12:36 EST 2023" starttimestamp="1700507886094" timestamp="3270623" timestamp2="3270623">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2024" _type="InsertStringCommand" date="Mon Nov 20 15:12:36 EST 2023" starttimestamp="1700507886094" timestamp="3270623" timestamp2="3270623">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2026" _type="InsertStringCommand" date="Mon Nov 20 15:12:36 EST 2023" starttimestamp="1700507886094" timestamp="3270830" timestamp2="3270830">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2027" _type="InsertStringCommand" date="Mon Nov 20 15:12:36 EST 2023" starttimestamp="1700507886094" timestamp="3270830" timestamp2="3270830">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2029" _type="InsertStringCommand" date="Mon Nov 20 15:12:36 EST 2023" starttimestamp="1700507886094" timestamp="3270892" timestamp2="3270892">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2030" _type="InsertStringCommand" date="Mon Nov 20 15:12:36 EST 2023" starttimestamp="1700507886094" timestamp="3270892" timestamp2="3270892">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2032" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3270996" timestamp2="3270996">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2033" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3270996" timestamp2="3270996">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2035" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3271118" timestamp2="3271118">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2036" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3271118" timestamp2="3271118">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2038" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3271179" timestamp2="3271179">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2039" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3271179" timestamp2="3271179">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2041" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3271258" timestamp2="3271258">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2042" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3271258" timestamp2="3271258">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2044" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3271377" timestamp2="3271377">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2045" _type="InsertStringCommand" date="Mon Nov 20 15:12:37 EST 2023" starttimestamp="1700507886094" timestamp="3271377" timestamp2="3271377">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2047" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273252" timestamp2="3273252">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2048" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273252" timestamp2="3273252">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2050" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273337" timestamp2="3273337">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2051" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273337" timestamp2="3273337">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2053" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273377" timestamp2="3273377">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2054" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273377" timestamp2="3273377">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2056" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273511" timestamp2="3273511">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2057" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273512" timestamp2="3273512">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2059" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273581" timestamp2="3273581">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2060" _type="InsertStringCommand" date="Mon Nov 20 15:12:39 EST 2023" starttimestamp="1700507886094" timestamp="3273581" timestamp2="3273581">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2061" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:12:39 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="3273587" />
  <Command __id="2067" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:12:40 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="3274313" />
  <Command __id="2069" _type="InsertStringCommand" date="Mon Nov 20 15:12:40 EST 2023" starttimestamp="1700507886094" timestamp="3274323" timestamp2="3274323">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2070" _type="InsertStringCommand" date="Mon Nov 20 15:12:40 EST 2023" starttimestamp="1700507886094" timestamp="3274323" timestamp2="3274323">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2071" _type="MoveCaretCommand" caretOffset="1088" date="Mon Nov 20 15:12:41 EST 2023" docOffset="1088" starttimestamp="1700507886094" timestamp="3275782" />
  <Command __id="2072" _type="MoveCaretCommand" caretOffset="1088" date="Mon Nov 20 15:12:41 EST 2023" docOffset="1088" starttimestamp="1700507886094" timestamp="3275782" />
  <Command __id="2073" _type="SelectTextCommand" caretOffset="1152" date="Mon Nov 20 15:12:43 EST 2023" end="1163" start="1152" starttimestamp="1700507886094" timestamp="3277887" />
  <Command __id="2074" _type="SelectTextCommand" caretOffset="1152" date="Mon Nov 20 15:12:43 EST 2023" end="1163" start="1152" starttimestamp="1700507886094" timestamp="3277887" />
  <Command __id="2076" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278076" timestamp2="3278076">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2077" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278076" timestamp2="3278076">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2079" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278116" timestamp2="3278116">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2080" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278116" timestamp2="3278116">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2082" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278239" timestamp2="3278239">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2083" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278239" timestamp2="3278239">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2085" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278286" timestamp2="3278286">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2086" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278286" timestamp2="3278286">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2088" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278464" timestamp2="3278464">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2089" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278464" timestamp2="3278464">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2091" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278537" timestamp2="3278537">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2092" _type="InsertStringCommand" date="Mon Nov 20 15:12:44 EST 2023" starttimestamp="1700507886094" timestamp="3278537" timestamp2="3278537">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2093" _type="ShellCommand" date="Mon Nov 20 15:12:55 EST 2023" starttimestamp="1700507886094" timestamp="3289799" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2094" _type="ShellCommand" date="Mon Nov 20 15:12:56 EST 2023" starttimestamp="1700507886094" timestamp="3290269" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2095" _type="MoveCaretCommand" caretOffset="1149" date="Mon Nov 20 15:12:57 EST 2023" docOffset="1149" starttimestamp="1700507886094" timestamp="3290954" />
  <Command __id="2096" _type="MoveCaretCommand" caretOffset="1149" date="Mon Nov 20 15:12:57 EST 2023" docOffset="1149" starttimestamp="1700507886094" timestamp="3290955" />
  <Command __id="2097" _type="SelectTextCommand" caretOffset="1151" date="Mon Nov 20 15:12:57 EST 2023" end="1151" start="1147" starttimestamp="1700507886094" timestamp="3291088" />
  <Command __id="2098" _type="SelectTextCommand" caretOffset="1151" date="Mon Nov 20 15:12:57 EST 2023" end="1151" start="1147" starttimestamp="1700507886094" timestamp="3291088" />
  <Command __id="2099" _type="MoveCaretCommand" caretOffset="169" date="Mon Nov 20 15:13:00 EST 2023" docOffset="169" starttimestamp="1700507886094" timestamp="3294787" />
  <Command __id="2100" _type="MoveCaretCommand" caretOffset="169" date="Mon Nov 20 15:13:00 EST 2023" docOffset="169" starttimestamp="1700507886094" timestamp="3294787" />
  <Command __id="2101" _type="SelectTextCommand" caretOffset="175" date="Mon Nov 20 15:13:00 EST 2023" end="175" start="156" starttimestamp="1700507886094" timestamp="3294902" />
  <Command __id="2102" _type="SelectTextCommand" caretOffset="175" date="Mon Nov 20 15:13:00 EST 2023" end="175" start="156" starttimestamp="1700507886094" timestamp="3294902" />
  <Command __id="2103" _type="CopyCommand" date="Mon Nov 20 15:13:01 EST 2023" starttimestamp="1700507886094" timestamp="3294979" />
  <Command __id="2104" _type="MoveCaretCommand" caretOffset="1149" date="Mon Nov 20 15:13:02 EST 2023" docOffset="1149" starttimestamp="1700507886094" timestamp="3296388" />
  <Command __id="2105" _type="MoveCaretCommand" caretOffset="1149" date="Mon Nov 20 15:13:02 EST 2023" docOffset="1149" starttimestamp="1700507886094" timestamp="3296388" />
  <Command __id="2106" _type="SelectTextCommand" caretOffset="1151" date="Mon Nov 20 15:13:02 EST 2023" end="1151" start="1147" starttimestamp="1700507886094" timestamp="3296524" />
  <Command __id="2107" _type="SelectTextCommand" caretOffset="1151" date="Mon Nov 20 15:13:02 EST 2023" end="1151" start="1147" starttimestamp="1700507886094" timestamp="3296524" />
  <Command __id="2109" _type="PasteCommand" date="Mon Nov 20 15:13:02 EST 2023" starttimestamp="1700507886094" timestamp="3296574" />
  <Command __id="2110" _type="MoveCaretCommand" caretOffset="1137" date="Mon Nov 20 15:13:03 EST 2023" docOffset="1137" starttimestamp="1700507886094" timestamp="3297018" />
  <Command __id="2111" _type="MoveCaretCommand" caretOffset="1137" date="Mon Nov 20 15:13:03 EST 2023" docOffset="1137" starttimestamp="1700507886094" timestamp="3297018" />
  <Command __id="2112" _type="MoveCaretCommand" caretOffset="1137" date="Mon Nov 20 15:13:03 EST 2023" docOffset="1137" starttimestamp="1700507886094" timestamp="3297557" />
  <Command __id="2113" _type="MoveCaretCommand" caretOffset="1137" date="Mon Nov 20 15:13:03 EST 2023" docOffset="1137" starttimestamp="1700507886094" timestamp="3297557" />
  <Command __id="2114" _type="SelectTextCommand" caretOffset="1089" date="Mon Nov 20 15:13:15 EST 2023" end="1176" start="1089" starttimestamp="1700507886094" timestamp="3308937" />
  <Command __id="2115" _type="SelectTextCommand" caretOffset="1089" date="Mon Nov 20 15:13:15 EST 2023" end="1176" start="1089" starttimestamp="1700507886094" timestamp="3308938" />
  <Command __id="2117" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:13:15 EST 2023" starttimestamp="1700507886094" timestamp="3309284" />
  <Command __id="2118" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:13:15 EST 2023" starttimestamp="1700507886094" timestamp="3309284" />
  <Command __id="2120" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:13:15 EST 2023" starttimestamp="1700507886094" timestamp="3309589" />
  <Command __id="2121" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:13:15 EST 2023" starttimestamp="1700507886094" timestamp="3309589" />
  <Command __id="2123" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:13:16 EST 2023" starttimestamp="1700507886094" timestamp="3309914" />
  <Command __id="2124" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:13:16 EST 2023" starttimestamp="1700507886094" timestamp="3309914" />
  <Command __id="2125" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:13:16 EST 2023" docOffset="978" starttimestamp="1700507886094" timestamp="3310469" />
  <Command __id="2126" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:13:16 EST 2023" docOffset="978" starttimestamp="1700507886094" timestamp="3310469" />
  <Command __id="2127" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:13:17 EST 2023" starttimestamp="1700507886094" timestamp="3311660" />
  <Command __id="2128" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:13:17 EST 2023" starttimestamp="1700507886094" timestamp="3311762" />
  <Command __id="2129" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:13:17 EST 2023" starttimestamp="1700507886094" timestamp="3311770" />
  <Command __id="2130" _type="ShellCommand" date="Mon Nov 20 15:13:19 EST 2023" starttimestamp="1700507886094" timestamp="3313203" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2131" _type="ShellCommand" date="Mon Nov 20 15:13:22 EST 2023" starttimestamp="1700507886094" timestamp="3316666" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2132" _type="ShellCommand" date="Mon Nov 20 15:13:24 EST 2023" starttimestamp="1700507886094" timestamp="3318583" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2133" _type="ShellCommand" date="Mon Nov 20 15:13:55 EST 2023" starttimestamp="1700507886094" timestamp="3349086" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2134" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:13:58 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3352338" />
  <Command __id="2135" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:13:58 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3352339" />
  <Command __id="2136" _type="MoveCaretCommand" caretOffset="849" date="Mon Nov 20 15:14:00 EST 2023" docOffset="849" starttimestamp="1700507886094" timestamp="3354354" />
  <Command __id="2137" _type="MoveCaretCommand" caretOffset="849" date="Mon Nov 20 15:14:00 EST 2023" docOffset="849" starttimestamp="1700507886094" timestamp="3354354" />
  <Command __id="2138" _type="MoveCaretCommand" caretOffset="795" date="Mon Nov 20 15:14:00 EST 2023" docOffset="795" starttimestamp="1700507886094" timestamp="3354805" />
  <Command __id="2139" _type="MoveCaretCommand" caretOffset="795" date="Mon Nov 20 15:14:00 EST 2023" docOffset="795" starttimestamp="1700507886094" timestamp="3354805" />
  <Command __id="2140" _type="MoveCaretCommand" caretOffset="846" date="Mon Nov 20 15:14:01 EST 2023" docOffset="846" starttimestamp="1700507886094" timestamp="3355290" />
  <Command __id="2141" _type="MoveCaretCommand" caretOffset="846" date="Mon Nov 20 15:14:01 EST 2023" docOffset="846" starttimestamp="1700507886094" timestamp="3355290" />
  <Command __id="2142" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:14:02 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3355915" />
  <Command __id="2143" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:14:02 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3355915" />
  <Command __id="2144" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:14:02 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3356860" />
  <Command __id="2145" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:14:02 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3356860" />
  <Command __id="2146" _type="MoveCaretCommand" caretOffset="794" date="Mon Nov 20 15:14:03 EST 2023" docOffset="794" starttimestamp="1700507886094" timestamp="3357371" />
  <Command __id="2147" _type="MoveCaretCommand" caretOffset="794" date="Mon Nov 20 15:14:03 EST 2023" docOffset="794" starttimestamp="1700507886094" timestamp="3357371" />
  <Command __id="2148" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:14:03 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3357838" />
  <Command __id="2149" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:14:03 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3357838" />
  <Command __id="2150" _type="ShellCommand" date="Mon Nov 20 15:14:05 EST 2023" starttimestamp="1700507886094" timestamp="3359416" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2151" _type="ShellCommand" date="Mon Nov 20 15:14:07 EST 2023" starttimestamp="1700507886094" timestamp="3361658" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2152" _type="MoveCaretCommand" caretOffset="445" date="Mon Nov 20 15:14:09 EST 2023" docOffset="445" starttimestamp="1700507886094" timestamp="3363104" />
  <Command __id="2153" _type="MoveCaretCommand" caretOffset="445" date="Mon Nov 20 15:14:09 EST 2023" docOffset="445" starttimestamp="1700507886094" timestamp="3363105" />
  <Command __id="2154" _type="MoveCaretCommand" caretOffset="455" date="Mon Nov 20 15:14:09 EST 2023" docOffset="455" starttimestamp="1700507886094" timestamp="3363572" />
  <Command __id="2155" _type="MoveCaretCommand" caretOffset="455" date="Mon Nov 20 15:14:09 EST 2023" docOffset="455" starttimestamp="1700507886094" timestamp="3363572" />
  <Command __id="2156" _type="MoveCaretCommand" caretOffset="502" date="Mon Nov 20 15:14:10 EST 2023" docOffset="502" starttimestamp="1700507886094" timestamp="3364021" />
  <Command __id="2157" _type="MoveCaretCommand" caretOffset="502" date="Mon Nov 20 15:14:10 EST 2023" docOffset="502" starttimestamp="1700507886094" timestamp="3364021" />
  <Command __id="2158" _type="MoveCaretCommand" caretOffset="705" date="Mon Nov 20 15:14:10 EST 2023" docOffset="705" starttimestamp="1700507886094" timestamp="3364774" />
  <Command __id="2159" _type="MoveCaretCommand" caretOffset="705" date="Mon Nov 20 15:14:10 EST 2023" docOffset="705" starttimestamp="1700507886094" timestamp="3364774" />
  <Command __id="2160" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:14:12 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="3366140" />
  <Command __id="2161" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:14:12 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="3366140" />
  <Command __id="2162" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:14:13 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3366925" />
  <Command __id="2163" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:14:13 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3366925" />
  <Command __id="2164" _type="MoveCaretCommand" caretOffset="293" date="Mon Nov 20 15:14:14 EST 2023" docOffset="293" starttimestamp="1700507886094" timestamp="3368173" />
  <Command __id="2165" _type="MoveCaretCommand" caretOffset="293" date="Mon Nov 20 15:14:14 EST 2023" docOffset="293" starttimestamp="1700507886094" timestamp="3368173" />
  <Command __id="2166" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:14:16 EST 2023" docOffset="978" starttimestamp="1700507886094" timestamp="3370040" />
  <Command __id="2167" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:14:16 EST 2023" docOffset="978" starttimestamp="1700507886094" timestamp="3370040" />
  <Command __id="2168" _type="MoveCaretCommand" caretOffset="1031" date="Mon Nov 20 15:14:16 EST 2023" docOffset="1031" starttimestamp="1700507886094" timestamp="3370600" />
  <Command __id="2169" _type="MoveCaretCommand" caretOffset="1031" date="Mon Nov 20 15:14:16 EST 2023" docOffset="1031" starttimestamp="1700507886094" timestamp="3370600" />
  <Command __id="2170" _type="MoveCaretCommand" caretOffset="1030" date="Mon Nov 20 15:14:17 EST 2023" docOffset="1030" starttimestamp="1700507886094" timestamp="3371075" />
  <Command __id="2171" _type="MoveCaretCommand" caretOffset="1030" date="Mon Nov 20 15:14:17 EST 2023" docOffset="1030" starttimestamp="1700507886094" timestamp="3371076" />
  <Command __id="2172" _type="ShellCommand" date="Mon Nov 20 15:14:27 EST 2023" starttimestamp="1700507886094" timestamp="3381361" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2173" _type="ShellCommand" date="Mon Nov 20 15:14:29 EST 2023" starttimestamp="1700507886094" timestamp="3383548" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2174" _type="ShellCommand" date="Mon Nov 20 15:14:41 EST 2023" starttimestamp="1700507886094" timestamp="3395364" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2175" _type="BalloonCommand" date="Mon Nov 20 15:18:06 EST 2023" message="*******************************************
Worked 35 minutes(fixed)/56 minutes(context based) from
Mon Nov 20 14:18:09 EST 2023 to Mon Nov 20 15:14:41 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 3 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/main.java
Number of insert: 461
Number of delete: 198
" starttimestamp="1700507886094" timestamp="3600047">
    <fineGrainedWorkTime><![CDATA[56]]></fineGrainedWorkTime>
    <insert><![CDATA[461]]></insert>
    <startTime><![CDATA[1700507889267]]></startTime>
    <endTime><![CDATA[1700511281458]]></endTime>
    <workTime><![CDATA[35]]></workTime>
    <delete><![CDATA[198]]></delete>
  </Command>
  <Command __id="2176" _type="ShellCommand" date="Mon Nov 20 15:18:29 EST 2023" starttimestamp="1700507886094" timestamp="3623427" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2186" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:18:35 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="3628943">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2177" _type="SelectTextCommand" caretOffset="764" date="Mon Nov 20 15:18:32 EST 2023" end="769" start="764" starttimestamp="1700507886094" timestamp="3626039" />
  <Command __id="2178" _type="SelectTextCommand" caretOffset="764" date="Mon Nov 20 15:18:32 EST 2023" end="769" start="764" starttimestamp="1700507886094" timestamp="3626039" />
  <Command __id="2180" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:18:32 EST 2023" starttimestamp="1700507886094" timestamp="3626295" />
  <Command __id="2181" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:18:32 EST 2023" starttimestamp="1700507886094" timestamp="3626295" />
  <Command __id="2182" _type="MoveCaretCommand" caretOffset="816" date="Mon Nov 20 15:18:32 EST 2023" docOffset="816" starttimestamp="1700507886094" timestamp="3626803" />
  <Command __id="2183" _type="MoveCaretCommand" caretOffset="816" date="Mon Nov 20 15:18:32 EST 2023" docOffset="816" starttimestamp="1700507886094" timestamp="3626803" />
  <Command __id="2184" _type="MoveCaretCommand" caretOffset="846" date="Mon Nov 20 15:18:33 EST 2023" docOffset="846" starttimestamp="1700507886094" timestamp="3627574" />
  <Command __id="2185" _type="MoveCaretCommand" caretOffset="846" date="Mon Nov 20 15:18:33 EST 2023" docOffset="846" starttimestamp="1700507886094" timestamp="3627574" />
  <Command __id="2187" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 15:18:35 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="3628948" />
  <Command __id="2188" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 15:18:35 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="3628994" />
  <Command __id="2190" _type="MoveCaretCommand" caretOffset="768" date="Mon Nov 20 15:18:36 EST 2023" docOffset="768" starttimestamp="1700507886094" timestamp="3630634" />
  <Command __id="2191" _type="SelectTextCommand" caretOffset="769" date="Mon Nov 20 15:18:37 EST 2023" end="770" start="769" starttimestamp="1700507886094" timestamp="3631590" />
  <Command __id="2192" _type="MoveCaretCommand" caretOffset="844" date="Mon Nov 20 15:18:38 EST 2023" docOffset="844" starttimestamp="1700507886094" timestamp="3632122" />
  <Command __id="2193" _type="ShellCommand" date="Mon Nov 20 15:18:39 EST 2023" starttimestamp="1700507886094" timestamp="3633263" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2194" _type="ShellCommand" date="Mon Nov 20 15:18:39 EST 2023" starttimestamp="1700507886094" timestamp="3633822" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2195" _type="ShellCommand" date="Mon Nov 20 15:18:40 EST 2023" starttimestamp="1700507886094" timestamp="3634780" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2196" _type="ShellCommand" date="Mon Nov 20 15:18:58 EST 2023" starttimestamp="1700507886094" timestamp="3652500" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2197" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:19:00 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3654138" />
  <Command __id="2198" _type="ShellCommand" date="Mon Nov 20 15:19:01 EST 2023" starttimestamp="1700507886094" timestamp="3655608" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2199" _type="ShellCommand" date="Mon Nov 20 15:19:09 EST 2023" starttimestamp="1700507886094" timestamp="3663854" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2200" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:19:15 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="3669372" />
  <Command __id="2201" _type="MoveCaretCommand" caretOffset="550" date="Mon Nov 20 15:19:16 EST 2023" docOffset="550" starttimestamp="1700507886094" timestamp="3670539" />
  <Command __id="2202" _type="MoveCaretCommand" caretOffset="556" date="Mon Nov 20 15:19:17 EST 2023" docOffset="556" starttimestamp="1700507886094" timestamp="3671155" />
  <Command __id="2203" _type="ShellCommand" date="Mon Nov 20 15:19:47 EST 2023" starttimestamp="1700507886094" timestamp="3701832" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2204" _type="ShellCommand" date="Mon Nov 20 15:19:54 EST 2023" starttimestamp="1700507886094" timestamp="3708664" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2205" _type="ShellCommand" date="Mon Nov 20 15:19:55 EST 2023" starttimestamp="1700507886094" timestamp="3709107" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2189" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:18:36 EST 2023" docASTNodeCount="156" docActiveCodeLength="964" docExpressionCount="112" docLength="1086" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3630582">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + "), Diff(DELETE,"this."), Diff(EQUAL,"getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}"), Diff(DELETE,"	public "), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {
			return true;
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
//	public String toStringAsList() {
//		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
//	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}

}
]]></snapshot>
  </Command>
  <Command __id="2206" _type="ShellCommand" date="Mon Nov 20 15:20:25 EST 2023" starttimestamp="1700507886094" timestamp="3739016" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2208" _type="MoveCaretCommand" caretOffset="200" date="Mon Nov 20 15:20:26 EST 2023" docOffset="317" starttimestamp="1700507886094" timestamp="3740542" />
  <Command __id="2209" _type="MoveCaretCommand" caretOffset="504" date="Mon Nov 20 15:20:28 EST 2023" docOffset="621" starttimestamp="1700507886094" timestamp="3742676" />
  <Command __id="2210" _type="MoveCaretCommand" caretOffset="638" date="Mon Nov 20 15:20:29 EST 2023" docOffset="755" starttimestamp="1700507886094" timestamp="3743110" />
  <Command __id="2211" _type="MoveCaretCommand" caretOffset="823" date="Mon Nov 20 15:20:29 EST 2023" docOffset="940" starttimestamp="1700507886094" timestamp="3743544" />
  <Command __id="2212" _type="MoveCaretCommand" caretOffset="940" date="Mon Nov 20 15:20:30 EST 2023" docOffset="1057" starttimestamp="1700507886094" timestamp="3743996" />
  <Command __id="2213" _type="MoveCaretCommand" caretOffset="975" date="Mon Nov 20 15:20:30 EST 2023" docOffset="1092" starttimestamp="1700507886094" timestamp="3744502" />
  <Command __id="2214" _type="MoveCaretCommand" caretOffset="927" date="Mon Nov 20 15:20:30 EST 2023" docOffset="1044" starttimestamp="1700507886094" timestamp="3744895" />
  <Command __id="2207" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:20:26 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3740494">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2215" _type="MoveCaretCommand" caretOffset="126" date="Mon Nov 20 15:20:32 EST 2023" docOffset="243" starttimestamp="1700507886094" timestamp="3745930" />
  <Command __id="2216" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:20:40 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3753968">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + "), Diff(INSERT,"this."), Diff(EQUAL,"getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {
			return true;
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
//	public String toStringAsList() {
//		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
//	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}

}
]]></snapshot>
  </Command>
  <Command __id="2217" _type="MoveCaretCommand" caretOffset="556" date="Mon Nov 20 15:20:40 EST 2023" docOffset="556" starttimestamp="1700507886094" timestamp="3754010" />
  <Command __id="2218" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:20:41 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3755123">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2219" _type="MoveCaretCommand" caretOffset="16" date="Mon Nov 20 15:20:41 EST 2023" docOffset="16" starttimestamp="1700507886094" timestamp="3755178" />
  <Command __id="2221" _type="SelectTextCommand" caretOffset="195" date="Mon Nov 20 15:20:41 EST 2023" end="195" start="176" starttimestamp="1700507886094" timestamp="3755751" />
  <Command __id="2222" _type="MoveCaretCommand" caretOffset="222" date="Mon Nov 20 15:20:43 EST 2023" docOffset="222" starttimestamp="1700507886094" timestamp="3756946" />
  <Command __id="2223" _type="MoveCaretCommand" caretOffset="222" date="Mon Nov 20 15:20:45 EST 2023" docOffset="222" starttimestamp="1700507886094" timestamp="3759829" />
  <Command __id="2220" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:20:41 EST 2023" docASTNodeCount="43" docActiveCodeLength="229" docExpressionCount="26" docLength="229" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3755722">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/main.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class main {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2224" _type="MoveCaretCommand" caretOffset="181" date="Mon Nov 20 15:20:48 EST 2023" docOffset="181" starttimestamp="1700507886094" timestamp="3761993" />
  <Command __id="2225" _type="MoveCaretCommand" caretOffset="222" date="Mon Nov 20 15:20:48 EST 2023" docOffset="222" starttimestamp="1700507886094" timestamp="3762461" />
  <Command __id="2226" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:20:51 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3765164">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2227" _type="MoveCaretCommand" caretOffset="16" date="Mon Nov 20 15:20:51 EST 2023" docOffset="16" starttimestamp="1700507886094" timestamp="3765207" />
  <Command __id="2229" _type="MoveCaretCommand" caretOffset="556" date="Mon Nov 20 15:20:54 EST 2023" docOffset="556" starttimestamp="1700507886094" timestamp="3768818" />
  <Command __id="2230" _type="ShellCommand" date="Mon Nov 20 15:20:59 EST 2023" starttimestamp="1700507886094" timestamp="3773671" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2231" _type="ShellCommand" date="Mon Nov 20 15:21:01 EST 2023" starttimestamp="1700507886094" timestamp="3775563" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2232" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:21:14 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3788212" />
  <Command __id="2233" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 20 15:21:14 EST 2023" docOffset="748" starttimestamp="1700507886094" timestamp="3788212" />
  <Command __id="2228" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:20:54 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3768784">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2234" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:21:15 EST 2023" docOffset="978" starttimestamp="1700507886094" timestamp="3789579" />
  <Command __id="2235" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:21:15 EST 2023" docOffset="978" starttimestamp="1700507886094" timestamp="3789579" />
  <Command __id="2236" _type="SelectTextCommand" caretOffset="986" date="Mon Nov 20 15:21:15 EST 2023" end="986" start="978" starttimestamp="1700507886094" timestamp="3789767" />
  <Command __id="2237" _type="SelectTextCommand" caretOffset="986" date="Mon Nov 20 15:21:15 EST 2023" end="986" start="978" starttimestamp="1700507886094" timestamp="3789767" />
  <Command __id="2238" _type="MoveCaretCommand" caretOffset="1006" date="Mon Nov 20 15:21:16 EST 2023" docOffset="1006" starttimestamp="1700507886094" timestamp="3790263" />
  <Command __id="2239" _type="MoveCaretCommand" caretOffset="1006" date="Mon Nov 20 15:21:16 EST 2023" docOffset="1006" starttimestamp="1700507886094" timestamp="3790263" />
  <Command __id="2240" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:21:40 EST 2023" docASTNodeCount="250" docActiveCodeLength="1598" docExpressionCount="120" docLength="2108" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3814518">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return main.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2241" _type="SelectTextCommand" caretOffset="1864" date="Mon Nov 20 15:21:40 EST 2023" end="1864" start="1836" starttimestamp="1700507886094" timestamp="3814567" />
  <Command __id="2244" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:21:42 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="3816812">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2245" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 15:21:42 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="3816872" />
  <Command __id="2248" _type="RunCommand" className="/Assignment5/src/index/main.java" date="Mon Nov 20 15:21:52 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3826222" type="Run" />
  <Command __id="2246" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:21:45 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3819380">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2250" _type="ShellCommand" date="Mon Nov 20 15:22:01 EST 2023" starttimestamp="1700507886094" timestamp="3835552" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2251" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:22:01 EST 2023" starttimestamp="1700507886094" timestamp="3835589" />
  <Command __id="2252" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:22:01 EST 2023" starttimestamp="1700507886094" timestamp="3835609" />
  <Command __id="2254" _type="MoveCaretCommand" caretOffset="174" date="Mon Nov 20 15:22:03 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="3837705" />
  <Command __id="2255" _type="ShellCommand" date="Mon Nov 20 15:22:05 EST 2023" starttimestamp="1700507886094" timestamp="3839568" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2253" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:22:03 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3837653">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;
import main.lisp.parser.terms.ExpressionFactory;

public class index {

	public static void main(String[] args) {
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <Command __id="2256" _type="ShellCommand" date="Mon Nov 20 15:22:06 EST 2023" starttimestamp="1700507886094" timestamp="3840807" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2257" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:22:06 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3840833" type="Run" />
  <Command __id="2258" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:22:06 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3840833" type="Run" />
  <Command __id="2259" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:22:13 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3847191">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2260" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:22:13 EST 2023" docOffset="1095" starttimestamp="1700507886094" timestamp="3847239" />
  <Command __id="2261" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:22:14 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3847938">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2262" _type="MoveCaretCommand" caretOffset="1006" date="Mon Nov 20 15:22:14 EST 2023" docOffset="1006" starttimestamp="1700507886094" timestamp="3847972" />
  <Command __id="2263" _type="MoveCaretCommand" caretOffset="292" date="Mon Nov 20 15:22:14 EST 2023" docOffset="292" starttimestamp="1700507886094" timestamp="3848785" />
  <Command __id="2264" _type="MoveCaretCommand" caretOffset="292" date="Mon Nov 20 15:22:14 EST 2023" docOffset="292" starttimestamp="1700507886094" timestamp="3848785" />
  <Command __id="2265" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:22:15 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3849246">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2266" _type="MoveCaretCommand" caretOffset="174" date="Mon Nov 20 15:22:15 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="3849300" />
  <Command __id="2268" _type="MoveCaretCommand" caretOffset="978" date="Mon Nov 20 15:22:16 EST 2023" docOffset="1095" starttimestamp="1700507886094" timestamp="3850486" />
  <Command __id="2269" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 15:22:19 EST 2023" starttimestamp="1700507886094" timestamp="3853334" />
  <Command __id="2270" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:22:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3853443" type="Run" />
  <Command __id="2271" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:22:19 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3853443" type="Run" />
  <Command __id="2272" _type="ShellCommand" date="Mon Nov 20 15:22:19 EST 2023" starttimestamp="1700507886094" timestamp="3853738" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2273" _type="ConsoleOutput" date="Mon Nov 20 15:22:22 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3856185" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringCheckerBasic@3746ea7b . Results may change."), Diff(INSERT,"¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2274" _type="ConsoleOutput" date="Mon Nov 20 15:22:22 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3856186" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,0.0% complete,0.0,0.0,No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2275" _type="ConsoleOutput" date="Mon Nov 20 15:22:22 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3856193" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):4¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,"), Diff(INSERT,"10"), Diff(EQUAL,"0.0% complete,0.0,0.0,"), Diff(DELETE,"No file ending with .lisp found in /Users/shanw25/College/JuniorFall/COMP524/Assignment5"), Diff(INSERT,"¶¶Test execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2276" _type="ConsoleOutput" date="Mon Nov 20 15:22:22 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3856194" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):4¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="2277" _type="ExceptionCommand" date="Mon Nov 20 15:22:22 EST 2023" starttimestamp="1700507886094" timestamp="3856208" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2278" _type="ConsoleOutput" date="Mon Nov 20 15:22:22 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3856211" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationChecker.java:44)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationChecker.java:44)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2279" _type="ConsoleOutput" date="Mon Nov 20 15:22:22 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3856213" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶"), Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶"), Diff(INSERT,""), Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.loadRelation.AbstractFunctionTestedRelationChecker.test(AbstractFunctionTestedRelationChecker"), Diff(INSERT,"er.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"191"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2280" _type="ConsoleOutput" date="Mon Nov 20 15:22:22 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3856277" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶"), Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"68"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContex"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Componen"), Diff(EQUAL,"t.java:5"), Diff(DELETE,"2"), Diff(INSERT,"011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironm"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Compon"), Diff(EQUAL,"ent.java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"171"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"22"), Diff(INSERT,"455"), Diff(EQUAL,"6)¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"277"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(INSERT,"48"), Diff(EQUAL,"43)¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallabl"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"12"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"32"), Diff(INSERT,"9"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"8"), Diff(INSERT,"45"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"7"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"71"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"268"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"36"), Diff(INSERT,"11"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"348"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2281" _type="ConsoleOutput" date="Mon Nov 20 15:22:22 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3856288" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶"), Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶"), Diff(DELETE,"	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 0¶")]]]></diff>
  </Command>
  <Command __id="2282" _type="ShellCommand" date="Mon Nov 20 15:22:30 EST 2023" starttimestamp="1700507886094" timestamp="3864090" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2283" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:22:30 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3864106" type="Run" />
  <Command __id="2284" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:22:30 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3864106" type="Run" />
  <Command __id="2285" _type="MoveCaretCommand" caretOffset="775" date="Mon Nov 20 15:22:31 EST 2023" docOffset="892" starttimestamp="1700507886094" timestamp="3865000" />
  <Command __id="2286" _type="MoveCaretCommand" caretOffset="775" date="Mon Nov 20 15:22:31 EST 2023" docOffset="892" starttimestamp="1700507886094" timestamp="3865000" />
  <Command __id="2287" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 15:22:34 EST 2023" starttimestamp="1700507886094" timestamp="3868868" />
  <Command __id="2288" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:22:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3868985" type="Run" />
  <Command __id="2289" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:22:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3868985" type="Run" />
  <Command __id="2290" _type="ShellCommand" date="Mon Nov 20 15:22:35 EST 2023" starttimestamp="1700507886094" timestamp="3869274" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2291" _type="ConsoleOutput" date="Mon Nov 20 15:22:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3875149" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:171)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2292" _type="ConsoleOutput" date="Mon Nov 20 15:22:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3875151" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2293" _type="ExceptionCommand" date="Mon Nov 20 15:22:41 EST 2023" starttimestamp="1700507886094" timestamp="3875167" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2294" _type="ConsoleOutput" date="Mon Nov 20 15:22:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3875173" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2295" _type="ExceptionCommand" date="Mon Nov 20 15:22:41 EST 2023" starttimestamp="1700507886094" timestamp="3875176" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f20.assignment5.testcases.toString.AbstractLispExpressionResultDeepChecker.actualOutput(AbstractLispExpressionResultDeepChecker.java:7)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2296" _type="ShellCommand" date="Mon Nov 20 15:22:46 EST 2023" starttimestamp="1700507886094" timestamp="3880381" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2297" _type="LocalChecksRawCommand" date="Mon Nov 20 15:22:46 EST 2023" starttimestamp="1700507886094" timestamp="3880384">
    <CSVRow><![CDATA[39,Mon Nov 20 15:22:22 EST 2023,3,0,A5AssignmentSpecificSourceChecks,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,11,0,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2298" _type="LocalChecksRawCommand" date="Mon Nov 20 15:22:46 EST 2023" starttimestamp="1700507886094" timestamp="3880384">
    <CSVRow><![CDATA[39,Mon Nov 20 15:22:22 EST 2023,3,0,A5AssignmentSpecificSourceChecks,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,11,0,true,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainClassProvided NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ,ComparatorEvaluatorCodeReuse LTECallsNilAtomFactory LTECallsTAtomFactory LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList ,ComparatorEvaluatorCodeReuse-(0.0/10.0) LTECallsNilAtomFactory-(0.0/1.0) LTECallsTAtomFactory-(0.0/1.0) LoadCallsInterpreterModelSingleton-(0.0/2.0) LoadCallsNewInput-(0.0/2.0) LoadCallsNilAtomFactory-(0.0/1.0) LoadCallsReadAllLines-(0.0/0.0) LoadCallsTAtomFactory-(0.0/1.0) MainCallsOperationRegisterer-(0.0/2.0) MainCallsSkeletonMain-(0.0/2.0) MainSetsExpressionFactory-(0.0/2.0) NotCallsNilAtomFactory-(0.0/1.0) NotCallsTAtomFactory-(0.0/1.0) ToStringAsListCallsHelper-(0.0/2.0) ToStringAsListHelperIsRecursive-(0.0/2.0) ToStringCallsToStringAsList-(0.0/2.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2299" _type="LocalChecksRawCommand" date="Mon Nov 20 15:22:46 EST 2023" starttimestamp="1700507886094" timestamp="3880384">
    <CSVRow><![CDATA[40,Mon Nov 20 15:22:41 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,12,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2300" _type="LocalChecksRawCommand" date="Mon Nov 20 15:22:46 EST 2023" starttimestamp="1700507886094" timestamp="3880384">
    <CSVRow><![CDATA[40,Mon Nov 20 15:22:41 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,12,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2301" _type="MoveCaretCommand" caretOffset="989" date="Mon Nov 20 15:22:46 EST 2023" docOffset="1106" starttimestamp="1700507886094" timestamp="3880458" />
  <Command __id="2302" _type="MoveCaretCommand" caretOffset="989" date="Mon Nov 20 15:22:46 EST 2023" docOffset="1106" starttimestamp="1700507886094" timestamp="3880458" />
  <Command __id="2304" _type="MoveCaretCommand" caretOffset="292" date="Mon Nov 20 15:22:47 EST 2023" docOffset="292" starttimestamp="1700507886094" timestamp="3881223" />
  <Command __id="2305" _type="MoveCaretCommand" caretOffset="457" date="Mon Nov 20 15:22:49 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="3883187" />
  <Command __id="2306" _type="MoveCaretCommand" caretOffset="457" date="Mon Nov 20 15:22:49 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="3883187" />
  <Command __id="2308" _type="InsertStringCommand" date="Mon Nov 20 15:22:50 EST 2023" starttimestamp="1700507886094" timestamp="3883975" timestamp2="3883975">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2309" _type="InsertStringCommand" date="Mon Nov 20 15:22:50 EST 2023" starttimestamp="1700507886094" timestamp="3883975" timestamp2="3883975">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2311" _type="InsertStringCommand" date="Mon Nov 20 15:22:50 EST 2023" starttimestamp="1700507886094" timestamp="3884203" timestamp2="3884203">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2312" _type="InsertStringCommand" date="Mon Nov 20 15:22:50 EST 2023" starttimestamp="1700507886094" timestamp="3884203" timestamp2="3884203">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2314" _type="InsertStringCommand" date="Mon Nov 20 15:22:50 EST 2023" starttimestamp="1700507886094" timestamp="3884480" timestamp2="3884480">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2315" _type="InsertStringCommand" date="Mon Nov 20 15:22:50 EST 2023" starttimestamp="1700507886094" timestamp="3884480" timestamp2="3884480">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2317" _type="InsertStringCommand" date="Mon Nov 20 15:22:50 EST 2023" starttimestamp="1700507886094" timestamp="3884770" timestamp2="3884770">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2318" _type="InsertStringCommand" date="Mon Nov 20 15:22:50 EST 2023" starttimestamp="1700507886094" timestamp="3884770" timestamp2="3884770">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2320" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3884933" timestamp2="3884933">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2321" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3884933" timestamp2="3884933">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2323" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3884986" timestamp2="3884986">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2324" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3884986" timestamp2="3884986">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2326" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3885157" timestamp2="3885157">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2327" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3885157" timestamp2="3885157">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2329" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3885278" timestamp2="3885278">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2330" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3885278" timestamp2="3885278">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2332" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3885397" timestamp2="3885397">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2333" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3885397" timestamp2="3885397">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2335" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3885586" timestamp2="3885586">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2336" _type="InsertStringCommand" date="Mon Nov 20 15:22:51 EST 2023" starttimestamp="1700507886094" timestamp="3885586" timestamp2="3885586">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2337" _type="MoveCaretCommand" caretOffset="468" date="Mon Nov 20 15:22:51 EST 2023" docOffset="468" starttimestamp="1700507886094" timestamp="3885904" />
  <Command __id="2338" _type="MoveCaretCommand" caretOffset="468" date="Mon Nov 20 15:22:51 EST 2023" docOffset="468" starttimestamp="1700507886094" timestamp="3885904" />
  <Command __id="2339" _type="MoveCaretCommand" caretOffset="718" date="Mon Nov 20 15:22:53 EST 2023" docOffset="718" starttimestamp="1700507886094" timestamp="3887021" />
  <Command __id="2340" _type="MoveCaretCommand" caretOffset="718" date="Mon Nov 20 15:22:53 EST 2023" docOffset="718" starttimestamp="1700507886094" timestamp="3887022" />
  <Command __id="2342" _type="InsertStringCommand" date="Mon Nov 20 15:22:53 EST 2023" starttimestamp="1700507886094" timestamp="3887583" timestamp2="3887583">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2343" _type="InsertStringCommand" date="Mon Nov 20 15:22:53 EST 2023" starttimestamp="1700507886094" timestamp="3887583" timestamp2="3887583">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2345" _type="InsertStringCommand" date="Mon Nov 20 15:22:53 EST 2023" starttimestamp="1700507886094" timestamp="3887822" timestamp2="3887822">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2346" _type="InsertStringCommand" date="Mon Nov 20 15:22:53 EST 2023" starttimestamp="1700507886094" timestamp="3887822" timestamp2="3887822">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2348" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888150" timestamp2="3888150">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2349" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888150" timestamp2="3888150">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2351" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888254" timestamp2="3888254">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2352" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888254" timestamp2="3888254">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2354" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888339" timestamp2="3888339">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2355" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888340" timestamp2="3888340">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2357" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888497" timestamp2="3888497">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2358" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888497" timestamp2="3888497">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2360" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888676" timestamp2="3888676">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2361" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888677" timestamp2="3888677">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2363" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888736" timestamp2="3888736">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2364" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888736" timestamp2="3888736">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2366" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888883" timestamp2="3888883">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2367" _type="InsertStringCommand" date="Mon Nov 20 15:22:54 EST 2023" starttimestamp="1700507886094" timestamp="3888883" timestamp2="3888883">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2368" _type="MoveCaretCommand" caretOffset="998" date="Mon Nov 20 15:22:57 EST 2023" docOffset="998" starttimestamp="1700507886094" timestamp="3891888" />
  <Command __id="2369" _type="MoveCaretCommand" caretOffset="998" date="Mon Nov 20 15:22:57 EST 2023" docOffset="998" starttimestamp="1700507886094" timestamp="3891889" />
  <Command __id="2371" _type="InsertStringCommand" date="Mon Nov 20 15:22:58 EST 2023" starttimestamp="1700507886094" timestamp="3892564" timestamp2="3892564">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2372" _type="InsertStringCommand" date="Mon Nov 20 15:22:58 EST 2023" starttimestamp="1700507886094" timestamp="3892564" timestamp2="3892564">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2374" _type="InsertStringCommand" date="Mon Nov 20 15:22:58 EST 2023" starttimestamp="1700507886094" timestamp="3892692" timestamp2="3892692">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2375" _type="InsertStringCommand" date="Mon Nov 20 15:22:58 EST 2023" starttimestamp="1700507886094" timestamp="3892692" timestamp2="3892692">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2377" _type="InsertStringCommand" date="Mon Nov 20 15:22:59 EST 2023" starttimestamp="1700507886094" timestamp="3893153" timestamp2="3893153">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2378" _type="InsertStringCommand" date="Mon Nov 20 15:22:59 EST 2023" starttimestamp="1700507886094" timestamp="3893153" timestamp2="3893153">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2380" _type="InsertStringCommand" date="Mon Nov 20 15:22:59 EST 2023" starttimestamp="1700507886094" timestamp="3893582" timestamp2="3893582">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2381" _type="InsertStringCommand" date="Mon Nov 20 15:22:59 EST 2023" starttimestamp="1700507886094" timestamp="3893582" timestamp2="3893582">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2383" _type="InsertStringCommand" date="Mon Nov 20 15:22:59 EST 2023" starttimestamp="1700507886094" timestamp="3893691" timestamp2="3893691">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2384" _type="InsertStringCommand" date="Mon Nov 20 15:22:59 EST 2023" starttimestamp="1700507886094" timestamp="3893691" timestamp2="3893691">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2386" _type="InsertStringCommand" date="Mon Nov 20 15:22:59 EST 2023" starttimestamp="1700507886094" timestamp="3893787" timestamp2="3893787">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2387" _type="InsertStringCommand" date="Mon Nov 20 15:22:59 EST 2023" starttimestamp="1700507886094" timestamp="3893787" timestamp2="3893787">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2389" _type="InsertStringCommand" date="Mon Nov 20 15:23:00 EST 2023" starttimestamp="1700507886094" timestamp="3893960" timestamp2="3893960">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2390" _type="InsertStringCommand" date="Mon Nov 20 15:23:00 EST 2023" starttimestamp="1700507886094" timestamp="3893960" timestamp2="3893960">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2392" _type="InsertStringCommand" date="Mon Nov 20 15:23:00 EST 2023" starttimestamp="1700507886094" timestamp="3894141" timestamp2="3894141">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2393" _type="InsertStringCommand" date="Mon Nov 20 15:23:00 EST 2023" starttimestamp="1700507886094" timestamp="3894141" timestamp2="3894141">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2395" _type="InsertStringCommand" date="Mon Nov 20 15:23:00 EST 2023" starttimestamp="1700507886094" timestamp="3894210" timestamp2="3894210">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2396" _type="InsertStringCommand" date="Mon Nov 20 15:23:00 EST 2023" starttimestamp="1700507886094" timestamp="3894210" timestamp2="3894210">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2398" _type="InsertStringCommand" date="Mon Nov 20 15:23:00 EST 2023" starttimestamp="1700507886094" timestamp="3894350" timestamp2="3894350">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2399" _type="InsertStringCommand" date="Mon Nov 20 15:23:00 EST 2023" starttimestamp="1700507886094" timestamp="3894350" timestamp2="3894350">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2400" _type="MoveCaretCommand" caretOffset="996" date="Mon Nov 20 15:23:00 EST 2023" docOffset="996" starttimestamp="1700507886094" timestamp="3894704" />
  <Command __id="2401" _type="MoveCaretCommand" caretOffset="996" date="Mon Nov 20 15:23:00 EST 2023" docOffset="996" starttimestamp="1700507886094" timestamp="3894704" />
  <Command __id="2402" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:23:01 EST 2023" starttimestamp="1700507886094" timestamp="3894940" />
  <Command __id="2403" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:23:01 EST 2023" starttimestamp="1700507886094" timestamp="3895040" />
  <Command __id="2404" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:23:01 EST 2023" starttimestamp="1700507886094" timestamp="3895047" />
  <Command __id="2405" _type="MoveCaretCommand" caretOffset="293" date="Mon Nov 20 15:23:03 EST 2023" docOffset="293" starttimestamp="1700507886094" timestamp="3897322" />
  <Command __id="2406" _type="MoveCaretCommand" caretOffset="293" date="Mon Nov 20 15:23:03 EST 2023" docOffset="293" starttimestamp="1700507886094" timestamp="3897322" />
  <Command __id="2408" _type="InsertStringCommand" date="Mon Nov 20 15:23:03 EST 2023" starttimestamp="1700507886094" timestamp="3897744" timestamp2="3897744">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2409" _type="InsertStringCommand" date="Mon Nov 20 15:23:03 EST 2023" starttimestamp="1700507886094" timestamp="3897744" timestamp2="3897744">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2411" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3897981" timestamp2="3897981">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2412" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3897981" timestamp2="3897981">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2414" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898230" timestamp2="3898230">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2415" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898230" timestamp2="3898230">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="2417" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898486" timestamp2="3898486">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2418" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898486" timestamp2="3898486">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2420" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898649" timestamp2="3898649">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2421" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898649" timestamp2="3898649">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2423" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898731" timestamp2="3898731">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2424" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898731" timestamp2="3898731">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2426" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898895" timestamp2="3898895">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2427" _type="InsertStringCommand" date="Mon Nov 20 15:23:04 EST 2023" starttimestamp="1700507886094" timestamp="3898895" timestamp2="3898895">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2429" _type="InsertStringCommand" date="Mon Nov 20 15:23:05 EST 2023" starttimestamp="1700507886094" timestamp="3899049" timestamp2="3899049">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2430" _type="InsertStringCommand" date="Mon Nov 20 15:23:05 EST 2023" starttimestamp="1700507886094" timestamp="3899049" timestamp2="3899049">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2432" _type="InsertStringCommand" date="Mon Nov 20 15:23:05 EST 2023" starttimestamp="1700507886094" timestamp="3899120" timestamp2="3899120">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2433" _type="InsertStringCommand" date="Mon Nov 20 15:23:05 EST 2023" starttimestamp="1700507886094" timestamp="3899120" timestamp2="3899120">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2435" _type="InsertStringCommand" date="Mon Nov 20 15:23:05 EST 2023" starttimestamp="1700507886094" timestamp="3899237" timestamp2="3899237">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2436" _type="InsertStringCommand" date="Mon Nov 20 15:23:05 EST 2023" starttimestamp="1700507886094" timestamp="3899237" timestamp2="3899237">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2437" _type="MoveCaretCommand" caretOffset="331" date="Mon Nov 20 15:23:05 EST 2023" docOffset="331" starttimestamp="1700507886094" timestamp="3899621" />
  <Command __id="2438" _type="MoveCaretCommand" caretOffset="331" date="Mon Nov 20 15:23:05 EST 2023" docOffset="331" starttimestamp="1700507886094" timestamp="3899621" />
  <Command __id="2267" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:22:16 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3850443">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2303" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:22:47 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3881180">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="2307" _type="Insert" date="Mon Nov 20 15:22:50 EST 2023" docASTNodeCount="159" docActiveCodeLength="980" docExpressionCount="115" docLength="1102" length="11" offset="457" repeat="10" starttimestamp="1700507886094" timestamp="3883971" timestamp2="3885584">
    <text><![CDATA[
	@Override]]></text>
  </DocumentChange>
  <DocumentChange __id="2341" _type="Insert" date="Mon Nov 20 15:22:53 EST 2023" docASTNodeCount="161" docActiveCodeLength="989" docExpressionCount="117" docLength="1111" length="9" offset="718" repeat="9" starttimestamp="1700507886094" timestamp="3887581" timestamp2="3888881">
    <text><![CDATA[@Override]]></text>
  </DocumentChange>
  <DocumentChange __id="2370" _type="Insert" date="Mon Nov 20 15:22:58 EST 2023" docASTNodeCount="163" docActiveCodeLength="1000" docExpressionCount="119" docLength="1122" length="11" offset="998" repeat="10" starttimestamp="1700507886094" timestamp="3892559" timestamp2="3894348">
    <text><![CDATA[
	@Override]]></text>
  </DocumentChange>
  <DocumentChange __id="2407" _type="Insert" date="Mon Nov 20 15:23:03 EST 2023" docASTNodeCount="165" docActiveCodeLength="1011" docExpressionCount="121" docLength="1133" length="11" offset="293" repeat="10" starttimestamp="1700507886094" timestamp="3897741" timestamp2="3899235">
    <text><![CDATA[
	@Override]]></text>
  </DocumentChange>
  <Command __id="2439" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:23:06 EST 2023" starttimestamp="1700507886094" timestamp="3900706" />
  <Command __id="2440" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:23:06 EST 2023" starttimestamp="1700507886094" timestamp="3900807" />
  <Command __id="2441" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:23:06 EST 2023" starttimestamp="1700507886094" timestamp="3900814" />
  <Command __id="2443" _type="MoveCaretCommand" caretOffset="989" date="Mon Nov 20 15:23:09 EST 2023" docOffset="1106" starttimestamp="1700507886094" timestamp="3903869" />
  <Command __id="2444" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 15:23:10 EST 2023" docOffset="368" starttimestamp="1700507886094" timestamp="3904272" />
  <Command __id="2445" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 15:23:10 EST 2023" docOffset="368" starttimestamp="1700507886094" timestamp="3904272" />
  <Command __id="2449" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:23:14 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3908358" type="Run" />
  <Command __id="2450" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:23:14 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3908358" type="Run" />
  <Command __id="2451" _type="ConsoleOutput" date="Mon Nov 20 15:23:15 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3909840" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2452" _type="ConsoleOutput" date="Mon Nov 20 15:23:15 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3909841" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2453" _type="ConsoleOutput" date="Mon Nov 20 15:23:15 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3909842" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2454" _type="ConsoleOutput" date="Mon Nov 20 15:23:15 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3909842" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2455" _type="ExceptionCommand" date="Mon Nov 20 15:23:15 EST 2023" starttimestamp="1700507886094" timestamp="3909857" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:43)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2456" _type="ConsoleOutput" date="Mon Nov 20 15:23:15 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3909860" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2457" _type="ConsoleOutput" date="Mon Nov 20 15:23:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="3909915" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java."), Diff(DELETE,"base/java.lang.String.valueOf(String"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:2"), Diff(DELETE,"95"), Diff(INSERT,"32"), Diff(EQUAL,"1)¶	at java."), Diff(DELETE,"base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"99"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicPars"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"77"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicPars"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"53"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicPars"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"15"), Diff(INSERT,"448"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"277"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"19"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(INSERT,"7"), Diff(EQUAL,"2"), Diff(DELETE,"3"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"111"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/java."), Diff(DELETE,"lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(INSERT,"9"), Diff(EQUAL,"5"), Diff(DELETE,"0"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(EQUAL,"7"), Diff(INSERT,"45"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"325"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"20"), Diff(EQUAL,"3)¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMetho"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"270"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"444"), Diff(INSERT,"13"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(INSERT,"10"), Diff(EQUAL,"9)¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"7"), Diff(EQUAL,"01)¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"1531"), Diff(INSERT,"90"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2458" _type="ExceptionCommand" date="Mon Nov 20 15:23:16 EST 2023" starttimestamp="1700507886094" timestamp="3909924" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):29
Test Result:BaseCaseSExpressionToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5 . 2)actual string 

java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:43)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2442" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:23:09 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3903811">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2459" _type="ShellCommand" date="Mon Nov 20 15:23:19 EST 2023" starttimestamp="1700507886094" timestamp="3912980" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2460" _type="LocalChecksRawCommand" date="Mon Nov 20 15:23:19 EST 2023" starttimestamp="1700507886094" timestamp="3912982">
    <CSVRow><![CDATA[41,Mon Nov 20 15:23:15 EST 2023,3,0,A5ToStringSuite,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,13,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2461" _type="LocalChecksRawCommand" date="Mon Nov 20 15:23:19 EST 2023" starttimestamp="1700507886094" timestamp="3912982">
    <CSVRow><![CDATA[41,Mon Nov 20 15:23:15 EST 2023,3,0,A5ToStringSuite,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,13,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2462" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:23:19 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3912989" type="Run" />
  <Command __id="2463" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:23:19 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3912989" type="Run" />
  <Command __id="2465" _type="MoveCaretCommand" caretOffset="331" date="Mon Nov 20 15:23:20 EST 2023" docOffset="331" starttimestamp="1700507886094" timestamp="3914059" />
  <Command __id="2466" _type="MoveCaretCommand" caretOffset="304" date="Mon Nov 20 15:23:21 EST 2023" docOffset="304" starttimestamp="1700507886094" timestamp="3915687" />
  <Command __id="2467" _type="MoveCaretCommand" caretOffset="304" date="Mon Nov 20 15:23:21 EST 2023" docOffset="304" starttimestamp="1700507886094" timestamp="3915687" />
  <Command __id="2469" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 15:23:22 EST 2023" starttimestamp="1700507886094" timestamp="3916539" />
  <Command __id="2470" _type="MoveCaretCommand" caretOffset="468" date="Mon Nov 20 15:23:23 EST 2023" docOffset="468" starttimestamp="1700507886094" timestamp="3917153" />
  <Command __id="2471" _type="MoveCaretCommand" caretOffset="468" date="Mon Nov 20 15:23:23 EST 2023" docOffset="468" starttimestamp="1700507886094" timestamp="3917153" />
  <Command __id="2473" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 15:23:23 EST 2023" starttimestamp="1700507886094" timestamp="3917219" />
  <Command __id="2474" _type="MoveCaretCommand" caretOffset="716" date="Mon Nov 20 15:23:23 EST 2023" docOffset="716" starttimestamp="1700507886094" timestamp="3917872" />
  <Command __id="2475" _type="MoveCaretCommand" caretOffset="716" date="Mon Nov 20 15:23:23 EST 2023" docOffset="716" starttimestamp="1700507886094" timestamp="3917872" />
  <Command __id="2477" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 15:23:24 EST 2023" starttimestamp="1700507886094" timestamp="3918040" />
  <Command __id="2478" _type="MoveCaretCommand" caretOffset="705" date="Mon Nov 20 15:23:25 EST 2023" docOffset="705" starttimestamp="1700507886094" timestamp="3919641" />
  <Command __id="2479" _type="MoveCaretCommand" caretOffset="705" date="Mon Nov 20 15:23:25 EST 2023" docOffset="705" starttimestamp="1700507886094" timestamp="3919641" />
  <Command __id="2481" _type="InsertStringCommand" date="Mon Nov 20 15:23:26 EST 2023" starttimestamp="1700507886094" timestamp="3920139" timestamp2="3920139">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2482" _type="InsertStringCommand" date="Mon Nov 20 15:23:26 EST 2023" starttimestamp="1700507886094" timestamp="3920139" timestamp2="3920139">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2483" _type="MoveCaretCommand" caretOffset="989" date="Mon Nov 20 15:23:27 EST 2023" docOffset="989" starttimestamp="1700507886094" timestamp="3921339" />
  <Command __id="2484" _type="MoveCaretCommand" caretOffset="989" date="Mon Nov 20 15:23:27 EST 2023" docOffset="989" starttimestamp="1700507886094" timestamp="3921339" />
  <Command __id="2486" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 15:23:27 EST 2023" starttimestamp="1700507886094" timestamp="3921507" />
  <Command __id="2487" _type="MoveCaretCommand" caretOffset="887" date="Mon Nov 20 15:23:28 EST 2023" docOffset="887" starttimestamp="1700507886094" timestamp="3922021" />
  <Command __id="2488" _type="MoveCaretCommand" caretOffset="887" date="Mon Nov 20 15:23:28 EST 2023" docOffset="887" starttimestamp="1700507886094" timestamp="3922021" />
  <Command __id="2489" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:23:40 EST 2023" starttimestamp="1700507886094" timestamp="3934673" />
  <Command __id="2490" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:23:40 EST 2023" starttimestamp="1700507886094" timestamp="3934770" />
  <Command __id="2491" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:23:40 EST 2023" starttimestamp="1700507886094" timestamp="3934777" />
  <Command __id="2492" _type="MoveCaretCommand" caretOffset="178" date="Mon Nov 20 15:23:42 EST 2023" docOffset="178" starttimestamp="1700507886094" timestamp="3936005" />
  <Command __id="2493" _type="MoveCaretCommand" caretOffset="178" date="Mon Nov 20 15:23:42 EST 2023" docOffset="178" starttimestamp="1700507886094" timestamp="3936006" />
  <Command __id="2494" _type="MoveCaretCommand" caretOffset="191" date="Mon Nov 20 15:23:42 EST 2023" docOffset="191" starttimestamp="1700507886094" timestamp="3936530" />
  <Command __id="2495" _type="MoveCaretCommand" caretOffset="191" date="Mon Nov 20 15:23:42 EST 2023" docOffset="191" starttimestamp="1700507886094" timestamp="3936530" />
  <Command __id="2496" _type="MoveCaretCommand" caretOffset="142" date="Mon Nov 20 15:23:43 EST 2023" docOffset="142" starttimestamp="1700507886094" timestamp="3937005" />
  <Command __id="2497" _type="MoveCaretCommand" caretOffset="142" date="Mon Nov 20 15:23:43 EST 2023" docOffset="142" starttimestamp="1700507886094" timestamp="3937005" />
  <Command __id="2498" _type="MoveCaretCommand" caretOffset="142" date="Mon Nov 20 15:23:43 EST 2023" docOffset="142" starttimestamp="1700507886094" timestamp="3937458" />
  <Command __id="2499" _type="MoveCaretCommand" caretOffset="142" date="Mon Nov 20 15:23:43 EST 2023" docOffset="142" starttimestamp="1700507886094" timestamp="3937458" />
  <Command __id="2464" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:23:20 EST 2023" docASTNodeCount="165" docActiveCodeLength="1011" docExpressionCount="121" docLength="1133" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3914013">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}"), Diff(INSERT,"	@Override"), Diff(EQUAL,"	public boolean isList() {"), Diff(DELETE,""), Diff(EQUAL,"		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		"), Diff(INSERT,"@Override	"), Diff(EQUAL,"public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}	"), Diff(INSERT,"@Override"), Diff(EQUAL,"	public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}"), Diff(DELETE,""), Diff(EQUAL,"		"), Diff(INSERT,"@Override	"), Diff(EQUAL,"public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	@Override
	public boolean isList() {
		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {
			return true;
		}else {
			return this.getTail().isList();
		}
	}
	
	@Override
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	@Override
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
//	public String toStringAsList() {
//		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
//	}
	
	@Override
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2468" _type="Delete" date="Mon Nov 20 15:23:22 EST 2023" docASTNodeCount="163" docActiveCodeLength="1000" docExpressionCount="119" docLength="1122" endLine="13" length="11" offset="294" startLine="12" starttimestamp="1700507886094" timestamp="3916533">
    <text><![CDATA[	@Override
]]></text>
  </DocumentChange>
  <DocumentChange __id="2472" _type="Delete" date="Mon Nov 20 15:23:23 EST 2023" docASTNodeCount="161" docActiveCodeLength="989" docExpressionCount="117" docLength="1111" endLine="21" length="11" offset="458" startLine="20" starttimestamp="1700507886094" timestamp="3917216">
    <text><![CDATA[	@Override
]]></text>
  </DocumentChange>
  <DocumentChange __id="2476" _type="Delete" date="Mon Nov 20 15:23:24 EST 2023" docASTNodeCount="159" docActiveCodeLength="978" docExpressionCount="115" docLength="1100" endLine="29" length="11" offset="706" startLine="28" starttimestamp="1700507886094" timestamp="3918037">
    <text><![CDATA[	@Override
]]></text>
  </DocumentChange>
  <DocumentChange __id="2480" _type="Insert" date="Mon Nov 20 15:23:26 EST 2023" docASTNodeCount="159" docActiveCodeLength="980" docExpressionCount="115" docLength="1102" length="2" offset="705" starttimestamp="1700507886094" timestamp="3920135">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2485" _type="Delete" date="Mon Nov 20 15:23:27 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" endLine="39" length="11" offset="979" startLine="38" starttimestamp="1700507886094" timestamp="3921504">
    <text><![CDATA[	@Override
]]></text>
  </DocumentChange>
  <Command __id="2502" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:23:45 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="3939474">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2505" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:23:47 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3941488">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}"), Diff(DELETE,"	@Override"), Diff(EQUAL,"	public boolean isList() {"), Diff(INSERT,""), Diff(EQUAL,"		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		"), Diff(DELETE,"@Override	"), Diff(EQUAL,"public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}	"), Diff(DELETE,"@Override"), Diff(EQUAL,"	public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}"), Diff(INSERT,""), Diff(EQUAL,"		"), Diff(DELETE,"@Override	"), Diff(EQUAL,"public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {
			return true;
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
//	public String toStringAsList() {
//		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";
//	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}

}
]]></snapshot>
  </Command>
  <Command __id="2507" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:23:48 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3942268">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return "), Diff(DELETE,"ma"), Diff(EQUAL,"in"), Diff(INSERT,"dex"), Diff(EQUAL,".class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.ClassRegistry;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.SExpression;

public class ClassRegistryImpl implements ClassRegistry {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

}
]]></snapshot>
  </Command>
  <Command __id="2509" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:23:58 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3951978">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2511" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:23:59 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3953203">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2513" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:24:05 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3959833">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2515" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:24:09 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3963018">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2519" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:24:11 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3965404">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2521" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:24:17 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3970975">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2500" _type="MoveCaretCommand" caretOffset="189" date="Mon Nov 20 15:23:45 EST 2023" docOffset="189" starttimestamp="1700507886094" timestamp="3939022" />
  <Command __id="2501" _type="MoveCaretCommand" caretOffset="189" date="Mon Nov 20 15:23:45 EST 2023" docOffset="189" starttimestamp="1700507886094" timestamp="3939022" />
  <Command __id="2503" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 15:23:45 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="3939477" />
  <Command __id="2504" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 15:23:45 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="3939523" />
  <Command __id="2506" _type="MoveCaretCommand" caretOffset="190" date="Mon Nov 20 15:23:47 EST 2023" docOffset="190" starttimestamp="1700507886094" timestamp="3941530" />
  <Command __id="2508" _type="SelectTextCommand" caretOffset="1865" date="Mon Nov 20 15:23:48 EST 2023" end="1865" start="1837" starttimestamp="1700507886094" timestamp="3942315" />
  <Command __id="2510" _type="MoveCaretCommand" caretOffset="190" date="Mon Nov 20 15:23:58 EST 2023" docOffset="190" starttimestamp="1700507886094" timestamp="3952026" />
  <Command __id="2512" _type="SelectTextCommand" caretOffset="1865" date="Mon Nov 20 15:23:59 EST 2023" end="1865" start="1837" starttimestamp="1700507886094" timestamp="3953259" />
  <Command __id="2514" _type="MoveCaretCommand" caretOffset="174" date="Mon Nov 20 15:24:05 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="3959883" />
  <Command __id="2516" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 15:24:09 EST 2023" docOffset="368" starttimestamp="1700507886094" timestamp="3963064" />
  <Command __id="2517" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 15:24:09 EST 2023" docOffset="14" starttimestamp="1700507886094" timestamp="3963490" />
  <Command __id="2518" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 15:24:09 EST 2023" docOffset="14" starttimestamp="1700507886094" timestamp="3963490" />
  <Command __id="2520" _type="MoveCaretCommand" caretOffset="190" date="Mon Nov 20 15:24:11 EST 2023" docOffset="190" starttimestamp="1700507886094" timestamp="3965442" />
  <Command __id="2522" _type="SelectTextCommand" caretOffset="1865" date="Mon Nov 20 15:24:17 EST 2023" end="1865" start="1837" starttimestamp="1700507886094" timestamp="3971024" />
  <Command __id="2524" _type="MoveCaretCommand" caretOffset="190" date="Mon Nov 20 15:24:26 EST 2023" docOffset="190" starttimestamp="1700507886094" timestamp="3980034" />
  <Command __id="2525" _type="MoveCaretCommand" caretOffset="1044" date="Mon Nov 20 15:24:33 EST 2023" docOffset="1044" starttimestamp="1700507886094" timestamp="3987479" />
  <Command __id="2526" _type="MoveCaretCommand" caretOffset="1044" date="Mon Nov 20 15:24:33 EST 2023" docOffset="1044" starttimestamp="1700507886094" timestamp="3987479" />
  <Command __id="2527" _type="MoveCaretCommand" caretOffset="1033" date="Mon Nov 20 15:24:37 EST 2023" docOffset="1033" starttimestamp="1700507886094" timestamp="3991844" />
  <Command __id="2528" _type="MoveCaretCommand" caretOffset="1033" date="Mon Nov 20 15:24:37 EST 2023" docOffset="1033" starttimestamp="1700507886094" timestamp="3991845" />
  <Command __id="2529" _type="MoveCaretCommand" caretOffset="1033" date="Mon Nov 20 15:24:39 EST 2023" docOffset="1033" starttimestamp="1700507886094" timestamp="3993661" />
  <Command __id="2530" _type="MoveCaretCommand" caretOffset="1033" date="Mon Nov 20 15:24:39 EST 2023" docOffset="1033" starttimestamp="1700507886094" timestamp="3993661" />
  <Command __id="2531" _type="SelectTextCommand" caretOffset="1035" date="Mon Nov 20 15:24:39 EST 2023" end="1035" start="1031" starttimestamp="1700507886094" timestamp="3993843" />
  <Command __id="2532" _type="SelectTextCommand" caretOffset="1035" date="Mon Nov 20 15:24:39 EST 2023" end="1035" start="1031" starttimestamp="1700507886094" timestamp="3993843" />
  <Command __id="2533" _type="MoveCaretCommand" caretOffset="1006" date="Mon Nov 20 15:24:40 EST 2023" docOffset="1006" starttimestamp="1700507886094" timestamp="3994776" />
  <Command __id="2534" _type="MoveCaretCommand" caretOffset="1006" date="Mon Nov 20 15:24:40 EST 2023" docOffset="1006" starttimestamp="1700507886094" timestamp="3994776" />
  <Command __id="2535" _type="ShellCommand" date="Mon Nov 20 15:24:56 EST 2023" starttimestamp="1700507886094" timestamp="4009989" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2523" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:24:26 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="3979989">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2536" _type="ShellCommand" date="Mon Nov 20 15:24:59 EST 2023" starttimestamp="1700507886094" timestamp="4013893" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2538" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 15:25:03 EST 2023" docOffset="14" starttimestamp="1700507886094" timestamp="4017843" />
  <Command __id="2539" _type="ShellCommand" date="Mon Nov 20 15:25:04 EST 2023" starttimestamp="1700507886094" timestamp="4018663" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2537" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:25:03 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4017786">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2540" _type="ShellCommand" date="Mon Nov 20 15:25:13 EST 2023" starttimestamp="1700507886094" timestamp="4027718" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2542" _type="SelectTextCommand" caretOffset="1865" date="Mon Nov 20 15:25:15 EST 2023" end="1865" start="1837" starttimestamp="1700507886094" timestamp="4029364" />
  <Command __id="2543" _type="ShellCommand" date="Mon Nov 20 15:25:16 EST 2023" starttimestamp="1700507886094" timestamp="4030712" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2544" _type="ShellCommand" date="Mon Nov 20 15:25:17 EST 2023" starttimestamp="1700507886094" timestamp="4031594" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2545" _type="ShellCommand" date="Mon Nov 20 15:25:18 EST 2023" starttimestamp="1700507886094" timestamp="4032539" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2546" _type="ShellCommand" date="Mon Nov 20 15:25:21 EST 2023" starttimestamp="1700507886094" timestamp="4035623" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2547" _type="MoveCaretCommand" caretOffset="1872" date="Mon Nov 20 15:25:23 EST 2023" docOffset="2001" starttimestamp="1700507886094" timestamp="4036929" />
  <Command __id="2548" _type="MoveCaretCommand" caretOffset="1973" date="Mon Nov 20 15:25:23 EST 2023" docOffset="2102" starttimestamp="1700507886094" timestamp="4037443" />
  <Command __id="2549" _type="ShellCommand" date="Mon Nov 20 15:25:36 EST 2023" starttimestamp="1700507886094" timestamp="4050522" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2541" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:25:15 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4029322">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2550" _type="ShellCommand" date="Mon Nov 20 15:26:00 EST 2023" starttimestamp="1700507886094" timestamp="4074449" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2551" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:26:02 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4076401">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2552" _type="MoveCaretCommand" caretOffset="1006" date="Mon Nov 20 15:26:02 EST 2023" docOffset="1006" starttimestamp="1700507886094" timestamp="4076450" />
  <Command __id="2553" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:26:03 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4076908">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2554" _type="MoveCaretCommand" caretOffset="14" date="Mon Nov 20 15:26:03 EST 2023" docOffset="14" starttimestamp="1700507886094" timestamp="4076959" />
  <Command __id="2555" _type="MoveCaretCommand" caretOffset="247" date="Mon Nov 20 15:26:03 EST 2023" docOffset="364" starttimestamp="1700507886094" timestamp="4077679" />
  <Command __id="2556" _type="MoveCaretCommand" caretOffset="247" date="Mon Nov 20 15:26:03 EST 2023" docOffset="364" starttimestamp="1700507886094" timestamp="4077679" />
  <Command __id="2557" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 15:26:04 EST 2023" docOffset="368" starttimestamp="1700507886094" timestamp="4078147" />
  <Command __id="2558" _type="MoveCaretCommand" caretOffset="251" date="Mon Nov 20 15:26:04 EST 2023" docOffset="368" starttimestamp="1700507886094" timestamp="4078147" />
  <DocumentChange __id="2559" _type="Insert" date="Mon Nov 20 15:26:04 EST 2023" docASTNodeCount="90" docActiveCodeLength="720" docExpressionCount="56" docLength="1112" length="3" offset="368" starttimestamp="1700507886094" timestamp="4078661">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="2560" _type="InsertStringCommand" date="Mon Nov 20 15:26:04 EST 2023" starttimestamp="1700507886094" timestamp="4078663" timestamp2="4078663">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2561" _type="InsertStringCommand" date="Mon Nov 20 15:26:04 EST 2023" starttimestamp="1700507886094" timestamp="4078663" timestamp2="4078663">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2562" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:26:08 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4082884">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2563" _type="MoveCaretCommand" caretOffset="1973" date="Mon Nov 20 15:26:09 EST 2023" docOffset="2102" starttimestamp="1700507886094" timestamp="4082931" />
  <Command __id="2565" _type="MoveCaretCommand" caretOffset="174" date="Mon Nov 20 15:26:10 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="4084298" />
  <Command __id="2564" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:26:10 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4084240">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2568" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:26:13 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4087425">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2566" _type="MoveCaretCommand" caretOffset="50" date="Mon Nov 20 15:26:12 EST 2023" docOffset="50" starttimestamp="1700507886094" timestamp="4086716" />
  <Command __id="2567" _type="InsertStringCommand" date="Mon Nov 20 15:26:12 EST 2023" starttimestamp="1700507886094" timestamp="4086836" timestamp2="4086836">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2569" _type="MoveCaretCommand" caretOffset="1006" date="Mon Nov 20 15:26:13 EST 2023" docOffset="1006" starttimestamp="1700507886094" timestamp="4087475" />
  <Command __id="2571" _type="MoveCaretCommand" caretOffset="50" date="Mon Nov 20 15:26:14 EST 2023" docOffset="50" starttimestamp="1700507886094" timestamp="4088851" />
  <Command __id="2570" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:26:14 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4088810">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2572" _type="SelectTextCommand" caretOffset="34" date="Mon Nov 20 15:26:16 EST 2023" end="82" start="34" starttimestamp="1700507886094" timestamp="4090797" />
  <Command __id="2573" _type="CopyCommand" date="Mon Nov 20 15:26:17 EST 2023" starttimestamp="1700507886094" timestamp="4090929" />
  <Command __id="2575" _type="MoveCaretCommand" caretOffset="254" date="Mon Nov 20 15:26:19 EST 2023" docOffset="371" starttimestamp="1700507886094" timestamp="4093535" />
  <Command __id="2576" _type="MoveCaretCommand" caretOffset="70" date="Mon Nov 20 15:26:20 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="4094649" />
  <Command __id="2577" _type="MoveCaretCommand" caretOffset="70" date="Mon Nov 20 15:26:20 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="4094649" />
  <Command __id="2579" _type="InsertStringCommand" date="Mon Nov 20 15:26:21 EST 2023" starttimestamp="1700507886094" timestamp="4095091" timestamp2="4095091">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2580" _type="InsertStringCommand" date="Mon Nov 20 15:26:21 EST 2023" starttimestamp="1700507886094" timestamp="4095091" timestamp2="4095091">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2581" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 15:26:23 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="4097333" />
  <Command __id="2582" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 15:26:23 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="4097333" />
  <Command __id="2584" _type="PasteCommand" date="Mon Nov 20 15:26:23 EST 2023" starttimestamp="1700507886094" timestamp="4097486" />
  <Command __id="2585" _type="MoveCaretCommand" caretOffset="420" date="Mon Nov 20 15:26:24 EST 2023" docOffset="420" starttimestamp="1700507886094" timestamp="4098784" />
  <Command __id="2586" _type="MoveCaretCommand" caretOffset="420" date="Mon Nov 20 15:26:24 EST 2023" docOffset="420" starttimestamp="1700507886094" timestamp="4098784" />
  <Command __id="2588" _type="InsertStringCommand" date="Mon Nov 20 15:26:25 EST 2023" starttimestamp="1700507886094" timestamp="4099546" timestamp2="4099546">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2589" _type="InsertStringCommand" date="Mon Nov 20 15:26:25 EST 2023" starttimestamp="1700507886094" timestamp="4099546" timestamp2="4099546">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2591" _type="InsertStringCommand" date="Mon Nov 20 15:26:25 EST 2023" starttimestamp="1700507886094" timestamp="4099773" timestamp2="4099773">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2592" _type="InsertStringCommand" date="Mon Nov 20 15:26:25 EST 2023" starttimestamp="1700507886094" timestamp="4099773" timestamp2="4099773">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2594" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4099937" timestamp2="4099937">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2595" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4099938" timestamp2="4099938">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2597" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4100027" timestamp2="4100027">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2598" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4100027" timestamp2="4100027">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2600" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4100062" timestamp2="4100062">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2601" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4100062" timestamp2="4100062">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2603" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4100725" timestamp2="4100725">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2604" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4100725" timestamp2="4100725">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2606" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4100892" timestamp2="4100892">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2607" _type="InsertStringCommand" date="Mon Nov 20 15:26:26 EST 2023" starttimestamp="1700507886094" timestamp="4100892" timestamp2="4100892">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2609" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101001" timestamp2="4101001">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2610" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101001" timestamp2="4101001">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2612" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101043" timestamp2="4101043">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2613" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101043" timestamp2="4101043">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2615" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101118" timestamp2="4101118">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2616" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101118" timestamp2="4101118">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2618" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101294" timestamp2="4101294">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="2619" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101294" timestamp2="4101294">
    <data><![CDATA[F]]></data>
  </Command>
  <Command __id="2621" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101467" timestamp2="4101467">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2622" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101468" timestamp2="4101468">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2624" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101628" timestamp2="4101628">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2625" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101628" timestamp2="4101628">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2627" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101811" timestamp2="4101811">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2628" _type="InsertStringCommand" date="Mon Nov 20 15:26:27 EST 2023" starttimestamp="1700507886094" timestamp="4101811" timestamp2="4101811">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2630" _type="InsertStringCommand" date="Mon Nov 20 15:26:28 EST 2023" starttimestamp="1700507886094" timestamp="4101911" timestamp2="4101911">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2631" _type="InsertStringCommand" date="Mon Nov 20 15:26:28 EST 2023" starttimestamp="1700507886094" timestamp="4101911" timestamp2="4101911">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2633" _type="InsertStringCommand" date="Mon Nov 20 15:26:28 EST 2023" starttimestamp="1700507886094" timestamp="4101959" timestamp2="4101959">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2634" _type="InsertStringCommand" date="Mon Nov 20 15:26:28 EST 2023" starttimestamp="1700507886094" timestamp="4101960" timestamp2="4101960">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2636" _type="InsertStringCommand" date="Mon Nov 20 15:26:28 EST 2023" starttimestamp="1700507886094" timestamp="4102087" timestamp2="4102087">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2637" _type="InsertStringCommand" date="Mon Nov 20 15:26:28 EST 2023" starttimestamp="1700507886094" timestamp="4102087" timestamp2="4102087">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2638" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:26:28 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="4102094" />
  <Command __id="2639" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:26:28 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="4102116" />
  <Command __id="2640" _type="ShellCommand" date="Mon Nov 20 15:26:31 EST 2023" starttimestamp="1700507886094" timestamp="4105715" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2641" _type="ShellCommand" date="Mon Nov 20 15:26:33 EST 2023" starttimestamp="1700507886094" timestamp="4107784" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2574" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:26:19 EST 2023" docASTNodeCount="90" docActiveCodeLength="720" docExpressionCount="56" docLength="1112" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4093471">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				"), Diff(INSERT,"		"), Diff(EQUAL,"// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment5.F23Assignment5Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment5Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="2578" _type="Insert" date="Mon Nov 20 15:26:21 EST 2023" docASTNodeCount="90" docActiveCodeLength="721" docExpressionCount="56" docLength="1113" length="1" offset="187" starttimestamp="1700507886094" timestamp="4095088">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <DocumentChange __id="2583" _type="Insert" date="Mon Nov 20 15:26:23 EST 2023" docASTNodeCount="100" docActiveCodeLength="769" docExpressionCount="65" docLength="1161" length="48" offset="187" starttimestamp="1700507886094" timestamp="4097483">
    <text><![CDATA[import main.lisp.parser.terms.ExpressionFactory;]]></text>
  </DocumentChange>
  <DocumentChange __id="2587" _type="Insert" date="Mon Nov 20 15:26:25 EST 2023" docASTNodeCount="102" docActiveCodeLength="786" docExpressionCount="67" docLength="1178" length="17" offset="420" repeat="17" starttimestamp="1700507886094" timestamp="4099545" timestamp2="4102084">
    <text><![CDATA[ExpressionFactor.]]></text>
  </DocumentChange>
  <DocumentChange __id="2649" _type="Insert" date="Mon Nov 20 15:26:37 EST 2023" docASTNodeCount="102" docActiveCodeLength="803" docExpressionCount="67" docLength="1195" length="17" offset="432" starttimestamp="1700507886094" timestamp="4110934">
    <text><![CDATA[ExpressionFactory]]></text>
  </DocumentChange>
  <DocumentChange __id="2655" _type="Replace" date="Mon Nov 20 15:26:37 EST 2023" docASTNodeCount="102" docActiveCodeLength="787" docExpressionCount="67" docLength="1179" endLine="14" insertionLength="19" int_docASTNodeCount="100" int_docActiveCodeLength="768" int_docExpressionCount="65" int_docLength="1160" length="35" offset="418" startLine="14" starttimestamp="1700507886094" timestamp="4111795">
    <deletedText><![CDATA[		ExpressionFaExpressionFactoryctor]]></deletedText>
    <insertedText><![CDATA[		ExpressionFactory]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2659" _type="Delete" date="Mon Nov 20 15:26:38 EST 2023" docASTNodeCount="104" docActiveCodeLength="786" docExpressionCount="66" docLength="1178" endLine="14" length="1" offset="437" startLine="14" starttimestamp="1700507886094" timestamp="4112888">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2662" _type="Insert" date="Mon Nov 20 15:26:39 EST 2023" docASTNodeCount="102" docActiveCodeLength="787" docExpressionCount="67" docLength="1179" length="1" offset="437" starttimestamp="1700507886094" timestamp="4113090">
    <text><![CDATA[。]]></text>
  </DocumentChange>
  <DocumentChange __id="2665" _type="Delete" date="Mon Nov 20 15:26:39 EST 2023" docASTNodeCount="104" docActiveCodeLength="786" docExpressionCount="66" docLength="1178" endLine="14" length="1" offset="437" startLine="14" starttimestamp="1700507886094" timestamp="4113853">
    <text><![CDATA[。]]></text>
  </DocumentChange>
  <Command __id="2642" _type="MoveCaretCommand" caretOffset="225" date="Mon Nov 20 15:26:36 EST 2023" docOffset="225" starttimestamp="1700507886094" timestamp="4109918" />
  <Command __id="2643" _type="MoveCaretCommand" caretOffset="225" date="Mon Nov 20 15:26:36 EST 2023" docOffset="225" starttimestamp="1700507886094" timestamp="4109918" />
  <Command __id="2644" _type="SelectTextCommand" caretOffset="234" date="Mon Nov 20 15:26:36 EST 2023" end="234" start="217" starttimestamp="1700507886094" timestamp="4110032" />
  <Command __id="2645" _type="SelectTextCommand" caretOffset="234" date="Mon Nov 20 15:26:36 EST 2023" end="234" start="217" starttimestamp="1700507886094" timestamp="4110032" />
  <Command __id="2646" _type="CopyCommand" date="Mon Nov 20 15:26:36 EST 2023" starttimestamp="1700507886094" timestamp="4110121" />
  <Command __id="2647" _type="MoveCaretCommand" caretOffset="432" date="Mon Nov 20 15:26:36 EST 2023" docOffset="432" starttimestamp="1700507886094" timestamp="4110750" />
  <Command __id="2648" _type="MoveCaretCommand" caretOffset="432" date="Mon Nov 20 15:26:36 EST 2023" docOffset="432" starttimestamp="1700507886094" timestamp="4110750" />
  <Command __id="2650" _type="PasteCommand" date="Mon Nov 20 15:26:37 EST 2023" starttimestamp="1700507886094" timestamp="4110938" />
  <Command __id="2651" _type="MoveCaretCommand" caretOffset="438" date="Mon Nov 20 15:26:37 EST 2023" docOffset="438" starttimestamp="1700507886094" timestamp="4111517" />
  <Command __id="2652" _type="MoveCaretCommand" caretOffset="438" date="Mon Nov 20 15:26:37 EST 2023" docOffset="438" starttimestamp="1700507886094" timestamp="4111518" />
  <Command __id="2653" _type="SelectTextCommand" caretOffset="453" date="Mon Nov 20 15:26:37 EST 2023" end="453" start="420" starttimestamp="1700507886094" timestamp="4111633" />
  <Command __id="2654" _type="SelectTextCommand" caretOffset="453" date="Mon Nov 20 15:26:37 EST 2023" end="453" start="420" starttimestamp="1700507886094" timestamp="4111633" />
  <Command __id="2656" _type="PasteCommand" date="Mon Nov 20 15:26:37 EST 2023" starttimestamp="1700507886094" timestamp="4111801" />
  <Command __id="2657" _type="MoveCaretCommand" caretOffset="438" date="Mon Nov 20 15:26:38 EST 2023" docOffset="438" starttimestamp="1700507886094" timestamp="4112250" />
  <Command __id="2658" _type="MoveCaretCommand" caretOffset="438" date="Mon Nov 20 15:26:38 EST 2023" docOffset="438" starttimestamp="1700507886094" timestamp="4112250" />
  <Command __id="2660" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:26:38 EST 2023" starttimestamp="1700507886094" timestamp="4112890" />
  <Command __id="2661" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:26:38 EST 2023" starttimestamp="1700507886094" timestamp="4112890" />
  <Command __id="2663" _type="InsertStringCommand" date="Mon Nov 20 15:26:39 EST 2023" starttimestamp="1700507886094" timestamp="4113101" timestamp2="4113101">
    <data><![CDATA[。]]></data>
  </Command>
  <Command __id="2664" _type="InsertStringCommand" date="Mon Nov 20 15:26:39 EST 2023" starttimestamp="1700507886094" timestamp="4113101" timestamp2="4113101">
    <data><![CDATA[。]]></data>
  </Command>
  <Command __id="2666" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:26:39 EST 2023" starttimestamp="1700507886094" timestamp="4113856" />
  <Command __id="2667" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:26:39 EST 2023" starttimestamp="1700507886094" timestamp="4113856" />
  <Command __id="2669" _type="InsertStringCommand" date="Mon Nov 20 15:26:40 EST 2023" starttimestamp="1700507886094" timestamp="4114100" timestamp2="4114100">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2670" _type="InsertStringCommand" date="Mon Nov 20 15:26:40 EST 2023" starttimestamp="1700507886094" timestamp="4114100" timestamp2="4114100">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2671" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:26:40 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="4114106" />
  <DocumentChange __id="2668" _type="Insert" date="Mon Nov 20 15:26:40 EST 2023" docASTNodeCount="106" docActiveCodeLength="791" docExpressionCount="68" docLength="1183" length="5" offset="437" repeat="5" starttimestamp="1700507886094" timestamp="4114097" timestamp2="4116159">
    <text><![CDATA[.setC]]></text>
  </DocumentChange>
  <DocumentChange __id="2677" _type="Replace" date="Mon Nov 20 15:26:42 EST 2023" docASTNodeCount="105" docActiveCodeLength="802" docExpressionCount="69" docLength="1194" endLine="14" insertionLength="15" int_docASTNodeCount="102" int_docActiveCodeLength="787" int_docExpressionCount="67" int_docLength="1179" length="4" offset="438" startLine="14" starttimestamp="1700507886094" timestamp="4116524">
    <deletedText><![CDATA[setC]]></deletedText>
    <insertedText><![CDATA[setClass(null);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2680" _type="Replace" date="Mon Nov 20 15:26:46 EST 2023" docASTNodeCount="105" docActiveCodeLength="799" docExpressionCount="69" docLength="1191" endLine="14" insertionLength="1" int_docASTNodeCount="104" int_docActiveCodeLength="798" int_docExpressionCount="68" int_docLength="1190" length="4" offset="447" startLine="14" starttimestamp="1700507886094" timestamp="4120057">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[B]]></insertedText>
  </DocumentChange>
  <Command __id="2676" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:26:42 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="4116522" />
  <Command __id="2678" _type="InsertStringCommand" date="Mon Nov 20 15:26:42 EST 2023" starttimestamp="1700507886094" timestamp="4116543" timestamp2="4116543">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2679" _type="InsertStringCommand" date="Mon Nov 20 15:26:42 EST 2023" starttimestamp="1700507886094" timestamp="4116543" timestamp2="4116543">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2681" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120062" timestamp2="4120062">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="2682" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120062" timestamp2="4120062">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="2684" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120339" timestamp2="4120339">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2685" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120339" timestamp2="4120339">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2687" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120571" timestamp2="4120571">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2688" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120571" timestamp2="4120571">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2690" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120696" timestamp2="4120696">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2691" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120696" timestamp2="4120696">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2693" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120750" timestamp2="4120750">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2694" _type="InsertStringCommand" date="Mon Nov 20 15:26:46 EST 2023" starttimestamp="1700507886094" timestamp="4120750" timestamp2="4120750">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2696" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122006" timestamp2="4122006">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2697" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122006" timestamp2="4122006">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2699" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122314" timestamp2="4122314">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2700" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122314" timestamp2="4122314">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2702" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122469" timestamp2="4122469">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2703" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122469" timestamp2="4122469">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2705" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122579" timestamp2="4122579">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2706" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122579" timestamp2="4122579">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2708" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122618" timestamp2="4122618">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2709" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122619" timestamp2="4122619">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2711" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122733" timestamp2="4122733">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2712" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122733" timestamp2="4122733">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2714" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122887" timestamp2="4122887">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2715" _type="InsertStringCommand" date="Mon Nov 20 15:26:48 EST 2023" starttimestamp="1700507886094" timestamp="4122887" timestamp2="4122887">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2717" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123009" timestamp2="4123009">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2718" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123010" timestamp2="4123010">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2720" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123047" timestamp2="4123047">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2721" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123047" timestamp2="4123047">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2723" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123123" timestamp2="4123123">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2724" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123123" timestamp2="4123123">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2726" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123319" timestamp2="4123319">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2727" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123319" timestamp2="4123319">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2729" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123528" timestamp2="4123528">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2730" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123528" timestamp2="4123528">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2732" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123617" timestamp2="4123617">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2733" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123617" timestamp2="4123617">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2735" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123782" timestamp2="4123782">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2736" _type="InsertStringCommand" date="Mon Nov 20 15:26:49 EST 2023" starttimestamp="1700507886094" timestamp="4123782" timestamp2="4123782">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2738" _type="InsertStringCommand" date="Mon Nov 20 15:26:50 EST 2023" starttimestamp="1700507886094" timestamp="4123967" timestamp2="4123967">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2739" _type="InsertStringCommand" date="Mon Nov 20 15:26:50 EST 2023" starttimestamp="1700507886094" timestamp="4123967" timestamp2="4123967">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2740" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:26:50 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="4123975" />
  <Command __id="2742" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:26:50 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="4124838" />
  <Command __id="2744" _type="InsertStringCommand" date="Mon Nov 20 15:26:50 EST 2023" starttimestamp="1700507886094" timestamp="4124845" timestamp2="4124845">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2745" _type="InsertStringCommand" date="Mon Nov 20 15:26:50 EST 2023" starttimestamp="1700507886094" timestamp="4124846" timestamp2="4124846">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2746" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:26:51 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="4125453" />
  <Command __id="2747" _type="MoveCaretCommand" caretOffset="537" date="Mon Nov 20 15:26:51 EST 2023" docOffset="537" starttimestamp="1700507886094" timestamp="4125468" />
  <Command __id="2748" _type="MoveCaretCommand" caretOffset="537" date="Mon Nov 20 15:26:51 EST 2023" docOffset="537" starttimestamp="1700507886094" timestamp="4125468" />
  <Command __id="2749" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:26:51 EST 2023" starttimestamp="1700507886094" timestamp="4125806" />
  <Command __id="2750" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:26:51 EST 2023" starttimestamp="1700507886094" timestamp="4125903" />
  <Command __id="2751" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:26:52 EST 2023" starttimestamp="1700507886094" timestamp="4125911" />
  <Command __id="2752" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 15:26:54 EST 2023" starttimestamp="1700507886094" timestamp="4128456" />
  <Command __id="2753" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:26:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4128605" type="Run" />
  <Command __id="2754" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:26:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4128605" type="Run" />
  <Command __id="2755" _type="ShellCommand" date="Mon Nov 20 15:26:55 EST 2023" starttimestamp="1700507886094" timestamp="4128920" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2756" _type="ConsoleOutput" date="Mon Nov 20 15:26:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="4131887" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2757" _type="ConsoleOutput" date="Mon Nov 20 15:26:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="4131888" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2758" _type="ConsoleOutput" date="Mon Nov 20 15:26:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="4131889" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2759" _type="ConsoleOutput" date="Mon Nov 20 15:26:57 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="4131889" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2760" _type="ExceptionCommand" date="Mon Nov 20 15:26:57 EST 2023" starttimestamp="1700507886094" timestamp="4131904" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
	at java.base/java.lang.String.valueOf(String.java:2951)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2761" _type="ConsoleOutput" date="Mon Nov 20 15:26:58 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="4131907" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2762" _type="ConsoleOutput" date="Mon Nov 20 15:26:58 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="4131930" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java."), Diff(DELETE,"lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser"), Diff(INSERT,"security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"15"), Diff(EQUAL,"8"), Diff(INSERT,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(INSERT,"7"), Diff(EQUAL,"42)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"03"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"325"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"9"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMetho"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"270"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"7"), Diff(EQUAL,"01)¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"1406"), Diff(INSERT,"90"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2763" _type="ExceptionCommand" date="Mon Nov 20 15:26:58 EST 2023" starttimestamp="1700507886094" timestamp="4131933" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):28
Test Result:BaseCaseSExpressionToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5 . 2)actual string 

java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2764" _type="ConsoleOutput" date="Mon Nov 20 15:26:58 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="4131937" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2765" _type="ShellCommand" date="Mon Nov 20 15:27:04 EST 2023" starttimestamp="1700507886094" timestamp="4138277" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2766" _type="LocalChecksRawCommand" date="Mon Nov 20 15:27:04 EST 2023" starttimestamp="1700507886094" timestamp="4138280">
    <CSVRow><![CDATA[42,Mon Nov 20 15:26:58 EST 2023,3,0,A5ToStringSuite,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,14,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2767" _type="LocalChecksRawCommand" date="Mon Nov 20 15:27:04 EST 2023" starttimestamp="1700507886094" timestamp="4138280">
    <CSVRow><![CDATA[42,Mon Nov 20 15:26:58 EST 2023,3,0,A5ToStringSuite,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,14,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2768" _type="MoveCaretCommand" caretOffset="535" date="Mon Nov 20 15:27:04 EST 2023" docOffset="535" starttimestamp="1700507886094" timestamp="4138347" />
  <Command __id="2769" _type="MoveCaretCommand" caretOffset="535" date="Mon Nov 20 15:27:04 EST 2023" docOffset="535" starttimestamp="1700507886094" timestamp="4138347" />
  <DocumentChange __id="2683" _type="Insert" date="Mon Nov 20 15:26:46 EST 2023" docASTNodeCount="107" docActiveCodeLength="819" docExpressionCount="71" docLength="1211" length="20" offset="448" repeat="20" starttimestamp="1700507886094" timestamp="4120339" timestamp2="4124573">
    <text><![CDATA[asicExpressionImpl.c]]></text>
  </DocumentChange>
  <DocumentChange __id="2743" _type="Replace" date="Mon Nov 20 15:26:50 EST 2023" docASTNodeCount="107" docActiveCodeLength="823" docExpressionCount="70" docLength="1215" endLine="14" insertionLength="5" int_docASTNodeCount="107" int_docActiveCodeLength="818" int_docExpressionCount="70" int_docLength="1210" length="1" offset="467" startLine="14" starttimestamp="1700507886094" timestamp="4124841">
    <deletedText><![CDATA[c]]></deletedText>
    <insertedText><![CDATA[class]]></insertedText>
  </DocumentChange>
  <Command __id="2770" _type="MoveCaretCommand" caretOffset="474" date="Mon Nov 20 15:27:06 EST 2023" docOffset="474" starttimestamp="1700507886094" timestamp="4140126" />
  <Command __id="2771" _type="MoveCaretCommand" caretOffset="474" date="Mon Nov 20 15:27:06 EST 2023" docOffset="474" starttimestamp="1700507886094" timestamp="4140126" />
  <Command __id="2772" _type="MoveCaretCommand" caretOffset="417" date="Mon Nov 20 15:27:06 EST 2023" docOffset="417" starttimestamp="1700507886094" timestamp="4140779" />
  <Command __id="2773" _type="MoveCaretCommand" caretOffset="417" date="Mon Nov 20 15:27:06 EST 2023" docOffset="417" starttimestamp="1700507886094" timestamp="4140779" />
  <Command __id="2774" _type="MoveCaretCommand" caretOffset="460" date="Mon Nov 20 15:27:07 EST 2023" docOffset="460" starttimestamp="1700507886094" timestamp="4141252" />
  <Command __id="2775" _type="MoveCaretCommand" caretOffset="460" date="Mon Nov 20 15:27:07 EST 2023" docOffset="460" starttimestamp="1700507886094" timestamp="4141252" />
  <Command __id="2776" _type="SelectTextCommand" caretOffset="466" date="Mon Nov 20 15:27:07 EST 2023" end="466" start="447" starttimestamp="1700507886094" timestamp="4141384" />
  <Command __id="2777" _type="SelectTextCommand" caretOffset="466" date="Mon Nov 20 15:27:07 EST 2023" end="466" start="447" starttimestamp="1700507886094" timestamp="4141384" />
  <Command __id="2779" _type="MoveCaretCommand" caretOffset="1006" date="Mon Nov 20 15:27:08 EST 2023" docOffset="1006" starttimestamp="1700507886094" timestamp="4142870" />
  <Command __id="2780" _type="ShellCommand" date="Mon Nov 20 15:27:10 EST 2023" starttimestamp="1700507886094" timestamp="4144548" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2781" _type="ShellCommand" date="Mon Nov 20 15:27:11 EST 2023" starttimestamp="1700507886094" timestamp="4144998" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2782" _type="ShellCommand" date="Mon Nov 20 15:27:11 EST 2023" starttimestamp="1700507886094" timestamp="4145791" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2783" _type="ShellCommand" date="Mon Nov 20 15:28:30 EST 2023" starttimestamp="1700507886094" timestamp="4223930" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2784" _type="ShellCommand" date="Mon Nov 20 15:28:31 EST 2023" starttimestamp="1700507886094" timestamp="4225440" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2785" _type="ShellCommand" date="Mon Nov 20 15:28:32 EST 2023" starttimestamp="1700507886094" timestamp="4225928" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2786" _type="ShellCommand" date="Mon Nov 20 15:28:32 EST 2023" starttimestamp="1700507886094" timestamp="4225935" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2778" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:27:08 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4142825">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2787" _type="ShellCommand" date="Mon Nov 20 15:28:33 EST 2023" starttimestamp="1700507886094" timestamp="4227233" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2788" _type="MoveCaretCommand" caretOffset="887" date="Mon Nov 20 15:28:33 EST 2023" docOffset="887" starttimestamp="1700507886094" timestamp="4227277" />
  <Command __id="2789" _type="MoveCaretCommand" caretOffset="887" date="Mon Nov 20 15:28:33 EST 2023" docOffset="887" starttimestamp="1700507886094" timestamp="4227277" />
  <Command __id="2790" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:28:36 EST 2023" docASTNodeCount="107" docActiveCodeLength="823" docExpressionCount="70" docLength="1215" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4230035">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;"), Diff(INSERT,"import main.lisp.parser.terms.ExpressionFactory;"), Diff(EQUAL,"public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				"), Diff(INSERT,"ExpressionFactory.setClass(BasicExpressionImpl.class);"), Diff(EQUAL,"		// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment5.F23Assignment5Suite;
import trace.grader.basics.GraderBasicsTraceUtility;
import main.lisp.parser.terms.ExpressionFactory;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment5Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="2791" _type="SelectTextCommand" caretOffset="466" date="Mon Nov 20 15:28:36 EST 2023" end="466" start="447" starttimestamp="1700507886094" timestamp="4230089" />
  <Command __id="2792" _type="MoveCaretCommand" caretOffset="458" date="Mon Nov 20 15:28:37 EST 2023" docOffset="458" starttimestamp="1700507886094" timestamp="4231037" />
  <Command __id="2793" _type="MoveCaretCommand" caretOffset="458" date="Mon Nov 20 15:28:37 EST 2023" docOffset="458" starttimestamp="1700507886094" timestamp="4231037" />
  <Command __id="2794" _type="InsertStringCommand" date="Mon Nov 20 15:28:37 EST 2023" starttimestamp="1700507886094" timestamp="4231341" timestamp2="4231341">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2795" _type="InsertStringCommand" date="Mon Nov 20 15:28:37 EST 2023" starttimestamp="1700507886094" timestamp="4231341" timestamp2="4231341">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2796" _type="MoveCaretCommand" caretOffset="471" date="Mon Nov 20 15:28:38 EST 2023" docOffset="471" starttimestamp="1700507886094" timestamp="4231924" />
  <Command __id="2797" _type="MoveCaretCommand" caretOffset="471" date="Mon Nov 20 15:28:38 EST 2023" docOffset="471" starttimestamp="1700507886094" timestamp="4231924" />
  <Command __id="2798" _type="MoveCaretCommand" caretOffset="474" date="Mon Nov 20 15:28:38 EST 2023" docOffset="474" starttimestamp="1700507886094" timestamp="4232507" />
  <Command __id="2799" _type="MoveCaretCommand" caretOffset="474" date="Mon Nov 20 15:28:38 EST 2023" docOffset="474" starttimestamp="1700507886094" timestamp="4232508" />
  <Command __id="2801" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 15:28:39 EST 2023" starttimestamp="1700507886094" timestamp="4232915" />
  <Command __id="2802" _type="ShellCommand" date="Mon Nov 20 15:28:39 EST 2023" starttimestamp="1700507886094" timestamp="4233447" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2803" _type="ShellCommand" date="Mon Nov 20 15:28:39 EST 2023" starttimestamp="1700507886094" timestamp="4233900" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2804" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:28:40 EST 2023" starttimestamp="1700507886094" timestamp="4234132" />
  <Command __id="2805" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:28:40 EST 2023" starttimestamp="1700507886094" timestamp="4234234" />
  <Command __id="2806" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:28:40 EST 2023" starttimestamp="1700507886094" timestamp="4234241" />
  <DocumentChange __id="2800" _type="Delete" date="Mon Nov 20 15:28:39 EST 2023" docASTNodeCount="100" docActiveCodeLength="766" docExpressionCount="65" docLength="1158" endLine="15" length="57" offset="418" startLine="14" starttimestamp="1700507886094" timestamp="4232910">
    <text><![CDATA[		ExpressionFactory.setClass(BasicExpressionImpl.class);
]]></text>
  </DocumentChange>
  <DocumentChange __id="2809" _type="Delete" date="Mon Nov 20 15:28:42 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" endLine="6" length="49" offset="187" startLine="5" starttimestamp="1700507886094" timestamp="4236564">
    <text><![CDATA[import main.lisp.parser.terms.ExpressionFactory;
]]></text>
  </DocumentChange>
  <Command __id="2807" _type="MoveCaretCommand" caretOffset="226" date="Mon Nov 20 15:28:42 EST 2023" docOffset="226" starttimestamp="1700507886094" timestamp="4236422" />
  <Command __id="2808" _type="MoveCaretCommand" caretOffset="226" date="Mon Nov 20 15:28:42 EST 2023" docOffset="226" starttimestamp="1700507886094" timestamp="4236422" />
  <Command __id="2810" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Mon Nov 20 15:28:42 EST 2023" starttimestamp="1700507886094" timestamp="4236569" />
  <Command __id="2811" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:28:43 EST 2023" starttimestamp="1700507886094" timestamp="4237004" />
  <Command __id="2812" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:28:43 EST 2023" starttimestamp="1700507886094" timestamp="4237104" />
  <Command __id="2813" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:28:43 EST 2023" starttimestamp="1700507886094" timestamp="4237110" />
  <Command __id="2815" _type="SelectTextCommand" caretOffset="34" date="Mon Nov 20 15:28:44 EST 2023" end="82" start="34" starttimestamp="1700507886094" timestamp="4238507" />
  <Command __id="2814" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:28:44 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4238459">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2817" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:28:50 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="4244874">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2816" _type="MoveCaretCommand" caretOffset="169" date="Mon Nov 20 15:28:50 EST 2023" docOffset="169" starttimestamp="1700507886094" timestamp="4244424" />
  <Command __id="2818" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 20 15:28:51 EST 2023" docOffset="0" starttimestamp="1700507886094" timestamp="4244923" />
  <Command __id="2820" _type="MoveCaretCommand" caretOffset="171" date="Mon Nov 20 15:28:52 EST 2023" docOffset="171" starttimestamp="1700507886094" timestamp="4246577" />
  <Command __id="2821" _type="ShellCommand" date="Mon Nov 20 15:28:53 EST 2023" starttimestamp="1700507886094" timestamp="4246975" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2822" _type="ShellCommand" date="Mon Nov 20 15:28:53 EST 2023" starttimestamp="1700507886094" timestamp="4247641" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2823" _type="ShellCommand" date="Mon Nov 20 15:28:54 EST 2023" starttimestamp="1700507886094" timestamp="4248263" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2824" _type="ShellCommand" date="Mon Nov 20 15:29:25 EST 2023" starttimestamp="1700507886094" timestamp="4279171" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2825" _type="MoveCaretCommand" caretOffset="177" date="Mon Nov 20 15:29:26 EST 2023" docOffset="177" starttimestamp="1700507886094" timestamp="4280725" />
  <Command __id="2826" _type="MoveCaretCommand" caretOffset="172" date="Mon Nov 20 15:29:27 EST 2023" docOffset="172" starttimestamp="1700507886094" timestamp="4281241" />
  <Command __id="2828" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 15:29:28 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="4281913" />
  <Command __id="2830" _type="MoveCaretCommand" caretOffset="887" date="Mon Nov 20 15:29:28 EST 2023" docOffset="887" starttimestamp="1700507886094" timestamp="4282428" />
  <Command __id="2819" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:28:52 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4246530">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2827" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:29:27 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4281853">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;"), Diff(DELETE,"import main.lisp.parser.terms.ExpressionFactory;"), Diff(EQUAL,"public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				"), Diff(DELETE,"ExpressionFactory.setClass(BasicExpressionImpl.class);		"), Diff(EQUAL,"// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment5.F23Assignment5Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment5Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="2829" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:29:28 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4282391">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2831" _type="MoveCaretCommand" caretOffset="292" date="Mon Nov 20 15:29:29 EST 2023" docOffset="292" starttimestamp="1700507886094" timestamp="4283509" />
  <Command __id="2832" _type="MoveCaretCommand" caretOffset="292" date="Mon Nov 20 15:29:29 EST 2023" docOffset="292" starttimestamp="1700507886094" timestamp="4283509" />
  <Command __id="2833" _type="MoveCaretCommand" caretOffset="457" date="Mon Nov 20 15:29:30 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="4284293" />
  <Command __id="2834" _type="MoveCaretCommand" caretOffset="457" date="Mon Nov 20 15:29:30 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="4284293" />
  <Command __id="2836" _type="MoveCaretCommand" caretOffset="1973" date="Mon Nov 20 15:29:32 EST 2023" docOffset="2102" starttimestamp="1700507886094" timestamp="4286069" />
  <Command __id="2837" _type="ShellCommand" date="Mon Nov 20 15:29:38 EST 2023" starttimestamp="1700507886094" timestamp="4292083" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2838" _type="ShellCommand" date="Mon Nov 20 15:41:44 EST 2023" starttimestamp="1700507886094" timestamp="5018602" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2839" _type="MoveCaretCommand" caretOffset="1937" date="Mon Nov 20 15:41:46 EST 2023" docOffset="2066" starttimestamp="1700507886094" timestamp="5020404" />
  <Command __id="2840" _type="MoveCaretCommand" caretOffset="1879" date="Mon Nov 20 15:41:47 EST 2023" docOffset="2008" starttimestamp="1700507886094" timestamp="5020919" />
  <Command __id="2841" _type="MoveCaretCommand" caretOffset="1937" date="Mon Nov 20 15:41:47 EST 2023" docOffset="2066" starttimestamp="1700507886094" timestamp="5021406" />
  <Command __id="2842" _type="MoveCaretCommand" caretOffset="1962" date="Mon Nov 20 15:41:48 EST 2023" docOffset="2091" starttimestamp="1700507886094" timestamp="5022253" />
  <Command __id="2843" _type="MoveCaretCommand" caretOffset="1963" date="Mon Nov 20 15:41:49 EST 2023" docOffset="2092" starttimestamp="1700507886094" timestamp="5023055" />
  <Command __id="2844" _type="SelectTextCommand" caretOffset="1966" date="Mon Nov 20 15:41:49 EST 2023" end="1966" start="1947" starttimestamp="1700507886094" timestamp="5023203" />
  <Command __id="2845" _type="ShellCommand" date="Mon Nov 20 15:41:53 EST 2023" starttimestamp="1700507886094" timestamp="5027624" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2846" _type="ShellCommand" date="Mon Nov 20 15:42:07 EST 2023" starttimestamp="1700507886094" timestamp="5041661" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2847" _type="ShellCommand" date="Mon Nov 20 15:42:08 EST 2023" starttimestamp="1700507886094" timestamp="5042379" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2848" _type="ShellCommand" date="Mon Nov 20 15:42:16 EST 2023" starttimestamp="1700507886094" timestamp="5050617" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2849" _type="ShellCommand" date="Mon Nov 20 15:42:17 EST 2023" starttimestamp="1700507886094" timestamp="5051644" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2850" _type="ShellCommand" date="Mon Nov 20 15:42:21 EST 2023" starttimestamp="1700507886094" timestamp="5055609" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2851" _type="MoveCaretCommand" caretOffset="1853" date="Mon Nov 20 15:42:23 EST 2023" docOffset="1982" starttimestamp="1700507886094" timestamp="5057187" />
  <Command __id="2852" _type="MoveCaretCommand" caretOffset="1436" date="Mon Nov 20 15:42:32 EST 2023" docOffset="1565" starttimestamp="1700507886094" timestamp="5066841" />
  <Command __id="2853" _type="MoveCaretCommand" caretOffset="1960" date="Mon Nov 20 15:42:36 EST 2023" docOffset="2089" starttimestamp="1700507886094" timestamp="5070581" />
  <Command __id="2854" _type="MoveCaretCommand" caretOffset="1967" date="Mon Nov 20 15:42:38 EST 2023" docOffset="2096" starttimestamp="1700507886094" timestamp="5072758" />
  <Command __id="2855" _type="MoveCaretCommand" caretOffset="1961" date="Mon Nov 20 15:42:39 EST 2023" docOffset="2090" starttimestamp="1700507886094" timestamp="5073415" />
  <Command __id="2856" _type="SelectTextCommand" caretOffset="1966" date="Mon Nov 20 15:42:39 EST 2023" end="1966" start="1947" starttimestamp="1700507886094" timestamp="5073566" />
  <Command __id="2857" _type="MoveCaretCommand" caretOffset="1967" date="Mon Nov 20 15:42:40 EST 2023" docOffset="2096" starttimestamp="1700507886094" timestamp="5074115" />
  <Command __id="2858" _type="SelectTextCommand" caretOffset="1972" date="Mon Nov 20 15:42:40 EST 2023" end="1972" start="1967" starttimestamp="1700507886094" timestamp="5074283" />
  <Command __id="2859" _type="MoveCaretCommand" caretOffset="1964" date="Mon Nov 20 15:42:40 EST 2023" docOffset="2093" starttimestamp="1700507886094" timestamp="5074717" />
  <Command __id="2860" _type="SelectTextCommand" caretOffset="1966" date="Mon Nov 20 15:42:40 EST 2023" end="1966" start="1947" starttimestamp="1700507886094" timestamp="5074859" />
  <Command __id="2861" _type="MoveCaretCommand" caretOffset="1968" date="Mon Nov 20 15:42:42 EST 2023" docOffset="2097" starttimestamp="1700507886094" timestamp="5075940" />
  <Command __id="2862" _type="SelectTextCommand" caretOffset="1972" date="Mon Nov 20 15:42:42 EST 2023" end="1972" start="1967" starttimestamp="1700507886094" timestamp="5076115" />
  <Command __id="2863" _type="MoveCaretCommand" caretOffset="1964" date="Mon Nov 20 15:42:42 EST 2023" docOffset="2093" starttimestamp="1700507886094" timestamp="5076512" />
  <Command __id="2864" _type="SelectTextCommand" caretOffset="1966" date="Mon Nov 20 15:42:42 EST 2023" end="1966" start="1947" starttimestamp="1700507886094" timestamp="5076682" />
  <Command __id="2865" _type="MoveCaretCommand" caretOffset="1969" date="Mon Nov 20 15:42:43 EST 2023" docOffset="2098" starttimestamp="1700507886094" timestamp="5077146" />
  <Command __id="2866" _type="SelectTextCommand" caretOffset="1972" date="Mon Nov 20 15:42:43 EST 2023" end="1972" start="1967" starttimestamp="1700507886094" timestamp="5077301" />
  <Command __id="2867" _type="MoveCaretCommand" caretOffset="1963" date="Mon Nov 20 15:42:43 EST 2023" docOffset="2092" starttimestamp="1700507886094" timestamp="5077757" />
  <Command __id="2868" _type="SelectTextCommand" caretOffset="1966" date="Mon Nov 20 15:42:43 EST 2023" end="1966" start="1947" starttimestamp="1700507886094" timestamp="5077903" />
  <Command __id="2869" _type="MoveCaretCommand" caretOffset="1968" date="Mon Nov 20 15:42:44 EST 2023" docOffset="2097" starttimestamp="1700507886094" timestamp="5078522" />
  <Command __id="2870" _type="MoveCaretCommand" caretOffset="1961" date="Mon Nov 20 15:42:46 EST 2023" docOffset="2090" starttimestamp="1700507886094" timestamp="5080815" />
  <Command __id="2871" _type="SelectTextCommand" caretOffset="1966" date="Mon Nov 20 15:42:47 EST 2023" end="1966" start="1947" starttimestamp="1700507886094" timestamp="5080973" />
  <Command __id="2872" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 15:42:47 EST 2023" docOffset="2099" starttimestamp="1700507886094" timestamp="5081415" />
  <Command __id="2874" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 15:42:48 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="5082343" />
  <Command __id="2875" _type="ShellCommand" date="Mon Nov 20 15:42:50 EST 2023" starttimestamp="1700507886094" timestamp="5084009" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2876" _type="ShellCommand" date="Mon Nov 20 15:42:51 EST 2023" starttimestamp="1700507886094" timestamp="5085280" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2878" _type="MoveCaretCommand" caretOffset="172" date="Mon Nov 20 15:42:52 EST 2023" docOffset="172" starttimestamp="1700507886094" timestamp="5086056" />
  <Command __id="2879" _type="MoveCaretCommand" caretOffset="178" date="Mon Nov 20 15:42:54 EST 2023" docOffset="178" starttimestamp="1700507886094" timestamp="5088514" />
  <Command __id="2880" _type="MoveCaretCommand" caretOffset="178" date="Mon Nov 20 15:42:54 EST 2023" docOffset="178" starttimestamp="1700507886094" timestamp="5088514" />
  <Command __id="2881" _type="MoveCaretCommand" caretOffset="226" date="Mon Nov 20 15:42:55 EST 2023" docOffset="226" starttimestamp="1700507886094" timestamp="5088953" />
  <Command __id="2882" _type="MoveCaretCommand" caretOffset="226" date="Mon Nov 20 15:42:55 EST 2023" docOffset="226" starttimestamp="1700507886094" timestamp="5088953" />
  <Command __id="2883" _type="MoveCaretCommand" caretOffset="182" date="Mon Nov 20 15:42:55 EST 2023" docOffset="182" starttimestamp="1700507886094" timestamp="5089397" />
  <Command __id="2884" _type="MoveCaretCommand" caretOffset="182" date="Mon Nov 20 15:42:55 EST 2023" docOffset="182" starttimestamp="1700507886094" timestamp="5089397" />
  <Command __id="2885" _type="MoveCaretCommand" caretOffset="223" date="Mon Nov 20 15:42:56 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="5089950" />
  <Command __id="2886" _type="MoveCaretCommand" caretOffset="223" date="Mon Nov 20 15:42:56 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="5089950" />
  <Command __id="2887" _type="MoveCaretCommand" caretOffset="223" date="Mon Nov 20 15:42:57 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="5091663" />
  <Command __id="2888" _type="MoveCaretCommand" caretOffset="223" date="Mon Nov 20 15:42:57 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="5091663" />
  <Command __id="2889" _type="MoveCaretCommand" caretOffset="188" date="Mon Nov 20 15:42:58 EST 2023" docOffset="188" starttimestamp="1700507886094" timestamp="5092158" />
  <Command __id="2890" _type="MoveCaretCommand" caretOffset="188" date="Mon Nov 20 15:42:58 EST 2023" docOffset="188" starttimestamp="1700507886094" timestamp="5092158" />
  <Command __id="2891" _type="MoveCaretCommand" caretOffset="223" date="Mon Nov 20 15:42:58 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="5092642" />
  <Command __id="2892" _type="MoveCaretCommand" caretOffset="223" date="Mon Nov 20 15:42:58 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="5092643" />
  <Command __id="2893" _type="ShellCommand" date="Mon Nov 20 15:42:59 EST 2023" starttimestamp="1700507886094" timestamp="5093620" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2835" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:29:32 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="4286021">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2873" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:42:48 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5082258">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2877" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:42:52 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5086008">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2894" _type="ShellCommand" date="Mon Nov 20 15:43:30 EST 2023" starttimestamp="1700507886094" timestamp="5124891" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2896" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 15:43:33 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="5127100" />
  <Command __id="2897" _type="ShellCommand" date="Mon Nov 20 15:43:34 EST 2023" starttimestamp="1700507886094" timestamp="5128152" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2895" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:43:33 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5127042">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2898" _type="ShellCommand" date="Mon Nov 20 15:43:35 EST 2023" starttimestamp="1700507886094" timestamp="5129371" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2900" _type="MoveCaretCommand" caretOffset="457" date="Mon Nov 20 15:43:37 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="5131101" />
  <Command __id="2899" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:43:37 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5131043">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2901" _type="MoveCaretCommand" caretOffset="165" date="Mon Nov 20 15:43:40 EST 2023" docOffset="165" starttimestamp="1700507886094" timestamp="5134802" />
  <Command __id="2902" _type="MoveCaretCommand" caretOffset="165" date="Mon Nov 20 15:43:40 EST 2023" docOffset="165" starttimestamp="1700507886094" timestamp="5134803" />
  <Command __id="2903" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:43:44 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5138849">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2904" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 15:43:45 EST 2023" docOffset="2099" starttimestamp="1700507886094" timestamp="5138918" />
  <Command __id="2906" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 15:43:52 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="5146676" />
  <Command __id="2907" _type="ShellCommand" date="Mon Nov 20 15:43:56 EST 2023" starttimestamp="1700507886094" timestamp="5150156" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2908" _type="ShellCommand" date="Mon Nov 20 15:44:25 EST 2023" starttimestamp="1700507886094" timestamp="5179750" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2909" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 15:44:28 EST 2023" starttimestamp="1700507886094" timestamp="5182475" />
  <Command __id="2910" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:44:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5182580" type="Run" />
  <Command __id="2911" _type="ShellCommand" date="Mon Nov 20 15:44:28 EST 2023" starttimestamp="1700507886094" timestamp="5182885" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2912" _type="ConsoleOutput" date="Mon Nov 20 15:44:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5192120" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2913" _type="ConsoleOutput" date="Mon Nov 20 15:44:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5192121" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2914" _type="ConsoleOutput" date="Mon Nov 20 15:44:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5192121" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="2915" _type="ExceptionCommand" date="Mon Nov 20 15:44:38 EST 2023" starttimestamp="1700507886094" timestamp="5192137" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.BasicExpression.toStringAsList(BasicExpression.java:51)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:40)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2916" _type="ConsoleOutput" date="Mon Nov 20 15:44:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5192141" type="ConsoleOutput">
    <outputString><![CDATA[
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2917" _type="ExceptionCommand" date="Mon Nov 20 15:44:38 EST 2023" starttimestamp="1700507886094" timestamp="5192143" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f20.assignment5.testcases.toString.AbstractLispExpressionResultDeepChecker.actualOutput(AbstractLispExpressionResultDeepChecker.java:7)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2918" _type="ConsoleOutput" date="Mon Nov 20 15:44:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5192147" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):30
Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)"), Diff(INSERT,"Test execution time (ms):30¶Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2919" _type="ConsoleOutput" date="Mon Nov 20 15:44:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5194898" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL

Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"NIL¶NIL¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"30¶Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2920" _type="ConsoleOutput" date="Mon Nov 20 15:44:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5194900" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL¶¶Test execution time (ms):7"), Diff(INSERT,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2905" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:43:52 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5146599">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2922" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:44:50 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5204192">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2924" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:44:51 EST 2023" docASTNodeCount="250" docActiveCodeLength="1599" docExpressionCount="120" docLength="2109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5204960">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.ClassRegistry;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.SExpression;public class ClassRegistryImpl implements ClassRegistry {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return null;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2926" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:44:52 EST 2023" docASTNodeCount="43" docActiveCodeLength="230" docExpressionCount="26" docLength="230" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5206252">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;public class index {	public static void main(String[] args) {		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2921" _type="ShellCommand" date="Mon Nov 20 15:44:50 EST 2023" starttimestamp="1700507886094" timestamp="5204115" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2923" _type="MoveCaretCommand" caretOffset="165" date="Mon Nov 20 15:44:50 EST 2023" docOffset="165" starttimestamp="1700507886094" timestamp="5204249" />
  <Command __id="2925" _type="MoveCaretCommand" caretOffset="1970" date="Mon Nov 20 15:44:51 EST 2023" docOffset="2099" starttimestamp="1700507886094" timestamp="5205022" />
  <Command __id="2927" _type="MoveCaretCommand" caretOffset="223" date="Mon Nov 20 15:44:52 EST 2023" docOffset="223" starttimestamp="1700507886094" timestamp="5206309" />
  <Command __id="2929" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 15:44:53 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="5207390" />
  <Command __id="2931" _type="MoveCaretCommand" caretOffset="165" date="Mon Nov 20 15:44:54 EST 2023" docOffset="165" starttimestamp="1700507886094" timestamp="5208266" />
  <Command __id="2932" _type="MoveCaretCommand" caretOffset="739" date="Mon Nov 20 15:45:05 EST 2023" docOffset="739" starttimestamp="1700507886094" timestamp="5219277" />
  <Command __id="2933" _type="MoveCaretCommand" caretOffset="739" date="Mon Nov 20 15:45:05 EST 2023" docOffset="739" starttimestamp="1700507886094" timestamp="5219277" />
  <Command __id="2934" _type="MoveCaretCommand" caretOffset="457" date="Mon Nov 20 15:45:07 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="5221143" />
  <Command __id="2935" _type="MoveCaretCommand" caretOffset="457" date="Mon Nov 20 15:45:07 EST 2023" docOffset="457" starttimestamp="1700507886094" timestamp="5221143" />
  <Command __id="2936" _type="LocalChecksRawCommand" date="Mon Nov 20 15:45:07 EST 2023" starttimestamp="1700507886094" timestamp="5221147">
    <CSVRow><![CDATA[43,Mon Nov 20 15:44:38 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,15,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2937" _type="LocalChecksRawCommand" date="Mon Nov 20 15:45:07 EST 2023" starttimestamp="1700507886094" timestamp="5221147">
    <CSVRow><![CDATA[43,Mon Nov 20 15:44:38 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,15,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2938" _type="LocalChecksRawCommand" date="Mon Nov 20 15:45:07 EST 2023" starttimestamp="1700507886094" timestamp="5221147">
    <CSVRow><![CDATA[44,Mon Nov 20 15:44:40 EST 2023,3,0,ListToStringCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,15,1,false, , , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2939" _type="LocalChecksRawCommand" date="Mon Nov 20 15:45:07 EST 2023" starttimestamp="1700507886094" timestamp="5221147">
    <CSVRow><![CDATA[44,Mon Nov 20 15:44:40 EST 2023,3,0,ListToStringCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,15,1,false, , , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2940" _type="MoveCaretCommand" caretOffset="502" date="Mon Nov 20 15:45:07 EST 2023" docOffset="502" starttimestamp="1700507886094" timestamp="5221620" />
  <Command __id="2941" _type="MoveCaretCommand" caretOffset="502" date="Mon Nov 20 15:45:07 EST 2023" docOffset="502" starttimestamp="1700507886094" timestamp="5221620" />
  <Command __id="2942" _type="MoveCaretCommand" caretOffset="740" date="Mon Nov 20 15:45:08 EST 2023" docOffset="740" starttimestamp="1700507886094" timestamp="5222106" />
  <Command __id="2943" _type="MoveCaretCommand" caretOffset="740" date="Mon Nov 20 15:45:08 EST 2023" docOffset="740" starttimestamp="1700507886094" timestamp="5222106" />
  <Command __id="2944" _type="MoveCaretCommand" caretOffset="705" date="Mon Nov 20 15:45:08 EST 2023" docOffset="705" starttimestamp="1700507886094" timestamp="5222590" />
  <Command __id="2945" _type="MoveCaretCommand" caretOffset="705" date="Mon Nov 20 15:45:08 EST 2023" docOffset="705" starttimestamp="1700507886094" timestamp="5222590" />
  <Command __id="2946" _type="MoveCaretCommand" caretOffset="773" date="Mon Nov 20 15:45:10 EST 2023" docOffset="773" starttimestamp="1700507886094" timestamp="5224807" />
  <Command __id="2947" _type="MoveCaretCommand" caretOffset="773" date="Mon Nov 20 15:45:10 EST 2023" docOffset="773" starttimestamp="1700507886094" timestamp="5224808" />
  <Command __id="2949" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:45:48 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5262771" type="Run" />
  <Command __id="2950" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:45:48 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5262771" type="Run" />
  <Command __id="2951" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:45:49 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5263381" type="Run" />
  <Command __id="2952" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:45:49 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5263381" type="Run" />
  <Command __id="2953" _type="ShellCommand" date="Mon Nov 20 15:45:50 EST 2023" starttimestamp="1700507886094" timestamp="5263923" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2954" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 15:46:08 EST 2023" docOffset="336" starttimestamp="1700507886094" timestamp="5282403" />
  <Command __id="2955" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 15:46:08 EST 2023" docOffset="336" starttimestamp="1700507886094" timestamp="5282403" />
  <Command __id="2956" _type="MoveCaretCommand" caretOffset="329" date="Mon Nov 20 15:46:08 EST 2023" docOffset="329" starttimestamp="1700507886094" timestamp="5282878" />
  <Command __id="2957" _type="MoveCaretCommand" caretOffset="329" date="Mon Nov 20 15:46:08 EST 2023" docOffset="329" starttimestamp="1700507886094" timestamp="5282878" />
  <Command __id="2958" _type="MoveCaretCommand" caretOffset="310" date="Mon Nov 20 15:46:10 EST 2023" docOffset="310" starttimestamp="1700507886094" timestamp="5284170" />
  <Command __id="2959" _type="MoveCaretCommand" caretOffset="310" date="Mon Nov 20 15:46:10 EST 2023" docOffset="310" starttimestamp="1700507886094" timestamp="5284170" />
  <Command __id="2960" _type="MoveCaretCommand" caretOffset="335" date="Mon Nov 20 15:46:10 EST 2023" docOffset="335" starttimestamp="1700507886094" timestamp="5284626" />
  <Command __id="2961" _type="MoveCaretCommand" caretOffset="335" date="Mon Nov 20 15:46:10 EST 2023" docOffset="335" starttimestamp="1700507886094" timestamp="5284626" />
  <Command __id="2962" _type="MoveCaretCommand" caretOffset="331" date="Mon Nov 20 15:46:11 EST 2023" docOffset="331" starttimestamp="1700507886094" timestamp="5285086" />
  <Command __id="2963" _type="MoveCaretCommand" caretOffset="331" date="Mon Nov 20 15:46:11 EST 2023" docOffset="331" starttimestamp="1700507886094" timestamp="5285086" />
  <Command __id="2964" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 15:46:11 EST 2023" docOffset="336" starttimestamp="1700507886094" timestamp="5285572" />
  <Command __id="2965" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 15:46:11 EST 2023" docOffset="336" starttimestamp="1700507886094" timestamp="5285572" />
  <Command __id="2966" _type="MoveCaretCommand" caretOffset="413" date="Mon Nov 20 15:46:12 EST 2023" docOffset="413" starttimestamp="1700507886094" timestamp="5286053" />
  <Command __id="2967" _type="MoveCaretCommand" caretOffset="413" date="Mon Nov 20 15:46:12 EST 2023" docOffset="413" starttimestamp="1700507886094" timestamp="5286053" />
  <Command __id="2968" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 15:46:12 EST 2023" docOffset="336" starttimestamp="1700507886094" timestamp="5286500" />
  <Command __id="2969" _type="MoveCaretCommand" caretOffset="336" date="Mon Nov 20 15:46:12 EST 2023" docOffset="336" starttimestamp="1700507886094" timestamp="5286500" />
  <Command __id="2970" _type="MoveCaretCommand" caretOffset="387" date="Mon Nov 20 15:46:13 EST 2023" docOffset="387" starttimestamp="1700507886094" timestamp="5287327" />
  <Command __id="2971" _type="MoveCaretCommand" caretOffset="387" date="Mon Nov 20 15:46:13 EST 2023" docOffset="387" starttimestamp="1700507886094" timestamp="5287327" />
  <Command __id="2972" _type="MoveCaretCommand" caretOffset="354" date="Mon Nov 20 15:46:13 EST 2023" docOffset="354" starttimestamp="1700507886094" timestamp="5287795" />
  <Command __id="2973" _type="MoveCaretCommand" caretOffset="354" date="Mon Nov 20 15:46:13 EST 2023" docOffset="354" starttimestamp="1700507886094" timestamp="5287796" />
  <Command __id="2974" _type="MoveCaretCommand" caretOffset="362" date="Mon Nov 20 15:46:14 EST 2023" docOffset="362" starttimestamp="1700507886094" timestamp="5288303" />
  <Command __id="2975" _type="MoveCaretCommand" caretOffset="362" date="Mon Nov 20 15:46:14 EST 2023" docOffset="362" starttimestamp="1700507886094" timestamp="5288303" />
  <Command __id="2976" _type="MoveCaretCommand" caretOffset="367" date="Mon Nov 20 15:46:14 EST 2023" docOffset="367" starttimestamp="1700507886094" timestamp="5288786" />
  <Command __id="2977" _type="MoveCaretCommand" caretOffset="367" date="Mon Nov 20 15:46:14 EST 2023" docOffset="367" starttimestamp="1700507886094" timestamp="5288786" />
  <Command __id="2978" _type="MoveCaretCommand" caretOffset="357" date="Mon Nov 20 15:46:15 EST 2023" docOffset="357" starttimestamp="1700507886094" timestamp="5289257" />
  <Command __id="2979" _type="MoveCaretCommand" caretOffset="357" date="Mon Nov 20 15:46:15 EST 2023" docOffset="357" starttimestamp="1700507886094" timestamp="5289258" />
  <Command __id="2980" _type="MoveCaretCommand" caretOffset="356" date="Mon Nov 20 15:46:16 EST 2023" docOffset="356" starttimestamp="1700507886094" timestamp="5289940" />
  <Command __id="2981" _type="MoveCaretCommand" caretOffset="356" date="Mon Nov 20 15:46:16 EST 2023" docOffset="356" starttimestamp="1700507886094" timestamp="5289940" />
  <Command __id="2982" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 15:46:16 EST 2023" docOffset="371" starttimestamp="1700507886094" timestamp="5290510" />
  <Command __id="2983" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 15:46:16 EST 2023" docOffset="371" starttimestamp="1700507886094" timestamp="5290511" />
  <Command __id="2984" _type="MoveCaretCommand" caretOffset="377" date="Mon Nov 20 15:46:17 EST 2023" docOffset="377" starttimestamp="1700507886094" timestamp="5291112" />
  <Command __id="2985" _type="MoveCaretCommand" caretOffset="377" date="Mon Nov 20 15:46:17 EST 2023" docOffset="377" starttimestamp="1700507886094" timestamp="5291112" />
  <Command __id="2986" _type="MoveCaretCommand" caretOffset="379" date="Mon Nov 20 15:46:19 EST 2023" docOffset="379" starttimestamp="1700507886094" timestamp="5293189" />
  <Command __id="2987" _type="MoveCaretCommand" caretOffset="379" date="Mon Nov 20 15:46:19 EST 2023" docOffset="379" starttimestamp="1700507886094" timestamp="5293189" />
  <Command __id="2988" _type="MoveCaretCommand" caretOffset="379" date="Mon Nov 20 15:46:21 EST 2023" docOffset="379" starttimestamp="1700507886094" timestamp="5295672" />
  <Command __id="2989" _type="MoveCaretCommand" caretOffset="379" date="Mon Nov 20 15:46:21 EST 2023" docOffset="379" starttimestamp="1700507886094" timestamp="5295672" />
  <Command __id="2990" _type="SelectTextCommand" caretOffset="382" date="Mon Nov 20 15:46:21 EST 2023" end="382" start="377" starttimestamp="1700507886094" timestamp="5295861" />
  <Command __id="2991" _type="SelectTextCommand" caretOffset="382" date="Mon Nov 20 15:46:21 EST 2023" end="382" start="377" starttimestamp="1700507886094" timestamp="5295861" />
  <Command __id="2992" _type="MoveCaretCommand" caretOffset="413" date="Mon Nov 20 15:46:23 EST 2023" docOffset="413" starttimestamp="1700507886094" timestamp="5296993" />
  <Command __id="2993" _type="MoveCaretCommand" caretOffset="413" date="Mon Nov 20 15:46:23 EST 2023" docOffset="413" starttimestamp="1700507886094" timestamp="5296993" />
  <Command __id="2994" _type="MoveCaretCommand" caretOffset="372" date="Mon Nov 20 15:46:23 EST 2023" docOffset="372" starttimestamp="1700507886094" timestamp="5297544" />
  <Command __id="2995" _type="MoveCaretCommand" caretOffset="372" date="Mon Nov 20 15:46:23 EST 2023" docOffset="372" starttimestamp="1700507886094" timestamp="5297544" />
  <Command __id="2996" _type="MoveCaretCommand" caretOffset="403" date="Mon Nov 20 15:46:24 EST 2023" docOffset="403" starttimestamp="1700507886094" timestamp="5298051" />
  <Command __id="2997" _type="MoveCaretCommand" caretOffset="403" date="Mon Nov 20 15:46:24 EST 2023" docOffset="403" starttimestamp="1700507886094" timestamp="5298051" />
  <Command __id="2998" _type="MoveCaretCommand" caretOffset="378" date="Mon Nov 20 15:46:24 EST 2023" docOffset="378" starttimestamp="1700507886094" timestamp="5298517" />
  <Command __id="2999" _type="MoveCaretCommand" caretOffset="378" date="Mon Nov 20 15:46:24 EST 2023" docOffset="378" starttimestamp="1700507886094" timestamp="5298517" />
  <Command __id="3000" _type="MoveCaretCommand" caretOffset="403" date="Mon Nov 20 15:46:25 EST 2023" docOffset="403" starttimestamp="1700507886094" timestamp="5299043" />
  <Command __id="3001" _type="MoveCaretCommand" caretOffset="403" date="Mon Nov 20 15:46:25 EST 2023" docOffset="403" starttimestamp="1700507886094" timestamp="5299043" />
  <Command __id="3002" _type="ShellCommand" date="Mon Nov 20 15:46:25 EST 2023" starttimestamp="1700507886094" timestamp="5299854" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3003" _type="ShellCommand" date="Mon Nov 20 15:46:36 EST 2023" starttimestamp="1700507886094" timestamp="5310518" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3004" _type="SelectTextCommand" caretOffset="323" date="Mon Nov 20 15:46:38 EST 2023" end="452" start="323" starttimestamp="1700507886094" timestamp="5312617" />
  <Command __id="3005" _type="SelectTextCommand" caretOffset="323" date="Mon Nov 20 15:46:38 EST 2023" end="452" start="323" starttimestamp="1700507886094" timestamp="5312617" />
  <Command __id="3007" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313097" timestamp2="5313097">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3008" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313098" timestamp2="5313098">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3010" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313139" timestamp2="5313139">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3011" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313139" timestamp2="5313139">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3013" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313361" timestamp2="5313361">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3014" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313361" timestamp2="5313361">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3016" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313468" timestamp2="5313468">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3017" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313468" timestamp2="5313468">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3019" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313528" timestamp2="5313528">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3020" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313528" timestamp2="5313528">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3022" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313631" timestamp2="5313631">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3023" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313631" timestamp2="5313631">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3025" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313772" timestamp2="5313772">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3026" _type="InsertStringCommand" date="Mon Nov 20 15:46:39 EST 2023" starttimestamp="1700507886094" timestamp="5313772" timestamp2="5313772">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3028" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314183" timestamp2="5314183">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3029" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314183" timestamp2="5314183">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3031" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314266" timestamp2="5314266">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3032" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314266" timestamp2="5314266">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3034" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314307" timestamp2="5314307">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3035" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314307" timestamp2="5314307">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3037" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314444" timestamp2="5314444">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3038" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314444" timestamp2="5314444">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2928" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:44:53 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5207328">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2930" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:44:54 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5208220">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {			return true;		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}	//	public String toStringAsList() {//		return "(" + H1.toString() + " " + H2.toString() + " " +  HN.toString() + ")";//	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3006" _type="Replace" date="Mon Nov 20 15:46:39 EST 2023" docASTNodeCount="135" docActiveCodeLength="841" docExpressionCount="96" docLength="963" endLine="17" insertionLength="1" int_docASTNodeCount="133" int_docActiveCodeLength="840" int_docExpressionCount="95" int_docLength="962" length="129" offset="323" startLine="13" starttimestamp="1700507886094" timestamp="5313087">
    <deletedText><![CDATA[if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {
			return true;
		}else {
			return this.getTail().isList();
		}]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3009" _type="Insert" date="Mon Nov 20 15:46:39 EST 2023" docASTNodeCount="137" docActiveCodeLength="860" docExpressionCount="98" docLength="982" length="19" offset="324" repeat="19" starttimestamp="1700507886094" timestamp="5313138" timestamp2="5316747">
    <text><![CDATA[eturn this.getTail9]]></text>
  </DocumentChange>
  <DocumentChange __id="3052" _type="Delete" date="Mon Nov 20 15:46:43 EST 2023" docASTNodeCount="137" docActiveCodeLength="859" docExpressionCount="98" docLength="981" endLine="13" length="1" offset="342" startLine="13" starttimestamp="1700507886094" timestamp="5317134">
    <text><![CDATA[9]]></text>
  </DocumentChange>
  <DocumentChange __id="3055" _type="Insert" date="Mon Nov 20 15:46:43 EST 2023" docASTNodeCount="137" docActiveCodeLength="862" docExpressionCount="98" docLength="984" length="3" offset="342" repeat="2" starttimestamp="1700507886094" timestamp="5317334" timestamp2="5317971">
    <text><![CDATA[(.)]]></text>
  </DocumentChange>
  <DocumentChange __id="3062" _type="Delete" date="Mon Nov 20 15:46:44 EST 2023" docASTNodeCount="137" docActiveCodeLength="861" docExpressionCount="98" docLength="983" endLine="13" length="1" offset="343" startLine="13" starttimestamp="1700507886094" timestamp="5318301">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="3040" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314552" timestamp2="5314552">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3041" _type="InsertStringCommand" date="Mon Nov 20 15:46:40 EST 2023" starttimestamp="1700507886094" timestamp="5314552" timestamp2="5314552">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3042" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:46:40 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="5314560" />
  <Command __id="3051" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:46:42 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="5316768" />
  <Command __id="3053" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:46:43 EST 2023" starttimestamp="1700507886094" timestamp="5317137" />
  <Command __id="3054" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:46:43 EST 2023" starttimestamp="1700507886094" timestamp="5317137" />
  <Command __id="3056" _type="InsertStringCommand" date="Mon Nov 20 15:46:43 EST 2023" starttimestamp="1700507886094" timestamp="5317338" timestamp2="5317338">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3057" _type="InsertStringCommand" date="Mon Nov 20 15:46:43 EST 2023" starttimestamp="1700507886094" timestamp="5317338" timestamp2="5317338">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3059" _type="InsertStringCommand" date="Mon Nov 20 15:46:44 EST 2023" starttimestamp="1700507886094" timestamp="5317972" timestamp2="5317972">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3060" _type="InsertStringCommand" date="Mon Nov 20 15:46:44 EST 2023" starttimestamp="1700507886094" timestamp="5317972" timestamp2="5317972">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3061" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:46:44 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="5317979" />
  <Command __id="3063" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:46:44 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="5318702" />
  <Command __id="3064" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 15:46:45 EST 2023" starttimestamp="1700507886094" timestamp="5319639" />
  <Command __id="3065" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 15:46:45 EST 2023" starttimestamp="1700507886094" timestamp="5319639" />
  <Command __id="3067" _type="InsertStringCommand" date="Mon Nov 20 15:46:47 EST 2023" starttimestamp="1700507886094" timestamp="5321419" timestamp2="5321419">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3068" _type="InsertStringCommand" date="Mon Nov 20 15:46:47 EST 2023" starttimestamp="1700507886094" timestamp="5321419" timestamp2="5321419">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3069" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:46:47 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="5321427" />
  <Command __id="3075" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:46:49 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="5323634" />
  <Command __id="3077" _type="InsertStringCommand" date="Mon Nov 20 15:46:49 EST 2023" starttimestamp="1700507886094" timestamp="5323640" timestamp2="5323640">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3078" _type="InsertStringCommand" date="Mon Nov 20 15:46:49 EST 2023" starttimestamp="1700507886094" timestamp="5323640" timestamp2="5323640">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3080" _type="InsertStringCommand" date="Mon Nov 20 15:46:50 EST 2023" starttimestamp="1700507886094" timestamp="5324253" timestamp2="5324253">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3081" _type="InsertStringCommand" date="Mon Nov 20 15:46:50 EST 2023" starttimestamp="1700507886094" timestamp="5324253" timestamp2="5324253">
    <data><![CDATA[;]]></data>
  </Command>
  <DocumentChange __id="3066" _type="Insert" date="Mon Nov 20 15:46:47 EST 2023" docASTNodeCount="139" docActiveCodeLength="867" docExpressionCount="100" docLength="989" length="6" offset="344" repeat="6" starttimestamp="1700507886094" timestamp="5321415" timestamp2="5323218">
    <text><![CDATA[.isNil]]></text>
  </DocumentChange>
  <DocumentChange __id="3076" _type="Replace" date="Mon Nov 20 15:46:49 EST 2023" docASTNodeCount="139" docActiveCodeLength="869" docExpressionCount="100" docLength="991" endLine="13" insertionLength="7" int_docASTNodeCount="137" int_docActiveCodeLength="862" int_docExpressionCount="98" int_docLength="984" length="5" offset="345" startLine="13" starttimestamp="1700507886094" timestamp="5323636">
    <deletedText><![CDATA[isNil]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3079" _type="Insert" date="Mon Nov 20 15:46:50 EST 2023" docASTNodeCount="139" docActiveCodeLength="870" docExpressionCount="100" docLength="992" length="1" offset="352" starttimestamp="1700507886094" timestamp="5324252">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="3084" _type="Insert" date="Mon Nov 20 15:46:52 EST 2023" docASTNodeCount="141" docActiveCodeLength="877" docExpressionCount="101" docLength="999" length="7" offset="320" repeat="4" starttimestamp="1700507886094" timestamp="5326756" timestamp2="5327417">
    <text><![CDATA[
		if()]]></text>
  </DocumentChange>
  <Command __id="3082" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 15:46:52 EST 2023" docOffset="320" starttimestamp="1700507886094" timestamp="5326200" />
  <Command __id="3083" _type="MoveCaretCommand" caretOffset="320" date="Mon Nov 20 15:46:52 EST 2023" docOffset="320" starttimestamp="1700507886094" timestamp="5326201" />
  <Command __id="3085" _type="InsertStringCommand" date="Mon Nov 20 15:46:52 EST 2023" starttimestamp="1700507886094" timestamp="5326761" timestamp2="5326761">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3086" _type="InsertStringCommand" date="Mon Nov 20 15:46:52 EST 2023" starttimestamp="1700507886094" timestamp="5326761" timestamp2="5326761">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3088" _type="InsertStringCommand" date="Mon Nov 20 15:46:53 EST 2023" starttimestamp="1700507886094" timestamp="5327232" timestamp2="5327232">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3089" _type="InsertStringCommand" date="Mon Nov 20 15:46:53 EST 2023" starttimestamp="1700507886094" timestamp="5327232" timestamp2="5327232">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3091" _type="InsertStringCommand" date="Mon Nov 20 15:46:53 EST 2023" starttimestamp="1700507886094" timestamp="5327298" timestamp2="5327298">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3092" _type="InsertStringCommand" date="Mon Nov 20 15:46:53 EST 2023" starttimestamp="1700507886094" timestamp="5327298" timestamp2="5327298">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3094" _type="InsertStringCommand" date="Mon Nov 20 15:46:53 EST 2023" starttimestamp="1700507886094" timestamp="5327421" timestamp2="5327421">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3095" _type="InsertStringCommand" date="Mon Nov 20 15:46:53 EST 2023" starttimestamp="1700507886094" timestamp="5327422" timestamp2="5327422">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3096" _type="ShellCommand" date="Mon Nov 20 15:46:53 EST 2023" starttimestamp="1700507886094" timestamp="5327873" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3097" _type="ShellCommand" date="Mon Nov 20 15:46:54 EST 2023" starttimestamp="1700507886094" timestamp="5328826" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3099" _type="UndoCommand" date="Mon Nov 20 15:46:56 EST 2023" starttimestamp="1700507886094" timestamp="5330021" />
  <Command __id="3101" _type="UndoCommand" date="Mon Nov 20 15:46:56 EST 2023" starttimestamp="1700507886094" timestamp="5330194" />
  <Command __id="3103" _type="UndoCommand" date="Mon Nov 20 15:46:56 EST 2023" starttimestamp="1700507886094" timestamp="5330355" />
  <Command __id="3105" _type="UndoCommand" date="Mon Nov 20 15:46:56 EST 2023" starttimestamp="1700507886094" timestamp="5330580" />
  <Command __id="3107" _type="UndoCommand" date="Mon Nov 20 15:46:56 EST 2023" starttimestamp="1700507886094" timestamp="5330813" />
  <Command __id="3110" _type="UndoCommand" date="Mon Nov 20 15:46:57 EST 2023" starttimestamp="1700507886094" timestamp="5330998" />
  <Command __id="3112" _type="UndoCommand" date="Mon Nov 20 15:46:57 EST 2023" starttimestamp="1700507886094" timestamp="5331133" />
  <Command __id="3114" _type="UndoCommand" date="Mon Nov 20 15:46:57 EST 2023" starttimestamp="1700507886094" timestamp="5331283" />
  <Command __id="3116" _type="UndoCommand" date="Mon Nov 20 15:46:57 EST 2023" starttimestamp="1700507886094" timestamp="5331440" />
  <Command __id="3118" _type="UndoCommand" date="Mon Nov 20 15:46:57 EST 2023" starttimestamp="1700507886094" timestamp="5331600" />
  <Command __id="3119" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:46:58 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="5332472" />
  <Command __id="3120" _type="MoveCaretCommand" caretOffset="452" date="Mon Nov 20 15:46:58 EST 2023" docOffset="452" starttimestamp="1700507886094" timestamp="5332472" />
  <Command __id="3121" _type="MoveCaretCommand" caretOffset="403" date="Mon Nov 20 15:47:00 EST 2023" docOffset="403" starttimestamp="1700507886094" timestamp="5334046" />
  <Command __id="3122" _type="MoveCaretCommand" caretOffset="403" date="Mon Nov 20 15:47:00 EST 2023" docOffset="403" starttimestamp="1700507886094" timestamp="5334048" />
  <Command __id="3123" _type="SelectTextCommand" caretOffset="384" date="Mon Nov 20 15:47:04 EST 2023" end="384" start="358" starttimestamp="1700507886094" timestamp="5338867" />
  <Command __id="3124" _type="SelectTextCommand" caretOffset="384" date="Mon Nov 20 15:47:04 EST 2023" end="384" start="358" starttimestamp="1700507886094" timestamp="5338868" />
  <Command __id="3126" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:47:05 EST 2023" starttimestamp="1700507886094" timestamp="5339138" />
  <Command __id="3127" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 15:47:05 EST 2023" starttimestamp="1700507886094" timestamp="5339138" />
  <DocumentChange __id="3098" _type="Delete" date="Mon Nov 20 15:46:56 EST 2023" docASTNodeCount="139" docActiveCodeLength="870" docExpressionCount="100" docLength="992" endLine="13" length="7" offset="320" repeat="2" startLine="12" starttimestamp="1700507886094" timestamp="5330014" timestamp2="5330184">
    <text><![CDATA[
		if()]]></text>
  </DocumentChange>
  <DocumentChange __id="3102" _type="Delete" date="Mon Nov 20 15:46:56 EST 2023" docASTNodeCount="139" docActiveCodeLength="869" docExpressionCount="100" docLength="991" endLine="13" length="1" offset="352" startLine="13" starttimestamp="1700507886094" timestamp="5330346">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="3104" _type="Replace" date="Mon Nov 20 15:46:56 EST 2023" docASTNodeCount="139" docActiveCodeLength="867" docExpressionCount="100" docLength="989" endLine="13" insertionLength="5" int_docASTNodeCount="137" int_docActiveCodeLength="862" int_docExpressionCount="98" int_docLength="984" length="7" offset="345" startLine="13" starttimestamp="1700507886094" timestamp="5330571">
    <deletedText><![CDATA[isNIL()]]></deletedText>
    <insertedText><![CDATA[isNil]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3106" _type="Delete" date="Mon Nov 20 15:46:56 EST 2023" docASTNodeCount="137" docActiveCodeLength="861" docExpressionCount="98" docLength="983" endLine="13" length="6" offset="344" startLine="13" starttimestamp="1700507886094" timestamp="5330804">
    <text><![CDATA[.isNil]]></text>
  </DocumentChange>
  <DocumentChange __id="3108" _type="Insert" date="Mon Nov 20 15:46:57 EST 2023" docASTNodeCount="137" docActiveCodeLength="862" docExpressionCount="98" docLength="984" length="1" offset="343" starttimestamp="1700507886094" timestamp="5330976">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="3109" _type="Delete" date="Mon Nov 20 15:46:57 EST 2023" docASTNodeCount="137" docActiveCodeLength="861" docExpressionCount="98" docLength="983" endLine="13" length="1" offset="343" startLine="13" starttimestamp="1700507886094" timestamp="5330977">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="3111" _type="Delete" date="Mon Nov 20 15:46:57 EST 2023" docASTNodeCount="137" docActiveCodeLength="859" docExpressionCount="98" docLength="981" endLine="13" length="2" offset="342" startLine="13" starttimestamp="1700507886094" timestamp="5331126">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <DocumentChange __id="3113" _type="Insert" date="Mon Nov 20 15:46:57 EST 2023" docASTNodeCount="137" docActiveCodeLength="860" docExpressionCount="98" docLength="982" length="1" offset="342" starttimestamp="1700507886094" timestamp="5331277">
    <text><![CDATA[9]]></text>
  </DocumentChange>
  <DocumentChange __id="3115" _type="Delete" date="Mon Nov 20 15:46:57 EST 2023" docASTNodeCount="135" docActiveCodeLength="841" docExpressionCount="96" docLength="963" endLine="13" length="19" offset="324" startLine="13" starttimestamp="1700507886094" timestamp="5331431">
    <text><![CDATA[eturn this.getTail9]]></text>
  </DocumentChange>
  <DocumentChange __id="3117" _type="Replace" date="Mon Nov 20 15:46:57 EST 2023" docASTNodeCount="157" docActiveCodeLength="969" docExpressionCount="113" docLength="1091" endLine="13" insertionLength="129" int_docASTNodeCount="133" int_docActiveCodeLength="840" int_docExpressionCount="95" int_docLength="962" length="1" offset="323" startLine="13" starttimestamp="1700507886094" timestamp="5331592">
    <deletedText><![CDATA[r]]></deletedText>
    <insertedText><![CDATA[if((this.getTail() instanceof Atom) && this.getTail().isNIL()) {
			return true;
		}else {
			return this.getTail().isList();
		}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3125" _type="Delete" date="Mon Nov 20 15:47:05 EST 2023" docASTNodeCount="151" docActiveCodeLength="943" docExpressionCount="107" docLength="1065" endLine="13" length="26" offset="358" startLine="13" starttimestamp="1700507886094" timestamp="5339129">
    <text><![CDATA[ && this.getTail().isNIL()]]></text>
  </DocumentChange>
  <DocumentChange __id="3130" _type="Replace" date="Mon Nov 20 15:47:08 EST 2023" docASTNodeCount="151" docActiveCodeLength="932" docExpressionCount="107" docLength="1054" endLine="14" insertionLength="1" int_docASTNodeCount="149" int_docActiveCodeLength="931" int_docExpressionCount="106" int_docLength="1053" length="12" offset="365" startLine="14" starttimestamp="1700507886094" timestamp="5342283">
    <deletedText><![CDATA[return true;]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <Command __id="3128" _type="SelectTextCommand" caretOffset="365" date="Mon Nov 20 15:47:07 EST 2023" end="377" start="365" starttimestamp="1700507886094" timestamp="5341547" />
  <Command __id="3129" _type="SelectTextCommand" caretOffset="365" date="Mon Nov 20 15:47:07 EST 2023" end="377" start="365" starttimestamp="1700507886094" timestamp="5341547" />
  <Command __id="3131" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342288" timestamp2="5342288">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3132" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342288" timestamp2="5342288">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3134" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342352" timestamp2="5342352">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3135" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342352" timestamp2="5342352">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3137" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342481" timestamp2="5342481">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3138" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342481" timestamp2="5342481">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3140" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342585" timestamp2="5342585">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3141" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342585" timestamp2="5342585">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3143" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342658" timestamp2="5342658">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3144" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342658" timestamp2="5342658">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3146" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342749" timestamp2="5342749">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3147" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342750" timestamp2="5342750">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3149" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342874" timestamp2="5342874">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3150" _type="InsertStringCommand" date="Mon Nov 20 15:47:08 EST 2023" starttimestamp="1700507886094" timestamp="5342874" timestamp2="5342874">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3152" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344467" timestamp2="5344467">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3153" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344467" timestamp2="5344467">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3155" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344568" timestamp2="5344568">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3156" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344568" timestamp2="5344568">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3158" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344629" timestamp2="5344629">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3159" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344629" timestamp2="5344629">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3161" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344667" timestamp2="5344667">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3162" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344667" timestamp2="5344667">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="3133" _type="Insert" date="Mon Nov 20 15:47:08 EST 2023" docASTNodeCount="153" docActiveCodeLength="947" docExpressionCount="109" docLength="1069" length="15" offset="366" repeat="15" starttimestamp="1700507886094" timestamp="5342350" timestamp2="5345430">
    <text><![CDATA[eturn this.getT]]></text>
  </DocumentChange>
  <DocumentChange __id="3172" _type="Replace" date="Mon Nov 20 15:47:12 EST 2023" docASTNodeCount="153" docActiveCodeLength="952" docExpressionCount="109" docLength="1074" endLine="14" insertionLength="9" int_docASTNodeCount="151" int_docActiveCodeLength="943" int_docExpressionCount="107" int_docLength="1065" length="4" offset="377" startLine="14" starttimestamp="1700507886094" timestamp="5346080">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3175" _type="Insert" date="Mon Nov 20 15:47:12 EST 2023" docASTNodeCount="153" docActiveCodeLength="953" docExpressionCount="109" docLength="1075" length="1" offset="386" starttimestamp="1700507886094" timestamp="5346512">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="3164" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344817" timestamp2="5344817">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3165" _type="InsertStringCommand" date="Mon Nov 20 15:47:10 EST 2023" starttimestamp="1700507886094" timestamp="5344818" timestamp2="5344818">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3166" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:47:10 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="5344825" />
  <Command __id="3171" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:47:12 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="5346077" />
  <Command __id="3173" _type="InsertStringCommand" date="Mon Nov 20 15:47:12 EST 2023" starttimestamp="1700507886094" timestamp="5346087" timestamp2="5346087">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3174" _type="InsertStringCommand" date="Mon Nov 20 15:47:12 EST 2023" starttimestamp="1700507886094" timestamp="5346087" timestamp2="5346087">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3176" _type="InsertStringCommand" date="Mon Nov 20 15:47:12 EST 2023" starttimestamp="1700507886094" timestamp="5346515" timestamp2="5346515">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3177" _type="InsertStringCommand" date="Mon Nov 20 15:47:12 EST 2023" starttimestamp="1700507886094" timestamp="5346515" timestamp2="5346515">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3178" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:47:12 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="5346523" />
  <Command __id="3182" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:47:15 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="5349290" />
  <Command __id="3184" _type="InsertStringCommand" date="Mon Nov 20 15:47:15 EST 2023" starttimestamp="1700507886094" timestamp="5349298" timestamp2="5349298">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3185" _type="InsertStringCommand" date="Mon Nov 20 15:47:15 EST 2023" starttimestamp="1700507886094" timestamp="5349298" timestamp2="5349298">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3187" _type="InsertStringCommand" date="Mon Nov 20 15:47:15 EST 2023" starttimestamp="1700507886094" timestamp="5349658" timestamp2="5349658">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3188" _type="InsertStringCommand" date="Mon Nov 20 15:47:15 EST 2023" starttimestamp="1700507886094" timestamp="5349658" timestamp2="5349658">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3189" _type="MoveCaretCommand" caretOffset="405" date="Mon Nov 20 15:47:16 EST 2023" docOffset="405" starttimestamp="1700507886094" timestamp="5350688" />
  <Command __id="3190" _type="MoveCaretCommand" caretOffset="405" date="Mon Nov 20 15:47:16 EST 2023" docOffset="405" starttimestamp="1700507886094" timestamp="5350688" />
  <Command __id="3191" _type="MoveCaretCommand" caretOffset="447" date="Mon Nov 20 15:47:17 EST 2023" docOffset="447" starttimestamp="1700507886094" timestamp="5351666" />
  <Command __id="3192" _type="MoveCaretCommand" caretOffset="447" date="Mon Nov 20 15:47:17 EST 2023" docOffset="447" starttimestamp="1700507886094" timestamp="5351666" />
  <Command __id="3193" _type="MoveCaretCommand" caretOffset="395" date="Mon Nov 20 15:47:19 EST 2023" docOffset="395" starttimestamp="1700507886094" timestamp="5353617" />
  <Command __id="3194" _type="MoveCaretCommand" caretOffset="395" date="Mon Nov 20 15:47:19 EST 2023" docOffset="395" starttimestamp="1700507886094" timestamp="5353617" />
  <Command __id="3195" _type="MoveCaretCommand" caretOffset="405" date="Mon Nov 20 15:47:20 EST 2023" docOffset="405" starttimestamp="1700507886094" timestamp="5354070" />
  <Command __id="3196" _type="MoveCaretCommand" caretOffset="405" date="Mon Nov 20 15:47:20 EST 2023" docOffset="405" starttimestamp="1700507886094" timestamp="5354070" />
  <Command __id="3197" _type="MoveCaretCommand" caretOffset="395" date="Mon Nov 20 15:47:20 EST 2023" docOffset="395" starttimestamp="1700507886094" timestamp="5354522" />
  <Command __id="3198" _type="MoveCaretCommand" caretOffset="395" date="Mon Nov 20 15:47:20 EST 2023" docOffset="395" starttimestamp="1700507886094" timestamp="5354522" />
  <Command __id="3199" _type="MoveCaretCommand" caretOffset="405" date="Mon Nov 20 15:47:21 EST 2023" docOffset="405" starttimestamp="1700507886094" timestamp="5354978" />
  <Command __id="3200" _type="MoveCaretCommand" caretOffset="405" date="Mon Nov 20 15:47:21 EST 2023" docOffset="405" starttimestamp="1700507886094" timestamp="5354978" />
  <Command __id="3201" _type="MoveCaretCommand" caretOffset="395" date="Mon Nov 20 15:47:21 EST 2023" docOffset="395" starttimestamp="1700507886094" timestamp="5355379" />
  <Command __id="3202" _type="MoveCaretCommand" caretOffset="395" date="Mon Nov 20 15:47:21 EST 2023" docOffset="395" starttimestamp="1700507886094" timestamp="5355380" />
  <Command __id="3203" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:47:21 EST 2023" starttimestamp="1700507886094" timestamp="5355732" />
  <Command __id="3204" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:47:21 EST 2023" starttimestamp="1700507886094" timestamp="5355830" />
  <Command __id="3205" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:47:21 EST 2023" starttimestamp="1700507886094" timestamp="5355837" />
  <Command __id="3206" _type="MoveCaretCommand" caretOffset="509" date="Mon Nov 20 15:47:51 EST 2023" docOffset="509" starttimestamp="1700507886094" timestamp="5385573" />
  <Command __id="3207" _type="MoveCaretCommand" caretOffset="509" date="Mon Nov 20 15:47:51 EST 2023" docOffset="509" starttimestamp="1700507886094" timestamp="5385573" />
  <Command __id="3208" _type="SelectTextCommand" caretOffset="511" date="Mon Nov 20 15:47:51 EST 2023" end="511" start="505" starttimestamp="1700507886094" timestamp="5385711" />
  <Command __id="3209" _type="SelectTextCommand" caretOffset="511" date="Mon Nov 20 15:47:51 EST 2023" end="511" start="505" starttimestamp="1700507886094" timestamp="5385711" />
  <Command __id="3210" _type="ShellCommand" date="Mon Nov 20 15:47:52 EST 2023" starttimestamp="1700507886094" timestamp="5386256" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3211" _type="ShellCommand" date="Mon Nov 20 15:47:52 EST 2023" starttimestamp="1700507886094" timestamp="5386279" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3212" _type="MoveCaretCommand" caretOffset="516" date="Mon Nov 20 15:47:52 EST 2023" docOffset="516" starttimestamp="1700507886094" timestamp="5386876" />
  <Command __id="3213" _type="MoveCaretCommand" caretOffset="516" date="Mon Nov 20 15:47:52 EST 2023" docOffset="516" starttimestamp="1700507886094" timestamp="5386876" />
  <Command __id="3214" _type="SelectTextCommand" caretOffset="844" date="Mon Nov 20 15:48:02 EST 2023" end="968" start="844" starttimestamp="1700507886094" timestamp="5396150" />
  <Command __id="3215" _type="SelectTextCommand" caretOffset="844" date="Mon Nov 20 15:48:02 EST 2023" end="968" start="844" starttimestamp="1700507886094" timestamp="5396150" />
  <Command __id="3216" _type="ShellCommand" date="Mon Nov 20 15:48:09 EST 2023" starttimestamp="1700507886094" timestamp="5403229" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="3179" _type="Insert" date="Mon Nov 20 15:47:14 EST 2023" docASTNodeCount="155" docActiveCodeLength="956" docExpressionCount="111" docLength="1078" length="3" offset="387" repeat="3" starttimestamp="1700507886094" timestamp="5348630" timestamp2="5349009">
    <text><![CDATA[isN]]></text>
  </DocumentChange>
  <DocumentChange __id="3183" _type="Replace" date="Mon Nov 20 15:47:15 EST 2023" docASTNodeCount="155" docActiveCodeLength="960" docExpressionCount="111" docLength="1082" endLine="14" insertionLength="7" int_docASTNodeCount="153" int_docActiveCodeLength="953" int_docExpressionCount="109" int_docLength="1075" length="3" offset="387" startLine="14" starttimestamp="1700507886094" timestamp="5349292">
    <deletedText><![CDATA[isN]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3186" _type="Insert" date="Mon Nov 20 15:47:15 EST 2023" docASTNodeCount="155" docActiveCodeLength="961" docExpressionCount="111" docLength="1083" length="1" offset="394" starttimestamp="1700507886094" timestamp="5349655">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="3217" _type="ShellCommand" date="Mon Nov 20 15:48:14 EST 2023" starttimestamp="1700507886094" timestamp="5408092" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3221" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Mon Nov 20 15:48:15 EST 2023" starttimestamp="1700507886094" timestamp="5409664" />
  <Command __id="3222" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 15:48:16 EST 2023" docOffset="962" starttimestamp="1700507886094" timestamp="5410374" />
  <Command __id="3223" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 15:48:16 EST 2023" docOffset="962" starttimestamp="1700507886094" timestamp="5410374" />
  <Command __id="3224" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 15:48:17 EST 2023" docOffset="880" starttimestamp="1700507886094" timestamp="5411033" />
  <Command __id="3225" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 15:48:17 EST 2023" docOffset="880" starttimestamp="1700507886094" timestamp="5411033" />
  <Command __id="3226" _type="SelectTextCommand" caretOffset="959" date="Mon Nov 20 15:48:18 EST 2023" end="959" start="880" starttimestamp="1700507886094" timestamp="5412537" />
  <Command __id="3227" _type="SelectTextCommand" caretOffset="959" date="Mon Nov 20 15:48:18 EST 2023" end="959" start="880" starttimestamp="1700507886094" timestamp="5412537" />
  <Command __id="3229" _type="PasteCommand" date="Mon Nov 20 15:48:18 EST 2023" starttimestamp="1700507886094" timestamp="5412615" />
  <Command __id="3230" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 15:48:20 EST 2023" docOffset="880" starttimestamp="1700507886094" timestamp="5414108" />
  <Command __id="3231" _type="MoveCaretCommand" caretOffset="880" date="Mon Nov 20 15:48:20 EST 2023" docOffset="880" starttimestamp="1700507886094" timestamp="5414109" />
  <Command __id="3233" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414527" timestamp2="5414527">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3234" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414527" timestamp2="5414527">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3236" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414600" timestamp2="5414600">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3237" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414600" timestamp2="5414600">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3239" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414716" timestamp2="5414716">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3240" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414716" timestamp2="5414716">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3242" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414809" timestamp2="5414809">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3243" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414809" timestamp2="5414809">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3245" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414896" timestamp2="5414896">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3246" _type="InsertStringCommand" date="Mon Nov 20 15:48:20 EST 2023" starttimestamp="1700507886094" timestamp="5414896" timestamp2="5414896">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3248" _type="InsertStringCommand" date="Mon Nov 20 15:48:21 EST 2023" starttimestamp="1700507886094" timestamp="5414955" timestamp2="5414955">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3249" _type="InsertStringCommand" date="Mon Nov 20 15:48:21 EST 2023" starttimestamp="1700507886094" timestamp="5414955" timestamp2="5414955">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3251" _type="InsertStringCommand" date="Mon Nov 20 15:48:21 EST 2023" starttimestamp="1700507886094" timestamp="5415039" timestamp2="5415039">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3252" _type="InsertStringCommand" date="Mon Nov 20 15:48:21 EST 2023" starttimestamp="1700507886094" timestamp="5415039" timestamp2="5415039">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3253" _type="MoveCaretCommand" caretOffset="906" date="Mon Nov 20 15:48:21 EST 2023" docOffset="906" starttimestamp="1700507886094" timestamp="5415555" />
  <Command __id="3254" _type="MoveCaretCommand" caretOffset="906" date="Mon Nov 20 15:48:21 EST 2023" docOffset="906" starttimestamp="1700507886094" timestamp="5415555" />
  <Command __id="3255" _type="ShellCommand" date="Mon Nov 20 15:48:23 EST 2023" starttimestamp="1700507886094" timestamp="5417645" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3256" _type="ShellCommand" date="Mon Nov 20 15:48:23 EST 2023" starttimestamp="1700507886094" timestamp="5417729" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="3218" _type="Delete" date="Mon Nov 20 15:48:15 EST 2023" docASTNodeCount="161" docActiveCodeLength="994" docExpressionCount="113" docLength="1081" endLine="34" length="2" offset="844" startLine="34" starttimestamp="1700507886094" timestamp="5409644">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3219" _type="Delete" date="Mon Nov 20 15:48:15 EST 2023" docASTNodeCount="161" docActiveCodeLength="1075" docExpressionCount="113" docLength="1079" endLine="35" length="2" offset="878" startLine="35" starttimestamp="1700507886094" timestamp="5409650">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3220" _type="Delete" date="Mon Nov 20 15:48:15 EST 2023" docASTNodeCount="176" docActiveCodeLength="1077" docExpressionCount="127" docLength="1077" endLine="36" length="2" offset="960" startLine="36" starttimestamp="1700507886094" timestamp="5409650">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3228" _type="Replace" date="Mon Nov 20 15:48:18 EST 2023" docASTNodeCount="169" docActiveCodeLength="1055" docExpressionCount="119" docLength="1055" endLine="35" insertionLength="59" int_docASTNodeCount="161" int_docActiveCodeLength="996" int_docExpressionCount="113" int_docLength="996" length="81" offset="878" startLine="35" starttimestamp="1700507886094" timestamp="5412608">
    <deletedText><![CDATA[		return "(" + H1.toString() + " " + H2.toString() + " " + … HN.toString() + ")";]]></deletedText>
    <insertedText><![CDATA[		((AbstractSExpression)this).toStringAsListHelperPublic();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3232" _type="Insert" date="Mon Nov 20 15:48:20 EST 2023" docASTNodeCount="169" docActiveCodeLength="1062" docExpressionCount="119" docLength="1062" length="7" offset="880" repeat="7" starttimestamp="1700507886094" timestamp="5414520" timestamp2="5415038">
    <text><![CDATA[return ]]></text>
  </DocumentChange>
  <DocumentChange __id="3257" _type="Insert" date="Mon Nov 20 15:48:23 EST 2023" docASTNodeCount="179" docActiveCodeLength="1113" docExpressionCount="128" docLength="1113" length="51" offset="16" repeat="2" starttimestamp="1700507886094" timestamp="5417735" timestamp2="5417735">
    <text><![CDATA[import main.lisp.parser.terms.AbstractSExpression;
]]></text>
  </DocumentChange>
  <Command __id="3259" _type="MoveCaretCommand" caretOffset="892" date="Mon Nov 20 15:48:25 EST 2023" docOffset="892" starttimestamp="1700507886094" timestamp="5419444" />
  <Command __id="3260" _type="MoveCaretCommand" caretOffset="892" date="Mon Nov 20 15:48:25 EST 2023" docOffset="892" starttimestamp="1700507886094" timestamp="5419444" />
  <Command __id="3261" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 15:48:25 EST 2023" starttimestamp="1700507886094" timestamp="5419644" />
  <Command __id="3262" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:48:25 EST 2023" starttimestamp="1700507886094" timestamp="5419741" />
  <Command __id="3263" _type="EclipseCommand" commandID="" date="Mon Nov 20 15:48:25 EST 2023" starttimestamp="1700507886094" timestamp="5419751" />
  <Command __id="3265" _type="MoveCaretCommand" caretOffset="187" date="Mon Nov 20 15:48:28 EST 2023" docOffset="187" starttimestamp="1700507886094" timestamp="5421932" />
  <Command __id="3266" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 15:48:30 EST 2023" starttimestamp="1700507886094" timestamp="5423923" />
  <Command __id="3267" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:48:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5424085" type="Run" />
  <Command __id="3268" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:48:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5424085" type="Run" />
  <Command __id="3269" _type="ShellCommand" date="Mon Nov 20 15:48:30 EST 2023" starttimestamp="1700507886094" timestamp="5424389" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3287" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:48:38 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5432555" type="Run" />
  <Command __id="3288" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:48:38 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5432555" type="Run" />
  <Command __id="3289" _type="LocalChecksRawCommand" date="Mon Nov 20 15:48:38 EST 2023" starttimestamp="1700507886094" timestamp="5432557">
    <CSVRow><![CDATA[45,Mon Nov 20 15:48:32 EST 2023,3,0,A5ToStringSuite,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,16,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3290" _type="LocalChecksRawCommand" date="Mon Nov 20 15:48:38 EST 2023" starttimestamp="1700507886094" timestamp="5432557">
    <CSVRow><![CDATA[45,Mon Nov 20 15:48:32 EST 2023,3,0,A5ToStringSuite,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,16,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(0.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3291" _type="ShellCommand" date="Mon Nov 20 15:48:38 EST 2023" starttimestamp="1700507886094" timestamp="5432567" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3264" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:48:27 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5421857">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3292" _type="MoveCaretCommand" caretOffset="1106" date="Mon Nov 20 15:49:04 EST 2023" docOffset="1106" starttimestamp="1700507886094" timestamp="5458830" />
  <Command __id="3293" _type="MoveCaretCommand" caretOffset="1106" date="Mon Nov 20 15:49:04 EST 2023" docOffset="1106" starttimestamp="1700507886094" timestamp="5458830" />
  <Command __id="3295" _type="MoveCaretCommand" caretOffset="892" date="Mon Nov 20 15:49:10 EST 2023" docOffset="892" starttimestamp="1700507886094" timestamp="5464167" />
  <Command __id="3296" _type="ShellCommand" date="Mon Nov 20 15:49:15 EST 2023" starttimestamp="1700507886094" timestamp="5469108" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3297" _type="ShellCommand" date="Mon Nov 20 15:49:16 EST 2023" starttimestamp="1700507886094" timestamp="5470675" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3298" _type="ShellCommand" date="Mon Nov 20 15:49:17 EST 2023" starttimestamp="1700507886094" timestamp="5471057" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3299" _type="ShellCommand" date="Mon Nov 20 15:49:18 EST 2023" starttimestamp="1700507886094" timestamp="5472187" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3300" _type="MoveCaretCommand" caretOffset="1021" date="Mon Nov 20 15:49:20 EST 2023" docOffset="1021" starttimestamp="1700507886094" timestamp="5474446" />
  <Command __id="3301" _type="MoveCaretCommand" caretOffset="1021" date="Mon Nov 20 15:49:20 EST 2023" docOffset="1021" starttimestamp="1700507886094" timestamp="5474446" />
  <Command __id="3302" _type="MoveCaretCommand" caretOffset="343" date="Mon Nov 20 15:49:57 EST 2023" docOffset="343" starttimestamp="1700507886094" timestamp="5511454" />
  <Command __id="3303" _type="MoveCaretCommand" caretOffset="343" date="Mon Nov 20 15:49:57 EST 2023" docOffset="343" starttimestamp="1700507886094" timestamp="5511454" />
  <Command __id="3304" _type="MoveCaretCommand" caretOffset="340" date="Mon Nov 20 15:49:58 EST 2023" docOffset="340" starttimestamp="1700507886094" timestamp="5512293" />
  <Command __id="3305" _type="MoveCaretCommand" caretOffset="340" date="Mon Nov 20 15:49:58 EST 2023" docOffset="340" starttimestamp="1700507886094" timestamp="5512293" />
  <Command __id="3306" _type="MoveCaretCommand" caretOffset="343" date="Mon Nov 20 15:49:58 EST 2023" docOffset="343" starttimestamp="1700507886094" timestamp="5512855" />
  <Command __id="3307" _type="MoveCaretCommand" caretOffset="343" date="Mon Nov 20 15:49:58 EST 2023" docOffset="343" starttimestamp="1700507886094" timestamp="5512855" />
  <Command __id="3308" _type="MoveCaretCommand" caretOffset="343" date="Mon Nov 20 15:49:59 EST 2023" docOffset="343" starttimestamp="1700507886094" timestamp="5513395" />
  <Command __id="3309" _type="MoveCaretCommand" caretOffset="343" date="Mon Nov 20 15:49:59 EST 2023" docOffset="343" starttimestamp="1700507886094" timestamp="5513395" />
  <Command __id="3310" _type="MoveCaretCommand" caretOffset="344" date="Mon Nov 20 15:49:59 EST 2023" docOffset="344" starttimestamp="1700507886094" timestamp="5513860" />
  <Command __id="3311" _type="MoveCaretCommand" caretOffset="344" date="Mon Nov 20 15:49:59 EST 2023" docOffset="344" starttimestamp="1700507886094" timestamp="5513860" />
  <Command __id="3312" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 15:50:00 EST 2023" docOffset="371" starttimestamp="1700507886094" timestamp="5514386" />
  <Command __id="3313" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 15:50:00 EST 2023" docOffset="371" starttimestamp="1700507886094" timestamp="5514386" />
  <Command __id="3314" _type="ShellCommand" date="Mon Nov 20 15:50:01 EST 2023" starttimestamp="1700507886094" timestamp="5515845" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3315" _type="ShellCommand" date="Mon Nov 20 15:50:28 EST 2023" starttimestamp="1700507886094" timestamp="5542504" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3316" _type="ShellCommand" date="Mon Nov 20 15:50:32 EST 2023" starttimestamp="1700507886094" timestamp="5546791" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3317" _type="ShellCommand" date="Mon Nov 20 15:50:35 EST 2023" starttimestamp="1700507886094" timestamp="5549229" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3318" _type="ShellCommand" date="Mon Nov 20 15:50:37 EST 2023" starttimestamp="1700507886094" timestamp="5551282" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3319" _type="ShellCommand" date="Mon Nov 20 15:50:41 EST 2023" starttimestamp="1700507886094" timestamp="5555304" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3320" _type="MoveCaretCommand" caretOffset="527" date="Mon Nov 20 15:50:45 EST 2023" docOffset="527" starttimestamp="1700507886094" timestamp="5558935" />
  <Command __id="3321" _type="MoveCaretCommand" caretOffset="527" date="Mon Nov 20 15:50:45 EST 2023" docOffset="527" starttimestamp="1700507886094" timestamp="5558935" />
  <Command __id="3322" _type="MoveCaretCommand" caretOffset="588" date="Mon Nov 20 15:50:46 EST 2023" docOffset="588" starttimestamp="1700507886094" timestamp="5560055" />
  <Command __id="3323" _type="MoveCaretCommand" caretOffset="588" date="Mon Nov 20 15:50:46 EST 2023" docOffset="588" starttimestamp="1700507886094" timestamp="5560055" />
  <Command __id="3324" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:50:46 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="5560601" />
  <Command __id="3325" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:50:46 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="5560601" />
  <Command __id="3326" _type="ShellCommand" date="Mon Nov 20 15:50:49 EST 2023" starttimestamp="1700507886094" timestamp="5563234" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3327" _type="ShellCommand" date="Mon Nov 20 15:50:50 EST 2023" starttimestamp="1700507886094" timestamp="5564069" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3328" _type="ShellCommand" date="Mon Nov 20 15:50:50 EST 2023" starttimestamp="1700507886094" timestamp="5564612" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3329" _type="ShellCommand" date="Mon Nov 20 15:50:51 EST 2023" starttimestamp="1700507886094" timestamp="5565457" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3330" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:50:52 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="5566013" />
  <Command __id="3331" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:50:52 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="5566013" />
  <Command __id="3332" _type="ShellCommand" date="Mon Nov 20 15:50:52 EST 2023" starttimestamp="1700507886094" timestamp="5566105" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3333" _type="ShellCommand" date="Mon Nov 20 15:50:53 EST 2023" starttimestamp="1700507886094" timestamp="5566994" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3334" _type="ShellCommand" date="Mon Nov 20 15:50:54 EST 2023" starttimestamp="1700507886094" timestamp="5568559" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3335" _type="ShellCommand" date="Mon Nov 20 15:50:55 EST 2023" starttimestamp="1700507886094" timestamp="5569849" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3360" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:51:12 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="5585981">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3365" _type="ShellCommand" date="Mon Nov 20 15:51:28 EST 2023" starttimestamp="1700507886094" timestamp="5601984" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3366" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:51:29 EST 2023" docASTNodeCount="179" docActiveCodeLength="1113" docExpressionCount="128" docLength="1113" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5603696">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return ((AbstractSExpression)this).toStringAsListHelperPublic();	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3367" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:51:29 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="5603750" />
  <Command __id="3369" _type="MoveCaretCommand" caretOffset="1106" date="Mon Nov 20 15:51:34 EST 2023" docOffset="1106" starttimestamp="1700507886094" timestamp="5608415" />
  <Command __id="3370" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 15:51:36 EST 2023" starttimestamp="1700507886094" timestamp="5610712" />
  <Command __id="3371" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:51:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5610845" type="Run" />
  <Command __id="3372" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 15:51:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5610845" type="Run" />
  <Command __id="3373" _type="ShellCommand" date="Mon Nov 20 15:51:37 EST 2023" starttimestamp="1700507886094" timestamp="5611151" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3374" _type="ConsoleOutput" date="Mon Nov 20 15:51:43 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5617128" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3375" _type="ConsoleOutput" date="Mon Nov 20 15:51:43 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5617129" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3376" _type="ConsoleOutput" date="Mon Nov 20 15:51:43 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5617130" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="3377" _type="ExceptionCommand" date="Mon Nov 20 15:51:43 EST 2023" starttimestamp="1700507886094" timestamp="5617145" type="Exception">
    <exceptionString><![CDATA[java.lang.UnsupportedOperationException: Not implemented
	at main.lisp.parser.terms.AbstractSExpression.toStringAsListHelperPublic(AbstractSExpression.java:9)
	at index.BasicExpressionImpl.toStringAsList(BasicExpressionImpl.java:37)
	at index.BasicExpressionImpl.toString(BasicExpressionImpl.java:41)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3378" _type="ConsoleOutput" date="Mon Nov 20 15:51:43 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5617150" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)
	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)
	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)
	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at java.base/java.lang.String.valueOf(String.java:2951)¶	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser.java:158)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3379" _type="ConsoleOutput" date="Mon Nov 20 15:51:43 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5617178" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java.base/java."), Diff(DELETE,"lang.String.valueOf(String.java:2951)¶	at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)¶	at main.lisp.parser.terms.ExpressionFactory.newInstance(ExpressionFactory.java:99)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:79)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser"), Diff(INSERT,"security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"77"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.BasicParser.parseLispSingle(BasicParser.java:64)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:71)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseList(BasicParser.java:77)¶	at main.lisp.parser.BasicParser.parseStart(BasicParser.java:53)¶	at main.lisp.parser.BasicParser.parse(BasicParser.java:42)¶	at main.lisp.parser.BasicParser.giveToken(BasicParser"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"158"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:72)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"42"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpr"), Diff(INSERT,"java.base/java.security.Acc"), Diff(EQUAL,"ess"), Diff(DELETE,"i"), Diff(INSERT,"C"), Diff(EQUAL,"on"), Diff(DELETE,"Checker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethod"), Diff(INSERT,"troller.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallabl"), Diff(INSERT,"desktop/java.awt.EventQueue.dispatchEvent(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"1"), Diff(INSERT,"74"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"325"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"36"), Diff(INSERT,"11"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(INSERT,"0"), Diff(EQUAL,"9"), Diff(DELETE,"1"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMetho"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.run(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"27"), Diff(INSERT,"9"), Diff(EQUAL,"0)¶")]]]></diff>
  </Command>
  <Command __id="3380" _type="ConsoleOutput" date="Mon Nov 20 15:51:43 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5617184" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):30
Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"¶Test execution time (ms):30¶Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3381" _type="ShellCommand" date="Mon Nov 20 15:51:54 EST 2023" starttimestamp="1700507886094" timestamp="5628570" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3382" _type="LocalChecksRawCommand" date="Mon Nov 20 15:51:54 EST 2023" starttimestamp="1700507886094" timestamp="5628575">
    <CSVRow><![CDATA[46,Mon Nov 20 15:51:43 EST 2023,3,0,ListToStringCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,17,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3383" _type="LocalChecksRawCommand" date="Mon Nov 20 15:51:54 EST 2023" starttimestamp="1700507886094" timestamp="5628575">
    <CSVRow><![CDATA[46,Mon Nov 20 15:51:43 EST 2023,3,0,ListToStringCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,17,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3385" _type="MoveCaretCommand" caretOffset="567" date="Mon Nov 20 15:51:54 EST 2023" docOffset="567" starttimestamp="1700507886094" timestamp="5628700" />
  <Command __id="3386" _type="ShellCommand" date="Mon Nov 20 15:51:59 EST 2023" starttimestamp="1700507886094" timestamp="5633001" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3387" _type="ShellCommand" date="Mon Nov 20 15:51:59 EST 2023" starttimestamp="1700507886094" timestamp="5633511" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3388" _type="ShellCommand" date="Mon Nov 20 15:52:00 EST 2023" starttimestamp="1700507886094" timestamp="5634515" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3389" _type="ShellCommand" date="Mon Nov 20 15:52:15 EST 2023" starttimestamp="1700507886094" timestamp="5649075" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3390" _type="MoveCaretCommand" caretOffset="1046" date="Mon Nov 20 15:52:18 EST 2023" docOffset="1046" starttimestamp="1700507886094" timestamp="5651959" />
  <Command __id="3391" _type="MoveCaretCommand" caretOffset="1046" date="Mon Nov 20 15:52:18 EST 2023" docOffset="1046" starttimestamp="1700507886094" timestamp="5651959" />
  <Command __id="3392" _type="MoveCaretCommand" caretOffset="1109" date="Mon Nov 20 15:52:18 EST 2023" docOffset="1109" starttimestamp="1700507886094" timestamp="5652355" />
  <Command __id="3393" _type="MoveCaretCommand" caretOffset="1109" date="Mon Nov 20 15:52:18 EST 2023" docOffset="1109" starttimestamp="1700507886094" timestamp="5652355" />
  <Command __id="3395" _type="InsertStringCommand" date="Mon Nov 20 15:52:18 EST 2023" starttimestamp="1700507886094" timestamp="5652834" timestamp2="5652834">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3396" _type="InsertStringCommand" date="Mon Nov 20 15:52:18 EST 2023" starttimestamp="1700507886094" timestamp="5652834" timestamp2="5652834">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3398" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5652946" timestamp2="5652946">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3399" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5652946" timestamp2="5652946">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3401" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653225" timestamp2="5653225">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3402" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653225" timestamp2="5653225">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3404" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653323" timestamp2="5653323">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3405" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653324" timestamp2="5653324">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3407" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653375" timestamp2="5653375">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3408" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653375" timestamp2="5653375">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3410" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653477" timestamp2="5653477">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3411" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653477" timestamp2="5653477">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3413" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653506" timestamp2="5653506">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3414" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653506" timestamp2="5653506">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3416" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653618" timestamp2="5653618">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3417" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653618" timestamp2="5653618">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3419" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653667" timestamp2="5653667">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3420" _type="InsertStringCommand" date="Mon Nov 20 15:52:19 EST 2023" starttimestamp="1700507886094" timestamp="5653667" timestamp2="5653667">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3421" _type="ShellCommand" date="Mon Nov 20 15:52:20 EST 2023" starttimestamp="1700507886094" timestamp="5654314" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3422" _type="ShellCommand" date="Mon Nov 20 15:52:23 EST 2023" starttimestamp="1700507886094" timestamp="5657760" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3423" _type="SelectTextCommand" caretOffset="1112" date="Mon Nov 20 15:52:25 EST 2023" end="1120" start="1112" starttimestamp="1700507886094" timestamp="5659303" />
  <Command __id="3424" _type="SelectTextCommand" caretOffset="1112" date="Mon Nov 20 15:52:25 EST 2023" end="1120" start="1112" starttimestamp="1700507886094" timestamp="5659304" />
  <Command __id="3426" _type="PasteCommand" date="Mon Nov 20 15:52:25 EST 2023" starttimestamp="1700507886094" timestamp="5659432" />
  <Command __id="3427" _type="SelectTextCommand" caretOffset="1160" date="Mon Nov 20 15:52:28 EST 2023" end="1219" start="1160" starttimestamp="1700507886094" timestamp="5662652" />
  <Command __id="3428" _type="SelectTextCommand" caretOffset="1160" date="Mon Nov 20 15:52:28 EST 2023" end="1219" start="1160" starttimestamp="1700507886094" timestamp="5662652" />
  <Command __id="3429" _type="ShellCommand" date="Mon Nov 20 15:52:52 EST 2023" starttimestamp="1700507886094" timestamp="5686802" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3430" _type="ConsoleOutput" date="Mon Nov 20 15:52:58 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5692783" type="ConsoleOutput">
    <outputString><![CDATA[NIL
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):30¶Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string "), Diff(INSERT,"NIL¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3431" _type="ConsoleOutput" date="Mon Nov 20 15:52:58 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5692784" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL¶NIL"), Diff(INSERT,"¶Test execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3432" _type="ConsoleOutput" date="Mon Nov 20 15:52:58 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5692785" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Expected strings:(5 . ((("A" . "6") . NIL) . ((7 . NIL) . NIL)))actual string NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Expected strings:(5 . ((("A" . "6") . NIL) . ((7 . NIL) . NIL)))actual string NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3433" _type="ShellCommand" date="Mon Nov 20 15:53:06 EST 2023" starttimestamp="1700507886094" timestamp="5699949" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3434" _type="ShellCommand" date="Mon Nov 20 15:53:07 EST 2023" starttimestamp="1700507886094" timestamp="5701721" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3435" _type="ConsoleOutput" date="Mon Nov 20 15:53:09 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="5702912" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringDeepCheckerBasic@445902c1 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,0.0% complete,0.0,5.0,Expected strings:(5 . ((("A" . "6") . NIL) . ((7 . NIL) . NIL)))actual string NIL"), Diff(INSERT,"Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringDeepCheckerBasic@445902c1 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3436" _type="ShellCommand" date="Mon Nov 20 15:53:12 EST 2023" starttimestamp="1700507886094" timestamp="5706309" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3437" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 15:53:12 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="5706388" />
  <Command __id="3438" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 15:53:12 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="5706388" />
  <Command __id="3439" _type="ShellCommand" date="Mon Nov 20 15:53:13 EST 2023" starttimestamp="1700507886094" timestamp="5707023" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3440" _type="ShellCommand" date="Mon Nov 20 15:53:13 EST 2023" starttimestamp="1700507886094" timestamp="5707646" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3441" _type="MoveCaretCommand" caretOffset="1180" date="Mon Nov 20 15:53:14 EST 2023" docOffset="1180" starttimestamp="1700507886094" timestamp="5708176" />
  <Command __id="3442" _type="MoveCaretCommand" caretOffset="1180" date="Mon Nov 20 15:53:14 EST 2023" docOffset="1180" starttimestamp="1700507886094" timestamp="5708176" />
  <Command __id="3443" _type="MoveCaretCommand" caretOffset="1219" date="Mon Nov 20 15:53:14 EST 2023" docOffset="1219" starttimestamp="1700507886094" timestamp="5708587" />
  <Command __id="3444" _type="MoveCaretCommand" caretOffset="1219" date="Mon Nov 20 15:53:14 EST 2023" docOffset="1219" starttimestamp="1700507886094" timestamp="5708587" />
  <Command __id="3445" _type="ShellCommand" date="Mon Nov 20 15:53:17 EST 2023" starttimestamp="1700507886094" timestamp="5711115" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3446" _type="LocalChecksRawCommand" date="Mon Nov 20 15:53:17 EST 2023" starttimestamp="1700507886094" timestamp="5711118">
    <CSVRow><![CDATA[47,Mon Nov 20 15:52:58 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,17,1,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3447" _type="LocalChecksRawCommand" date="Mon Nov 20 15:53:17 EST 2023" starttimestamp="1700507886094" timestamp="5711118">
    <CSVRow><![CDATA[47,Mon Nov 20 15:52:58 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,17,1,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3448" _type="LocalChecksRawCommand" date="Mon Nov 20 15:53:17 EST 2023" starttimestamp="1700507886094" timestamp="5711118">
    <CSVRow><![CDATA[48,Mon Nov 20 15:53:09 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,17,2,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3449" _type="LocalChecksRawCommand" date="Mon Nov 20 15:53:17 EST 2023" starttimestamp="1700507886094" timestamp="5711118">
    <CSVRow><![CDATA[48,Mon Nov 20 15:53:09 EST 2023,3,0,ListToStringDeepCheckerBasic,ClassRegistryProvided MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,17,2,false, , , ,ListToStringDeepCheckerBasic-(0.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3450" _type="ShellCommand" date="Mon Nov 20 15:53:55 EST 2023" starttimestamp="1700507886094" timestamp="5749284" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3451" _type="ShellCommand" date="Mon Nov 20 15:53:56 EST 2023" starttimestamp="1700507886094" timestamp="5750400" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3452" _type="ShellCommand" date="Mon Nov 20 15:54:11 EST 2023" starttimestamp="1700507886094" timestamp="5765675" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3453" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 15:54:17 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="5771830" />
  <Command __id="3454" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 15:54:17 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="5771830" />
  <Command __id="3455" _type="MoveCaretCommand" caretOffset="1146" date="Mon Nov 20 15:54:18 EST 2023" docOffset="1146" starttimestamp="1700507886094" timestamp="5772287" />
  <Command __id="3456" _type="MoveCaretCommand" caretOffset="1146" date="Mon Nov 20 15:54:18 EST 2023" docOffset="1146" starttimestamp="1700507886094" timestamp="5772287" />
  <Command __id="3457" _type="SelectTextCommand" caretOffset="1153" date="Mon Nov 20 15:54:18 EST 2023" end="1153" start="1127" starttimestamp="1700507886094" timestamp="5772438" />
  <Command __id="3458" _type="SelectTextCommand" caretOffset="1153" date="Mon Nov 20 15:54:18 EST 2023" end="1153" start="1127" starttimestamp="1700507886094" timestamp="5772438" />
  <Command __id="3459" _type="ShellCommand" date="Mon Nov 20 15:54:20 EST 2023" starttimestamp="1700507886094" timestamp="5773926" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3460" _type="ShellCommand" date="Mon Nov 20 15:54:24 EST 2023" starttimestamp="1700507886094" timestamp="5778165" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3461" _type="MoveCaretCommand" caretOffset="1188" date="Mon Nov 20 15:54:34 EST 2023" docOffset="1188" starttimestamp="1700507886094" timestamp="5788582" />
  <Command __id="3462" _type="MoveCaretCommand" caretOffset="1188" date="Mon Nov 20 15:54:34 EST 2023" docOffset="1188" starttimestamp="1700507886094" timestamp="5788582" />
  <Command __id="3463" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 15:54:35 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="5789631" />
  <Command __id="3464" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 15:54:35 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="5789631" />
  <Command __id="3465" _type="MoveCaretCommand" caretOffset="1145" date="Mon Nov 20 15:54:36 EST 2023" docOffset="1145" starttimestamp="1700507886094" timestamp="5790297" />
  <Command __id="3466" _type="MoveCaretCommand" caretOffset="1145" date="Mon Nov 20 15:54:36 EST 2023" docOffset="1145" starttimestamp="1700507886094" timestamp="5790297" />
  <Command __id="3467" _type="MoveCaretCommand" caretOffset="969" date="Mon Nov 20 15:54:40 EST 2023" docOffset="969" starttimestamp="1700507886094" timestamp="5794818" />
  <Command __id="3468" _type="MoveCaretCommand" caretOffset="969" date="Mon Nov 20 15:54:40 EST 2023" docOffset="969" starttimestamp="1700507886094" timestamp="5794818" />
  <Command __id="3469" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 15:54:42 EST 2023" docOffset="962" starttimestamp="1700507886094" timestamp="5795945" />
  <Command __id="3470" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 15:54:42 EST 2023" docOffset="962" starttimestamp="1700507886094" timestamp="5795946" />
  <Command __id="3471" _type="MoveCaretCommand" caretOffset="1219" date="Mon Nov 20 15:54:43 EST 2023" docOffset="1219" starttimestamp="1700507886094" timestamp="5797754" />
  <Command __id="3472" _type="MoveCaretCommand" caretOffset="1219" date="Mon Nov 20 15:54:43 EST 2023" docOffset="1219" starttimestamp="1700507886094" timestamp="5797755" />
  <Command __id="3368" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:51:34 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5608337">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3384" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 15:51:54 EST 2023" docASTNodeCount="179" docActiveCodeLength="1113" docExpressionCount="128" docLength="1113" projectName="Assignment5" starttimestamp="1700507886094" timestamp="5628649">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return ((AbstractSExpression)this).toStringAsListHelperPublic();	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3394" _type="Insert" date="Mon Nov 20 15:52:18 EST 2023" docASTNodeCount="179" docActiveCodeLength="1124" docExpressionCount="128" docLength="1124" length="11" offset="1109" repeat="9" starttimestamp="1700507886094" timestamp="5652831" timestamp2="5653666">
    <text><![CDATA[
	
	public ]]></text>
  </DocumentChange>
  <DocumentChange __id="3425" _type="Replace" date="Mon Nov 20 15:52:25 EST 2023" docASTNodeCount="190" docActiveCodeLength="1226" docExpressionCount="133" docLength="1226" endLine="43" insertionLength="110" int_docASTNodeCount="179" int_docActiveCodeLength="1116" int_docExpressionCount="128" int_docLength="1116" length="8" offset="1112" startLine="43" starttimestamp="1700507886094" timestamp="5659421">
    <deletedText><![CDATA[	public ]]></deletedText>
    <insertedText><![CDATA[	public String toStringAsListHelperPublic() {
		throw new UnsupportedOperationException("Not implemented");
	}]]></insertedText>
  </DocumentChange>
  <Command __id="3473" _type="SelectTextCommand" caretOffset="1160" date="Mon Nov 20 15:54:45 EST 2023" end="1219" start="1160" starttimestamp="1700507886094" timestamp="5799420" />
  <Command __id="3474" _type="SelectTextCommand" caretOffset="1160" date="Mon Nov 20 15:54:45 EST 2023" end="1219" start="1160" starttimestamp="1700507886094" timestamp="5799420" />
  <DocumentChange __id="3475" _type="Replace" date="Mon Nov 20 15:54:47 EST 2023" docASTNodeCount="187" docActiveCodeLength="1168" docExpressionCount="131" docLength="1168" endLine="44" insertionLength="1" int_docASTNodeCount="185" int_docActiveCodeLength="1167" int_docExpressionCount="130" int_docLength="1167" length="59" offset="1160" startLine="44" starttimestamp="1700507886094" timestamp="5801309">
    <deletedText><![CDATA[throw new UnsupportedOperationException("Not implemented");]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="3476" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801315" timestamp2="5801315">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3477" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801315" timestamp2="5801315">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="3478" _type="Insert" date="Mon Nov 20 15:54:47 EST 2023" docASTNodeCount="191" docActiveCodeLength="1176" docExpressionCount="135" docLength="1176" length="8" offset="1161" repeat="8" starttimestamp="1700507886094" timestamp="5801434" timestamp2="5802708">
    <text><![CDATA[his.head]]></text>
  </DocumentChange>
  <Command __id="3479" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801436" timestamp2="5801436">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3480" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801436" timestamp2="5801436">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3482" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801495" timestamp2="5801495">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3483" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801495" timestamp2="5801495">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3485" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801547" timestamp2="5801547">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3486" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801547" timestamp2="5801547">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3488" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801683" timestamp2="5801683">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3489" _type="InsertStringCommand" date="Mon Nov 20 15:54:47 EST 2023" starttimestamp="1700507886094" timestamp="5801683" timestamp2="5801683">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3490" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:54:47 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="5801690" />
  <Command __id="3501" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:54:50 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="5804498" />
  <Command __id="3502" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 15:54:50 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="5804498" />
  <Command __id="3503" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 15:54:52 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="5806150" />
  <Command __id="3504" _type="MoveCaretCommand" caretOffset="1169" date="Mon Nov 20 15:54:52 EST 2023" docOffset="1169" starttimestamp="1700507886094" timestamp="5806199" />
  <Command __id="3505" _type="MoveCaretCommand" caretOffset="1169" date="Mon Nov 20 15:54:52 EST 2023" docOffset="1169" starttimestamp="1700507886094" timestamp="5806199" />
  <Command __id="3506" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 15:54:53 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="5807784" />
  <Command __id="3507" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 15:54:53 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="5807784" />
  <Command __id="3508" _type="MoveCaretCommand" caretOffset="1165" date="Mon Nov 20 15:54:54 EST 2023" docOffset="1165" starttimestamp="1700507886094" timestamp="5808271" />
  <Command __id="3509" _type="MoveCaretCommand" caretOffset="1165" date="Mon Nov 20 15:54:54 EST 2023" docOffset="1165" starttimestamp="1700507886094" timestamp="5808271" />
  <DocumentChange __id="3495" _type="Delete" date="Mon Nov 20 15:54:49 EST 2023" docASTNodeCount="189" docActiveCodeLength="1171" docExpressionCount="133" docLength="1171" endLine="44" length="5" offset="1164" repeat="5" startLine="44" starttimestamp="1700507886094" timestamp="5803176" timestamp2="5803675">
    <text><![CDATA[.head]]></text>
  </DocumentChange>
  <DocumentChange __id="3500" _type="Insert" date="Mon Nov 20 15:54:50 EST 2023" docASTNodeCount="189" docActiveCodeLength="1172" docExpressionCount="133" docLength="1172" length="1" offset="1164" starttimestamp="1700507886094" timestamp="5804487">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="3510" _type="SelectTextCommand" caretOffset="1160" date="Mon Nov 20 15:54:56 EST 2023" end="1165" start="1160" starttimestamp="1700507886094" timestamp="5810792" />
  <Command __id="3511" _type="SelectTextCommand" caretOffset="1160" date="Mon Nov 20 15:54:56 EST 2023" end="1165" start="1160" starttimestamp="1700507886094" timestamp="5810792" />
  <DocumentChange __id="3512" _type="Replace" date="Mon Nov 20 15:54:57 EST 2023" docASTNodeCount="187" docActiveCodeLength="1168" docExpressionCount="131" docLength="1168" endLine="44" insertionLength="1" int_docASTNodeCount="185" int_docActiveCodeLength="1167" int_docExpressionCount="130" int_docLength="1167" length="5" offset="1160" startLine="44" starttimestamp="1700507886094" timestamp="5811845">
    <deletedText><![CDATA[this.]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="3513" _type="InsertStringCommand" date="Mon Nov 20 15:54:57 EST 2023" starttimestamp="1700507886094" timestamp="5811850" timestamp2="5811850">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3514" _type="InsertStringCommand" date="Mon Nov 20 15:54:57 EST 2023" starttimestamp="1700507886094" timestamp="5811850" timestamp2="5811850">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3516" _type="InsertStringCommand" date="Mon Nov 20 15:54:58 EST 2023" starttimestamp="1700507886094" timestamp="5811922" timestamp2="5811922">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3517" _type="InsertStringCommand" date="Mon Nov 20 15:54:58 EST 2023" starttimestamp="1700507886094" timestamp="5811922" timestamp2="5811922">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3519" _type="InsertStringCommand" date="Mon Nov 20 15:54:58 EST 2023" starttimestamp="1700507886094" timestamp="5812238" timestamp2="5812238">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3520" _type="InsertStringCommand" date="Mon Nov 20 15:54:58 EST 2023" starttimestamp="1700507886094" timestamp="5812238" timestamp2="5812238">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3521" _type="ShellCommand" date="Mon Nov 20 15:55:06 EST 2023" starttimestamp="1700507886094" timestamp="5820903" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3522" _type="ShellCommand" date="Mon Nov 20 15:55:34 EST 2023" starttimestamp="1700507886094" timestamp="5848021" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3523" _type="ShellCommand" date="Mon Nov 20 15:55:42 EST 2023" starttimestamp="1700507886094" timestamp="5856257" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3524" _type="ShellCommand" date="Mon Nov 20 15:55:43 EST 2023" starttimestamp="1700507886094" timestamp="5856963" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3525" _type="ShellCommand" date="Mon Nov 20 15:55:44 EST 2023" starttimestamp="1700507886094" timestamp="5858740" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3526" _type="ShellCommand" date="Mon Nov 20 15:55:49 EST 2023" starttimestamp="1700507886094" timestamp="5863853" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3527" _type="ShellCommand" date="Mon Nov 20 15:55:50 EST 2023" starttimestamp="1700507886094" timestamp="5864887" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3528" _type="ShellCommand" date="Mon Nov 20 15:55:51 EST 2023" starttimestamp="1700507886094" timestamp="5865640" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3529" _type="ShellCommand" date="Mon Nov 20 15:55:52 EST 2023" starttimestamp="1700507886094" timestamp="5866023" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3530" _type="ShellCommand" date="Mon Nov 20 15:55:52 EST 2023" starttimestamp="1700507886094" timestamp="5866791" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3531" _type="ShellCommand" date="Mon Nov 20 15:55:54 EST 2023" starttimestamp="1700507886094" timestamp="5868901" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3532" _type="ShellCommand" date="Mon Nov 20 15:55:56 EST 2023" starttimestamp="1700507886094" timestamp="5870093" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3533" _type="ShellCommand" date="Mon Nov 20 15:55:58 EST 2023" starttimestamp="1700507886094" timestamp="5872329" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3534" _type="ShellCommand" date="Mon Nov 20 15:55:59 EST 2023" starttimestamp="1700507886094" timestamp="5873709" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3535" _type="ShellCommand" date="Mon Nov 20 15:56:00 EST 2023" starttimestamp="1700507886094" timestamp="5874850" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3536" _type="ShellCommand" date="Mon Nov 20 15:59:13 EST 2023" starttimestamp="1700507886094" timestamp="6067285" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3537" _type="ShellCommand" date="Mon Nov 20 15:59:15 EST 2023" starttimestamp="1700507886094" timestamp="6069633" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3538" _type="ShellCommand" date="Mon Nov 20 15:59:26 EST 2023" starttimestamp="1700507886094" timestamp="6080852" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3539" _type="ShellCommand" date="Mon Nov 20 15:59:37 EST 2023" starttimestamp="1700507886094" timestamp="6091874" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3540" _type="ShellCommand" date="Mon Nov 20 15:59:38 EST 2023" starttimestamp="1700507886094" timestamp="6092572" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3541" _type="ShellCommand" date="Mon Nov 20 15:59:39 EST 2023" starttimestamp="1700507886094" timestamp="6093889" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3542" _type="ShellCommand" date="Mon Nov 20 16:00:33 EST 2023" starttimestamp="1700507886094" timestamp="6147274" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3543" _type="MoveCaretCommand" caretOffset="1064" date="Mon Nov 20 16:00:35 EST 2023" docOffset="1064" starttimestamp="1700507886094" timestamp="6149620" />
  <Command __id="3544" _type="MoveCaretCommand" caretOffset="1064" date="Mon Nov 20 16:00:35 EST 2023" docOffset="1064" starttimestamp="1700507886094" timestamp="6149620" />
  <Command __id="3545" _type="ShellCommand" date="Mon Nov 20 16:00:37 EST 2023" starttimestamp="1700507886094" timestamp="6151343" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3546" _type="ShellCommand" date="Mon Nov 20 16:01:16 EST 2023" starttimestamp="1700507886094" timestamp="6190672" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3547" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:01:20 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6194098" />
  <Command __id="3548" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:01:20 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6194098" />
  <Command __id="3549" _type="ShellCommand" date="Mon Nov 20 16:01:21 EST 2023" starttimestamp="1700507886094" timestamp="6195246" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3550" _type="ShellCommand" date="Mon Nov 20 16:01:22 EST 2023" starttimestamp="1700507886094" timestamp="6196014" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3551" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:01:26 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6200487" />
  <Command __id="3552" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:01:26 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6200488" />
  <Command __id="3553" _type="MoveCaretCommand" caretOffset="1163" date="Mon Nov 20 16:01:27 EST 2023" docOffset="1163" starttimestamp="1700507886094" timestamp="6201666" />
  <Command __id="3554" _type="MoveCaretCommand" caretOffset="1163" date="Mon Nov 20 16:01:27 EST 2023" docOffset="1163" starttimestamp="1700507886094" timestamp="6201666" />
  <Command __id="3555" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:01:28 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6202381" />
  <Command __id="3556" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:01:28 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6202381" />
  <Command __id="3557" _type="MoveCaretCommand" caretOffset="1163" date="Mon Nov 20 16:01:29 EST 2023" docOffset="1163" starttimestamp="1700507886094" timestamp="6203150" />
  <Command __id="3558" _type="MoveCaretCommand" caretOffset="1163" date="Mon Nov 20 16:01:29 EST 2023" docOffset="1163" starttimestamp="1700507886094" timestamp="6203150" />
  <Command __id="3559" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:01:31 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6205242" />
  <Command __id="3560" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:01:31 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6205243" />
  <Command __id="3561" _type="ShellCommand" date="Mon Nov 20 16:01:31 EST 2023" starttimestamp="1700507886094" timestamp="6205708" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3562" _type="ShellCommand" date="Mon Nov 20 16:01:37 EST 2023" starttimestamp="1700507886094" timestamp="6211145" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3563" _type="ShellCommand" date="Mon Nov 20 16:01:38 EST 2023" starttimestamp="1700507886094" timestamp="6212237" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3564" _type="ShellCommand" date="Mon Nov 20 16:01:44 EST 2023" starttimestamp="1700507886094" timestamp="6218278" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3565" _type="MoveCaretCommand" caretOffset="1162" date="Mon Nov 20 16:02:01 EST 2023" docOffset="1162" starttimestamp="1700507886094" timestamp="6235009" />
  <Command __id="3566" _type="MoveCaretCommand" caretOffset="1162" date="Mon Nov 20 16:02:01 EST 2023" docOffset="1162" starttimestamp="1700507886094" timestamp="6235009" />
  <Command __id="3567" _type="MoveCaretCommand" caretOffset="1163" date="Mon Nov 20 16:02:01 EST 2023" docOffset="1163" starttimestamp="1700507886094" timestamp="6235582" />
  <Command __id="3568" _type="MoveCaretCommand" caretOffset="1163" date="Mon Nov 20 16:02:01 EST 2023" docOffset="1163" starttimestamp="1700507886094" timestamp="6235582" />
  <Command __id="3569" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:02:02 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6236244" />
  <Command __id="3570" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:02:02 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6236244" />
  <DocumentChange __id="3515" _type="Insert" date="Mon Nov 20 15:54:58 EST 2023" docASTNodeCount="185" docActiveCodeLength="1171" docExpressionCount="130" docLength="1171" length="3" offset="1161" repeat="2" starttimestamp="1700507886094" timestamp="5811921" timestamp2="5812235">
    <text><![CDATA[f()]]></text>
  </DocumentChange>
  <Command __id="3571" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:02:08 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6242742" />
  <Command __id="3572" _type="MoveCaretCommand" caretOffset="1164" date="Mon Nov 20 16:02:08 EST 2023" docOffset="1164" starttimestamp="1700507886094" timestamp="6242742" />
  <Command __id="3573" _type="MoveCaretCommand" caretOffset="1163" date="Mon Nov 20 16:02:09 EST 2023" docOffset="1163" starttimestamp="1700507886094" timestamp="6243555" />
  <Command __id="3574" _type="MoveCaretCommand" caretOffset="1163" date="Mon Nov 20 16:02:09 EST 2023" docOffset="1163" starttimestamp="1700507886094" timestamp="6243555" />
  <DocumentChange __id="3575" _type="Insert" date="Mon Nov 20 16:02:17 EST 2023" docASTNodeCount="188" docActiveCodeLength="1176" docExpressionCount="131" docLength="1176" length="5" offset="1163" repeat="5" starttimestamp="1700507886094" timestamp="6251440" timestamp2="6251809">
    <text><![CDATA[this.]]></text>
  </DocumentChange>
  <Command __id="3576" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251442" timestamp2="6251442">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3577" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251442" timestamp2="6251442">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3579" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251514" timestamp2="6251514">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3580" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251514" timestamp2="6251514">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3582" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251580" timestamp2="6251580">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3583" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251580" timestamp2="6251580">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3585" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251662" timestamp2="6251662">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3586" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251662" timestamp2="6251662">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3588" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251811" timestamp2="6251811">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3589" _type="InsertStringCommand" date="Mon Nov 20 16:02:17 EST 2023" starttimestamp="1700507886094" timestamp="6251811" timestamp2="6251811">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3590" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:02:17 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6251819" />
  <DocumentChange __id="3591" _type="Delete" date="Mon Nov 20 16:02:18 EST 2023" docASTNodeCount="188" docActiveCodeLength="1175" docExpressionCount="131" docLength="1175" endLine="44" length="1" offset="1167" startLine="44" starttimestamp="1700507886094" timestamp="6252346">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="3593" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:02:18 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6252745" />
  <Command __id="3595" _type="InsertStringCommand" date="Mon Nov 20 16:02:19 EST 2023" starttimestamp="1700507886094" timestamp="6253722" timestamp2="6253722">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3596" _type="InsertStringCommand" date="Mon Nov 20 16:02:19 EST 2023" starttimestamp="1700507886094" timestamp="6253722" timestamp2="6253722">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3598" _type="InsertStringCommand" date="Mon Nov 20 16:02:19 EST 2023" starttimestamp="1700507886094" timestamp="6253790" timestamp2="6253790">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3599" _type="InsertStringCommand" date="Mon Nov 20 16:02:19 EST 2023" starttimestamp="1700507886094" timestamp="6253790" timestamp2="6253790">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3601" _type="InsertStringCommand" date="Mon Nov 20 16:02:19 EST 2023" starttimestamp="1700507886094" timestamp="6253852" timestamp2="6253852">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3602" _type="InsertStringCommand" date="Mon Nov 20 16:02:19 EST 2023" starttimestamp="1700507886094" timestamp="6253852" timestamp2="6253852">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3604" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6253967" timestamp2="6253967">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3605" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6253967" timestamp2="6253967">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3607" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6254082" timestamp2="6254082">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3608" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6254082" timestamp2="6254082">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3610" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6254219" timestamp2="6254219">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3611" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6254219" timestamp2="6254219">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3613" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6254321" timestamp2="6254321">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3614" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6254321" timestamp2="6254321">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3616" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6254478" timestamp2="6254478">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3617" _type="InsertStringCommand" date="Mon Nov 20 16:02:20 EST 2023" starttimestamp="1700507886094" timestamp="6254478" timestamp2="6254478">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3619" _type="InsertStringCommand" date="Mon Nov 20 16:02:21 EST 2023" starttimestamp="1700507886094" timestamp="6254931" timestamp2="6254931">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3620" _type="InsertStringCommand" date="Mon Nov 20 16:02:21 EST 2023" starttimestamp="1700507886094" timestamp="6254932" timestamp2="6254932">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3622" _type="InsertStringCommand" date="Mon Nov 20 16:02:21 EST 2023" starttimestamp="1700507886094" timestamp="6255000" timestamp2="6255000">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3623" _type="InsertStringCommand" date="Mon Nov 20 16:02:21 EST 2023" starttimestamp="1700507886094" timestamp="6255000" timestamp2="6255000">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3625" _type="InsertStringCommand" date="Mon Nov 20 16:02:21 EST 2023" starttimestamp="1700507886094" timestamp="6255337" timestamp2="6255337">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3626" _type="InsertStringCommand" date="Mon Nov 20 16:02:21 EST 2023" starttimestamp="1700507886094" timestamp="6255337" timestamp2="6255337">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3628" _type="InsertStringCommand" date="Mon Nov 20 16:02:22 EST 2023" starttimestamp="1700507886094" timestamp="6256108" timestamp2="6256108">
    <data><![CDATA[A]]></data>
  </Command>
  <DocumentChange __id="3592" _type="Insert" date="Mon Nov 20 16:02:18 EST 2023" docASTNodeCount="191" docActiveCodeLength="1191" docExpressionCount="133" docLength="1191" length="16" offset="1167" repeat="16" starttimestamp="1700507886094" timestamp="6252733" timestamp2="6256561">
    <text><![CDATA[ instanceof Atom]]></text>
  </DocumentChange>
  <DocumentChange __id="3643" _type="Insert" date="Mon Nov 20 16:02:24 EST 2023" docASTNodeCount="191" docActiveCodeLength="1201" docExpressionCount="133" docLength="1201" length="10" offset="1184" repeat="2" starttimestamp="1700507886094" timestamp="6258585" timestamp2="6258718">
    <text><![CDATA[ {
			
		}]]></text>
  </DocumentChange>
  <Command __id="3629" _type="InsertStringCommand" date="Mon Nov 20 16:02:22 EST 2023" starttimestamp="1700507886094" timestamp="6256108" timestamp2="6256108">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3631" _type="InsertStringCommand" date="Mon Nov 20 16:02:22 EST 2023" starttimestamp="1700507886094" timestamp="6256395" timestamp2="6256395">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3632" _type="InsertStringCommand" date="Mon Nov 20 16:02:22 EST 2023" starttimestamp="1700507886094" timestamp="6256395" timestamp2="6256395">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3634" _type="InsertStringCommand" date="Mon Nov 20 16:02:22 EST 2023" starttimestamp="1700507886094" timestamp="6256486" timestamp2="6256486">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3635" _type="InsertStringCommand" date="Mon Nov 20 16:02:22 EST 2023" starttimestamp="1700507886094" timestamp="6256486" timestamp2="6256486">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3637" _type="InsertStringCommand" date="Mon Nov 20 16:02:22 EST 2023" starttimestamp="1700507886094" timestamp="6256562" timestamp2="6256562">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3638" _type="InsertStringCommand" date="Mon Nov 20 16:02:22 EST 2023" starttimestamp="1700507886094" timestamp="6256562" timestamp2="6256562">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3639" _type="MoveCaretCommand" caretOffset="1187" date="Mon Nov 20 16:02:23 EST 2023" docOffset="1187" starttimestamp="1700507886094" timestamp="6257288" />
  <Command __id="3640" _type="MoveCaretCommand" caretOffset="1187" date="Mon Nov 20 16:02:23 EST 2023" docOffset="1187" starttimestamp="1700507886094" timestamp="6257288" />
  <Command __id="3641" _type="MoveCaretCommand" caretOffset="1184" date="Mon Nov 20 16:02:23 EST 2023" docOffset="1184" starttimestamp="1700507886094" timestamp="6257864" />
  <Command __id="3642" _type="MoveCaretCommand" caretOffset="1184" date="Mon Nov 20 16:02:23 EST 2023" docOffset="1184" starttimestamp="1700507886094" timestamp="6257864" />
  <Command __id="3644" _type="InsertStringCommand" date="Mon Nov 20 16:02:24 EST 2023" starttimestamp="1700507886094" timestamp="6258586" timestamp2="6258586">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3645" _type="InsertStringCommand" date="Mon Nov 20 16:02:24 EST 2023" starttimestamp="1700507886094" timestamp="6258586" timestamp2="6258586">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3647" _type="InsertStringCommand" date="Mon Nov 20 16:02:24 EST 2023" starttimestamp="1700507886094" timestamp="6258720" timestamp2="6258720">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3648" _type="InsertStringCommand" date="Mon Nov 20 16:02:24 EST 2023" starttimestamp="1700507886094" timestamp="6258720" timestamp2="6258720">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3650" _type="InsertStringCommand" date="Mon Nov 20 16:02:26 EST 2023" starttimestamp="1700507886094" timestamp="6260831" timestamp2="6260831">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3651" _type="InsertStringCommand" date="Mon Nov 20 16:02:26 EST 2023" starttimestamp="1700507886094" timestamp="6260831" timestamp2="6260831">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3653" _type="InsertStringCommand" date="Mon Nov 20 16:02:26 EST 2023" starttimestamp="1700507886094" timestamp="6260884" timestamp2="6260884">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3654" _type="InsertStringCommand" date="Mon Nov 20 16:02:26 EST 2023" starttimestamp="1700507886094" timestamp="6260884" timestamp2="6260884">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3656" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6260995" timestamp2="6260995">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3657" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6260995" timestamp2="6260995">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3659" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6261135" timestamp2="6261135">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3660" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6261136" timestamp2="6261136">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3662" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6261196" timestamp2="6261196">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3663" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6261196" timestamp2="6261196">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3665" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6261300" timestamp2="6261300">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3666" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6261300" timestamp2="6261300">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3668" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6261414" timestamp2="6261414">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3669" _type="InsertStringCommand" date="Mon Nov 20 16:02:27 EST 2023" starttimestamp="1700507886094" timestamp="6261414" timestamp2="6261414">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3671" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262517" timestamp2="6262517">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3672" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262517" timestamp2="6262517">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3674" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262601" timestamp2="6262601">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3675" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262601" timestamp2="6262601">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3677" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262652" timestamp2="6262652">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3678" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262652" timestamp2="6262652">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3680" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262785" timestamp2="6262785">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3681" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262785" timestamp2="6262785">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3683" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262877" timestamp2="6262877">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3684" _type="InsertStringCommand" date="Mon Nov 20 16:02:28 EST 2023" starttimestamp="1700507886094" timestamp="6262878" timestamp2="6262878">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3685" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:02:28 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6262885" />
  <Command __id="3694" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:02:32 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6266249" />
  <Command __id="3696" _type="InsertStringCommand" date="Mon Nov 20 16:02:32 EST 2023" starttimestamp="1700507886094" timestamp="6266258" timestamp2="6266258">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3697" _type="InsertStringCommand" date="Mon Nov 20 16:02:32 EST 2023" starttimestamp="1700507886094" timestamp="6266258" timestamp2="6266258">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3698" _type="MoveCaretCommand" caretOffset="1222" date="Mon Nov 20 16:02:34 EST 2023" docOffset="1222" starttimestamp="1700507886094" timestamp="6268214" />
  <Command __id="3699" _type="MoveCaretCommand" caretOffset="1222" date="Mon Nov 20 16:02:34 EST 2023" docOffset="1222" starttimestamp="1700507886094" timestamp="6268215" />
  <Command __id="3701" _type="InsertStringCommand" date="Mon Nov 20 16:02:34 EST 2023" starttimestamp="1700507886094" timestamp="6268611" timestamp2="6268611">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3702" _type="InsertStringCommand" date="Mon Nov 20 16:02:34 EST 2023" starttimestamp="1700507886094" timestamp="6268611" timestamp2="6268611">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3704" _type="InsertStringCommand" date="Mon Nov 20 16:02:34 EST 2023" starttimestamp="1700507886094" timestamp="6268888" timestamp2="6268888">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3705" _type="InsertStringCommand" date="Mon Nov 20 16:02:34 EST 2023" starttimestamp="1700507886094" timestamp="6268888" timestamp2="6268888">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3707" _type="InsertStringCommand" date="Mon Nov 20 16:02:35 EST 2023" starttimestamp="1700507886094" timestamp="6269267" timestamp2="6269267">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3708" _type="InsertStringCommand" date="Mon Nov 20 16:02:35 EST 2023" starttimestamp="1700507886094" timestamp="6269267" timestamp2="6269267">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3710" _type="InsertStringCommand" date="Mon Nov 20 16:02:35 EST 2023" starttimestamp="1700507886094" timestamp="6269382" timestamp2="6269382">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3711" _type="InsertStringCommand" date="Mon Nov 20 16:02:35 EST 2023" starttimestamp="1700507886094" timestamp="6269382" timestamp2="6269382">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3713" _type="InsertStringCommand" date="Mon Nov 20 16:02:35 EST 2023" starttimestamp="1700507886094" timestamp="6269437" timestamp2="6269437">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3714" _type="InsertStringCommand" date="Mon Nov 20 16:02:35 EST 2023" starttimestamp="1700507886094" timestamp="6269437" timestamp2="6269437">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3716" _type="InsertStringCommand" date="Mon Nov 20 16:02:35 EST 2023" starttimestamp="1700507886094" timestamp="6269524" timestamp2="6269524">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3717" _type="InsertStringCommand" date="Mon Nov 20 16:02:35 EST 2023" starttimestamp="1700507886094" timestamp="6269524" timestamp2="6269524">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3718" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:02:36 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="6269922" />
  <Command __id="3719" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:02:36 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="6269922" />
  <Command __id="3720" _type="MoveCaretCommand" caretOffset="1230" date="Mon Nov 20 16:02:36 EST 2023" docOffset="1230" starttimestamp="1700507886094" timestamp="6270397" />
  <Command __id="3721" _type="MoveCaretCommand" caretOffset="1230" date="Mon Nov 20 16:02:36 EST 2023" docOffset="1230" starttimestamp="1700507886094" timestamp="6270397" />
  <Command __id="3723" _type="InsertStringCommand" date="Mon Nov 20 16:02:36 EST 2023" starttimestamp="1700507886094" timestamp="6270517" timestamp2="6270517">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3724" _type="InsertStringCommand" date="Mon Nov 20 16:02:36 EST 2023" starttimestamp="1700507886094" timestamp="6270517" timestamp2="6270517">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3725" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:02:37 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="6270997" />
  <Command __id="3726" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:02:37 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="6270997" />
  <Command __id="3728" _type="InsertStringCommand" date="Mon Nov 20 16:02:37 EST 2023" starttimestamp="1700507886094" timestamp="6271613" timestamp2="6271613">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3729" _type="InsertStringCommand" date="Mon Nov 20 16:02:37 EST 2023" starttimestamp="1700507886094" timestamp="6271613" timestamp2="6271613">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="3649" _type="Insert" date="Mon Nov 20 16:02:26 EST 2023" docASTNodeCount="195" docActiveCodeLength="1221" docExpressionCount="136" docLength="1221" length="20" offset="1190" repeat="20" starttimestamp="1700507886094" timestamp="6260829" timestamp2="6265350">
    <text><![CDATA[return this.toString]]></text>
  </DocumentChange>
  <DocumentChange __id="3695" _type="Replace" date="Mon Nov 20 16:02:32 EST 2023" docASTNodeCount="195" docActiveCodeLength="1235" docExpressionCount="136" docLength="1235" endLine="45" insertionLength="22" int_docASTNodeCount="193" int_docActiveCodeLength="1213" int_docExpressionCount="134" int_docLength="1213" length="8" offset="1202" startLine="45" starttimestamp="1700507886094" timestamp="6266252">
    <deletedText><![CDATA[toString]]></deletedText>
    <insertedText><![CDATA[toStringAsListHelper()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3700" _type="Insert" date="Mon Nov 20 16:02:34 EST 2023" docASTNodeCount="195" docActiveCodeLength="1241" docExpressionCount="136" docLength="1241" length="6" offset="1222" repeat="6" starttimestamp="1700507886094" timestamp="6268607" timestamp2="6269522">
    <text><![CDATA[Public]]></text>
  </DocumentChange>
  <DocumentChange __id="3722" _type="Insert" date="Mon Nov 20 16:02:36 EST 2023" docASTNodeCount="195" docActiveCodeLength="1242" docExpressionCount="136" docLength="1242" length="1" offset="1230" starttimestamp="1700507886094" timestamp="6270514">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="3727" _type="Insert" date="Mon Nov 20 16:02:37 EST 2023" docASTNodeCount="196" docActiveCodeLength="1256" docExpressionCount="136" docLength="1256" length="14" offset="1235" repeat="6" starttimestamp="1700507886094" timestamp="6271609" timestamp2="6272363">
    <text><![CDATA[else {
			
		}]]></text>
  </DocumentChange>
  <Command __id="3731" _type="InsertStringCommand" date="Mon Nov 20 16:02:37 EST 2023" starttimestamp="1700507886094" timestamp="6271674" timestamp2="6271674">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3732" _type="InsertStringCommand" date="Mon Nov 20 16:02:37 EST 2023" starttimestamp="1700507886094" timestamp="6271675" timestamp2="6271675">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3734" _type="InsertStringCommand" date="Mon Nov 20 16:02:37 EST 2023" starttimestamp="1700507886094" timestamp="6271762" timestamp2="6271762">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3735" _type="InsertStringCommand" date="Mon Nov 20 16:02:37 EST 2023" starttimestamp="1700507886094" timestamp="6271762" timestamp2="6271762">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3737" _type="InsertStringCommand" date="Mon Nov 20 16:02:37 EST 2023" starttimestamp="1700507886094" timestamp="6271843" timestamp2="6271843">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3738" _type="InsertStringCommand" date="Mon Nov 20 16:02:37 EST 2023" starttimestamp="1700507886094" timestamp="6271843" timestamp2="6271843">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3740" _type="InsertStringCommand" date="Mon Nov 20 16:02:38 EST 2023" starttimestamp="1700507886094" timestamp="6272122" timestamp2="6272122">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3741" _type="InsertStringCommand" date="Mon Nov 20 16:02:38 EST 2023" starttimestamp="1700507886094" timestamp="6272122" timestamp2="6272122">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3743" _type="InsertStringCommand" date="Mon Nov 20 16:02:38 EST 2023" starttimestamp="1700507886094" timestamp="6272365" timestamp2="6272365">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3744" _type="InsertStringCommand" date="Mon Nov 20 16:02:38 EST 2023" starttimestamp="1700507886094" timestamp="6272365" timestamp2="6272365">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3746" _type="InsertStringCommand" date="Mon Nov 20 16:02:47 EST 2023" starttimestamp="1700507886094" timestamp="6281470" timestamp2="6281470">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3747" _type="InsertStringCommand" date="Mon Nov 20 16:02:47 EST 2023" starttimestamp="1700507886094" timestamp="6281470" timestamp2="6281470">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3749" _type="InsertStringCommand" date="Mon Nov 20 16:02:47 EST 2023" starttimestamp="1700507886094" timestamp="6281546" timestamp2="6281546">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3750" _type="InsertStringCommand" date="Mon Nov 20 16:02:47 EST 2023" starttimestamp="1700507886094" timestamp="6281546" timestamp2="6281546">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3752" _type="InsertStringCommand" date="Mon Nov 20 16:02:47 EST 2023" starttimestamp="1700507886094" timestamp="6281708" timestamp2="6281708">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3753" _type="InsertStringCommand" date="Mon Nov 20 16:02:47 EST 2023" starttimestamp="1700507886094" timestamp="6281708" timestamp2="6281708">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3755" _type="InsertStringCommand" date="Mon Nov 20 16:02:47 EST 2023" starttimestamp="1700507886094" timestamp="6281839" timestamp2="6281839">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3756" _type="InsertStringCommand" date="Mon Nov 20 16:02:47 EST 2023" starttimestamp="1700507886094" timestamp="6281839" timestamp2="6281839">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3758" _type="InsertStringCommand" date="Mon Nov 20 16:02:48 EST 2023" starttimestamp="1700507886094" timestamp="6281908" timestamp2="6281908">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3759" _type="InsertStringCommand" date="Mon Nov 20 16:02:48 EST 2023" starttimestamp="1700507886094" timestamp="6281908" timestamp2="6281908">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3761" _type="InsertStringCommand" date="Mon Nov 20 16:02:48 EST 2023" starttimestamp="1700507886094" timestamp="6282025" timestamp2="6282025">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3762" _type="InsertStringCommand" date="Mon Nov 20 16:02:48 EST 2023" starttimestamp="1700507886094" timestamp="6282026" timestamp2="6282026">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3764" _type="InsertStringCommand" date="Mon Nov 20 16:02:48 EST 2023" starttimestamp="1700507886094" timestamp="6282153" timestamp2="6282153">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3765" _type="InsertStringCommand" date="Mon Nov 20 16:02:48 EST 2023" starttimestamp="1700507886094" timestamp="6282153" timestamp2="6282153">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3767" _type="InsertStringCommand" date="Mon Nov 20 16:02:49 EST 2023" starttimestamp="1700507886094" timestamp="6283356" timestamp2="6283356">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3768" _type="InsertStringCommand" date="Mon Nov 20 16:02:49 EST 2023" starttimestamp="1700507886094" timestamp="6283356" timestamp2="6283356">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3770" _type="InsertStringCommand" date="Mon Nov 20 16:02:49 EST 2023" starttimestamp="1700507886094" timestamp="6283818" timestamp2="6283818">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3771" _type="InsertStringCommand" date="Mon Nov 20 16:02:49 EST 2023" starttimestamp="1700507886094" timestamp="6283818" timestamp2="6283818">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3773" _type="InsertStringCommand" date="Mon Nov 20 16:02:49 EST 2023" starttimestamp="1700507886094" timestamp="6283855" timestamp2="6283855">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3774" _type="InsertStringCommand" date="Mon Nov 20 16:02:49 EST 2023" starttimestamp="1700507886094" timestamp="6283855" timestamp2="6283855">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3776" _type="InsertStringCommand" date="Mon Nov 20 16:02:50 EST 2023" starttimestamp="1700507886094" timestamp="6283994" timestamp2="6283994">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3777" _type="InsertStringCommand" date="Mon Nov 20 16:02:50 EST 2023" starttimestamp="1700507886094" timestamp="6283994" timestamp2="6283994">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3779" _type="InsertStringCommand" date="Mon Nov 20 16:02:50 EST 2023" starttimestamp="1700507886094" timestamp="6284112" timestamp2="6284112">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3780" _type="InsertStringCommand" date="Mon Nov 20 16:02:50 EST 2023" starttimestamp="1700507886094" timestamp="6284112" timestamp2="6284112">
    <data><![CDATA[.]]></data>
  </Command>
  <DocumentChange __id="3745" _type="Insert" date="Mon Nov 20 16:02:47 EST 2023" docASTNodeCount="200" docActiveCodeLength="1272" docExpressionCount="139" docLength="1272" length="16" offset="1245" repeat="16" starttimestamp="1700507886094" timestamp="6281467" timestamp2="6286476">
    <text><![CDATA[return this.haed]]></text>
  </DocumentChange>
  <DocumentChange __id="3789" _type="Delete" date="Mon Nov 20 16:02:53 EST 2023" docASTNodeCount="200" docActiveCodeLength="1269" docExpressionCount="139" docLength="1269" endLine="47" length="3" offset="1258" repeat="3" startLine="47" starttimestamp="1700507886094" timestamp="6287468" timestamp2="6287966">
    <text><![CDATA[aed]]></text>
  </DocumentChange>
  <DocumentChange __id="3798" _type="Insert" date="Mon Nov 20 16:02:54 EST 2023" docASTNodeCount="200" docActiveCodeLength="1273" docExpressionCount="139" docLength="1273" length="4" offset="1258" repeat="4" starttimestamp="1700507886094" timestamp="6288063" timestamp2="6288429">
    <text><![CDATA[ead.]]></text>
  </DocumentChange>
  <Command __id="3781" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:02:50 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6284120" />
  <Command __id="3785" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:02:52 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6286266" />
  <Command __id="3787" _type="InsertStringCommand" date="Mon Nov 20 16:02:52 EST 2023" starttimestamp="1700507886094" timestamp="6286479" timestamp2="6286479">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3788" _type="InsertStringCommand" date="Mon Nov 20 16:02:52 EST 2023" starttimestamp="1700507886094" timestamp="6286479" timestamp2="6286479">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3790" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:02:53 EST 2023" starttimestamp="1700507886094" timestamp="6287473" />
  <Command __id="3791" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:02:53 EST 2023" starttimestamp="1700507886094" timestamp="6287473" />
  <Command __id="3793" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:02:53 EST 2023" starttimestamp="1700507886094" timestamp="6287582" />
  <Command __id="3794" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:02:53 EST 2023" starttimestamp="1700507886094" timestamp="6287582" />
  <Command __id="3796" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6287971" />
  <Command __id="3797" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6287971" />
  <Command __id="3799" _type="InsertStringCommand" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6288065" timestamp2="6288065">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3800" _type="InsertStringCommand" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6288066" timestamp2="6288066">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3802" _type="InsertStringCommand" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6288151" timestamp2="6288151">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3803" _type="InsertStringCommand" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6288151" timestamp2="6288151">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3805" _type="InsertStringCommand" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6288251" timestamp2="6288251">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3806" _type="InsertStringCommand" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6288251" timestamp2="6288251">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3808" _type="InsertStringCommand" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6288432" timestamp2="6288432">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3809" _type="InsertStringCommand" date="Mon Nov 20 16:02:54 EST 2023" starttimestamp="1700507886094" timestamp="6288432" timestamp2="6288432">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3810" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:02:54 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6288440" />
  <Command __id="3814" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:02:58 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6292465" />
  <Command __id="3816" _type="InsertStringCommand" date="Mon Nov 20 16:02:58 EST 2023" starttimestamp="1700507886094" timestamp="6292474" timestamp2="6292474">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3817" _type="InsertStringCommand" date="Mon Nov 20 16:02:58 EST 2023" starttimestamp="1700507886094" timestamp="6292474" timestamp2="6292474">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3818" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:02:58 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6292484" />
  <Command __id="3831" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:03:01 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6295859" />
  <DocumentChange __id="3811" _type="Delete" date="Mon Nov 20 16:02:57 EST 2023" docASTNodeCount="200" docActiveCodeLength="1271" docExpressionCount="139" docLength="1271" endLine="47" length="2" offset="1260" repeat="2" startLine="47" starttimestamp="1700507886094" timestamp="6290975" timestamp2="6291086">
    <text><![CDATA[d.]]></text>
  </DocumentChange>
  <DocumentChange __id="3813" _type="Insert" date="Mon Nov 20 16:02:57 EST 2023" docASTNodeCount="200" docActiveCodeLength="1272" docExpressionCount="139" docLength="1272" length="1" offset="1260" starttimestamp="1700507886094" timestamp="6291717">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <DocumentChange __id="3815" _type="Replace" date="Mon Nov 20 16:02:58 EST 2023" docASTNodeCount="200" docActiveCodeLength="1278" docExpressionCount="139" docLength="1278" endLine="47" insertionLength="10" int_docASTNodeCount="198" int_docActiveCodeLength="1268" int_docExpressionCount="137" int_docLength="1268" length="4" offset="1257" startLine="47" starttimestamp="1700507886094" timestamp="6292468">
    <deletedText><![CDATA[head]]></deletedText>
    <insertedText><![CDATA[getHead().]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3819" _type="Delete" date="Mon Nov 20 16:02:59 EST 2023" docASTNodeCount="200" docActiveCodeLength="1270" docExpressionCount="139" docLength="1270" endLine="47" length="8" offset="1259" repeat="8" startLine="47" starttimestamp="1700507886094" timestamp="6293296" timestamp2="6294736">
    <text><![CDATA[tHead().]]></text>
  </DocumentChange>
  <DocumentChange __id="3827" _type="Insert" date="Mon Nov 20 16:03:01 EST 2023" docASTNodeCount="200" docActiveCodeLength="1274" docExpressionCount="139" docLength="1274" length="4" offset="1259" repeat="4" starttimestamp="1700507886094" timestamp="6295250" timestamp2="6295844">
    <text><![CDATA[tHed]]></text>
  </DocumentChange>
  <DocumentChange __id="3832" _type="Delete" date="Mon Nov 20 16:03:02 EST 2023" docASTNodeCount="200" docActiveCodeLength="1273" docExpressionCount="139" docLength="1273" endLine="47" length="1" offset="1262" startLine="47" starttimestamp="1700507886094" timestamp="6296349">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <DocumentChange __id="3835" _type="Insert" date="Mon Nov 20 16:03:02 EST 2023" docASTNodeCount="200" docActiveCodeLength="1278" docExpressionCount="139" docLength="1278" length="5" offset="1262" repeat="4" starttimestamp="1700507886094" timestamp="6296398" timestamp2="6296942">
    <text><![CDATA[ad(.)]]></text>
  </DocumentChange>
  <DocumentChange __id="3848" _type="Delete" date="Mon Nov 20 16:03:04 EST 2023" docASTNodeCount="200" docActiveCodeLength="1277" docExpressionCount="139" docLength="1277" endLine="47" length="1" offset="1265" startLine="47" starttimestamp="1700507886094" timestamp="6298102">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="3833" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:02 EST 2023" starttimestamp="1700507886094" timestamp="6296352" />
  <Command __id="3834" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:02 EST 2023" starttimestamp="1700507886094" timestamp="6296354" />
  <Command __id="3836" _type="InsertStringCommand" date="Mon Nov 20 16:03:02 EST 2023" starttimestamp="1700507886094" timestamp="6296401" timestamp2="6296401">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3837" _type="InsertStringCommand" date="Mon Nov 20 16:03:02 EST 2023" starttimestamp="1700507886094" timestamp="6296401" timestamp2="6296401">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3839" _type="InsertStringCommand" date="Mon Nov 20 16:03:02 EST 2023" starttimestamp="1700507886094" timestamp="6296473" timestamp2="6296473">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3840" _type="InsertStringCommand" date="Mon Nov 20 16:03:02 EST 2023" starttimestamp="1700507886094" timestamp="6296473" timestamp2="6296473">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3842" _type="InsertStringCommand" date="Mon Nov 20 16:03:02 EST 2023" starttimestamp="1700507886094" timestamp="6296727" timestamp2="6296727">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3843" _type="InsertStringCommand" date="Mon Nov 20 16:03:02 EST 2023" starttimestamp="1700507886094" timestamp="6296727" timestamp2="6296727">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3845" _type="InsertStringCommand" date="Mon Nov 20 16:03:03 EST 2023" starttimestamp="1700507886094" timestamp="6296943" timestamp2="6296943">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3846" _type="InsertStringCommand" date="Mon Nov 20 16:03:03 EST 2023" starttimestamp="1700507886094" timestamp="6296943" timestamp2="6296943">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3847" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:03:03 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6296951" />
  <Command __id="3849" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:03:04 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6298619" />
  <Command __id="3850" _type="InsertStringCommand" date="Mon Nov 20 16:03:04 EST 2023" starttimestamp="1700507886094" timestamp="6298622" timestamp2="6298622">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3851" _type="InsertStringCommand" date="Mon Nov 20 16:03:04 EST 2023" starttimestamp="1700507886094" timestamp="6298622" timestamp2="6298622">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3852" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:03:04 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6298633" />
  <Command __id="3863" _type="ShellCommand" date="Mon Nov 20 16:03:08 EST 2023" starttimestamp="1700507886094" timestamp="6302360" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3864" _type="ShellCommand" date="Mon Nov 20 16:03:08 EST 2023" starttimestamp="1700507886094" timestamp="6302811" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3865" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:03:08 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6302818" />
  <Command __id="3868" _type="InsertStringCommand" date="Mon Nov 20 16:03:09 EST 2023" starttimestamp="1700507886094" timestamp="6303533" timestamp2="6303533">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3869" _type="InsertStringCommand" date="Mon Nov 20 16:03:09 EST 2023" starttimestamp="1700507886094" timestamp="6303533" timestamp2="6303533">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3871" _type="InsertStringCommand" date="Mon Nov 20 16:03:09 EST 2023" starttimestamp="1700507886094" timestamp="6303646" timestamp2="6303646">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="3872" _type="InsertStringCommand" date="Mon Nov 20 16:03:09 EST 2023" starttimestamp="1700507886094" timestamp="6303646" timestamp2="6303646">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="3874" _type="InsertStringCommand" date="Mon Nov 20 16:03:09 EST 2023" starttimestamp="1700507886094" timestamp="6303725" timestamp2="6303725">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3875" _type="InsertStringCommand" date="Mon Nov 20 16:03:09 EST 2023" starttimestamp="1700507886094" timestamp="6303725" timestamp2="6303725">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3877" _type="InsertStringCommand" date="Mon Nov 20 16:03:10 EST 2023" starttimestamp="1700507886094" timestamp="6304708" timestamp2="6304708">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3878" _type="InsertStringCommand" date="Mon Nov 20 16:03:10 EST 2023" starttimestamp="1700507886094" timestamp="6304709" timestamp2="6304709">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3880" _type="InsertStringCommand" date="Mon Nov 20 16:03:10 EST 2023" starttimestamp="1700507886094" timestamp="6304882" timestamp2="6304882">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3881" _type="InsertStringCommand" date="Mon Nov 20 16:03:10 EST 2023" starttimestamp="1700507886094" timestamp="6304882" timestamp2="6304882">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3883" _type="InsertStringCommand" date="Mon Nov 20 16:03:11 EST 2023" starttimestamp="1700507886094" timestamp="6304942" timestamp2="6304942">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3884" _type="InsertStringCommand" date="Mon Nov 20 16:03:11 EST 2023" starttimestamp="1700507886094" timestamp="6304942" timestamp2="6304942">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3886" _type="InsertStringCommand" date="Mon Nov 20 16:03:11 EST 2023" starttimestamp="1700507886094" timestamp="6305031" timestamp2="6305031">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3887" _type="InsertStringCommand" date="Mon Nov 20 16:03:11 EST 2023" starttimestamp="1700507886094" timestamp="6305031" timestamp2="6305031">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3889" _type="InsertStringCommand" date="Mon Nov 20 16:03:11 EST 2023" starttimestamp="1700507886094" timestamp="6305142" timestamp2="6305142">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3890" _type="InsertStringCommand" date="Mon Nov 20 16:03:11 EST 2023" starttimestamp="1700507886094" timestamp="6305142" timestamp2="6305142">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3891" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:03:11 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6305147" />
  <Command __id="3899" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:03:13 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6307099" />
  <Command __id="3901" _type="InsertStringCommand" date="Mon Nov 20 16:03:13 EST 2023" starttimestamp="1700507886094" timestamp="6307108" timestamp2="6307108">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3902" _type="InsertStringCommand" date="Mon Nov 20 16:03:13 EST 2023" starttimestamp="1700507886094" timestamp="6307108" timestamp2="6307108">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3903" _type="SelectTextCommand" caretOffset="1297" date="Mon Nov 20 16:03:22 EST 2023" end="1311" start="1297" starttimestamp="1700507886094" timestamp="6316045" />
  <Command __id="3904" _type="SelectTextCommand" caretOffset="1297" date="Mon Nov 20 16:03:22 EST 2023" end="1311" start="1297" starttimestamp="1700507886094" timestamp="6316046" />
  <Command __id="3905" _type="ShellCommand" date="Mon Nov 20 16:03:23 EST 2023" starttimestamp="1700507886094" timestamp="6317759" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3906" _type="ShellCommand" date="Mon Nov 20 16:03:24 EST 2023" starttimestamp="1700507886094" timestamp="6318203" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3908" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:24 EST 2023" starttimestamp="1700507886094" timestamp="6318843" />
  <Command __id="3909" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:24 EST 2023" starttimestamp="1700507886094" timestamp="6318843" />
  <Command __id="3911" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:25 EST 2023" starttimestamp="1700507886094" timestamp="6318930" />
  <Command __id="3912" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:25 EST 2023" starttimestamp="1700507886094" timestamp="6318930" />
  <Command __id="3914" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:25 EST 2023" starttimestamp="1700507886094" timestamp="6319063" />
  <Command __id="3915" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:25 EST 2023" starttimestamp="1700507886094" timestamp="6319063" />
  <Command __id="3917" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:25 EST 2023" starttimestamp="1700507886094" timestamp="6319189" />
  <Command __id="3918" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:03:25 EST 2023" starttimestamp="1700507886094" timestamp="6319189" />
  <Command __id="3920" _type="InsertStringCommand" date="Mon Nov 20 16:03:25 EST 2023" starttimestamp="1700507886094" timestamp="6319837" timestamp2="6319837">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3921" _type="InsertStringCommand" date="Mon Nov 20 16:03:25 EST 2023" starttimestamp="1700507886094" timestamp="6319837" timestamp2="6319837">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3922" _type="MoveCaretCommand" caretOffset="1299" date="Mon Nov 20 16:03:26 EST 2023" docOffset="1299" starttimestamp="1700507886094" timestamp="6320388" />
  <Command __id="3923" _type="MoveCaretCommand" caretOffset="1299" date="Mon Nov 20 16:03:26 EST 2023" docOffset="1299" starttimestamp="1700507886094" timestamp="6320389" />
  <Command __id="3924" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:27 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6320982" />
  <Command __id="3925" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:27 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6320983" />
  <Command __id="3926" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:27 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6321526" />
  <Command __id="3927" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:27 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6321526" />
  <Command __id="3928" _type="MoveCaretCommand" caretOffset="1295" date="Mon Nov 20 16:03:28 EST 2023" docOffset="1295" starttimestamp="1700507886094" timestamp="6321976" />
  <Command __id="3929" _type="MoveCaretCommand" caretOffset="1295" date="Mon Nov 20 16:03:28 EST 2023" docOffset="1295" starttimestamp="1700507886094" timestamp="6321976" />
  <Command __id="3930" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:28 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6322458" />
  <Command __id="3931" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:28 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6322458" />
  <Command __id="3932" _type="MoveCaretCommand" caretOffset="1302" date="Mon Nov 20 16:03:28 EST 2023" docOffset="1302" starttimestamp="1700507886094" timestamp="6322899" />
  <Command __id="3933" _type="MoveCaretCommand" caretOffset="1302" date="Mon Nov 20 16:03:28 EST 2023" docOffset="1302" starttimestamp="1700507886094" timestamp="6322899" />
  <Command __id="3934" _type="MoveCaretCommand" caretOffset="1283" date="Mon Nov 20 16:03:29 EST 2023" docOffset="1283" starttimestamp="1700507886094" timestamp="6323309" />
  <Command __id="3935" _type="MoveCaretCommand" caretOffset="1283" date="Mon Nov 20 16:03:29 EST 2023" docOffset="1283" starttimestamp="1700507886094" timestamp="6323310" />
  <Command __id="3936" _type="MoveCaretCommand" caretOffset="1302" date="Mon Nov 20 16:03:29 EST 2023" docOffset="1302" starttimestamp="1700507886094" timestamp="6323833" />
  <Command __id="3937" _type="MoveCaretCommand" caretOffset="1302" date="Mon Nov 20 16:03:29 EST 2023" docOffset="1302" starttimestamp="1700507886094" timestamp="6323833" />
  <Command __id="3938" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:30 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6324273" />
  <Command __id="3939" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:30 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6324273" />
  <Command __id="3940" _type="MoveCaretCommand" caretOffset="1299" date="Mon Nov 20 16:03:30 EST 2023" docOffset="1299" starttimestamp="1700507886094" timestamp="6324745" />
  <Command __id="3941" _type="MoveCaretCommand" caretOffset="1299" date="Mon Nov 20 16:03:30 EST 2023" docOffset="1299" starttimestamp="1700507886094" timestamp="6324745" />
  <Command __id="3942" _type="MoveCaretCommand" caretOffset="1266" date="Mon Nov 20 16:03:31 EST 2023" docOffset="1266" starttimestamp="1700507886094" timestamp="6325593" />
  <Command __id="3943" _type="MoveCaretCommand" caretOffset="1266" date="Mon Nov 20 16:03:31 EST 2023" docOffset="1266" starttimestamp="1700507886094" timestamp="6325593" />
  <Command __id="3945" _type="InsertStringCommand" date="Mon Nov 20 16:03:31 EST 2023" starttimestamp="1700507886094" timestamp="6325848" timestamp2="6325848">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3946" _type="InsertStringCommand" date="Mon Nov 20 16:03:31 EST 2023" starttimestamp="1700507886094" timestamp="6325848" timestamp2="6325848">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3947" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:03:31 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6325856" />
  <Command __id="3948" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:03:32 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6326622" />
  <Command __id="3949" _type="MoveCaretCommand" caretOffset="1182" date="Mon Nov 20 16:03:32 EST 2023" docOffset="1182" starttimestamp="1700507886094" timestamp="6326690" />
  <Command __id="3950" _type="MoveCaretCommand" caretOffset="1182" date="Mon Nov 20 16:03:32 EST 2023" docOffset="1182" starttimestamp="1700507886094" timestamp="6326690" />
  <Command __id="3951" _type="ShellCommand" date="Mon Nov 20 16:03:36 EST 2023" starttimestamp="1700507886094" timestamp="6330749" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3952" _type="ShellCommand" date="Mon Nov 20 16:03:37 EST 2023" starttimestamp="1700507886094" timestamp="6330927" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3954" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:39 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6332943" />
  <Command __id="3955" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:39 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6332943" />
  <Command __id="3956" _type="MoveCaretCommand" caretOffset="1278" date="Mon Nov 20 16:03:39 EST 2023" docOffset="1278" starttimestamp="1700507886094" timestamp="6333519" />
  <Command __id="3957" _type="MoveCaretCommand" caretOffset="1278" date="Mon Nov 20 16:03:39 EST 2023" docOffset="1278" starttimestamp="1700507886094" timestamp="6333519" />
  <Command __id="3958" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:40 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6333977" />
  <Command __id="3959" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:03:40 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6333977" />
  <DocumentChange __id="3853" _type="Insert" date="Mon Nov 20 16:03:06 EST 2023" docASTNodeCount="200" docActiveCodeLength="1278" docExpressionCount="139" docLength="1278" length="1" offset="1266" starttimestamp="1700507886094" timestamp="6300206">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="3854" _type="Delete" date="Mon Nov 20 16:03:06 EST 2023" docASTNodeCount="200" docActiveCodeLength="1277" docExpressionCount="139" docLength="1277" endLine="47" length="1" offset="1266" startLine="47" starttimestamp="1700507886094" timestamp="6300577">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="3855" _type="Insert" date="Mon Nov 20 16:03:06 EST 2023" docASTNodeCount="200" docActiveCodeLength="1285" docExpressionCount="139" docLength="1285" length="8" offset="1266" repeat="8" starttimestamp="1700507886094" timestamp="6300673" timestamp2="6301569">
    <text><![CDATA[toString]]></text>
  </DocumentChange>
  <DocumentChange __id="3866" _type="Replace" date="Mon Nov 20 16:03:08 EST 2023" docASTNodeCount="203" docActiveCodeLength="1305" docExpressionCount="141" docLength="1305" endLine="47" insertionLength="28" int_docASTNodeCount="200" int_docActiveCodeLength="1277" int_docExpressionCount="139" int_docLength="1277" length="8" offset="1266" startLine="47" starttimestamp="1700507886094" timestamp="6302820">
    <deletedText><![CDATA[toString]]></deletedText>
    <insertedText><![CDATA[toStringAsListHelperPublic()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3867" _type="Insert" date="Mon Nov 20 16:03:09 EST 2023" docASTNodeCount="207" docActiveCodeLength="1320" docExpressionCount="146" docLength="1320" length="15" offset="1294" repeat="15" starttimestamp="1700507886094" timestamp="6303530" timestamp2="6306711">
    <text><![CDATA[ + this.getTail]]></text>
  </DocumentChange>
  <DocumentChange __id="3900" _type="Replace" date="Mon Nov 20 16:03:13 EST 2023" docASTNodeCount="207" docActiveCodeLength="1322" docExpressionCount="146" docLength="1322" endLine="47" insertionLength="9" int_docASTNodeCount="205" int_docActiveCodeLength="1313" int_docExpressionCount="144" int_docLength="1313" length="7" offset="1302" startLine="47" starttimestamp="1700507886094" timestamp="6307103">
    <deletedText><![CDATA[getTail]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3907" _type="Delete" date="Mon Nov 20 16:03:24 EST 2023" docASTNodeCount="203" docActiveCodeLength="1305" docExpressionCount="141" docLength="1305" endLine="47" length="17" offset="1294" repeat="4" startLine="47" starttimestamp="1700507886094" timestamp="6318838" timestamp2="6319186">
    <text><![CDATA[ + this.getTail()]]></text>
  </DocumentChange>
  <DocumentChange __id="3919" _type="Insert" date="Mon Nov 20 16:03:25 EST 2023" docASTNodeCount="203" docActiveCodeLength="1306" docExpressionCount="141" docLength="1306" length="1" offset="1294" starttimestamp="1700507886094" timestamp="6319835">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="3944" _type="Insert" date="Mon Nov 20 16:03:31 EST 2023" docASTNodeCount="202" docActiveCodeLength="1307" docExpressionCount="141" docLength="1307" length="1" offset="1266" starttimestamp="1700507886094" timestamp="6325845">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="3953" _type="Replace" date="Mon Nov 20 16:03:37 EST 2023" docASTNodeCount="202" docActiveCodeLength="1295" docExpressionCount="141" docLength="1295" endLine="47" insertionLength="14" int_docASTNodeCount="202" int_docActiveCodeLength="1281" int_docExpressionCount="141" int_docLength="1281" length="26" offset="1267" startLine="47" starttimestamp="1700507886094" timestamp="6330936">
    <deletedText><![CDATA[toStringAsListHelperPublic]]></deletedText>
    <insertedText><![CDATA[toStringAsList]]></insertedText>
  </DocumentChange>
  <Command __id="3960" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:03:41 EST 2023" starttimestamp="1700507886094" timestamp="6335588" />
  <Command __id="3961" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:03:41 EST 2023" starttimestamp="1700507886094" timestamp="6335689" />
  <Command __id="3962" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:03:41 EST 2023" starttimestamp="1700507886094" timestamp="6335699" />
  <Command __id="3964" _type="MoveCaretCommand" caretOffset="1106" date="Mon Nov 20 16:03:44 EST 2023" docOffset="1106" starttimestamp="1700507886094" timestamp="6338251" />
  <Command __id="3965" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:03:46 EST 2023" starttimestamp="1700507886094" timestamp="6340314" />
  <Command __id="3966" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:03:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6340414" type="Run" />
  <Command __id="3967" _type="ShellCommand" date="Mon Nov 20 16:03:46 EST 2023" starttimestamp="1700507886094" timestamp="6340714" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3968" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343528" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment5.toString.ListToStringDeepCheckerBasic@445902c1 . Results may change."), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3969" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343529" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3970" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343530" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3971" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343531" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3972" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343545" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3973" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343548" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3974" _type="ExceptionCommand" date="Mon Nov 20 16:03:49 EST 2023" starttimestamp="1700507886094" timestamp="6343560" type="Exception">
    <exceptionString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,




Test execution time (ms):2
Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 





Test execution time (ms):2
Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3975" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343562" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):24"), Diff(INSERT,"	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3976" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343565" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5"), Diff(INSERT,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3977" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343565" type="ConsoleOutput">
    <outputString><![CDATA[




Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶"), Diff(INSERT,"¶¶¶¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3978" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343565" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶¶¶¶¶Test execution time (ms):1"), Diff(INSERT,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3979" _type="ExceptionCommand" date="Mon Nov 20 16:03:49 EST 2023" starttimestamp="1700507886094" timestamp="6343568" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3980" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343571" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3981" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343618" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f20.assignment5.testcases.toString.AbstractLispExpressionResultDeepChecker.actualOutput(AbstractLispExpressionResultDeepChecker.java:7)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at java."), Diff(DELETE,"desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(INSERT,"base/jdk.internal.util.Preconditions.outOfBounds(Preconditions"), Diff(EQUAL,".java:"), Diff(DELETE,"455"), Diff(EQUAL,"6"), Diff(INSERT,"4"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(INSERT,"base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions"), Diff(EQUAL,".java:"), Diff(DELETE,"4488"), Diff(INSERT,"70"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(INSERT,"base/jdk.internal.util.Preconditions.checkIndex(Preconditions"), Diff(EQUAL,".java:2"), Diff(DELETE,"307"), Diff(INSERT,"48"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(INSERT,"base/java.util.Objects.checkIndex(Objects"), Diff(EQUAL,".java:"), Diff(DELETE,"27"), Diff(INSERT,"3"), Diff(EQUAL,"72)¶	at java."), Diff(DELETE,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(INSERT,"base/java.util.ArrayList.get(ArrayList.java:459)¶	at gradingTools.comp524f20.assignment5.testcases.toString.AbstractLispExpressionResultDeepChecker.actualOutput(AbstractLispExpressionResultDeepChecker"), Diff(EQUAL,".java:"), Diff(DELETE,"4843"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(EQUAL,".java:"), Diff(DELETE,"77"), Diff(EQUAL,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(INSERT,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(EQUAL,"e.java:"), Diff(DELETE,"7"), Diff(EQUAL,"2"), Diff(INSERT,"3"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(INSERT,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(EQUAL,"e.java:"), Diff(DELETE,"715"), Diff(INSERT,"111"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(INSERT,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethod"), Diff(EQUAL,"Access"), Diff(INSERT,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"85"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at java.base/java."), Diff(DELETE,"security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"95"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(EQUAL,".java:7"), Diff(DELETE,"45"), Diff(INSERT,"1"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"74"), Diff(INSERT,"36"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(INSERT,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethod"), Diff(EQUAL,"Access"), Diff(INSERT,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"85"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(INSERT,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"742"), Diff(INSERT,"270"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(EQUAL,".java:"), Diff(DELETE,"203"), Diff(INSERT,"99"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"24"), Diff(INSERT,"585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"13"), Diff(INSERT,"406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(EQUAL,".java:"), Diff(DELETE,"10"), Diff(INSERT,"46"), Diff(EQUAL,"9)¶	at java.desktop/java.awt."), Diff(INSERT,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"DispatchThread.pumpEvents(EventDispatchThread"), Diff(INSERT,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"101"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(INSERT,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"DispatchThread.run(EventDispatchThread.java:90)¶java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0"), Diff(INSERT,"Multicaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3982" _type="ConsoleOutput" date="Mon Nov 20 16:03:49 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6343626" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)¶	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)¶	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)¶	at java.base/java.util.Objects.checkIndex(Objects.java:372)¶	at java.base/java.util.ArrayList.get(ArrayList.java:459)¶	at gradingTools.comp524f20.assignment5.testcases.toString.AbstractLispExpressionResultDeepChecker.actualOutput(AbstractLispExpressionResultDeepChecker.java:7)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)"), Diff(INSERT,"Test Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3983" _type="ShellCommand" date="Mon Nov 20 16:04:09 EST 2023" starttimestamp="1700507886094" timestamp="6363190" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3984" _type="LocalChecksRawCommand" date="Mon Nov 20 16:04:09 EST 2023" starttimestamp="1700507886094" timestamp="6363194">
    <CSVRow><![CDATA[49,Mon Nov 20 16:03:49 EST 2023,6,3,A5ToStringSuite,BaseCaseSExpressionToStringChecker+ ClassRegistryProvided ListToStringDeepCheckerBasic+ MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,18,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3985" _type="LocalChecksRawCommand" date="Mon Nov 20 16:04:09 EST 2023" starttimestamp="1700507886094" timestamp="6363194">
    <CSVRow><![CDATA[49,Mon Nov 20 16:03:49 EST 2023,6,3,A5ToStringSuite,BaseCaseSExpressionToStringChecker+ ClassRegistryProvided ListToStringDeepCheckerBasic+ MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,18,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3986" _type="MoveCaretCommand" caretOffset="333" date="Mon Nov 20 16:04:09 EST 2023" docOffset="333" starttimestamp="1700507886094" timestamp="6363271" />
  <Command __id="3987" _type="MoveCaretCommand" caretOffset="333" date="Mon Nov 20 16:04:09 EST 2023" docOffset="333" starttimestamp="1700507886094" timestamp="6363271" />
  <Command __id="3988" _type="ShellCommand" date="Mon Nov 20 16:04:10 EST 2023" starttimestamp="1700507886094" timestamp="6364662" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3989" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:04:11 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6365632" type="Run" />
  <Command __id="3990" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:04:11 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6365632" type="Run" />
  <Command __id="3991" _type="ShellCommand" date="Mon Nov 20 16:04:11 EST 2023" starttimestamp="1700507886094" timestamp="6365648" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3992" _type="ShellCommand" date="Mon Nov 20 16:04:12 EST 2023" starttimestamp="1700507886094" timestamp="6366359" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3993" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:04:12 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6366619" type="Run" />
  <Command __id="3994" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:04:12 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6366619" type="Run" />
  <Command __id="3995" _type="ShellCommand" date="Mon Nov 20 16:04:12 EST 2023" starttimestamp="1700507886094" timestamp="6366622" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3996" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:04:14 EST 2023" starttimestamp="1700507886094" timestamp="6368871" />
  <Command __id="3997" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:04:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6369029" type="Run" />
  <Command __id="3998" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:04:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6369029" type="Run" />
  <Command __id="3999" _type="ShellCommand" date="Mon Nov 20 16:04:15 EST 2023" starttimestamp="1700507886094" timestamp="6369316" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4000" _type="ConsoleOutput" date="Mon Nov 20 16:04:20 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6374301" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerAdvanced,0.0% complete,0.0,5.0,Index 0 out of bounds for length 0"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4001" _type="ConsoleOutput" date="Mon Nov 20 16:04:20 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6374302" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4002" _type="ConsoleOutput" date="Mon Nov 20 16:04:20 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6374303" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4003" _type="ConsoleOutput" date="Mon Nov 20 16:04:20 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6374303" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):8"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4004" _type="ConsoleOutput" date="Mon Nov 20 16:04:20 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6374320" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4005" _type="ConsoleOutput" date="Mon Nov 20 16:04:20 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6374322" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):27"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4006" _type="ConsoleOutput" date="Mon Nov 20 16:04:20 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6374324" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):27"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4007" _type="ConsoleOutput" date="Mon Nov 20 16:04:42 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6396705" type="ConsoleOutput">
    <outputString><![CDATA[

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4008" _type="ConsoleOutput" date="Mon Nov 20 16:04:42 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6396707" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4009" _type="LocalChecksRawCommand" date="Mon Nov 20 16:04:42 EST 2023" starttimestamp="1700507886094" timestamp="6396707">
    <CSVRow><![CDATA[50,Mon Nov 20 16:04:20 EST 2023,6,0,BaseCaseSExpressionToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,19,0,false, ,ClassRegistryProvided MainClassProvided , ,BaseCaseSExpressionToStringChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4010" _type="LocalChecksRawCommand" date="Mon Nov 20 16:04:42 EST 2023" starttimestamp="1700507886094" timestamp="6396707">
    <CSVRow><![CDATA[50,Mon Nov 20 16:04:20 EST 2023,6,0,BaseCaseSExpressionToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,19,0,false, ,ClassRegistryProvided MainClassProvided , ,BaseCaseSExpressionToStringChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4011" _type="LocalChecksRawCommand" date="Mon Nov 20 16:04:42 EST 2023" starttimestamp="1700507886094" timestamp="6396707">
    <CSVRow><![CDATA[51,Mon Nov 20 16:04:42 EST 2023,6,0,ListToStringDeepCheckerBasic,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,19,1,false, , , ,ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4012" _type="LocalChecksRawCommand" date="Mon Nov 20 16:04:42 EST 2023" starttimestamp="1700507886094" timestamp="6396707">
    <CSVRow><![CDATA[51,Mon Nov 20 16:04:42 EST 2023,6,0,ListToStringDeepCheckerBasic,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,19,1,false, , , ,ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4013" _type="ShellCommand" date="Mon Nov 20 16:04:52 EST 2023" starttimestamp="1700507886094" timestamp="6406371" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4014" _type="MoveCaretCommand" caretOffset="267" date="Mon Nov 20 16:04:52 EST 2023" docOffset="267" starttimestamp="1700507886094" timestamp="6406450" />
  <Command __id="4015" _type="MoveCaretCommand" caretOffset="267" date="Mon Nov 20 16:04:52 EST 2023" docOffset="267" starttimestamp="1700507886094" timestamp="6406450" />
  <Command __id="4017" _type="MoveCaretCommand" caretOffset="1241" date="Mon Nov 20 16:04:53 EST 2023" docOffset="1241" starttimestamp="1700507886094" timestamp="6407204" />
  <Command __id="4018" _type="ShellCommand" date="Mon Nov 20 16:04:54 EST 2023" starttimestamp="1700507886094" timestamp="6408074" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4019" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:04:54 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6408670" type="Run" />
  <Command __id="4020" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:04:54 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6408670" type="Run" />
  <Command __id="4021" _type="ShellCommand" date="Mon Nov 20 16:04:54 EST 2023" starttimestamp="1700507886094" timestamp="6408676" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4022" _type="MoveCaretCommand" caretOffset="1186" date="Mon Nov 20 16:04:59 EST 2023" docOffset="1186" starttimestamp="1700507886094" timestamp="6413173" />
  <Command __id="4023" _type="MoveCaretCommand" caretOffset="1186" date="Mon Nov 20 16:04:59 EST 2023" docOffset="1186" starttimestamp="1700507886094" timestamp="6413173" />
  <Command __id="4024" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:04:59 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="6413613" />
  <Command __id="4025" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:04:59 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="6413613" />
  <Command __id="4026" _type="MoveCaretCommand" caretOffset="1186" date="Mon Nov 20 16:05:00 EST 2023" docOffset="1186" starttimestamp="1700507886094" timestamp="6414041" />
  <Command __id="4027" _type="MoveCaretCommand" caretOffset="1186" date="Mon Nov 20 16:05:00 EST 2023" docOffset="1186" starttimestamp="1700507886094" timestamp="6414041" />
  <Command __id="4028" _type="MoveCaretCommand" caretOffset="1231" date="Mon Nov 20 16:05:00 EST 2023" docOffset="1231" starttimestamp="1700507886094" timestamp="6414501" />
  <Command __id="4029" _type="MoveCaretCommand" caretOffset="1231" date="Mon Nov 20 16:05:00 EST 2023" docOffset="1231" starttimestamp="1700507886094" timestamp="6414501" />
  <Command __id="4030" _type="MoveCaretCommand" caretOffset="1281" date="Mon Nov 20 16:05:01 EST 2023" docOffset="1281" starttimestamp="1700507886094" timestamp="6415646" />
  <Command __id="4031" _type="MoveCaretCommand" caretOffset="1281" date="Mon Nov 20 16:05:01 EST 2023" docOffset="1281" starttimestamp="1700507886094" timestamp="6415646" />
  <Command __id="4032" _type="MoveCaretCommand" caretOffset="1284" date="Mon Nov 20 16:05:02 EST 2023" docOffset="1284" starttimestamp="1700507886094" timestamp="6416106" />
  <Command __id="4033" _type="MoveCaretCommand" caretOffset="1284" date="Mon Nov 20 16:05:02 EST 2023" docOffset="1284" starttimestamp="1700507886094" timestamp="6416106" />
  <Command __id="4034" _type="MoveCaretCommand" caretOffset="1288" date="Mon Nov 20 16:05:02 EST 2023" docOffset="1288" starttimestamp="1700507886094" timestamp="6416556" />
  <Command __id="4035" _type="MoveCaretCommand" caretOffset="1288" date="Mon Nov 20 16:05:02 EST 2023" docOffset="1288" starttimestamp="1700507886094" timestamp="6416556" />
  <Command __id="4036" _type="MoveCaretCommand" caretOffset="1284" date="Mon Nov 20 16:05:03 EST 2023" docOffset="1284" starttimestamp="1700507886094" timestamp="6417054" />
  <Command __id="4037" _type="MoveCaretCommand" caretOffset="1284" date="Mon Nov 20 16:05:03 EST 2023" docOffset="1284" starttimestamp="1700507886094" timestamp="6417054" />
  <Command __id="4038" _type="MoveCaretCommand" caretOffset="495" date="Mon Nov 20 16:05:07 EST 2023" docOffset="495" starttimestamp="1700507886094" timestamp="6421004" />
  <Command __id="4039" _type="MoveCaretCommand" caretOffset="495" date="Mon Nov 20 16:05:07 EST 2023" docOffset="495" starttimestamp="1700507886094" timestamp="6421004" />
  <Command __id="4040" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 16:05:09 EST 2023" docOffset="371" starttimestamp="1700507886094" timestamp="6423483" />
  <Command __id="4041" _type="MoveCaretCommand" caretOffset="371" date="Mon Nov 20 16:05:09 EST 2023" docOffset="371" starttimestamp="1700507886094" timestamp="6423484" />
  <Command __id="3963" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:03:44 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6338187">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4016" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:04:53 EST 2023" docASTNodeCount="202" docActiveCodeLength="1295" docExpressionCount="141" docLength="1295" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6407155">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return ((AbstractSExpression)this).toStringAsListHelperPublic();	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}"), Diff(INSERT,"		public String toStringAsListHelperPublic() {		if(this instanceof Atom) {			return this.toStringAsListHelperPublic();		}else {			return this.getHead().toStringAsList();		}	}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return ((AbstractSExpression)this).toStringAsListHelperPublic();
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this instanceof Atom) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toStringAsList();
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="4042" _type="MoveCaretCommand" caretOffset="495" date="Mon Nov 20 16:05:11 EST 2023" docOffset="495" starttimestamp="1700507886094" timestamp="6425118" />
  <Command __id="4043" _type="MoveCaretCommand" caretOffset="495" date="Mon Nov 20 16:05:11 EST 2023" docOffset="495" starttimestamp="1700507886094" timestamp="6425118" />
  <Command __id="4045" _type="MoveCaretCommand" caretOffset="267" date="Mon Nov 20 16:05:14 EST 2023" docOffset="267" starttimestamp="1700507886094" timestamp="6428794" />
  <Command __id="4046" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:05:16 EST 2023" starttimestamp="1700507886094" timestamp="6430704" />
  <Command __id="4047" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:05:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6430836" type="Run" />
  <Command __id="4048" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:05:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6430836" type="Run" />
  <Command __id="4049" _type="ShellCommand" date="Mon Nov 20 16:05:17 EST 2023" starttimestamp="1700507886094" timestamp="6431122" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4050" _type="ConsoleOutput" date="Mon Nov 20 16:05:21 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6435265" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4051" _type="ConsoleOutput" date="Mon Nov 20 16:05:21 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6435267" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4052" _type="ConsoleOutput" date="Mon Nov 20 16:05:21 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6435268" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):7¶")]]]></diff>
  </Command>
  <Command __id="4053" _type="ConsoleOutput" date="Mon Nov 20 16:05:21 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6435288" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4054" _type="ConsoleOutput" date="Mon Nov 20 16:05:21 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6435288" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4044" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:05:14 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6428734">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4055" _type="ShellCommand" date="Mon Nov 20 16:05:40 EST 2023" starttimestamp="1700507886094" timestamp="6454332" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4056" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 16:05:40 EST 2023" docOffset="962" starttimestamp="1700507886094" timestamp="6454406" />
  <Command __id="4057" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 16:05:40 EST 2023" docOffset="962" starttimestamp="1700507886094" timestamp="6454406" />
  <Command __id="4059" _type="MoveCaretCommand" caretOffset="495" date="Mon Nov 20 16:05:41 EST 2023" docOffset="495" starttimestamp="1700507886094" timestamp="6455613" />
  <Command __id="4060" _type="ShellCommand" date="Mon Nov 20 16:05:46 EST 2023" starttimestamp="1700507886094" timestamp="6460293" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4061" _type="ShellCommand" date="Mon Nov 20 16:05:50 EST 2023" starttimestamp="1700507886094" timestamp="6464147" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4062" _type="LocalChecksRawCommand" date="Mon Nov 20 16:05:50 EST 2023" starttimestamp="1700507886094" timestamp="6464149">
    <CSVRow><![CDATA[52,Mon Nov 20 16:05:21 EST 2023,6,0,BaseCaseListToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,20,0,false, ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4063" _type="LocalChecksRawCommand" date="Mon Nov 20 16:05:50 EST 2023" starttimestamp="1700507886094" timestamp="6464149">
    <CSVRow><![CDATA[52,Mon Nov 20 16:05:21 EST 2023,6,0,BaseCaseListToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,20,0,false, ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4064" _type="MoveCaretCommand" caretOffset="894" date="Mon Nov 20 16:05:50 EST 2023" docOffset="894" starttimestamp="1700507886094" timestamp="6464217" />
  <Command __id="4065" _type="MoveCaretCommand" caretOffset="894" date="Mon Nov 20 16:05:50 EST 2023" docOffset="894" starttimestamp="1700507886094" timestamp="6464217" />
  <Command __id="4066" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:05:51 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="6464973" />
  <Command __id="4067" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:05:51 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="6464973" />
  <Command __id="4068" _type="MoveCaretCommand" caretOffset="923" date="Mon Nov 20 16:05:52 EST 2023" docOffset="923" starttimestamp="1700507886094" timestamp="6466407" />
  <Command __id="4069" _type="MoveCaretCommand" caretOffset="923" date="Mon Nov 20 16:05:52 EST 2023" docOffset="923" starttimestamp="1700507886094" timestamp="6466407" />
  <Command __id="4070" _type="ShellCommand" date="Mon Nov 20 16:05:55 EST 2023" starttimestamp="1700507886094" timestamp="6468953" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4071" _type="ShellCommand" date="Mon Nov 20 16:05:55 EST 2023" starttimestamp="1700507886094" timestamp="6469562" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4072" _type="ShellCommand" date="Mon Nov 20 16:05:56 EST 2023" starttimestamp="1700507886094" timestamp="6470221" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4073" _type="ShellCommand" date="Mon Nov 20 16:08:19 EST 2023" starttimestamp="1700507886094" timestamp="6613080" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4074" _type="ShellCommand" date="Mon Nov 20 16:08:22 EST 2023" starttimestamp="1700507886094" timestamp="6616013" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4075" _type="ShellCommand" date="Mon Nov 20 16:08:23 EST 2023" starttimestamp="1700507886094" timestamp="6617426" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4076" _type="ShellCommand" date="Mon Nov 20 16:08:24 EST 2023" starttimestamp="1700507886094" timestamp="6618176" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4077" _type="ShellCommand" date="Mon Nov 20 16:08:38 EST 2023" starttimestamp="1700507886094" timestamp="6632328" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4078" _type="ShellCommand" date="Mon Nov 20 16:09:16 EST 2023" starttimestamp="1700507886094" timestamp="6670037" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4079" _type="ConsoleOutput" date="Mon Nov 20 16:09:26 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6680348" type="ConsoleOutput">
    <outputString><![CDATA[

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(INSERT,"¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4080" _type="ConsoleOutput" date="Mon Nov 20 16:09:26 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6680349" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(INSERT,"Test execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4081" _type="ConsoleOutput" date="Mon Nov 20 16:09:26 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6680350" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4082" _type="ShellCommand" date="Mon Nov 20 16:09:48 EST 2023" starttimestamp="1700507886094" timestamp="6702181" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4083" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:09:48 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="6702256" />
  <Command __id="4084" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:09:48 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="6702256" />
  <Command __id="4085" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 16:09:48 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="6702839" />
  <Command __id="4086" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 16:09:48 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="6702839" />
  <Command __id="4087" _type="MoveCaretCommand" caretOffset="1186" date="Mon Nov 20 16:09:49 EST 2023" docOffset="1186" starttimestamp="1700507886094" timestamp="6703678" />
  <Command __id="4088" _type="MoveCaretCommand" caretOffset="1186" date="Mon Nov 20 16:09:49 EST 2023" docOffset="1186" starttimestamp="1700507886094" timestamp="6703678" />
  <Command __id="4089" _type="MoveCaretCommand" caretOffset="1186" date="Mon Nov 20 16:09:50 EST 2023" docOffset="1186" starttimestamp="1700507886094" timestamp="6704257" />
  <Command __id="4090" _type="MoveCaretCommand" caretOffset="1186" date="Mon Nov 20 16:09:50 EST 2023" docOffset="1186" starttimestamp="1700507886094" timestamp="6704257" />
  <Command __id="4091" _type="SelectTextCommand" caretOffset="1234" date="Mon Nov 20 16:09:50 EST 2023" end="1234" start="1186" starttimestamp="1700507886094" timestamp="6704507" />
  <Command __id="4092" _type="SelectTextCommand" caretOffset="1234" date="Mon Nov 20 16:09:50 EST 2023" end="1234" start="1186" starttimestamp="1700507886094" timestamp="6704507" />
  <Command __id="4093" _type="MoveCaretCommand" caretOffset="1231" date="Mon Nov 20 16:09:51 EST 2023" docOffset="1231" starttimestamp="1700507886094" timestamp="6705590" />
  <Command __id="4094" _type="MoveCaretCommand" caretOffset="1231" date="Mon Nov 20 16:09:51 EST 2023" docOffset="1231" starttimestamp="1700507886094" timestamp="6705591" />
  <Command __id="4095" _type="LocalChecksRawCommand" date="Mon Nov 20 16:09:51 EST 2023" starttimestamp="1700507886094" timestamp="6705592">
    <CSVRow><![CDATA[53,Mon Nov 20 16:09:26 EST 2023,6,0,ListToStringCheckerBasic,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,20,1,false, , , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4096" _type="LocalChecksRawCommand" date="Mon Nov 20 16:09:51 EST 2023" starttimestamp="1700507886094" timestamp="6705592">
    <CSVRow><![CDATA[53,Mon Nov 20 16:09:26 EST 2023,6,0,ListToStringCheckerBasic,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,20,1,false, , , ,ListToStringCheckerBasic-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4097" _type="MoveCaretCommand" caretOffset="1226" date="Mon Nov 20 16:09:52 EST 2023" docOffset="1226" starttimestamp="1700507886094" timestamp="6706125" />
  <Command __id="4098" _type="MoveCaretCommand" caretOffset="1226" date="Mon Nov 20 16:09:52 EST 2023" docOffset="1226" starttimestamp="1700507886094" timestamp="6706125" />
  <Command __id="4099" _type="MoveCaretCommand" caretOffset="1279" date="Mon Nov 20 16:09:52 EST 2023" docOffset="1279" starttimestamp="1700507886094" timestamp="6706681" />
  <Command __id="4100" _type="MoveCaretCommand" caretOffset="1279" date="Mon Nov 20 16:09:52 EST 2023" docOffset="1279" starttimestamp="1700507886094" timestamp="6706681" />
  <Command __id="4101" _type="MoveCaretCommand" caretOffset="1270" date="Mon Nov 20 16:09:53 EST 2023" docOffset="1270" starttimestamp="1700507886094" timestamp="6707473" />
  <Command __id="4102" _type="MoveCaretCommand" caretOffset="1270" date="Mon Nov 20 16:09:53 EST 2023" docOffset="1270" starttimestamp="1700507886094" timestamp="6707473" />
  <Command __id="4103" _type="MoveCaretCommand" caretOffset="1261" date="Mon Nov 20 16:09:54 EST 2023" docOffset="1261" starttimestamp="1700507886094" timestamp="6708120" />
  <Command __id="4104" _type="MoveCaretCommand" caretOffset="1261" date="Mon Nov 20 16:09:54 EST 2023" docOffset="1261" starttimestamp="1700507886094" timestamp="6708120" />
  <Command __id="4105" _type="SelectTextCommand" caretOffset="1264" date="Mon Nov 20 16:09:54 EST 2023" end="1264" start="1257" starttimestamp="1700507886094" timestamp="6708276" />
  <Command __id="4106" _type="SelectTextCommand" caretOffset="1264" date="Mon Nov 20 16:09:54 EST 2023" end="1264" start="1257" starttimestamp="1700507886094" timestamp="6708276" />
  <Command __id="4107" _type="MoveCaretCommand" caretOffset="1264" date="Mon Nov 20 16:09:54 EST 2023" docOffset="1264" starttimestamp="1700507886094" timestamp="6708822" />
  <Command __id="4108" _type="MoveCaretCommand" caretOffset="1264" date="Mon Nov 20 16:09:54 EST 2023" docOffset="1264" starttimestamp="1700507886094" timestamp="6708822" />
  <Command __id="4109" _type="MoveCaretCommand" caretOffset="1265" date="Mon Nov 20 16:09:55 EST 2023" docOffset="1265" starttimestamp="1700507886094" timestamp="6708993" />
  <Command __id="4110" _type="MoveCaretCommand" caretOffset="1265" date="Mon Nov 20 16:09:55 EST 2023" docOffset="1265" starttimestamp="1700507886094" timestamp="6708993" />
  <Command __id="4111" _type="MoveCaretCommand" caretOffset="1270" date="Mon Nov 20 16:09:55 EST 2023" docOffset="1270" starttimestamp="1700507886094" timestamp="6709478" />
  <Command __id="4112" _type="MoveCaretCommand" caretOffset="1270" date="Mon Nov 20 16:09:55 EST 2023" docOffset="1270" starttimestamp="1700507886094" timestamp="6709478" />
  <Command __id="4113" _type="SelectTextCommand" caretOffset="1281" date="Mon Nov 20 16:09:55 EST 2023" end="1281" start="1267" starttimestamp="1700507886094" timestamp="6709635" />
  <Command __id="4114" _type="SelectTextCommand" caretOffset="1281" date="Mon Nov 20 16:09:55 EST 2023" end="1281" start="1267" starttimestamp="1700507886094" timestamp="6709635" />
  <Command __id="4115" _type="MoveCaretCommand" caretOffset="1267" date="Mon Nov 20 16:09:56 EST 2023" docOffset="1267" starttimestamp="1700507886094" timestamp="6710106" />
  <Command __id="4116" _type="MoveCaretCommand" caretOffset="1267" date="Mon Nov 20 16:09:56 EST 2023" docOffset="1267" starttimestamp="1700507886094" timestamp="6710106" />
  <Command __id="4117" _type="SelectTextCommand" caretOffset="1266" date="Mon Nov 20 16:09:58 EST 2023" end="1267" start="1266" starttimestamp="1700507886094" timestamp="6712051" />
  <Command __id="4118" _type="SelectTextCommand" caretOffset="1266" date="Mon Nov 20 16:09:58 EST 2023" end="1267" start="1266" starttimestamp="1700507886094" timestamp="6712051" />
  <Command __id="4119" _type="MoveCaretCommand" caretOffset="1267" date="Mon Nov 20 16:09:58 EST 2023" docOffset="1267" starttimestamp="1700507886094" timestamp="6712562" />
  <Command __id="4120" _type="MoveCaretCommand" caretOffset="1267" date="Mon Nov 20 16:09:58 EST 2023" docOffset="1267" starttimestamp="1700507886094" timestamp="6712562" />
  <Command __id="4121" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 16:10:00 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="6714789" />
  <Command __id="4122" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 16:10:00 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="6714789" />
  <Command __id="4123" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:10:08 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="6722008" />
  <Command __id="4124" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:10:08 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="6722008" />
  <Command __id="4125" _type="SelectTextCommand" caretOffset="997" date="Mon Nov 20 16:10:08 EST 2023" end="997" start="928" starttimestamp="1700507886094" timestamp="6722203" />
  <Command __id="4126" _type="SelectTextCommand" caretOffset="997" date="Mon Nov 20 16:10:08 EST 2023" end="997" start="928" starttimestamp="1700507886094" timestamp="6722203" />
  <Command __id="4127" _type="MoveCaretCommand" caretOffset="970" date="Mon Nov 20 16:10:09 EST 2023" docOffset="970" starttimestamp="1700507886094" timestamp="6723240" />
  <Command __id="4128" _type="MoveCaretCommand" caretOffset="970" date="Mon Nov 20 16:10:09 EST 2023" docOffset="970" starttimestamp="1700507886094" timestamp="6723240" />
  <Command __id="4129" _type="SelectTextCommand" caretOffset="992" date="Mon Nov 20 16:10:09 EST 2023" end="992" start="966" starttimestamp="1700507886094" timestamp="6723399" />
  <Command __id="4130" _type="SelectTextCommand" caretOffset="992" date="Mon Nov 20 16:10:09 EST 2023" end="992" start="966" starttimestamp="1700507886094" timestamp="6723399" />
  <Command __id="4131" _type="MoveCaretCommand" caretOffset="1271" date="Mon Nov 20 16:10:11 EST 2023" docOffset="1271" starttimestamp="1700507886094" timestamp="6725019" />
  <Command __id="4132" _type="MoveCaretCommand" caretOffset="1271" date="Mon Nov 20 16:10:11 EST 2023" docOffset="1271" starttimestamp="1700507886094" timestamp="6725019" />
  <Command __id="4133" _type="SelectTextCommand" caretOffset="1281" date="Mon Nov 20 16:10:11 EST 2023" end="1281" start="1267" starttimestamp="1700507886094" timestamp="6725223" />
  <Command __id="4134" _type="SelectTextCommand" caretOffset="1281" date="Mon Nov 20 16:10:11 EST 2023" end="1281" start="1267" starttimestamp="1700507886094" timestamp="6725223" />
  <Command __id="4135" _type="MoveCaretCommand" caretOffset="1260" date="Mon Nov 20 16:10:12 EST 2023" docOffset="1260" starttimestamp="1700507886094" timestamp="6725942" />
  <Command __id="4136" _type="MoveCaretCommand" caretOffset="1260" date="Mon Nov 20 16:10:12 EST 2023" docOffset="1260" starttimestamp="1700507886094" timestamp="6725942" />
  <Command __id="4137" _type="SelectTextCommand" caretOffset="1264" date="Mon Nov 20 16:10:12 EST 2023" end="1264" start="1257" starttimestamp="1700507886094" timestamp="6726149" />
  <Command __id="4138" _type="SelectTextCommand" caretOffset="1264" date="Mon Nov 20 16:10:12 EST 2023" end="1264" start="1257" starttimestamp="1700507886094" timestamp="6726149" />
  <Command __id="4139" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:10:13 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="6726914" />
  <Command __id="4140" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:10:13 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="6726914" />
  <Command __id="4141" _type="SelectTextCommand" caretOffset="1290" date="Mon Nov 20 16:10:13 EST 2023" end="1290" start="1157" starttimestamp="1700507886094" timestamp="6727140" />
  <Command __id="4142" _type="SelectTextCommand" caretOffset="1290" date="Mon Nov 20 16:10:13 EST 2023" end="1290" start="1157" starttimestamp="1700507886094" timestamp="6727140" />
  <Command __id="4143" _type="MoveCaretCommand" caretOffset="1206" date="Mon Nov 20 16:10:13 EST 2023" docOffset="1206" starttimestamp="1700507886094" timestamp="6727791" />
  <Command __id="4144" _type="MoveCaretCommand" caretOffset="1206" date="Mon Nov 20 16:10:13 EST 2023" docOffset="1206" starttimestamp="1700507886094" timestamp="6727791" />
  <Command __id="4145" _type="SelectTextCommand" caretOffset="1228" date="Mon Nov 20 16:10:14 EST 2023" end="1228" start="1202" starttimestamp="1700507886094" timestamp="6727964" />
  <Command __id="4146" _type="SelectTextCommand" caretOffset="1228" date="Mon Nov 20 16:10:14 EST 2023" end="1228" start="1202" starttimestamp="1700507886094" timestamp="6727964" />
  <Command __id="4147" _type="ShellCommand" date="Mon Nov 20 16:10:15 EST 2023" starttimestamp="1700507886094" timestamp="6729708" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4148" _type="ShellCommand" date="Mon Nov 20 16:10:16 EST 2023" starttimestamp="1700507886094" timestamp="6730277" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4149" _type="ShellCommand" date="Mon Nov 20 16:10:23 EST 2023" starttimestamp="1700507886094" timestamp="6737494" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4150" _type="ShellCommand" date="Mon Nov 20 16:11:30 EST 2023" starttimestamp="1700507886094" timestamp="6804450" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4151" _type="MoveCaretCommand" caretOffset="1265" date="Mon Nov 20 16:11:31 EST 2023" docOffset="1265" starttimestamp="1700507886094" timestamp="6805871" />
  <Command __id="4152" _type="MoveCaretCommand" caretOffset="1265" date="Mon Nov 20 16:11:31 EST 2023" docOffset="1265" starttimestamp="1700507886094" timestamp="6805871" />
  <Command __id="4153" _type="MoveCaretCommand" caretOffset="1261" date="Mon Nov 20 16:11:32 EST 2023" docOffset="1261" starttimestamp="1700507886094" timestamp="6806439" />
  <Command __id="4154" _type="MoveCaretCommand" caretOffset="1261" date="Mon Nov 20 16:11:32 EST 2023" docOffset="1261" starttimestamp="1700507886094" timestamp="6806439" />
  <Command __id="4155" _type="MoveCaretCommand" caretOffset="1273" date="Mon Nov 20 16:11:32 EST 2023" docOffset="1273" starttimestamp="1700507886094" timestamp="6806893" />
  <Command __id="4156" _type="MoveCaretCommand" caretOffset="1273" date="Mon Nov 20 16:11:32 EST 2023" docOffset="1273" starttimestamp="1700507886094" timestamp="6806893" />
  <Command __id="4157" _type="MoveCaretCommand" caretOffset="1261" date="Mon Nov 20 16:11:33 EST 2023" docOffset="1261" starttimestamp="1700507886094" timestamp="6807390" />
  <Command __id="4158" _type="MoveCaretCommand" caretOffset="1261" date="Mon Nov 20 16:11:33 EST 2023" docOffset="1261" starttimestamp="1700507886094" timestamp="6807390" />
  <Command __id="4159" _type="MoveCaretCommand" caretOffset="1268" date="Mon Nov 20 16:11:34 EST 2023" docOffset="1268" starttimestamp="1700507886094" timestamp="6807935" />
  <Command __id="4160" _type="MoveCaretCommand" caretOffset="1268" date="Mon Nov 20 16:11:34 EST 2023" docOffset="1268" starttimestamp="1700507886094" timestamp="6807935" />
  <Command __id="4161" _type="MoveCaretCommand" caretOffset="1259" date="Mon Nov 20 16:11:34 EST 2023" docOffset="1259" starttimestamp="1700507886094" timestamp="6808398" />
  <Command __id="4162" _type="MoveCaretCommand" caretOffset="1259" date="Mon Nov 20 16:11:34 EST 2023" docOffset="1259" starttimestamp="1700507886094" timestamp="6808398" />
  <Command __id="4163" _type="ShellCommand" date="Mon Nov 20 16:11:35 EST 2023" starttimestamp="1700507886094" timestamp="6808906" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4164" _type="ShellCommand" date="Mon Nov 20 16:11:40 EST 2023" starttimestamp="1700507886094" timestamp="6814588" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4165" _type="MoveCaretCommand" caretOffset="1181" date="Mon Nov 20 16:11:42 EST 2023" docOffset="1181" starttimestamp="1700507886094" timestamp="6816041" />
  <Command __id="4166" _type="MoveCaretCommand" caretOffset="1181" date="Mon Nov 20 16:11:42 EST 2023" docOffset="1181" starttimestamp="1700507886094" timestamp="6816041" />
  <Command __id="4167" _type="SelectTextCommand" caretOffset="1183" date="Mon Nov 20 16:11:46 EST 2023" end="1183" start="1167" starttimestamp="1700507886094" timestamp="6819996" />
  <Command __id="4168" _type="SelectTextCommand" caretOffset="1183" date="Mon Nov 20 16:11:46 EST 2023" end="1183" start="1167" starttimestamp="1700507886094" timestamp="6819996" />
  <Command __id="4170" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:11:46 EST 2023" starttimestamp="1700507886094" timestamp="6820364" />
  <Command __id="4171" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:11:46 EST 2023" starttimestamp="1700507886094" timestamp="6820364" />
  <Command __id="4173" _type="InsertStringCommand" date="Mon Nov 20 16:11:46 EST 2023" starttimestamp="1700507886094" timestamp="6820704" timestamp2="6820704">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4174" _type="InsertStringCommand" date="Mon Nov 20 16:11:46 EST 2023" starttimestamp="1700507886094" timestamp="6820705" timestamp2="6820705">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4175" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:11:46 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="6820712" />
  <Command __id="4178" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:11:47 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="6821761" />
  <Command __id="4180" _type="InsertStringCommand" date="Mon Nov 20 16:11:47 EST 2023" starttimestamp="1700507886094" timestamp="6821767" timestamp2="6821767">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4181" _type="InsertStringCommand" date="Mon Nov 20 16:11:47 EST 2023" starttimestamp="1700507886094" timestamp="6821767" timestamp2="6821767">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4182" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 16:11:48 EST 2023" docOffset="1179" starttimestamp="1700507886094" timestamp="6822627" />
  <Command __id="4183" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 16:11:48 EST 2023" docOffset="1179" starttimestamp="1700507886094" timestamp="6822627" />
  <Command __id="4184" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:11:48 EST 2023" starttimestamp="1700507886094" timestamp="6822854" />
  <Command __id="4185" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:11:49 EST 2023" starttimestamp="1700507886094" timestamp="6822956" />
  <Command __id="4186" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:11:49 EST 2023" starttimestamp="1700507886094" timestamp="6822963" />
  <Command __id="4187" _type="ShellCommand" date="Mon Nov 20 16:11:50 EST 2023" starttimestamp="1700507886094" timestamp="6824262" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4188" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:11:50 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6824645" type="Run" />
  <Command __id="4189" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:11:50 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6824645" type="Run" />
  <Command __id="4190" _type="ShellCommand" date="Mon Nov 20 16:11:50 EST 2023" starttimestamp="1700507886094" timestamp="6824647" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4192" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 16:11:51 EST 2023" docOffset="962" starttimestamp="1700507886094" timestamp="6825580" />
  <Command __id="4193" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:11:53 EST 2023" starttimestamp="1700507886094" timestamp="6827586" />
  <Command __id="4194" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:11:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6827732" type="Run" />
  <Command __id="4195" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:11:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6827732" type="Run" />
  <Command __id="4196" _type="ShellCommand" date="Mon Nov 20 16:11:54 EST 2023" starttimestamp="1700507886094" timestamp="6828024" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4197" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830359" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string "), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4198" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830360" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4199" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830361" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4200" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830362" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4201" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830377" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4202" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830380" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4203" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830381" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4204" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830385" type="ConsoleOutput">
    <outputString><![CDATA[


Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"¶¶¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4205" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830385" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶¶¶Test execution time (ms):2"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4206" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830387" type="ConsoleOutput">
    <outputString><![CDATA[


]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(INSERT,"¶¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4207" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830387" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"¶"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4208" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830388" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4209" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830390" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string "), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4210" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830391" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4211" _type="ConsoleOutput" date="Mon Nov 20 16:11:56 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="6830419" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:1"), Diff(DELETE,"4"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"290"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"88"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"268"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4212" _type="ExceptionCommand" date="Mon Nov 20 16:11:56 EST 2023" starttimestamp="1700507886094" timestamp="6830425" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 






Test execution time (ms):1
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4058" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:05:41 EST 2023" docASTNodeCount="202" docActiveCodeLength="1295" docExpressionCount="141" docLength="1295" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6455562">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return ((AbstractSExpression)this).toStringAsListHelperPublic();	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this instanceof Atom) {			return this.toStringAsListHelperPublic();		}else {			return this.getHead().toStringAsList();		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="4169" _type="Delete" date="Mon Nov 20 16:11:46 EST 2023" docASTNodeCount="199" docActiveCodeLength="1279" docExpressionCount="139" docLength="1279" endLine="44" length="16" offset="1167" startLine="44" starttimestamp="1700507886094" timestamp="6820356">
    <text><![CDATA[ instanceof Atom]]></text>
  </DocumentChange>
  <DocumentChange __id="4172" _type="Insert" date="Mon Nov 20 16:11:46 EST 2023" docASTNodeCount="201" docActiveCodeLength="1282" docExpressionCount="141" docLength="1282" length="3" offset="1167" repeat="3" starttimestamp="1700507886094" timestamp="6820702" timestamp2="6821216">
    <text><![CDATA[.is]]></text>
  </DocumentChange>
  <DocumentChange __id="4179" _type="Replace" date="Mon Nov 20 16:11:47 EST 2023" docASTNodeCount="201" docActiveCodeLength="1288" docExpressionCount="141" docLength="1288" endLine="44" insertionLength="8" int_docASTNodeCount="201" int_docActiveCodeLength="1280" int_docExpressionCount="141" int_docLength="1280" length="2" offset="1168" startLine="44" starttimestamp="1700507886094" timestamp="6821763">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isAtom()]]></insertedText>
  </DocumentChange>
  <Command __id="4191" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:11:51 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6825513">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4213" _type="ShellCommand" date="Mon Nov 20 16:11:58 EST 2023" starttimestamp="1700507886094" timestamp="6832219" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4214" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:11:58 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6832220" type="Run" />
  <Command __id="4215" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:11:58 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6832220" type="Run" />
  <Command __id="4216" _type="LocalChecksRawCommand" date="Mon Nov 20 16:11:58 EST 2023" starttimestamp="1700507886094" timestamp="6832221">
    <CSVRow><![CDATA[54,Mon Nov 20 16:11:56 EST 2023,6,0,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,21,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4217" _type="LocalChecksRawCommand" date="Mon Nov 20 16:11:58 EST 2023" starttimestamp="1700507886094" timestamp="6832221">
    <CSVRow><![CDATA[54,Mon Nov 20 16:11:56 EST 2023,6,0,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,21,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4218" _type="MoveCaretCommand" caretOffset="412" date="Mon Nov 20 16:11:59 EST 2023" docOffset="412" starttimestamp="1700507886094" timestamp="6832945" />
  <Command __id="4219" _type="MoveCaretCommand" caretOffset="412" date="Mon Nov 20 16:11:59 EST 2023" docOffset="412" starttimestamp="1700507886094" timestamp="6832945" />
  <Command __id="4221" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 16:12:00 EST 2023" docOffset="1179" starttimestamp="1700507886094" timestamp="6834550" />
  <Command __id="4222" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:12:11 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="6845024" />
  <Command __id="4223" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:12:11 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="6845025" />
  <Command __id="4224" _type="SelectTextCommand" caretOffset="997" date="Mon Nov 20 16:12:11 EST 2023" end="997" start="928" starttimestamp="1700507886094" timestamp="6845162" />
  <Command __id="4225" _type="SelectTextCommand" caretOffset="997" date="Mon Nov 20 16:12:11 EST 2023" end="997" start="928" starttimestamp="1700507886094" timestamp="6845162" />
  <Command __id="4226" _type="MoveCaretCommand" caretOffset="979" date="Mon Nov 20 16:12:11 EST 2023" docOffset="979" starttimestamp="1700507886094" timestamp="6845876" />
  <Command __id="4227" _type="MoveCaretCommand" caretOffset="979" date="Mon Nov 20 16:12:11 EST 2023" docOffset="979" starttimestamp="1700507886094" timestamp="6845876" />
  <Command __id="4228" _type="SelectTextCommand" caretOffset="992" date="Mon Nov 20 16:12:12 EST 2023" end="992" start="966" starttimestamp="1700507886094" timestamp="6846020" />
  <Command __id="4229" _type="SelectTextCommand" caretOffset="992" date="Mon Nov 20 16:12:12 EST 2023" end="992" start="966" starttimestamp="1700507886094" timestamp="6846021" />
  <Command __id="4230" _type="CopyCommand" date="Mon Nov 20 16:12:12 EST 2023" starttimestamp="1700507886094" timestamp="6846902" />
  <Command __id="4231" _type="CopyCommand" date="Mon Nov 20 16:12:13 EST 2023" starttimestamp="1700507886094" timestamp="6847651" />
  <Command __id="4232" _type="ShellCommand" date="Mon Nov 20 16:12:14 EST 2023" starttimestamp="1700507886094" timestamp="6848661" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4233" _type="ShellCommand" date="Mon Nov 20 16:12:45 EST 2023" starttimestamp="1700507886094" timestamp="6878955" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4234" _type="ShellCommand" date="Mon Nov 20 16:14:14 EST 2023" starttimestamp="1700507886094" timestamp="6968578" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4235" _type="ShellCommand" date="Mon Nov 20 16:14:14 EST 2023" starttimestamp="1700507886094" timestamp="6968897" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4236" _type="ShellCommand" date="Mon Nov 20 16:14:17 EST 2023" starttimestamp="1700507886094" timestamp="6971374" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4237" _type="ShellCommand" date="Mon Nov 20 16:16:46 EST 2023" starttimestamp="1700507886094" timestamp="7120282" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4238" _type="ShellCommand" date="Mon Nov 20 16:16:49 EST 2023" starttimestamp="1700507886094" timestamp="7123376" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4239" _type="BalloonCommand" date="Mon Nov 20 16:18:06 EST 2023" message="*******************************************
Worked 26 minutes(fixed)/58 minutes(context based) from
Mon Nov 20 15:18:06 EST 2023 to Mon Nov 20 16:16:49 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 2 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java
Number of insert: 426
Number of delete: 282
" starttimestamp="1700507886094" timestamp="7200044">
    <fineGrainedWorkTime><![CDATA[58]]></fineGrainedWorkTime>
    <insert><![CDATA[426]]></insert>
    <startTime><![CDATA[1700511486141]]></startTime>
    <endTime><![CDATA[1700515009470]]></endTime>
    <workTime><![CDATA[26]]></workTime>
    <delete><![CDATA[282]]></delete>
  </Command>
  <Command __id="4240" _type="ShellCommand" date="Mon Nov 20 16:22:34 EST 2023" starttimestamp="1700507886094" timestamp="7468381" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4241" _type="ShellCommand" date="Mon Nov 20 16:22:48 EST 2023" starttimestamp="1700507886094" timestamp="7482534" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4242" _type="ShellCommand" date="Mon Nov 20 16:22:48 EST 2023" starttimestamp="1700507886094" timestamp="7482870" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4220" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:12:00 EST 2023" docASTNodeCount="201" docActiveCodeLength="1288" docExpressionCount="141" docLength="1288" projectName="Assignment5" starttimestamp="1700507886094" timestamp="6834494">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return ((AbstractSExpression)this).toStringAsListHelperPublic();	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this"), Diff(DELETE," instanceof "), Diff(INSERT,".is"), Diff(EQUAL,"Atom"), Diff(INSERT,"()"), Diff(EQUAL,") {			return this.toStringAsListHelperPublic();		}else {			return this.getHead().toStringAsList();		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return ((AbstractSExpression)this).toStringAsListHelperPublic();
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toStringAsList();
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="4243" _type="MoveCaretCommand" caretOffset="938" date="Mon Nov 20 16:22:55 EST 2023" docOffset="938" starttimestamp="1700507886094" timestamp="7489622" />
  <Command __id="4244" _type="MoveCaretCommand" caretOffset="938" date="Mon Nov 20 16:22:55 EST 2023" docOffset="938" starttimestamp="1700507886094" timestamp="7489622" />
  <DocumentChange __id="4245" _type="Insert" date="Mon Nov 20 16:22:56 EST 2023" docASTNodeCount="201" docActiveCodeLength="1290" docExpressionCount="141" docLength="1290" length="2" offset="938" repeat="2" starttimestamp="1700507886094" timestamp="7490629" timestamp2="7491149">
    <text><![CDATA[“”]]></text>
  </DocumentChange>
  <Command __id="4246" _type="InsertStringCommand" date="Mon Nov 20 16:22:56 EST 2023" starttimestamp="1700507886094" timestamp="7490631" timestamp2="7490631">
    <data><![CDATA[“]]></data>
  </Command>
  <Command __id="4247" _type="InsertStringCommand" date="Mon Nov 20 16:22:56 EST 2023" starttimestamp="1700507886094" timestamp="7490631" timestamp2="7490631">
    <data><![CDATA[“]]></data>
  </Command>
  <Command __id="4249" _type="InsertStringCommand" date="Mon Nov 20 16:22:57 EST 2023" starttimestamp="1700507886094" timestamp="7491152" timestamp2="7491152">
    <data><![CDATA[”]]></data>
  </Command>
  <Command __id="4250" _type="InsertStringCommand" date="Mon Nov 20 16:22:57 EST 2023" starttimestamp="1700507886094" timestamp="7491152" timestamp2="7491152">
    <data><![CDATA[”]]></data>
  </Command>
  <DocumentChange __id="4251" _type="Delete" date="Mon Nov 20 16:22:57 EST 2023" docASTNodeCount="201" docActiveCodeLength="1288" docExpressionCount="141" docLength="1288" endLine="36" length="2" offset="938" repeat="2" startLine="36" starttimestamp="1700507886094" timestamp="7491734" timestamp2="7491828">
    <text><![CDATA[“”]]></text>
  </DocumentChange>
  <Command __id="4252" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:22:57 EST 2023" starttimestamp="1700507886094" timestamp="7491737" />
  <Command __id="4253" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:22:57 EST 2023" starttimestamp="1700507886094" timestamp="7491737" />
  <Command __id="4255" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:22:57 EST 2023" starttimestamp="1700507886094" timestamp="7491830" />
  <Command __id="4256" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:22:57 EST 2023" starttimestamp="1700507886094" timestamp="7491830" />
  <Command __id="4258" _type="InsertStringCommand" date="Mon Nov 20 16:22:58 EST 2023" starttimestamp="1700507886094" timestamp="7492401" timestamp2="7492401">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4259" _type="InsertStringCommand" date="Mon Nov 20 16:22:58 EST 2023" starttimestamp="1700507886094" timestamp="7492401" timestamp2="7492401">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4261" _type="InsertStringCommand" date="Mon Nov 20 16:22:59 EST 2023" starttimestamp="1700507886094" timestamp="7493255" timestamp2="7493255">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4262" _type="InsertStringCommand" date="Mon Nov 20 16:22:59 EST 2023" starttimestamp="1700507886094" timestamp="7493255" timestamp2="7493255">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4263" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:22:59 EST 2023" starttimestamp="1700507886094" timestamp="7493583" />
  <Command __id="4264" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:22:59 EST 2023" starttimestamp="1700507886094" timestamp="7493583" />
  <Command __id="4265" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:23:00 EST 2023" starttimestamp="1700507886094" timestamp="7494110" />
  <Command __id="4266" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:23:00 EST 2023" starttimestamp="1700507886094" timestamp="7494110" />
  <Command __id="4268" _type="InsertStringCommand" date="Mon Nov 20 16:23:00 EST 2023" starttimestamp="1700507886094" timestamp="7494565" timestamp2="7494565">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4269" _type="InsertStringCommand" date="Mon Nov 20 16:23:00 EST 2023" starttimestamp="1700507886094" timestamp="7494565" timestamp2="7494565">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4271" _type="InsertStringCommand" date="Mon Nov 20 16:23:00 EST 2023" starttimestamp="1700507886094" timestamp="7494662" timestamp2="7494662">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4272" _type="InsertStringCommand" date="Mon Nov 20 16:23:00 EST 2023" starttimestamp="1700507886094" timestamp="7494662" timestamp2="7494662">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4274" _type="InsertStringCommand" date="Mon Nov 20 16:23:00 EST 2023" starttimestamp="1700507886094" timestamp="7494738" timestamp2="7494738">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4275" _type="InsertStringCommand" date="Mon Nov 20 16:23:00 EST 2023" starttimestamp="1700507886094" timestamp="7494738" timestamp2="7494738">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4276" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:23:01 EST 2023" starttimestamp="1700507886094" timestamp="7495071" />
  <Command __id="4277" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:23:01 EST 2023" starttimestamp="1700507886094" timestamp="7495071" />
  <Command __id="4278" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:23:01 EST 2023" starttimestamp="1700507886094" timestamp="7495207" />
  <Command __id="4279" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:23:01 EST 2023" starttimestamp="1700507886094" timestamp="7495207" />
  <Command __id="4280" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:23:01 EST 2023" starttimestamp="1700507886094" timestamp="7495347" />
  <Command __id="4281" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:23:01 EST 2023" starttimestamp="1700507886094" timestamp="7495348" />
  <Command __id="4282" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:23:01 EST 2023" starttimestamp="1700507886094" timestamp="7495485" />
  <Command __id="4283" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:23:01 EST 2023" starttimestamp="1700507886094" timestamp="7495485" />
  <Command __id="4285" _type="InsertStringCommand" date="Mon Nov 20 16:23:02 EST 2023" starttimestamp="1700507886094" timestamp="7496369" timestamp2="7496369">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4286" _type="InsertStringCommand" date="Mon Nov 20 16:23:02 EST 2023" starttimestamp="1700507886094" timestamp="7496369" timestamp2="7496369">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="4257" _type="Insert" date="Mon Nov 20 16:22:58 EST 2023" docASTNodeCount="203" docActiveCodeLength="1298" docExpressionCount="143" docLength="1298" length="10" offset="938" repeat="10" starttimestamp="1700507886094" timestamp="7492398" timestamp2="7497002">
    <text><![CDATA["aaaaa" + ]]></text>
  </DocumentChange>
  <Command __id="4288" _type="InsertStringCommand" date="Mon Nov 20 16:23:02 EST 2023" starttimestamp="1700507886094" timestamp="7496533" timestamp2="7496533">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4289" _type="InsertStringCommand" date="Mon Nov 20 16:23:02 EST 2023" starttimestamp="1700507886094" timestamp="7496534" timestamp2="7496534">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4291" _type="InsertStringCommand" date="Mon Nov 20 16:23:02 EST 2023" starttimestamp="1700507886094" timestamp="7496717" timestamp2="7496717">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4292" _type="InsertStringCommand" date="Mon Nov 20 16:23:02 EST 2023" starttimestamp="1700507886094" timestamp="7496717" timestamp2="7496717">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4294" _type="InsertStringCommand" date="Mon Nov 20 16:23:02 EST 2023" starttimestamp="1700507886094" timestamp="7496871" timestamp2="7496871">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4295" _type="InsertStringCommand" date="Mon Nov 20 16:23:02 EST 2023" starttimestamp="1700507886094" timestamp="7496871" timestamp2="7496871">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4297" _type="InsertStringCommand" date="Mon Nov 20 16:23:03 EST 2023" starttimestamp="1700507886094" timestamp="7497004" timestamp2="7497004">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4298" _type="InsertStringCommand" date="Mon Nov 20 16:23:03 EST 2023" starttimestamp="1700507886094" timestamp="7497005" timestamp2="7497005">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4299" _type="MoveCaretCommand" caretOffset="894" date="Mon Nov 20 16:23:03 EST 2023" docOffset="894" starttimestamp="1700507886094" timestamp="7497309" />
  <Command __id="4300" _type="MoveCaretCommand" caretOffset="894" date="Mon Nov 20 16:23:03 EST 2023" docOffset="894" starttimestamp="1700507886094" timestamp="7497309" />
  <Command __id="4301" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:23:03 EST 2023" starttimestamp="1700507886094" timestamp="7497401" />
  <Command __id="4302" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:23:03 EST 2023" starttimestamp="1700507886094" timestamp="7497502" />
  <Command __id="4303" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:23:03 EST 2023" starttimestamp="1700507886094" timestamp="7497510" />
  <Command __id="4305" _type="MoveCaretCommand" caretOffset="412" date="Mon Nov 20 16:23:05 EST 2023" docOffset="412" starttimestamp="1700507886094" timestamp="7499823" />
  <Command __id="4306" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:23:08 EST 2023" starttimestamp="1700507886094" timestamp="7502203" />
  <Command __id="4307" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:23:08 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7502350" type="Run" />
  <Command __id="4308" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:23:08 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7502351" type="Run" />
  <Command __id="4309" _type="ShellCommand" date="Mon Nov 20 16:23:08 EST 2023" starttimestamp="1700507886094" timestamp="7502666" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4310" _type="ConsoleOutput" date="Mon Nov 20 16:23:11 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7505499" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4311" _type="ConsoleOutput" date="Mon Nov 20 16:23:11 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7505500" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4312" _type="ConsoleOutput" date="Mon Nov 20 16:23:11 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7505501" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4313" _type="ConsoleOutput" date="Mon Nov 20 16:23:11 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7505501" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4314" _type="ConsoleOutput" date="Mon Nov 20 16:23:11 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7505517" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4315" _type="ConsoleOutput" date="Mon Nov 20 16:23:11 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7505519" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4316" _type="ConsoleOutput" date="Mon Nov 20 16:23:11 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7505527" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

aaaaa
aaaaa

Test execution time (ms):2
Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string aaaaa

aaaaa
aaaaa
aaaaa

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶aaaaa¶aaaaa¶¶Test execution time (ms):2¶Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string aaaaa¶¶aaaaa¶aaaaa¶aaaaa¶¶Test "), Diff(EQUAL,"execution time (ms):2"), Diff(DELETE,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4317" _type="ExceptionCommand" date="Mon Nov 20 16:23:11 EST 2023" starttimestamp="1700507886094" timestamp="7505529" type="Exception">
    <exceptionString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string aaaaa

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4318" _type="ConsoleOutput" date="Mon Nov 20 16:23:11 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7505533" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶aaaaa¶aaaaa¶¶Test execution time (ms):2¶Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string aaaaa¶¶aaaaa¶aaaaa¶aaaaa¶¶Test execution time (ms):2"), Diff(INSERT,"	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4319" _type="ConsoleOutput" date="Mon Nov 20 16:23:11 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7505555" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"158"), Diff(EQUAL,"5"), Diff(DELETE,"0"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"95"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4320" _type="ExceptionCommand" date="Mon Nov 20 16:23:11 EST 2023" starttimestamp="1700507886094" timestamp="7505560" type="Exception">
    <exceptionString><![CDATA[aaaaa
aaaaa
aaaaa
aaaaa
aaaaa
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4321" _type="ShellCommand" date="Mon Nov 20 16:23:21 EST 2023" starttimestamp="1700507886094" timestamp="7515449" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4322" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:23:21 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7515587" type="Run" />
  <Command __id="4323" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:23:21 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7515587" type="Run" />
  <Command __id="4324" _type="MoveCaretCommand" caretOffset="1108" date="Mon Nov 20 16:23:22 EST 2023" docOffset="1108" starttimestamp="1700507886094" timestamp="7516316" />
  <Command __id="4325" _type="MoveCaretCommand" caretOffset="1108" date="Mon Nov 20 16:23:22 EST 2023" docOffset="1108" starttimestamp="1700507886094" timestamp="7516316" />
  <Command __id="4326" _type="ShellCommand" date="Mon Nov 20 16:23:23 EST 2023" starttimestamp="1700507886094" timestamp="7517283" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4327" _type="ShellCommand" date="Mon Nov 20 16:23:23 EST 2023" starttimestamp="1700507886094" timestamp="7517532" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4329" _type="MoveCaretCommand" caretOffset="894" date="Mon Nov 20 16:23:24 EST 2023" docOffset="894" starttimestamp="1700507886094" timestamp="7518449" />
  <Command __id="4304" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:23:05 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7499732">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4328" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:23:24 EST 2023" docASTNodeCount="203" docActiveCodeLength="1298" docExpressionCount="143" docLength="1298" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7518380">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return"), Diff(INSERT," "aaaaa" +"), Diff(EQUAL," ((AbstractSExpression)this).toStringAsListHelperPublic();	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return this.toStringAsListHelperPublic();		}else {			return this.getHead().toStringAsList();		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "aaaaa" + ((AbstractSExpression)this).toStringAsListHelperPublic();
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toStringAsList();
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="4330" _type="SelectTextCommand" caretOffset="938" date="Mon Nov 20 16:23:26 EST 2023" end="948" start="938" starttimestamp="1700507886094" timestamp="7520177" />
  <Command __id="4331" _type="SelectTextCommand" caretOffset="938" date="Mon Nov 20 16:23:26 EST 2023" end="948" start="938" starttimestamp="1700507886094" timestamp="7520178" />
  <Command __id="4333" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:23:27 EST 2023" starttimestamp="1700507886094" timestamp="7521278" />
  <Command __id="4334" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:23:27 EST 2023" starttimestamp="1700507886094" timestamp="7521278" />
  <Command __id="4335" _type="MoveCaretCommand" caretOffset="972" date="Mon Nov 20 16:23:27 EST 2023" docOffset="972" starttimestamp="1700507886094" timestamp="7521744" />
  <Command __id="4336" _type="MoveCaretCommand" caretOffset="972" date="Mon Nov 20 16:23:27 EST 2023" docOffset="972" starttimestamp="1700507886094" timestamp="7521744" />
  <Command __id="4337" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:23:27 EST 2023" starttimestamp="1700507886094" timestamp="7521872" />
  <Command __id="4338" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:23:28 EST 2023" starttimestamp="1700507886094" timestamp="7521969" />
  <Command __id="4339" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:23:28 EST 2023" starttimestamp="1700507886094" timestamp="7521977" />
  <Command __id="4340" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:23:29 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="7523447" />
  <Command __id="4341" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:23:29 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="7523447" />
  <Command __id="4342" _type="MoveCaretCommand" caretOffset="1285" date="Mon Nov 20 16:23:30 EST 2023" docOffset="1285" starttimestamp="1700507886094" timestamp="7524349" />
  <Command __id="4343" _type="MoveCaretCommand" caretOffset="1285" date="Mon Nov 20 16:23:30 EST 2023" docOffset="1285" starttimestamp="1700507886094" timestamp="7524349" />
  <Command __id="4344" _type="MoveCaretCommand" caretOffset="1281" date="Mon Nov 20 16:23:39 EST 2023" docOffset="1281" starttimestamp="1700507886094" timestamp="7533419" />
  <Command __id="4345" _type="MoveCaretCommand" caretOffset="1281" date="Mon Nov 20 16:23:39 EST 2023" docOffset="1281" starttimestamp="1700507886094" timestamp="7533420" />
  <Command __id="4346" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:23:40 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="7534366" />
  <Command __id="4347" _type="MoveCaretCommand" caretOffset="1157" date="Mon Nov 20 16:23:40 EST 2023" docOffset="1157" starttimestamp="1700507886094" timestamp="7534366" />
  <Command __id="4348" _type="ShellCommand" date="Mon Nov 20 16:24:02 EST 2023" starttimestamp="1700507886094" timestamp="7556574" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4349" _type="ShellCommand" date="Mon Nov 20 16:24:03 EST 2023" starttimestamp="1700507886094" timestamp="7557084" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4350" _type="ShellCommand" date="Mon Nov 20 16:24:03 EST 2023" starttimestamp="1700507886094" timestamp="7557307" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4351" _type="ShellCommand" date="Mon Nov 20 16:24:16 EST 2023" starttimestamp="1700507886094" timestamp="7570797" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4352" _type="ShellCommand" date="Mon Nov 20 16:24:51 EST 2023" starttimestamp="1700507886094" timestamp="7605734" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4353" _type="ShellCommand" date="Mon Nov 20 16:25:25 EST 2023" starttimestamp="1700507886094" timestamp="7639712" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4354" _type="ShellCommand" date="Mon Nov 20 16:25:29 EST 2023" starttimestamp="1700507886094" timestamp="7643424" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4355" _type="ShellCommand" date="Mon Nov 20 16:25:30 EST 2023" starttimestamp="1700507886094" timestamp="7644040" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4356" _type="ShellCommand" date="Mon Nov 20 16:25:31 EST 2023" starttimestamp="1700507886094" timestamp="7644947" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4357" _type="ShellCommand" date="Mon Nov 20 16:26:58 EST 2023" starttimestamp="1700507886094" timestamp="7732338" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4358" _type="MoveCaretCommand" caretOffset="1281" date="Mon Nov 20 16:26:59 EST 2023" docOffset="1281" starttimestamp="1700507886094" timestamp="7733598" />
  <Command __id="4359" _type="MoveCaretCommand" caretOffset="1281" date="Mon Nov 20 16:26:59 EST 2023" docOffset="1281" starttimestamp="1700507886094" timestamp="7733599" />
  <Command __id="4360" _type="MoveCaretCommand" caretOffset="1269" date="Mon Nov 20 16:27:00 EST 2023" docOffset="1269" starttimestamp="1700507886094" timestamp="7734134" />
  <Command __id="4361" _type="MoveCaretCommand" caretOffset="1269" date="Mon Nov 20 16:27:00 EST 2023" docOffset="1269" starttimestamp="1700507886094" timestamp="7734134" />
  <DocumentChange __id="4332" _type="Delete" date="Mon Nov 20 16:23:27 EST 2023" docASTNodeCount="201" docActiveCodeLength="1288" docExpressionCount="141" docLength="1288" endLine="36" length="10" offset="938" startLine="36" starttimestamp="1700507886094" timestamp="7521269">
    <text><![CDATA["aaaaa" + ]]></text>
  </DocumentChange>
  <Command __id="4362" _type="MoveCaretCommand" caretOffset="1266" date="Mon Nov 20 16:27:02 EST 2023" docOffset="1266" starttimestamp="1700507886094" timestamp="7735988" />
  <Command __id="4363" _type="MoveCaretCommand" caretOffset="1266" date="Mon Nov 20 16:27:02 EST 2023" docOffset="1266" starttimestamp="1700507886094" timestamp="7735989" />
  <Command __id="4364" _type="SelectTextCommand" caretOffset="1274" date="Mon Nov 20 16:27:02 EST 2023" end="1274" start="1260" starttimestamp="1700507886094" timestamp="7736470" />
  <Command __id="4365" _type="SelectTextCommand" caretOffset="1274" date="Mon Nov 20 16:27:02 EST 2023" end="1274" start="1260" starttimestamp="1700507886094" timestamp="7736470" />
  <Command __id="4366" _type="SelectTextCommand" caretOffset="1278" date="Mon Nov 20 16:27:02 EST 2023" end="1278" start="1235" starttimestamp="1700507886094" timestamp="7736615" />
  <Command __id="4367" _type="SelectTextCommand" caretOffset="1278" date="Mon Nov 20 16:27:02 EST 2023" end="1278" start="1235" starttimestamp="1700507886094" timestamp="7736615" />
  <Command __id="4368" _type="MoveCaretCommand" caretOffset="1269" date="Mon Nov 20 16:27:03 EST 2023" docOffset="1269" starttimestamp="1700507886094" timestamp="7737590" />
  <Command __id="4369" _type="MoveCaretCommand" caretOffset="1269" date="Mon Nov 20 16:27:03 EST 2023" docOffset="1269" starttimestamp="1700507886094" timestamp="7737590" />
  <Command __id="4370" _type="SelectTextCommand" caretOffset="1274" date="Mon Nov 20 16:27:03 EST 2023" end="1274" start="1260" starttimestamp="1700507886094" timestamp="7737735" />
  <Command __id="4371" _type="SelectTextCommand" caretOffset="1274" date="Mon Nov 20 16:27:03 EST 2023" end="1274" start="1260" starttimestamp="1700507886094" timestamp="7737735" />
  <DocumentChange __id="4372" _type="Replace" date="Mon Nov 20 16:27:07 EST 2023" docASTNodeCount="201" docActiveCodeLength="1275" docExpressionCount="141" docLength="1275" endLine="47" insertionLength="1" int_docASTNodeCount="201" int_docActiveCodeLength="1274" int_docExpressionCount="141" int_docLength="1274" length="14" offset="1260" startLine="47" starttimestamp="1700507886094" timestamp="7741182">
    <deletedText><![CDATA[toStringAsList]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="4373" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741191" timestamp2="7741191">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4374" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741191" timestamp2="7741191">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4376" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741276" timestamp2="7741276">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4377" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741277" timestamp2="7741277">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4379" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741455" timestamp2="7741455">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4380" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741455" timestamp2="7741455">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4382" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741655" timestamp2="7741655">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4383" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741655" timestamp2="7741655">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4385" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741797" timestamp2="7741797">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4386" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741797" timestamp2="7741797">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4388" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741858" timestamp2="7741858">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4389" _type="InsertStringCommand" date="Mon Nov 20 16:27:07 EST 2023" starttimestamp="1700507886094" timestamp="7741858" timestamp2="7741858">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4391" _type="InsertStringCommand" date="Mon Nov 20 16:27:08 EST 2023" starttimestamp="1700507886094" timestamp="7741926" timestamp2="7741926">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4392" _type="InsertStringCommand" date="Mon Nov 20 16:27:08 EST 2023" starttimestamp="1700507886094" timestamp="7741926" timestamp2="7741926">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4394" _type="InsertStringCommand" date="Mon Nov 20 16:27:08 EST 2023" starttimestamp="1700507886094" timestamp="7741997" timestamp2="7741997">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4395" _type="InsertStringCommand" date="Mon Nov 20 16:27:08 EST 2023" starttimestamp="1700507886094" timestamp="7741997" timestamp2="7741997">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4396" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:27:08 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="7742623" />
  <Command __id="4397" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:27:08 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="7742623" />
  <Command __id="4398" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:27:08 EST 2023" starttimestamp="1700507886094" timestamp="7742738" />
  <Command __id="4399" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:27:08 EST 2023" starttimestamp="1700507886094" timestamp="7742837" />
  <Command __id="4400" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:27:08 EST 2023" starttimestamp="1700507886094" timestamp="7742844" />
  <DocumentChange __id="4375" _type="Insert" date="Mon Nov 20 16:27:07 EST 2023" docASTNodeCount="201" docActiveCodeLength="1282" docExpressionCount="141" docLength="1282" length="7" offset="1261" repeat="7" starttimestamp="1700507886094" timestamp="7741275" timestamp2="7741995">
    <text><![CDATA[oString]]></text>
  </DocumentChange>
  <Command __id="4401" _type="MoveCaretCommand" caretOffset="482" date="Mon Nov 20 16:27:11 EST 2023" docOffset="482" starttimestamp="1700507886094" timestamp="7745681" />
  <Command __id="4402" _type="MoveCaretCommand" caretOffset="482" date="Mon Nov 20 16:27:11 EST 2023" docOffset="482" starttimestamp="1700507886094" timestamp="7745682" />
  <Command __id="4404" _type="MoveCaretCommand" caretOffset="1108" date="Mon Nov 20 16:27:13 EST 2023" docOffset="1108" starttimestamp="1700507886094" timestamp="7746981" />
  <Command __id="4405" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:27:15 EST 2023" starttimestamp="1700507886094" timestamp="7749300" />
  <Command __id="4406" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:27:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7749429" type="Run" />
  <Command __id="4407" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:27:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7749429" type="Run" />
  <Command __id="4408" _type="ShellCommand" date="Mon Nov 20 16:27:15 EST 2023" starttimestamp="1700507886094" timestamp="7749742" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4409" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752620" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4410" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752621" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4411" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752623" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="4412" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752638" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4413" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752641" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4414" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752642" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4415" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752644" type="ConsoleOutput">
    <outputString><![CDATA[5
5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"5¶5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4416" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752645" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5¶5"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4417" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752646" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4418" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752648" type="ConsoleOutput">
    <outputString><![CDATA[5
5
5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(INSERT,"5¶5¶"), Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="4419" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752649" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5"), Diff(EQUAL,"¶"), Diff(DELETE,"5¶5"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4420" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752649" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4421" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752651" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4422" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752652" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4423" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752667" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"4"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(INSERT,"4"), Diff(EQUAL,"7"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"62"), Diff(EQUAL,")¶	at java.base/jdk.internal.reflect."), Diff(DELETE,"NativeMethodAccessorImpl.invoke0(Native Method"), Diff(INSERT,"DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4424" _type="ConsoleOutput" date="Mon Nov 20 16:27:18 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7752714" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

5
5
5
5
5
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"190"), Diff(EQUAL,"6"), Diff(DELETE,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"1585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"2"), Diff(INSERT,"531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(INSERT,"35"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(INSERT,"2"), Diff(EQUAL,"78)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"29"), Diff(INSERT,"640"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"7"), Diff(INSERT,"501"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"5"), Diff(INSERT,"491"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"26"), Diff(INSERT,"448"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"363"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Componen"), Diff(EQUAL,"t.java:"), Diff(DELETE,"317"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"348"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.DelegatingMethod"), Diff(INSERT,"ava.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"270"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMetho"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThrea"), Diff(EQUAL,"d.java:2"), Diff(DELETE,"19"), Diff(INSERT,"03"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"444"), Diff(INSERT,"09"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicComman"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"69"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶¶5¶5¶5¶5¶5¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4403" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:27:12 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7746890">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4428" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:27:41 EST 2023" projectName="null" starttimestamp="1700507886094" timestamp="7775194">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4431" _type="ShellCommand" date="Mon Nov 20 16:27:42 EST 2023" starttimestamp="1700507886094" timestamp="7776814" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4433" _type="MoveCaretCommand" caretOffset="1108" date="Mon Nov 20 16:27:44 EST 2023" docOffset="1108" starttimestamp="1700507886094" timestamp="7778603" />
  <Command __id="4434" _type="ShellCommand" date="Mon Nov 20 16:27:44 EST 2023" starttimestamp="1700507886094" timestamp="7778745" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4439" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:27:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7783761" type="Run" />
  <Command __id="4440" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:27:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7783761" type="Run" />
  <Command __id="4441" _type="ShellCommand" date="Mon Nov 20 16:27:50 EST 2023" starttimestamp="1700507886094" timestamp="7784057" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4442" _type="ConsoleOutput" date="Mon Nov 20 16:27:55 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7789464" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶¶5¶5¶5¶5¶5¶Test execution time (ms):1"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4443" _type="ConsoleOutput" date="Mon Nov 20 16:27:55 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7789465" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4444" _type="ConsoleOutput" date="Mon Nov 20 16:27:55 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7789466" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4445" _type="ConsoleOutput" date="Mon Nov 20 16:27:55 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7789467" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4446" _type="ConsoleOutput" date="Mon Nov 20 16:27:55 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7789482" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4447" _type="ConsoleOutput" date="Mon Nov 20 16:27:55 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7789484" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4448" _type="ConsoleOutput" date="Mon Nov 20 16:27:55 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7789488" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4449" _type="ConsoleOutput" date="Mon Nov 20 16:27:59 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7792993" type="ConsoleOutput">
    <outputString><![CDATA[5
5

Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"5¶5¶¶Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4450" _type="ConsoleOutput" date="Mon Nov 20 16:27:59 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7792994" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string 5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5¶5¶¶Test execution time (ms):"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="4451" _type="ShellCommand" date="Mon Nov 20 16:28:13 EST 2023" starttimestamp="1700507886094" timestamp="7807764" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4453" _type="MoveCaretCommand" caretOffset="482" date="Mon Nov 20 16:28:13 EST 2023" docOffset="482" starttimestamp="1700507886094" timestamp="7807893" />
  <Command __id="4432" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:27:44 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7778548">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4452" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:28:13 EST 2023" docASTNodeCount="201" docActiveCodeLength="1282" docExpressionCount="141" docLength="1282" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7807842">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return"), Diff(DELETE," "aaaaa" +"), Diff(EQUAL," ((AbstractSExpression)this).toStringAsListHelperPublic();	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return this.toStringAsListHelperPublic();		}else {			return this.getHead().toString"), Diff(DELETE,"AsList"), Diff(EQUAL,"();		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return ((AbstractSExpression)this).toStringAsListHelperPublic();
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toString();
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="4454" _type="MoveCaretCommand" caretOffset="1190" date="Mon Nov 20 16:28:18 EST 2023" docOffset="1190" starttimestamp="1700507886094" timestamp="7812334" />
  <Command __id="4455" _type="MoveCaretCommand" caretOffset="1190" date="Mon Nov 20 16:28:18 EST 2023" docOffset="1190" starttimestamp="1700507886094" timestamp="7812335" />
  <Command __id="4457" _type="InsertStringCommand" date="Mon Nov 20 16:28:21 EST 2023" starttimestamp="1700507886094" timestamp="7815064" timestamp2="7815064">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4458" _type="InsertStringCommand" date="Mon Nov 20 16:28:21 EST 2023" starttimestamp="1700507886094" timestamp="7815064" timestamp2="7815064">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4460" _type="InsertStringCommand" date="Mon Nov 20 16:28:21 EST 2023" starttimestamp="1700507886094" timestamp="7815178" timestamp2="7815178">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4461" _type="InsertStringCommand" date="Mon Nov 20 16:28:21 EST 2023" starttimestamp="1700507886094" timestamp="7815178" timestamp2="7815178">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4462" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:28:21 EST 2023" starttimestamp="1700507886094" timestamp="7815733" />
  <Command __id="4463" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:28:21 EST 2023" starttimestamp="1700507886094" timestamp="7815733" />
  <Command __id="4465" _type="InsertStringCommand" date="Mon Nov 20 16:28:22 EST 2023" starttimestamp="1700507886094" timestamp="7816432" timestamp2="7816432">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4466" _type="InsertStringCommand" date="Mon Nov 20 16:28:22 EST 2023" starttimestamp="1700507886094" timestamp="7816432" timestamp2="7816432">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4467" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:28:22 EST 2023" starttimestamp="1700507886094" timestamp="7816698" />
  <Command __id="4468" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:28:22 EST 2023" starttimestamp="1700507886094" timestamp="7816698" />
  <Command __id="4470" _type="InsertStringCommand" date="Mon Nov 20 16:28:23 EST 2023" starttimestamp="1700507886094" timestamp="7817364" timestamp2="7817364">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4471" _type="InsertStringCommand" date="Mon Nov 20 16:28:23 EST 2023" starttimestamp="1700507886094" timestamp="7817364" timestamp2="7817364">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4473" _type="InsertStringCommand" date="Mon Nov 20 16:28:23 EST 2023" starttimestamp="1700507886094" timestamp="7817505" timestamp2="7817505">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4474" _type="InsertStringCommand" date="Mon Nov 20 16:28:23 EST 2023" starttimestamp="1700507886094" timestamp="7817505" timestamp2="7817505">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4476" _type="InsertStringCommand" date="Mon Nov 20 16:28:23 EST 2023" starttimestamp="1700507886094" timestamp="7817599" timestamp2="7817599">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4477" _type="InsertStringCommand" date="Mon Nov 20 16:28:23 EST 2023" starttimestamp="1700507886094" timestamp="7817599" timestamp2="7817599">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="4456" _type="Insert" date="Mon Nov 20 16:28:21 EST 2023" docASTNodeCount="203" docActiveCodeLength="1288" docExpressionCount="143" docLength="1288" length="6" offset="1190" repeat="6" starttimestamp="1700507886094" timestamp="7815061" timestamp2="7817598">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <Command __id="4478" _type="MoveCaretCommand" caretOffset="1229" date="Mon Nov 20 16:28:24 EST 2023" docOffset="1229" starttimestamp="1700507886094" timestamp="7818724" />
  <Command __id="4479" _type="MoveCaretCommand" caretOffset="1229" date="Mon Nov 20 16:28:24 EST 2023" docOffset="1229" starttimestamp="1700507886094" timestamp="7818724" />
  <Command __id="4480" _type="LocalChecksRawCommand" date="Mon Nov 20 16:28:24 EST 2023" starttimestamp="1700507886094" timestamp="7818726">
    <CSVRow><![CDATA[58,Mon Nov 20 16:27:59 EST 2023,6,0,BaseCaseListToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,24,1,false, , , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4481" _type="LocalChecksRawCommand" date="Mon Nov 20 16:28:24 EST 2023" starttimestamp="1700507886094" timestamp="7818726">
    <CSVRow><![CDATA[58,Mon Nov 20 16:27:59 EST 2023,6,0,BaseCaseListToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,24,1,false, , , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4483" _type="InsertStringCommand" date="Mon Nov 20 16:28:25 EST 2023" starttimestamp="1700507886094" timestamp="7819205" timestamp2="7819205">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4484" _type="InsertStringCommand" date="Mon Nov 20 16:28:25 EST 2023" starttimestamp="1700507886094" timestamp="7819205" timestamp2="7819205">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4486" _type="InsertStringCommand" date="Mon Nov 20 16:28:25 EST 2023" starttimestamp="1700507886094" timestamp="7819298" timestamp2="7819298">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4487" _type="InsertStringCommand" date="Mon Nov 20 16:28:25 EST 2023" starttimestamp="1700507886094" timestamp="7819298" timestamp2="7819298">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4489" _type="InsertStringCommand" date="Mon Nov 20 16:28:25 EST 2023" starttimestamp="1700507886094" timestamp="7819400" timestamp2="7819400">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4490" _type="InsertStringCommand" date="Mon Nov 20 16:28:25 EST 2023" starttimestamp="1700507886094" timestamp="7819400" timestamp2="7819400">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4492" _type="InsertStringCommand" date="Mon Nov 20 16:28:25 EST 2023" starttimestamp="1700507886094" timestamp="7819618" timestamp2="7819618">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4493" _type="InsertStringCommand" date="Mon Nov 20 16:28:25 EST 2023" starttimestamp="1700507886094" timestamp="7819619" timestamp2="7819619">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4495" _type="InsertStringCommand" date="Mon Nov 20 16:28:26 EST 2023" starttimestamp="1700507886094" timestamp="7820636" timestamp2="7820636">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4496" _type="InsertStringCommand" date="Mon Nov 20 16:28:26 EST 2023" starttimestamp="1700507886094" timestamp="7820636" timestamp2="7820636">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4497" _type="MoveCaretCommand" caretOffset="1236" date="Mon Nov 20 16:28:27 EST 2023" docOffset="1236" starttimestamp="1700507886094" timestamp="7821192" />
  <Command __id="4498" _type="MoveCaretCommand" caretOffset="1236" date="Mon Nov 20 16:28:27 EST 2023" docOffset="1236" starttimestamp="1700507886094" timestamp="7821192" />
  <Command __id="4499" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:28:27 EST 2023" starttimestamp="1700507886094" timestamp="7821277" />
  <Command __id="4500" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:28:27 EST 2023" starttimestamp="1700507886094" timestamp="7821375" />
  <Command __id="4501" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:28:27 EST 2023" starttimestamp="1700507886094" timestamp="7821381" />
  <DocumentChange __id="4482" _type="Insert" date="Mon Nov 20 16:28:25 EST 2023" docASTNodeCount="204" docActiveCodeLength="1294" docExpressionCount="144" docLength="1294" length="6" offset="1229" repeat="5" starttimestamp="1700507886094" timestamp="7819201" timestamp2="7820635">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="4502" _type="ShellCommand" date="Mon Nov 20 16:28:34 EST 2023" starttimestamp="1700507886094" timestamp="7828307" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4503" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:28:34 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7828524" type="Run" />
  <Command __id="4504" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:28:34 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7828524" type="Run" />
  <Command __id="4505" _type="ShellCommand" date="Mon Nov 20 16:28:34 EST 2023" starttimestamp="1700507886094" timestamp="7828540" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4507" _type="MoveCaretCommand" caretOffset="481" date="Mon Nov 20 16:28:36 EST 2023" docOffset="481" starttimestamp="1700507886094" timestamp="7830871" />
  <Command __id="4508" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:28:38 EST 2023" starttimestamp="1700507886094" timestamp="7832548" />
  <Command __id="4509" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:28:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7832678" type="Run" />
  <Command __id="4510" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:28:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7832678" type="Run" />
  <Command __id="4511" _type="ShellCommand" date="Mon Nov 20 16:28:39 EST 2023" starttimestamp="1700507886094" timestamp="7832967" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4512" _type="ConsoleOutput" date="Mon Nov 20 16:28:42 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7836617" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(INSERT,"execution time (ms):"), Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="4513" _type="ConsoleOutput" date="Mon Nov 20 16:28:42 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7836618" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4514" _type="ConsoleOutput" date="Mon Nov 20 16:28:42 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7836619" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4515" _type="ConsoleOutput" date="Mon Nov 20 16:28:42 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7836620" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4516" _type="ConsoleOutput" date="Mon Nov 20 16:28:42 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7836635" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4517" _type="ConsoleOutput" date="Mon Nov 20 16:28:42 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7836638" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4518" _type="ConsoleOutput" date="Mon Nov 20 16:28:42 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7836642" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4521" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:28:50 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7844098" type="Run" />
  <Command __id="4522" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:28:50 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7844098" type="Run" />
  <Command __id="4523" _type="ShellCommand" date="Mon Nov 20 16:28:50 EST 2023" starttimestamp="1700507886094" timestamp="7844117" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4524" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:28:51 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="7845767" />
  <Command __id="4525" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:28:51 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="7845767" />
  <Command __id="4527" _type="MoveCaretCommand" caretOffset="1236" date="Mon Nov 20 16:28:52 EST 2023" docOffset="1236" starttimestamp="1700507886094" timestamp="7846274" />
  <Command __id="4528" _type="MoveCaretCommand" caretOffset="1287" date="Mon Nov 20 16:28:54 EST 2023" docOffset="1287" starttimestamp="1700507886094" timestamp="7848898" />
  <Command __id="4529" _type="MoveCaretCommand" caretOffset="1287" date="Mon Nov 20 16:28:54 EST 2023" docOffset="1287" starttimestamp="1700507886094" timestamp="7848898" />
  <Command __id="4530" _type="LocalChecksRawCommand" date="Mon Nov 20 16:28:54 EST 2023" starttimestamp="1700507886094" timestamp="7848899">
    <CSVRow><![CDATA[59,Mon Nov 20 16:28:42 EST 2023,6,0,BaseCaseSExpressionToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,25,0,false, ,ClassRegistryProvided MainClassProvided , ,BaseCaseSExpressionToStringChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4531" _type="LocalChecksRawCommand" date="Mon Nov 20 16:28:54 EST 2023" starttimestamp="1700507886094" timestamp="7848899">
    <CSVRow><![CDATA[59,Mon Nov 20 16:28:42 EST 2023,6,0,BaseCaseSExpressionToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,25,0,false, ,ClassRegistryProvided MainClassProvided , ,BaseCaseSExpressionToStringChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4532" _type="LocalChecksRawCommand" date="Mon Nov 20 16:28:54 EST 2023" starttimestamp="1700507886094" timestamp="7848899">
    <CSVRow><![CDATA[60,Mon Nov 20 16:28:45 EST 2023,6,0,BaseCaseListToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,25,1,false, , , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4533" _type="LocalChecksRawCommand" date="Mon Nov 20 16:28:54 EST 2023" starttimestamp="1700507886094" timestamp="7848899">
    <CSVRow><![CDATA[60,Mon Nov 20 16:28:45 EST 2023,6,0,BaseCaseListToStringChecker,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,25,1,false, , , ,BaseCaseListToStringChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4534" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 16:28:55 EST 2023" docOffset="1179" starttimestamp="1700507886094" timestamp="7849434" />
  <Command __id="4535" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 16:28:55 EST 2023" docOffset="1179" starttimestamp="1700507886094" timestamp="7849434" />
  <Command __id="4536" _type="MoveCaretCommand" caretOffset="1199" date="Mon Nov 20 16:28:56 EST 2023" docOffset="1199" starttimestamp="1700507886094" timestamp="7849984" />
  <Command __id="4537" _type="MoveCaretCommand" caretOffset="1199" date="Mon Nov 20 16:28:56 EST 2023" docOffset="1199" starttimestamp="1700507886094" timestamp="7849984" />
  <Command __id="4538" _type="MoveCaretCommand" caretOffset="1198" date="Mon Nov 20 16:28:56 EST 2023" docOffset="1198" starttimestamp="1700507886094" timestamp="7850391" />
  <Command __id="4539" _type="MoveCaretCommand" caretOffset="1198" date="Mon Nov 20 16:28:56 EST 2023" docOffset="1198" starttimestamp="1700507886094" timestamp="7850391" />
  <Command __id="4540" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:28:57 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="7850934" />
  <Command __id="4541" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:28:57 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="7850934" />
  <Command __id="4542" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 16:28:57 EST 2023" docOffset="1179" starttimestamp="1700507886094" timestamp="7851414" />
  <Command __id="4543" _type="MoveCaretCommand" caretOffset="1179" date="Mon Nov 20 16:28:57 EST 2023" docOffset="1179" starttimestamp="1700507886094" timestamp="7851414" />
  <Command __id="4544" _type="MoveCaretCommand" caretOffset="998" date="Mon Nov 20 16:28:58 EST 2023" docOffset="998" starttimestamp="1700507886094" timestamp="7852208" />
  <Command __id="4545" _type="MoveCaretCommand" caretOffset="998" date="Mon Nov 20 16:28:58 EST 2023" docOffset="998" starttimestamp="1700507886094" timestamp="7852208" />
  <Command __id="4546" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:28:58 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7852648" />
  <Command __id="4547" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:28:58 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7852649" />
  <Command __id="4548" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:28:59 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7853485" />
  <Command __id="4549" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:28:59 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7853485" />
  <Command __id="4550" _type="MoveCaretCommand" caretOffset="967" date="Mon Nov 20 16:29:00 EST 2023" docOffset="967" starttimestamp="1700507886094" timestamp="7854885" />
  <Command __id="4551" _type="MoveCaretCommand" caretOffset="967" date="Mon Nov 20 16:29:00 EST 2023" docOffset="967" starttimestamp="1700507886094" timestamp="7854885" />
  <Command __id="4552" _type="MoveCaretCommand" caretOffset="956" date="Mon Nov 20 16:29:01 EST 2023" docOffset="956" starttimestamp="1700507886094" timestamp="7855369" />
  <Command __id="4553" _type="MoveCaretCommand" caretOffset="956" date="Mon Nov 20 16:29:01 EST 2023" docOffset="956" starttimestamp="1700507886094" timestamp="7855369" />
  <Command __id="4554" _type="MoveCaretCommand" caretOffset="970" date="Mon Nov 20 16:29:02 EST 2023" docOffset="970" starttimestamp="1700507886094" timestamp="7856551" />
  <Command __id="4555" _type="MoveCaretCommand" caretOffset="970" date="Mon Nov 20 16:29:02 EST 2023" docOffset="970" starttimestamp="1700507886094" timestamp="7856552" />
  <Command __id="4556" _type="MoveCaretCommand" caretOffset="955" date="Mon Nov 20 16:29:03 EST 2023" docOffset="955" starttimestamp="1700507886094" timestamp="7856984" />
  <Command __id="4557" _type="MoveCaretCommand" caretOffset="955" date="Mon Nov 20 16:29:03 EST 2023" docOffset="955" starttimestamp="1700507886094" timestamp="7856984" />
  <Command __id="4558" _type="SelectTextCommand" caretOffset="1190" date="Mon Nov 20 16:29:05 EST 2023" end="1196" start="1190" starttimestamp="1700507886094" timestamp="7859120" />
  <Command __id="4559" _type="SelectTextCommand" caretOffset="1190" date="Mon Nov 20 16:29:05 EST 2023" end="1196" start="1190" starttimestamp="1700507886094" timestamp="7859120" />
  <Command __id="4561" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:05 EST 2023" starttimestamp="1700507886094" timestamp="7859428" />
  <Command __id="4562" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:05 EST 2023" starttimestamp="1700507886094" timestamp="7859428" />
  <Command __id="4563" _type="MoveCaretCommand" caretOffset="1229" date="Mon Nov 20 16:29:06 EST 2023" docOffset="1229" starttimestamp="1700507886094" timestamp="7860452" />
  <Command __id="4564" _type="MoveCaretCommand" caretOffset="1229" date="Mon Nov 20 16:29:06 EST 2023" docOffset="1229" starttimestamp="1700507886094" timestamp="7860452" />
  <Command __id="4566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:06 EST 2023" starttimestamp="1700507886094" timestamp="7860534" />
  <Command __id="4567" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:06 EST 2023" starttimestamp="1700507886094" timestamp="7860534" />
  <Command __id="4569" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:06 EST 2023" starttimestamp="1700507886094" timestamp="7860687" />
  <Command __id="4570" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:06 EST 2023" starttimestamp="1700507886094" timestamp="7860687" />
  <Command __id="4572" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:06 EST 2023" starttimestamp="1700507886094" timestamp="7860838" />
  <Command __id="4573" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:06 EST 2023" starttimestamp="1700507886094" timestamp="7860838" />
  <Command __id="4575" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:07 EST 2023" starttimestamp="1700507886094" timestamp="7860982" />
  <Command __id="4576" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:07 EST 2023" starttimestamp="1700507886094" timestamp="7860982" />
  <Command __id="4578" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:07 EST 2023" starttimestamp="1700507886094" timestamp="7861129" />
  <Command __id="4579" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:07 EST 2023" starttimestamp="1700507886094" timestamp="7861129" />
  <Command __id="4581" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:07 EST 2023" starttimestamp="1700507886094" timestamp="7861463" />
  <Command __id="4582" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:07 EST 2023" starttimestamp="1700507886094" timestamp="7861463" />
  <Command __id="4506" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:28:36 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7830807">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4526" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:28:52 EST 2023" docASTNodeCount="204" docActiveCodeLength="1294" docExpressionCount="144" docLength="1294" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7846221">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return ((AbstractSExpression)this).toStringAsListHelperPublic();	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return"), Diff(INSERT," "(" +"), Diff(EQUAL," this.toStringAsListHelperPublic()"), Diff(INSERT," + ")""), Diff(EQUAL,";		}else {			return this.getHead().toString();		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return ((AbstractSExpression)this).toStringAsListHelperPublic();
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return "(" + this.toStringAsListHelperPublic() + ")";
		}else {
			return this.getHead().toString();
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4560" _type="Delete" date="Mon Nov 20 16:29:05 EST 2023" docASTNodeCount="203" docActiveCodeLength="1288" docExpressionCount="143" docLength="1288" endLine="45" length="6" offset="1190" startLine="45" starttimestamp="1700507886094" timestamp="7859420">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="4565" _type="Delete" date="Mon Nov 20 16:29:06 EST 2023" docASTNodeCount="201" docActiveCodeLength="1282" docExpressionCount="141" docLength="1282" endLine="45" length="6" offset="1223" repeat="6" startLine="45" starttimestamp="1700507886094" timestamp="7860531" timestamp2="7861460">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="4583" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:29:08 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7862497" />
  <Command __id="4584" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:29:08 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7862497" />
  <Command __id="4585" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:29:09 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7863016" />
  <Command __id="4586" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:29:09 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7863016" />
  <Command __id="4587" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:29:09 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7863614" />
  <Command __id="4588" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:29:09 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="7863614" />
  <Command __id="4589" _type="MoveCaretCommand" caretOffset="938" date="Mon Nov 20 16:29:10 EST 2023" docOffset="938" starttimestamp="1700507886094" timestamp="7864498" />
  <Command __id="4590" _type="MoveCaretCommand" caretOffset="938" date="Mon Nov 20 16:29:10 EST 2023" docOffset="938" starttimestamp="1700507886094" timestamp="7864498" />
  <Command __id="4592" _type="InsertStringCommand" date="Mon Nov 20 16:29:14 EST 2023" starttimestamp="1700507886094" timestamp="7867924" timestamp2="7867924">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4593" _type="InsertStringCommand" date="Mon Nov 20 16:29:14 EST 2023" starttimestamp="1700507886094" timestamp="7867924" timestamp2="7867924">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4595" _type="InsertStringCommand" date="Mon Nov 20 16:29:14 EST 2023" starttimestamp="1700507886094" timestamp="7868032" timestamp2="7868032">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4596" _type="InsertStringCommand" date="Mon Nov 20 16:29:14 EST 2023" starttimestamp="1700507886094" timestamp="7868032" timestamp2="7868032">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4597" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:29:14 EST 2023" starttimestamp="1700507886094" timestamp="7868440" />
  <Command __id="4598" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:29:14 EST 2023" starttimestamp="1700507886094" timestamp="7868440" />
  <Command __id="4600" _type="InsertStringCommand" date="Mon Nov 20 16:29:15 EST 2023" starttimestamp="1700507886094" timestamp="7869414" timestamp2="7869414">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4601" _type="InsertStringCommand" date="Mon Nov 20 16:29:15 EST 2023" starttimestamp="1700507886094" timestamp="7869415" timestamp2="7869415">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4602" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:29:15 EST 2023" starttimestamp="1700507886094" timestamp="7869887" />
  <Command __id="4603" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:29:15 EST 2023" starttimestamp="1700507886094" timestamp="7869887" />
  <Command __id="4605" _type="InsertStringCommand" date="Mon Nov 20 16:29:16 EST 2023" starttimestamp="1700507886094" timestamp="7870595" timestamp2="7870595">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4606" _type="InsertStringCommand" date="Mon Nov 20 16:29:16 EST 2023" starttimestamp="1700507886094" timestamp="7870595" timestamp2="7870595">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4608" _type="InsertStringCommand" date="Mon Nov 20 16:29:16 EST 2023" starttimestamp="1700507886094" timestamp="7870743" timestamp2="7870743">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4609" _type="InsertStringCommand" date="Mon Nov 20 16:29:16 EST 2023" starttimestamp="1700507886094" timestamp="7870743" timestamp2="7870743">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4611" _type="InsertStringCommand" date="Mon Nov 20 16:29:16 EST 2023" starttimestamp="1700507886094" timestamp="7870882" timestamp2="7870882">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4612" _type="InsertStringCommand" date="Mon Nov 20 16:29:16 EST 2023" starttimestamp="1700507886094" timestamp="7870882" timestamp2="7870882">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4613" _type="MoveCaretCommand" caretOffset="999" date="Mon Nov 20 16:29:18 EST 2023" docOffset="999" starttimestamp="1700507886094" timestamp="7872721" />
  <Command __id="4614" _type="MoveCaretCommand" caretOffset="999" date="Mon Nov 20 16:29:18 EST 2023" docOffset="999" starttimestamp="1700507886094" timestamp="7872721" />
  <DocumentChange __id="4591" _type="Insert" date="Mon Nov 20 16:29:14 EST 2023" docASTNodeCount="203" docActiveCodeLength="1288" docExpressionCount="143" docLength="1288" length="6" offset="938" repeat="6" starttimestamp="1700507886094" timestamp="7867920" timestamp2="7870876">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <Command __id="4615" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 16:29:20 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="7874199" />
  <Command __id="4616" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 16:29:20 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="7874199" />
  <DocumentChange __id="4617" _type="Insert" date="Mon Nov 20 16:29:22 EST 2023" docASTNodeCount="204" docActiveCodeLength="1294" docExpressionCount="144" docLength="1294" length="6" offset="1000" repeat="5" starttimestamp="1700507886094" timestamp="7875920" timestamp2="7878792">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="4618" _type="InsertStringCommand" date="Mon Nov 20 16:29:22 EST 2023" starttimestamp="1700507886094" timestamp="7875924" timestamp2="7875924">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4619" _type="InsertStringCommand" date="Mon Nov 20 16:29:22 EST 2023" starttimestamp="1700507886094" timestamp="7875924" timestamp2="7875924">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4621" _type="InsertStringCommand" date="Mon Nov 20 16:29:22 EST 2023" starttimestamp="1700507886094" timestamp="7876065" timestamp2="7876065">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4622" _type="InsertStringCommand" date="Mon Nov 20 16:29:22 EST 2023" starttimestamp="1700507886094" timestamp="7876065" timestamp2="7876065">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="4624" _type="InsertStringCommand" date="Mon Nov 20 16:29:23 EST 2023" starttimestamp="1700507886094" timestamp="7877079" timestamp2="7877079">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4625" _type="InsertStringCommand" date="Mon Nov 20 16:29:23 EST 2023" starttimestamp="1700507886094" timestamp="7877079" timestamp2="7877079">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4626" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:29:23 EST 2023" starttimestamp="1700507886094" timestamp="7877650" />
  <Command __id="4627" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:29:23 EST 2023" starttimestamp="1700507886094" timestamp="7877650" />
  <Command __id="4628" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:29:24 EST 2023" starttimestamp="1700507886094" timestamp="7878110" />
  <Command __id="4629" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:29:24 EST 2023" starttimestamp="1700507886094" timestamp="7878110" />
  <Command __id="4631" _type="InsertStringCommand" date="Mon Nov 20 16:29:24 EST 2023" starttimestamp="1700507886094" timestamp="7878658" timestamp2="7878658">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4632" _type="InsertStringCommand" date="Mon Nov 20 16:29:24 EST 2023" starttimestamp="1700507886094" timestamp="7878658" timestamp2="7878658">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="4634" _type="InsertStringCommand" date="Mon Nov 20 16:29:24 EST 2023" starttimestamp="1700507886094" timestamp="7878794" timestamp2="7878794">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4635" _type="InsertStringCommand" date="Mon Nov 20 16:29:24 EST 2023" starttimestamp="1700507886094" timestamp="7878794" timestamp2="7878794">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4636" _type="MoveCaretCommand" caretOffset="1007" date="Mon Nov 20 16:29:25 EST 2023" docOffset="1007" starttimestamp="1700507886094" timestamp="7879261" />
  <Command __id="4637" _type="MoveCaretCommand" caretOffset="1007" date="Mon Nov 20 16:29:25 EST 2023" docOffset="1007" starttimestamp="1700507886094" timestamp="7879261" />
  <Command __id="4638" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:29:25 EST 2023" starttimestamp="1700507886094" timestamp="7879389" />
  <Command __id="4639" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:29:25 EST 2023" starttimestamp="1700507886094" timestamp="7879493" />
  <Command __id="4640" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:29:25 EST 2023" starttimestamp="1700507886094" timestamp="7879504" />
  <Command __id="4642" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:29:27 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="7881421" />
  <Command __id="4643" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:29:30 EST 2023" starttimestamp="1700507886094" timestamp="7884024" />
  <Command __id="4644" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:29:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7884158" type="Run" />
  <Command __id="4645" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:29:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7884158" type="Run" />
  <Command __id="4646" _type="ShellCommand" date="Mon Nov 20 16:29:30 EST 2023" starttimestamp="1700507886094" timestamp="7884442" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4647" _type="ConsoleOutput" date="Mon Nov 20 16:29:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7892101" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(INSERT,"execution time (ms):"), Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="4648" _type="ConsoleOutput" date="Mon Nov 20 16:29:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7892103" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4649" _type="ConsoleOutput" date="Mon Nov 20 16:29:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7892104" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):7¶")]]]></diff>
  </Command>
  <Command __id="4650" _type="ConsoleOutput" date="Mon Nov 20 16:29:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7892118" type="ConsoleOutput">
    <outputString><![CDATA[(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4651" _type="ConsoleOutput" date="Mon Nov 20 16:29:38 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7892125" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)"), Diff(INSERT,"Test execution time (ms):25¶Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4652" _type="ShellCommand" date="Mon Nov 20 16:29:44 EST 2023" starttimestamp="1700507886094" timestamp="7898383" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4654" _type="MoveCaretCommand" caretOffset="1007" date="Mon Nov 20 16:29:45 EST 2023" docOffset="1007" starttimestamp="1700507886094" timestamp="7898978" />
  <Command __id="4655" _type="MoveCaretCommand" caretOffset="1287" date="Mon Nov 20 16:29:54 EST 2023" docOffset="1287" starttimestamp="1700507886094" timestamp="7908753" />
  <Command __id="4656" _type="MoveCaretCommand" caretOffset="1287" date="Mon Nov 20 16:29:54 EST 2023" docOffset="1287" starttimestamp="1700507886094" timestamp="7908753" />
  <Command __id="4657" _type="MoveCaretCommand" caretOffset="1169" date="Mon Nov 20 16:29:55 EST 2023" docOffset="1169" starttimestamp="1700507886094" timestamp="7909486" />
  <Command __id="4658" _type="MoveCaretCommand" caretOffset="1169" date="Mon Nov 20 16:29:55 EST 2023" docOffset="1169" starttimestamp="1700507886094" timestamp="7909486" />
  <Command __id="4641" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:29:27 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7881330">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4653" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:29:45 EST 2023" docASTNodeCount="204" docActiveCodeLength="1294" docExpressionCount="144" docLength="1294" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7898931">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return"), Diff(INSERT," "(" +"), Diff(EQUAL," ((AbstractSExpression)this).toStringAsListHelperPublic()"), Diff(INSERT," + ")""), Diff(EQUAL,";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return"), Diff(DELETE," "(" +"), Diff(EQUAL," this.toStringAsListHelperPublic()"), Diff(DELETE," + ")""), Diff(EQUAL,";		}else {			return this.getHead().toString();		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toString();
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4661" _type="Delete" date="Mon Nov 20 16:29:59 EST 2023" docASTNodeCount="188" docActiveCodeLength="1177" docExpressionCount="133" docLength="1177" endLine="48" length="117" offset="1170" startLine="44" starttimestamp="1700507886094" timestamp="7913321">
    <text><![CDATA[		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toString();
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="4664" _type="Insert" date="Mon Nov 20 16:30:00 EST 2023" docASTNodeCount="188" docActiveCodeLength="1180" docExpressionCount="133" docLength="1180" length="3" offset="1170" repeat="2" starttimestamp="1700507886094" timestamp="7914579" timestamp2="7914821">
    <text><![CDATA[			]]></text>
  </DocumentChange>
  <DocumentChange __id="4670" _type="Delete" date="Mon Nov 20 16:30:01 EST 2023" docASTNodeCount="188" docActiveCodeLength="1179" docExpressionCount="133" docLength="1179" endLine="44" length="1" offset="1172" startLine="44" starttimestamp="1700507886094" timestamp="7915243">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <Command __id="4659" _type="SelectTextCommand" caretOffset="1170" date="Mon Nov 20 16:29:58 EST 2023" end="1287" start="1170" starttimestamp="1700507886094" timestamp="7912479" />
  <Command __id="4660" _type="SelectTextCommand" caretOffset="1170" date="Mon Nov 20 16:29:58 EST 2023" end="1287" start="1170" starttimestamp="1700507886094" timestamp="7912479" />
  <Command __id="4662" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:59 EST 2023" starttimestamp="1700507886094" timestamp="7913329" />
  <Command __id="4663" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:29:59 EST 2023" starttimestamp="1700507886094" timestamp="7913329" />
  <Command __id="4665" _type="InsertStringCommand" date="Mon Nov 20 16:30:00 EST 2023" starttimestamp="1700507886094" timestamp="7914581" timestamp2="7914581">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4666" _type="InsertStringCommand" date="Mon Nov 20 16:30:00 EST 2023" starttimestamp="1700507886094" timestamp="7914582" timestamp2="7914582">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4668" _type="InsertStringCommand" date="Mon Nov 20 16:30:00 EST 2023" starttimestamp="1700507886094" timestamp="7914823" timestamp2="7914823">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4669" _type="InsertStringCommand" date="Mon Nov 20 16:30:00 EST 2023" starttimestamp="1700507886094" timestamp="7914823" timestamp2="7914823">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="4671" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:01 EST 2023" starttimestamp="1700507886094" timestamp="7915245" />
  <Command __id="4672" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:01 EST 2023" starttimestamp="1700507886094" timestamp="7915245" />
  <Command __id="4674" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925519" timestamp2="7925519">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4675" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925519" timestamp2="7925519">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4677" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925533" timestamp2="7925533">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4678" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925533" timestamp2="7925533">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4680" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925683" timestamp2="7925683">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4681" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925683" timestamp2="7925683">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4683" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925739" timestamp2="7925739">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4684" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925739" timestamp2="7925739">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4686" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925848" timestamp2="7925848">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4687" _type="InsertStringCommand" date="Mon Nov 20 16:30:11 EST 2023" starttimestamp="1700507886094" timestamp="7925848" timestamp2="7925848">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4689" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7925914" timestamp2="7925914">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4690" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7925914" timestamp2="7925914">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4692" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926010" timestamp2="7926010">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4693" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926010" timestamp2="7926010">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4695" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926581" timestamp2="7926581">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4696" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926581" timestamp2="7926581">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4698" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926636" timestamp2="7926636">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4699" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926636" timestamp2="7926636">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4701" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926711" timestamp2="7926711">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4702" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926711" timestamp2="7926711">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4704" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926832" timestamp2="7926832">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4705" _type="InsertStringCommand" date="Mon Nov 20 16:30:12 EST 2023" starttimestamp="1700507886094" timestamp="7926832" timestamp2="7926832">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4707" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:13 EST 2023" starttimestamp="1700507886094" timestamp="7927140" />
  <Command __id="4708" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:13 EST 2023" starttimestamp="1700507886094" timestamp="7927140" />
  <Command __id="4710" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:13 EST 2023" starttimestamp="1700507886094" timestamp="7927365" />
  <Command __id="4711" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:13 EST 2023" starttimestamp="1700507886094" timestamp="7927365" />
  <Command __id="4713" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:13 EST 2023" starttimestamp="1700507886094" timestamp="7927479" />
  <Command __id="4714" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:13 EST 2023" starttimestamp="1700507886094" timestamp="7927479" />
  <Command __id="4716" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:13 EST 2023" starttimestamp="1700507886094" timestamp="7927631" />
  <Command __id="4717" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:13 EST 2023" starttimestamp="1700507886094" timestamp="7927631" />
  <Command __id="4719" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928080" timestamp2="7928080">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4720" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928080" timestamp2="7928080">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4722" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928127" timestamp2="7928127">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4723" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928127" timestamp2="7928127">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4725" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928183" timestamp2="7928183">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4726" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928183" timestamp2="7928183">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4728" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928254" timestamp2="7928254">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4729" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928254" timestamp2="7928254">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="4673" _type="Insert" date="Mon Nov 20 16:30:11 EST 2023" docASTNodeCount="190" docActiveCodeLength="1190" docExpressionCount="134" docLength="1190" length="11" offset="1172" repeat="11" starttimestamp="1700507886094" timestamp="7925517" timestamp2="7926831">
    <text><![CDATA[return head]]></text>
  </DocumentChange>
  <DocumentChange __id="4706" _type="Delete" date="Mon Nov 20 16:30:13 EST 2023" docASTNodeCount="189" docActiveCodeLength="1186" docExpressionCount="133" docLength="1186" endLine="44" length="4" offset="1179" repeat="4" startLine="44" starttimestamp="1700507886094" timestamp="7927137" timestamp2="7927629">
    <text><![CDATA[head]]></text>
  </DocumentChange>
  <DocumentChange __id="4718" _type="Insert" date="Mon Nov 20 16:30:14 EST 2023" docASTNodeCount="192" docActiveCodeLength="1195" docExpressionCount="136" docLength="1195" length="9" offset="1179" repeat="9" starttimestamp="1700507886094" timestamp="7928078" timestamp2="7929413">
    <text><![CDATA[this.geth]]></text>
  </DocumentChange>
  <DocumentChange __id="4739" _type="Replace" date="Mon Nov 20 16:30:15 EST 2023" docASTNodeCount="192" docActiveCodeLength="1200" docExpressionCount="136" docLength="1200" endLine="44" insertionLength="9" int_docASTNodeCount="190" int_docActiveCodeLength="1191" int_docExpressionCount="134" int_docLength="1191" length="4" offset="1184" startLine="44" starttimestamp="1700507886094" timestamp="7929686">
    <deletedText><![CDATA[geth]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="4731" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928368" timestamp2="7928368">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4732" _type="InsertStringCommand" date="Mon Nov 20 16:30:14 EST 2023" starttimestamp="1700507886094" timestamp="7928369" timestamp2="7928369">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4733" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:30:14 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="7928375" />
  <Command __id="4738" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:30:15 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="7929684" />
  <Command __id="4740" _type="InsertStringCommand" date="Mon Nov 20 16:30:15 EST 2023" starttimestamp="1700507886094" timestamp="7929693" timestamp2="7929693">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4741" _type="InsertStringCommand" date="Mon Nov 20 16:30:15 EST 2023" starttimestamp="1700507886094" timestamp="7929693" timestamp2="7929693">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4743" _type="InsertStringCommand" date="Mon Nov 20 16:30:16 EST 2023" starttimestamp="1700507886094" timestamp="7930251" timestamp2="7930251">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4744" _type="InsertStringCommand" date="Mon Nov 20 16:30:16 EST 2023" starttimestamp="1700507886094" timestamp="7930251" timestamp2="7930251">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4745" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:30:16 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="7930255" />
  <Command __id="4749" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:30:18 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="7932294" />
  <Command __id="4751" _type="InsertStringCommand" date="Mon Nov 20 16:30:18 EST 2023" starttimestamp="1700507886094" timestamp="7932305" timestamp2="7932305">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4752" _type="InsertStringCommand" date="Mon Nov 20 16:30:18 EST 2023" starttimestamp="1700507886094" timestamp="7932305" timestamp2="7932305">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4754" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:19 EST 2023" starttimestamp="1700507886094" timestamp="7933134" />
  <Command __id="4755" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:19 EST 2023" starttimestamp="1700507886094" timestamp="7933134" />
  <Command __id="4757" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:19 EST 2023" starttimestamp="1700507886094" timestamp="7933225" />
  <Command __id="4758" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:30:19 EST 2023" starttimestamp="1700507886094" timestamp="7933226" />
  <Command __id="4760" _type="InsertStringCommand" date="Mon Nov 20 16:30:19 EST 2023" starttimestamp="1700507886094" timestamp="7933697" timestamp2="7933697">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4761" _type="InsertStringCommand" date="Mon Nov 20 16:30:19 EST 2023" starttimestamp="1700507886094" timestamp="7933697" timestamp2="7933697">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="4763" _type="InsertStringCommand" date="Mon Nov 20 16:30:19 EST 2023" starttimestamp="1700507886094" timestamp="7933904" timestamp2="7933904">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4764" _type="InsertStringCommand" date="Mon Nov 20 16:30:19 EST 2023" starttimestamp="1700507886094" timestamp="7933904" timestamp2="7933904">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4766" _type="InsertStringCommand" date="Mon Nov 20 16:30:20 EST 2023" starttimestamp="1700507886094" timestamp="7934502" timestamp2="7934502">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4767" _type="InsertStringCommand" date="Mon Nov 20 16:30:20 EST 2023" starttimestamp="1700507886094" timestamp="7934503" timestamp2="7934503">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4769" _type="InsertStringCommand" date="Mon Nov 20 16:30:21 EST 2023" starttimestamp="1700507886094" timestamp="7935328" timestamp2="7935328">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4770" _type="InsertStringCommand" date="Mon Nov 20 16:30:21 EST 2023" starttimestamp="1700507886094" timestamp="7935328" timestamp2="7935328">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4772" _type="InsertStringCommand" date="Mon Nov 20 16:30:21 EST 2023" starttimestamp="1700507886094" timestamp="7935344" timestamp2="7935344">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4773" _type="InsertStringCommand" date="Mon Nov 20 16:30:21 EST 2023" starttimestamp="1700507886094" timestamp="7935345" timestamp2="7935345">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4775" _type="InsertStringCommand" date="Mon Nov 20 16:30:21 EST 2023" starttimestamp="1700507886094" timestamp="7935432" timestamp2="7935432">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4776" _type="InsertStringCommand" date="Mon Nov 20 16:30:21 EST 2023" starttimestamp="1700507886094" timestamp="7935432" timestamp2="7935432">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4778" _type="InsertStringCommand" date="Mon Nov 20 16:30:21 EST 2023" starttimestamp="1700507886094" timestamp="7935552" timestamp2="7935552">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4779" _type="InsertStringCommand" date="Mon Nov 20 16:30:21 EST 2023" starttimestamp="1700507886094" timestamp="7935552" timestamp2="7935552">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="4780" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:30:22 EST 2023" starttimestamp="1700507886094" timestamp="7936114" />
  <Command __id="4781" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:30:22 EST 2023" starttimestamp="1700507886094" timestamp="7936114" />
  <Command __id="4783" _type="InsertStringCommand" date="Mon Nov 20 16:30:22 EST 2023" starttimestamp="1700507886094" timestamp="7936388" timestamp2="7936388">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4784" _type="InsertStringCommand" date="Mon Nov 20 16:30:22 EST 2023" starttimestamp="1700507886094" timestamp="7936389" timestamp2="7936389">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4785" _type="MoveCaretCommand" caretOffset="1105" date="Mon Nov 20 16:30:23 EST 2023" docOffset="1105" starttimestamp="1700507886094" timestamp="7936915" />
  <Command __id="4786" _type="MoveCaretCommand" caretOffset="1105" date="Mon Nov 20 16:30:23 EST 2023" docOffset="1105" starttimestamp="1700507886094" timestamp="7936915" />
  <Command __id="4787" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:30:23 EST 2023" starttimestamp="1700507886094" timestamp="7937365" />
  <Command __id="4788" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:30:23 EST 2023" starttimestamp="1700507886094" timestamp="7937466" />
  <Command __id="4789" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:30:23 EST 2023" starttimestamp="1700507886094" timestamp="7937473" />
  <Command __id="4790" _type="MoveCaretCommand" caretOffset="1010" date="Mon Nov 20 16:30:28 EST 2023" docOffset="1010" starttimestamp="1700507886094" timestamp="7942378" />
  <Command __id="4791" _type="MoveCaretCommand" caretOffset="1010" date="Mon Nov 20 16:30:28 EST 2023" docOffset="1010" starttimestamp="1700507886094" timestamp="7942378" />
  <Command __id="4792" _type="MoveCaretCommand" caretOffset="1010" date="Mon Nov 20 16:30:28 EST 2023" docOffset="1010" starttimestamp="1700507886094" timestamp="7942854" />
  <Command __id="4793" _type="MoveCaretCommand" caretOffset="1010" date="Mon Nov 20 16:30:28 EST 2023" docOffset="1010" starttimestamp="1700507886094" timestamp="7942855" />
  <Command __id="4794" _type="MoveCaretCommand" caretOffset="981" date="Mon Nov 20 16:30:29 EST 2023" docOffset="981" starttimestamp="1700507886094" timestamp="7943750" />
  <Command __id="4795" _type="MoveCaretCommand" caretOffset="981" date="Mon Nov 20 16:30:29 EST 2023" docOffset="981" starttimestamp="1700507886094" timestamp="7943750" />
  <Command __id="4796" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 16:30:30 EST 2023" docOffset="962" starttimestamp="1700507886094" timestamp="7944214" />
  <Command __id="4797" _type="MoveCaretCommand" caretOffset="962" date="Mon Nov 20 16:30:30 EST 2023" docOffset="962" starttimestamp="1700507886094" timestamp="7944214" />
  <Command __id="4798" _type="MoveCaretCommand" caretOffset="980" date="Mon Nov 20 16:30:30 EST 2023" docOffset="980" starttimestamp="1700507886094" timestamp="7944663" />
  <Command __id="4799" _type="MoveCaretCommand" caretOffset="980" date="Mon Nov 20 16:30:30 EST 2023" docOffset="980" starttimestamp="1700507886094" timestamp="7944663" />
  <Command __id="4800" _type="MoveCaretCommand" caretOffset="969" date="Mon Nov 20 16:30:31 EST 2023" docOffset="969" starttimestamp="1700507886094" timestamp="7945084" />
  <Command __id="4801" _type="MoveCaretCommand" caretOffset="969" date="Mon Nov 20 16:30:31 EST 2023" docOffset="969" starttimestamp="1700507886094" timestamp="7945084" />
  <Command __id="4802" _type="MoveCaretCommand" caretOffset="981" date="Mon Nov 20 16:30:31 EST 2023" docOffset="981" starttimestamp="1700507886094" timestamp="7945498" />
  <Command __id="4803" _type="MoveCaretCommand" caretOffset="981" date="Mon Nov 20 16:30:31 EST 2023" docOffset="981" starttimestamp="1700507886094" timestamp="7945498" />
  <Command __id="4804" _type="ShellCommand" date="Mon Nov 20 16:30:31 EST 2023" starttimestamp="1700507886094" timestamp="7945888" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4805" _type="ShellCommand" date="Mon Nov 20 16:30:32 EST 2023" starttimestamp="1700507886094" timestamp="7946270" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4806" _type="ShellCommand" date="Mon Nov 20 16:30:32 EST 2023" starttimestamp="1700507886094" timestamp="7946528" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4807" _type="ShellCommand" date="Mon Nov 20 16:30:33 EST 2023" starttimestamp="1700507886094" timestamp="7947024" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="4742" _type="Insert" date="Mon Nov 20 16:30:16 EST 2023" docASTNodeCount="194" docActiveCodeLength="1204" docExpressionCount="138" docLength="1204" length="4" offset="1193" repeat="4" starttimestamp="1700507886094" timestamp="7930250" timestamp2="7932041">
    <text><![CDATA[.toS]]></text>
  </DocumentChange>
  <DocumentChange __id="4750" _type="Replace" date="Mon Nov 20 16:30:18 EST 2023" docASTNodeCount="194" docActiveCodeLength="1211" docExpressionCount="138" docLength="1211" endLine="44" insertionLength="10" int_docASTNodeCount="192" int_docActiveCodeLength="1201" int_docExpressionCount="136" int_docLength="1201" length="3" offset="1194" startLine="44" starttimestamp="1700507886094" timestamp="7932296">
    <deletedText><![CDATA[toS]]></deletedText>
    <insertedText><![CDATA[toString()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4753" _type="Delete" date="Mon Nov 20 16:30:19 EST 2023" docASTNodeCount="194" docActiveCodeLength="1209" docExpressionCount="138" docLength="1209" endLine="44" length="2" offset="1202" repeat="2" startLine="44" starttimestamp="1700507886094" timestamp="7933131" timestamp2="7933224">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <DocumentChange __id="4759" _type="Insert" date="Mon Nov 20 16:30:19 EST 2023" docASTNodeCount="194" docActiveCodeLength="1218" docExpressionCount="138" docLength="1218" length="9" offset="1202" repeat="8" starttimestamp="1700507886094" timestamp="7933695" timestamp2="7936385">
    <text><![CDATA[AsList();]]></text>
  </DocumentChange>
  <Command __id="4809" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:30:35 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7949523" type="Run" />
  <Command __id="4810" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:30:35 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7949523" type="Run" />
  <Command __id="4811" _type="ShellCommand" date="Mon Nov 20 16:30:35 EST 2023" starttimestamp="1700507886094" timestamp="7949535" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4813" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:30:36 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="7950768" />
  <Command __id="4814" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:30:38 EST 2023" starttimestamp="1700507886094" timestamp="7952673" />
  <Command __id="4815" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:30:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7952806" type="Run" />
  <Command __id="4816" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:30:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7952806" type="Run" />
  <Command __id="4817" _type="ShellCommand" date="Mon Nov 20 16:30:39 EST 2023" starttimestamp="1700507886094" timestamp="7953098" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4818" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955595" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(EQUAL,"5¶"), Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶")]]]></diff>
  </Command>
  <Command __id="4819" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955596" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4820" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955597" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4821" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955598" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4822" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955613" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4823" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955615" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4824" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955617" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4825" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955620" type="ConsoleOutput">
    <outputString><![CDATA[()
()

Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"()¶()¶¶Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4826" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955621" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string ()
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"()¶()¶¶Test execution time (ms):3"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string ()"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4827" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955623" type="ConsoleOutput">
    <outputString><![CDATA[()
()
()
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string "), Diff(INSERT,"()¶()¶"), Diff(EQUAL,"()¶")]]]></diff>
  </Command>
  <Command __id="4828" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955624" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"()¶()¶()"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4829" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955624" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string ()
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string ()"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4830" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955627" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string ()"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4831" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955630" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4832" _type="ConsoleOutput" date="Mon Nov 20 16:30:41 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7955688" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(INSERT,"334"), Diff(EQUAL,"2"), Diff(DELETE,"6"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:6"), Diff(DELETE,"9"), Diff(INSERT,"400"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(INSERT,"501"), Diff(EQUAL,"1"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:23"), Diff(INSERT,"2"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"3"), Diff(INSERT,"918"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"325"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"57"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"71"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.DelegatingMethod"), Diff(INSERT,"ava.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"219"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1906"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1585"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"1538"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(INSERT,"2"), Diff(EQUAL,"4"), Diff(DELETE,"06"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"469"), Diff(INSERT,"113"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"DispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"278"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(INSERT,"DispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"277"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"Component.processMouseEvent(Component.java:6638)"), Diff(INSERT,"EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4833" _type="ExceptionCommand" date="Mon Nov 20 16:30:41 EST 2023" starttimestamp="1700507886094" timestamp="7955696" type="Exception">
    <exceptionString><![CDATA[()
()
()
()
()
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4812" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:30:36 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7950701">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4839" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:30:50 EST 2023" docASTNodeCount="194" docActiveCodeLength="1218" docExpressionCount="138" docLength="1218" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7964518">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		"), Diff(DELETE,"if(this.isAtom()) {			return this.toStringAsListHelperPublic();		}else {			"), Diff(EQUAL,"return this.getHead().toString"), Diff(DELETE,"();		}"), Diff(INSERT,"AsList();"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		return this.getHead().toStringAsList();
	}

}
]]></snapshot>
  </Command>
  <Command __id="4834" _type="ShellCommand" date="Mon Nov 20 16:30:50 EST 2023" starttimestamp="1700507886094" timestamp="7963952" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4835" _type="LocalChecksRawCommand" date="Mon Nov 20 16:30:50 EST 2023" starttimestamp="1700507886094" timestamp="7963957">
    <CSVRow><![CDATA[62,Mon Nov 20 16:30:41 EST 2023,6,-2,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker- ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,27,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4836" _type="LocalChecksRawCommand" date="Mon Nov 20 16:30:50 EST 2023" starttimestamp="1700507886094" timestamp="7963957">
    <CSVRow><![CDATA[62,Mon Nov 20 16:30:41 EST 2023,6,-2,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker- ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,27,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4837" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:30:50 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7963966" type="Run" />
  <Command __id="4838" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:30:50 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7963966" type="Run" />
  <Command __id="4840" _type="MoveCaretCommand" caretOffset="981" date="Mon Nov 20 16:30:50 EST 2023" docOffset="981" starttimestamp="1700507886094" timestamp="7964575" />
  <Command __id="4841" _type="MoveCaretCommand" caretOffset="852" date="Mon Nov 20 16:30:51 EST 2023" docOffset="852" starttimestamp="1700507886094" timestamp="7964983" />
  <Command __id="4842" _type="MoveCaretCommand" caretOffset="852" date="Mon Nov 20 16:30:51 EST 2023" docOffset="852" starttimestamp="1700507886094" timestamp="7964983" />
  <Command __id="4844" _type="UndoCommand" date="Mon Nov 20 16:30:52 EST 2023" starttimestamp="1700507886094" timestamp="7966228" />
  <Command __id="4846" _type="UndoCommand" date="Mon Nov 20 16:30:52 EST 2023" starttimestamp="1700507886094" timestamp="7966727" />
  <Command __id="4848" _type="UndoCommand" date="Mon Nov 20 16:30:53 EST 2023" starttimestamp="1700507886094" timestamp="7967013" />
  <Command __id="4850" _type="UndoCommand" date="Mon Nov 20 16:30:53 EST 2023" starttimestamp="1700507886094" timestamp="7967181" />
  <Command __id="4852" _type="UndoCommand" date="Mon Nov 20 16:30:53 EST 2023" starttimestamp="1700507886094" timestamp="7967352" />
  <Command __id="4854" _type="UndoCommand" date="Mon Nov 20 16:30:53 EST 2023" starttimestamp="1700507886094" timestamp="7967527" />
  <Command __id="4856" _type="UndoCommand" date="Mon Nov 20 16:30:53 EST 2023" starttimestamp="1700507886094" timestamp="7967679" />
  <Command __id="4858" _type="UndoCommand" date="Mon Nov 20 16:30:53 EST 2023" starttimestamp="1700507886094" timestamp="7967838" />
  <Command __id="4860" _type="UndoCommand" date="Mon Nov 20 16:30:54 EST 2023" starttimestamp="1700507886094" timestamp="7967976" />
  <Command __id="4862" _type="UndoCommand" date="Mon Nov 20 16:30:54 EST 2023" starttimestamp="1700507886094" timestamp="7968175" />
  <Command __id="4864" _type="UndoCommand" date="Mon Nov 20 16:30:54 EST 2023" starttimestamp="1700507886094" timestamp="7968327" />
  <Command __id="4866" _type="UndoCommand" date="Mon Nov 20 16:30:54 EST 2023" starttimestamp="1700507886094" timestamp="7968671" />
  <Command __id="4868" _type="UndoCommand" date="Mon Nov 20 16:30:55 EST 2023" starttimestamp="1700507886094" timestamp="7968967" />
  <Command __id="4870" _type="UndoCommand" date="Mon Nov 20 16:30:55 EST 2023" starttimestamp="1700507886094" timestamp="7969284" />
  <Command __id="4871" _type="MoveCaretCommand" caretOffset="976" date="Mon Nov 20 16:30:56 EST 2023" docOffset="976" starttimestamp="1700507886094" timestamp="7970131" />
  <Command __id="4872" _type="MoveCaretCommand" caretOffset="976" date="Mon Nov 20 16:30:56 EST 2023" docOffset="976" starttimestamp="1700507886094" timestamp="7970131" />
  <DocumentChange __id="4843" _type="Delete" date="Mon Nov 20 16:30:52 EST 2023" docASTNodeCount="194" docActiveCodeLength="1209" docExpressionCount="138" docLength="1209" endLine="44" length="9" offset="1202" repeat="3" startLine="44" starttimestamp="1700507886094" timestamp="7966220" timestamp2="7967009">
    <text><![CDATA[AsList();]]></text>
  </DocumentChange>
  <DocumentChange __id="4849" _type="Insert" date="Mon Nov 20 16:30:53 EST 2023" docASTNodeCount="194" docActiveCodeLength="1211" docExpressionCount="138" docLength="1211" length="2" offset="1202" starttimestamp="1700507886094" timestamp="7967178">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <DocumentChange __id="4851" _type="Replace" date="Mon Nov 20 16:30:53 EST 2023" docASTNodeCount="194" docActiveCodeLength="1204" docExpressionCount="138" docLength="1204" endLine="44" insertionLength="3" int_docASTNodeCount="192" int_docActiveCodeLength="1201" int_docExpressionCount="136" int_docLength="1201" length="10" offset="1194" startLine="44" starttimestamp="1700507886094" timestamp="7967347">
    <deletedText><![CDATA[toString()]]></deletedText>
    <insertedText><![CDATA[toS]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4853" _type="Delete" date="Mon Nov 20 16:30:53 EST 2023" docASTNodeCount="192" docActiveCodeLength="1200" docExpressionCount="136" docLength="1200" endLine="44" length="4" offset="1193" startLine="44" starttimestamp="1700507886094" timestamp="7967521">
    <text><![CDATA[.toS]]></text>
  </DocumentChange>
  <DocumentChange __id="4855" _type="Replace" date="Mon Nov 20 16:30:53 EST 2023" docASTNodeCount="192" docActiveCodeLength="1195" docExpressionCount="136" docLength="1195" endLine="44" insertionLength="4" int_docASTNodeCount="190" int_docActiveCodeLength="1191" int_docExpressionCount="134" int_docLength="1191" length="9" offset="1184" startLine="44" starttimestamp="1700507886094" timestamp="7967674">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[geth]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4857" _type="Delete" date="Mon Nov 20 16:30:53 EST 2023" docASTNodeCount="189" docActiveCodeLength="1186" docExpressionCount="133" docLength="1186" endLine="44" length="9" offset="1179" startLine="44" starttimestamp="1700507886094" timestamp="7967833">
    <text><![CDATA[this.geth]]></text>
  </DocumentChange>
  <DocumentChange __id="4859" _type="Insert" date="Mon Nov 20 16:30:54 EST 2023" docASTNodeCount="190" docActiveCodeLength="1190" docExpressionCount="134" docLength="1190" length="4" offset="1179" starttimestamp="1700507886094" timestamp="7967973">
    <text><![CDATA[head]]></text>
  </DocumentChange>
  <DocumentChange __id="4861" _type="Delete" date="Mon Nov 20 16:30:54 EST 2023" docASTNodeCount="188" docActiveCodeLength="1179" docExpressionCount="133" docLength="1179" endLine="44" length="11" offset="1172" startLine="44" starttimestamp="1700507886094" timestamp="7968169">
    <text><![CDATA[return head]]></text>
  </DocumentChange>
  <DocumentChange __id="4863" _type="Insert" date="Mon Nov 20 16:30:54 EST 2023" docASTNodeCount="188" docActiveCodeLength="1180" docExpressionCount="133" docLength="1180" length="1" offset="1172" starttimestamp="1700507886094" timestamp="7968323">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="4865" _type="Delete" date="Mon Nov 20 16:30:54 EST 2023" docASTNodeCount="188" docActiveCodeLength="1177" docExpressionCount="133" docLength="1177" endLine="44" length="3" offset="1170" repeat="2" startLine="44" starttimestamp="1700507886094" timestamp="7968666" timestamp2="7968963">
    <text><![CDATA[			]]></text>
  </DocumentChange>
  <DocumentChange __id="4869" _type="Insert" date="Mon Nov 20 16:30:55 EST 2023" docASTNodeCount="204" docActiveCodeLength="1294" docExpressionCount="144" docLength="1294" length="117" offset="1170" starttimestamp="1700507886094" timestamp="7969280">
    <text><![CDATA[		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toString();
		}]]></text>
  </DocumentChange>
  <Command __id="4873" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:30:56 EST 2023" starttimestamp="1700507886094" timestamp="7970287" />
  <Command __id="4874" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:30:56 EST 2023" starttimestamp="1700507886094" timestamp="7970384" />
  <Command __id="4875" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:30:56 EST 2023" starttimestamp="1700507886094" timestamp="7970390" />
  <Command __id="4877" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:30:57 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="7971789" />
  <Command __id="4878" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:31:00 EST 2023" starttimestamp="1700507886094" timestamp="7974449" />
  <Command __id="4879" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:31:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7974590" type="Run" />
  <Command __id="4880" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:31:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7974590" type="Run" />
  <Command __id="4881" _type="ShellCommand" date="Mon Nov 20 16:31:01 EST 2023" starttimestamp="1700507886094" timestamp="7974917" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4882" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977112" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4883" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977114" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4884" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977114" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4885" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977115" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4886" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977130" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4887" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977134" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4888" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977135" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4889" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977137" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4890" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977138" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶Test execution time (ms):1"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4891" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977140" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4892" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977141" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4893" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977141" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4894" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977144" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4895" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977146" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4896" _type="ConsoleOutput" date="Mon Nov 20 16:31:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="7977198" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluato"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManage"), Diff(EQUAL,"r.java:1"), Diff(DELETE,"4"), Diff(INSERT,"538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(INSERT,"140"), Diff(EQUAL,"6"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"42"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"1"), Diff(INSERT,"46"), Diff(EQUAL,"9)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"31"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:6"), Diff(DELETE,"2"), Diff(INSERT,"400"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"226"), Diff(EQUAL,"3)¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:5"), Diff(DELETE,"66"), Diff(INSERT,"011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"2321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"325"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(INSERT,"230"), Diff(EQUAL,"7"), Diff(DELETE,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"57"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:7"), Diff(DELETE,"1"), Diff(INSERT,"72"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(INSERT,"71"), Diff(EQUAL,"5"), Diff(DELETE,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"348"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Metho"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"566"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMetho"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"270"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"444"), Diff(INSERT,"13"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(INSERT,"10"), Diff(EQUAL,"9)¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"906"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4897" _type="ExceptionCommand" date="Mon Nov 20 16:31:03 EST 2023" starttimestamp="1700507886094" timestamp="7977207" type="Exception">
    <exceptionString><![CDATA[Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5)
(5)
(5)
(5)
(5)
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4898" _type="ShellCommand" date="Mon Nov 20 16:31:05 EST 2023" starttimestamp="1700507886094" timestamp="7979027" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4899" _type="LocalChecksRawCommand" date="Mon Nov 20 16:31:05 EST 2023" starttimestamp="1700507886094" timestamp="7979031">
    <CSVRow><![CDATA[63,Mon Nov 20 16:31:03 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,28,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4900" _type="LocalChecksRawCommand" date="Mon Nov 20 16:31:05 EST 2023" starttimestamp="1700507886094" timestamp="7979031">
    <CSVRow><![CDATA[63,Mon Nov 20 16:31:03 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,28,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4902" _type="MoveCaretCommand" caretOffset="976" date="Mon Nov 20 16:31:05 EST 2023" docOffset="976" starttimestamp="1700507886094" timestamp="7979194" />
  <Command __id="4903" _type="ShellCommand" date="Mon Nov 20 16:31:33 EST 2023" starttimestamp="1700507886094" timestamp="8007225" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4904" _type="ShellCommand" date="Mon Nov 20 16:31:44 EST 2023" starttimestamp="1700507886094" timestamp="8018904" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4905" _type="ShellCommand" date="Mon Nov 20 16:31:46 EST 2023" starttimestamp="1700507886094" timestamp="8019921" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4906" _type="ShellCommand" date="Mon Nov 20 16:31:46 EST 2023" starttimestamp="1700507886094" timestamp="8020211" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4907" _type="ShellCommand" date="Mon Nov 20 16:31:53 EST 2023" starttimestamp="1700507886094" timestamp="8027563" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4908" _type="ShellCommand" date="Mon Nov 20 16:32:21 EST 2023" starttimestamp="1700507886094" timestamp="8055729" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4909" _type="SelectTextCommand" caretOffset="889" date="Mon Nov 20 16:32:23 EST 2023" end="889" start="801" starttimestamp="1700507886094" timestamp="8057267" />
  <Command __id="4910" _type="SelectTextCommand" caretOffset="889" date="Mon Nov 20 16:32:23 EST 2023" end="889" start="801" starttimestamp="1700507886094" timestamp="8057267" />
  <Command __id="4911" _type="CopyCommand" date="Mon Nov 20 16:32:23 EST 2023" starttimestamp="1700507886094" timestamp="8057348" />
  <Command __id="4912" _type="SelectTextCommand" caretOffset="1283" date="Mon Nov 20 16:32:26 EST 2023" end="1283" start="1257" starttimestamp="1700507886094" timestamp="8060743" />
  <Command __id="4913" _type="SelectTextCommand" caretOffset="1283" date="Mon Nov 20 16:32:26 EST 2023" end="1283" start="1257" starttimestamp="1700507886094" timestamp="8060744" />
  <Command __id="4915" _type="PasteCommand" date="Mon Nov 20 16:32:26 EST 2023" starttimestamp="1700507886094" timestamp="8060852" />
  <Command __id="4916" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:32:27 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="8061387" />
  <Command __id="4917" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:32:27 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="8061387" />
  <Command __id="4918" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:32:28 EST 2023" starttimestamp="1700507886094" timestamp="8061981" />
  <Command __id="4919" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:32:28 EST 2023" starttimestamp="1700507886094" timestamp="8062082" />
  <Command __id="4920" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:32:28 EST 2023" starttimestamp="1700507886094" timestamp="8062088" />
  <Command __id="4876" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:30:57 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7971715">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4901" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:31:05 EST 2023" docASTNodeCount="204" docActiveCodeLength="1294" docExpressionCount="144" docLength="1294" projectName="Assignment5" starttimestamp="1700507886094" timestamp="7979128">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		"), Diff(INSERT,"if(this.isAtom()) {			return this.toStringAsListHelperPublic();		}else {			"), Diff(EQUAL,"return this.getHead().toString"), Diff(DELETE,"AsList();"), Diff(INSERT,"();		}"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toString();
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4914" _type="Replace" date="Mon Nov 20 16:32:26 EST 2023" docASTNodeCount="215" docActiveCodeLength="1357" docExpressionCount="155" docLength="1357" endLine="47" insertionLength="89" int_docASTNodeCount="199" int_docActiveCodeLength="1268" int_docExpressionCount="139" int_docLength="1268" length="26" offset="1257" startLine="47" starttimestamp="1700507886094" timestamp="8060845">
    <deletedText><![CDATA[this.getHead().toString();]]></deletedText>
    <insertedText><![CDATA["(" + this.getHead().toString() + " " + "." + " " +
					this.getTail().toString() + ")";]]></insertedText>
  </DocumentChange>
  <Command __id="4921" _type="ShellCommand" date="Mon Nov 20 16:32:30 EST 2023" starttimestamp="1700507886094" timestamp="8064320" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4922" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:32:30 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8064589" type="Run" />
  <Command __id="4923" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:32:30 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8064589" type="Run" />
  <Command __id="4924" _type="ShellCommand" date="Mon Nov 20 16:32:30 EST 2023" starttimestamp="1700507886094" timestamp="8064594" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4926" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:32:32 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="8066428" />
  <Command __id="4927" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:32:34 EST 2023" starttimestamp="1700507886094" timestamp="8068764" />
  <Command __id="4928" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:32:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8068902" type="Run" />
  <Command __id="4929" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:32:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8068902" type="Run" />
  <Command __id="4930" _type="ShellCommand" date="Mon Nov 20 16:32:35 EST 2023" starttimestamp="1700507886094" timestamp="8069193" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4931" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071399" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):4"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4932" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071400" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4933" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071401" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4934" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071402" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4935" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071417" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4936" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071420" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4937" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071425" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

((5 . NIL))
((5 . NIL))

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶((5 . NIL))¶((5 . NIL))¶¶"), Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4938" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071426" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string ((5 . NIL))

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:BaseCase"), Diff(DELETE,"SExpression"), Diff(INSERT,"List"), Diff(EQUAL,"ToStringChecker,"), Diff(DELETE,"10"), Diff(EQUAL,"0.0% complete,"), Diff(DELETE,"1"), Diff(EQUAL,"0.0,10.0,"), Diff(DELETE,"¶¶((5 . NIL))¶((5 . NIL))¶¶Test execution time (ms):2"), Diff(INSERT,"Expected strings:(5)actual string ((5 . NIL))¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4939" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071430" type="ConsoleOutput">
    <outputString><![CDATA[((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))
((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))
((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))

Test execution time (ms):3
Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string ((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))¶((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))¶((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))¶¶Test execution time (ms):3¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"BaseCase"), Diff(EQUAL,"ListToStringChecker"), Diff(INSERT,"Basic"), Diff(EQUAL,",0.0% complete,0.0,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,Expected strings:(5"), Diff(INSERT," (("A" . "6")) (7)"), Diff(EQUAL,")actual string ((5 . "), Diff(DELETE,"NIL"), Diff(INSERT,"((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))"), Diff(EQUAL,"))¶¶")]]]></diff>
  </Command>
  <Command __id="4940" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071431" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))¶((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))¶((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))¶¶Test execution time (ms):3¶Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string ((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))¶"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4941" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071432" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4942" _type="ConsoleOutput" date="Mon Nov 20 16:32:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8071457" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluato"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunne"), Diff(EQUAL,"r.java:"), Diff(DELETE,"14"), Diff(INSERT,"290"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"71"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"7"), Diff(INSERT,"531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"78"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4943" _type="ExceptionCommand" date="Mon Nov 20 16:32:37 EST 2023" starttimestamp="1700507886094" timestamp="8071464" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))
((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))
((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))
((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))
((5 . ((((("A" . "6") . NIL)) . ((((7 . NIL)) . NIL))))))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4944" _type="ShellCommand" date="Mon Nov 20 16:32:44 EST 2023" starttimestamp="1700507886094" timestamp="8078506" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4945" _type="LocalChecksRawCommand" date="Mon Nov 20 16:32:44 EST 2023" starttimestamp="1700507886094" timestamp="8078510">
    <CSVRow><![CDATA[64,Mon Nov 20 16:32:37 EST 2023,6,-2,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker- ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,29,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4946" _type="LocalChecksRawCommand" date="Mon Nov 20 16:32:44 EST 2023" starttimestamp="1700507886094" timestamp="8078510">
    <CSVRow><![CDATA[64,Mon Nov 20 16:32:37 EST 2023,6,-2,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker- ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,29,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4948" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:32:44 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="8078671" />
  <Command __id="4949" _type="MoveCaretCommand" caretOffset="1346" date="Mon Nov 20 16:32:52 EST 2023" docOffset="1346" starttimestamp="1700507886094" timestamp="8086215" />
  <Command __id="4950" _type="MoveCaretCommand" caretOffset="1346" date="Mon Nov 20 16:32:52 EST 2023" docOffset="1346" starttimestamp="1700507886094" timestamp="8086215" />
  <Command __id="4951" _type="MoveCaretCommand" caretOffset="1333" date="Mon Nov 20 16:33:22 EST 2023" docOffset="1333" starttimestamp="1700507886094" timestamp="8116437" />
  <Command __id="4952" _type="MoveCaretCommand" caretOffset="1333" date="Mon Nov 20 16:33:22 EST 2023" docOffset="1333" starttimestamp="1700507886094" timestamp="8116437" />
  <Command __id="4954" _type="UndoCommand" date="Mon Nov 20 16:33:22 EST 2023" starttimestamp="1700507886094" timestamp="8116652" />
  <Command __id="4955" _type="MoveCaretCommand" caretOffset="1283" date="Mon Nov 20 16:33:23 EST 2023" docOffset="1283" starttimestamp="1700507886094" timestamp="8117540" />
  <Command __id="4956" _type="MoveCaretCommand" caretOffset="1283" date="Mon Nov 20 16:33:23 EST 2023" docOffset="1283" starttimestamp="1700507886094" timestamp="8117540" />
  <Command __id="4957" _type="MoveCaretCommand" caretOffset="921" date="Mon Nov 20 16:34:08 EST 2023" docOffset="921" starttimestamp="1700507886094" timestamp="8162326" />
  <Command __id="4958" _type="MoveCaretCommand" caretOffset="921" date="Mon Nov 20 16:34:08 EST 2023" docOffset="921" starttimestamp="1700507886094" timestamp="8162326" />
  <Command __id="4959" _type="SelectTextCommand" caretOffset="924" date="Mon Nov 20 16:34:08 EST 2023" end="924" start="910" starttimestamp="1700507886094" timestamp="8162479" />
  <Command __id="4960" _type="SelectTextCommand" caretOffset="924" date="Mon Nov 20 16:34:08 EST 2023" end="924" start="910" starttimestamp="1700507886094" timestamp="8162479" />
  <Command __id="4961" _type="CopyCommand" date="Mon Nov 20 16:34:08 EST 2023" starttimestamp="1700507886094" timestamp="8162635" />
  <Command __id="4962" _type="MoveCaretCommand" caretOffset="1277" date="Mon Nov 20 16:34:09 EST 2023" docOffset="1277" starttimestamp="1700507886094" timestamp="8163520" />
  <Command __id="4963" _type="MoveCaretCommand" caretOffset="1277" date="Mon Nov 20 16:34:09 EST 2023" docOffset="1277" starttimestamp="1700507886094" timestamp="8163520" />
  <Command __id="4964" _type="SelectTextCommand" caretOffset="1280" date="Mon Nov 20 16:34:09 EST 2023" end="1280" start="1272" starttimestamp="1700507886094" timestamp="8163636" />
  <Command __id="4965" _type="SelectTextCommand" caretOffset="1280" date="Mon Nov 20 16:34:09 EST 2023" end="1280" start="1272" starttimestamp="1700507886094" timestamp="8163636" />
  <Command __id="4967" _type="PasteCommand" date="Mon Nov 20 16:34:09 EST 2023" starttimestamp="1700507886094" timestamp="8163745" />
  <Command __id="4968" _type="MoveCaretCommand" caretOffset="1293" date="Mon Nov 20 16:34:10 EST 2023" docOffset="1293" starttimestamp="1700507886094" timestamp="8164097" />
  <Command __id="4969" _type="MoveCaretCommand" caretOffset="1293" date="Mon Nov 20 16:34:10 EST 2023" docOffset="1293" starttimestamp="1700507886094" timestamp="8164097" />
  <Command __id="4970" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:34:11 EST 2023" starttimestamp="1700507886094" timestamp="8165653" />
  <Command __id="4971" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:34:11 EST 2023" starttimestamp="1700507886094" timestamp="8165754" />
  <Command __id="4972" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:34:11 EST 2023" starttimestamp="1700507886094" timestamp="8165762" />
  <Command __id="4925" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:32:32 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8066348">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4947" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:32:44 EST 2023" docASTNodeCount="215" docActiveCodeLength="1357" docExpressionCount="155" docLength="1357" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8078608">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return this.toStringAsListHelperPublic();		}else {			return"), Diff(INSERT," "(" +"), Diff(EQUAL," this.getHead().toString()"), Diff(INSERT," + " " + "." + " " +					this.getTail().toString() + ")""), Diff(EQUAL,";		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return "(" + this.getHead().toString() + " " + "." + " " +
					this.getTail().toString() + ")";
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4953" _type="Replace" date="Mon Nov 20 16:33:22 EST 2023" docASTNodeCount="204" docActiveCodeLength="1294" docExpressionCount="144" docLength="1294" endLine="48" insertionLength="26" int_docASTNodeCount="199" int_docActiveCodeLength="1268" int_docExpressionCount="139" int_docLength="1268" length="89" offset="1257" startLine="47" starttimestamp="1700507886094" timestamp="8116645">
    <deletedText><![CDATA["(" + this.getHead().toString() + " " + "." + " " +
					this.getTail().toString() + ")";]]></deletedText>
    <insertedText><![CDATA[this.getHead().toString();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4966" _type="Replace" date="Mon Nov 20 16:34:09 EST 2023" docASTNodeCount="204" docActiveCodeLength="1300" docExpressionCount="144" docLength="1300" endLine="47" insertionLength="14" int_docASTNodeCount="204" int_docActiveCodeLength="1286" int_docExpressionCount="144" int_docLength="1286" length="8" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8163740">
    <deletedText><![CDATA[toString]]></deletedText>
    <insertedText><![CDATA[toStringAsList]]></insertedText>
  </DocumentChange>
  <Command __id="4973" _type="ShellCommand" date="Mon Nov 20 16:34:13 EST 2023" starttimestamp="1700507886094" timestamp="8167041" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4974" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:34:13 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8167326" type="Run" />
  <Command __id="4975" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:34:13 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8167326" type="Run" />
  <Command __id="4976" _type="ShellCommand" date="Mon Nov 20 16:34:13 EST 2023" starttimestamp="1700507886094" timestamp="8167327" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4978" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:34:15 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="8169197" />
  <Command __id="4979" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:34:17 EST 2023" starttimestamp="1700507886094" timestamp="8171022" />
  <Command __id="4980" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:34:17 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8171166" type="Run" />
  <Command __id="4981" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:34:17 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8171166" type="Run" />
  <Command __id="4982" _type="ShellCommand" date="Mon Nov 20 16:34:17 EST 2023" starttimestamp="1700507886094" timestamp="8171458" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4983" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173708" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4984" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173709" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4985" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173710" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4986" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173710" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4987" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173726" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4988" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173729" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4989" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173734" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

()
()

Test execution time (ms):2
Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string ()

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):25"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶()¶()¶¶Test execution time (ms):2¶Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string ()¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4990" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173736" type="ConsoleOutput">
    <outputString><![CDATA[()
()
()
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶()¶()¶¶Test execution time (ms):2¶Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string ()¶"), Diff(INSERT,"()¶()¶()"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4991" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173736" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"()¶()¶()"), Diff(INSERT,"¶Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4992" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173737" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string ()
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string ()"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4993" _type="ExceptionCommand" date="Mon Nov 20 16:34:19 EST 2023" starttimestamp="1700507886094" timestamp="8173739" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4994" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173740" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string ("), Diff(INSERT,"	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4995" _type="ConsoleOutput" date="Mon Nov 20 16:34:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8173758" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:"), Diff(DELETE,"79"), Diff(INSERT,"12"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶"), Diff(INSERT,"	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶")]]]></diff>
  </Command>
  <Command __id="4996" _type="ExceptionCommand" date="Mon Nov 20 16:34:19 EST 2023" starttimestamp="1700507886094" timestamp="8173766" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

()
()
()
()
()
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4997" _type="ShellCommand" date="Mon Nov 20 16:34:22 EST 2023" starttimestamp="1700507886094" timestamp="8176166" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4998" _type="LocalChecksRawCommand" date="Mon Nov 20 16:34:22 EST 2023" starttimestamp="1700507886094" timestamp="8176170">
    <CSVRow><![CDATA[65,Mon Nov 20 16:34:19 EST 2023,6,0,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,30,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4999" _type="LocalChecksRawCommand" date="Mon Nov 20 16:34:22 EST 2023" starttimestamp="1700507886094" timestamp="8176170">
    <CSVRow><![CDATA[65,Mon Nov 20 16:34:19 EST 2023,6,0,A5ToStringSuite,BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker BaseCaseListToStringChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,30,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(0.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5001" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:34:22 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="8176322" />
  <Command __id="5002" _type="MoveCaretCommand" caretOffset="1280" date="Mon Nov 20 16:34:23 EST 2023" docOffset="1280" starttimestamp="1700507886094" timestamp="8177646" />
  <Command __id="5003" _type="MoveCaretCommand" caretOffset="1280" date="Mon Nov 20 16:34:23 EST 2023" docOffset="1280" starttimestamp="1700507886094" timestamp="8177646" />
  <Command __id="5004" _type="MoveCaretCommand" caretOffset="1280" date="Mon Nov 20 16:34:24 EST 2023" docOffset="1280" starttimestamp="1700507886094" timestamp="8178565" />
  <Command __id="5005" _type="MoveCaretCommand" caretOffset="1280" date="Mon Nov 20 16:34:24 EST 2023" docOffset="1280" starttimestamp="1700507886094" timestamp="8178565" />
  <Command __id="5006" _type="SelectTextCommand" caretOffset="1286" date="Mon Nov 20 16:34:24 EST 2023" end="1286" start="1272" starttimestamp="1700507886094" timestamp="8178722" />
  <Command __id="5007" _type="SelectTextCommand" caretOffset="1286" date="Mon Nov 20 16:34:24 EST 2023" end="1286" start="1272" starttimestamp="1700507886094" timestamp="8178722" />
  <Command __id="5018" _type="InsertStringCommand" date="Mon Nov 20 16:34:27 EST 2023" starttimestamp="1700507886094" timestamp="8181508" timestamp2="8181508">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5019" _type="InsertStringCommand" date="Mon Nov 20 16:34:27 EST 2023" starttimestamp="1700507886094" timestamp="8181508" timestamp2="8181508">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5021" _type="InsertStringCommand" date="Mon Nov 20 16:34:27 EST 2023" starttimestamp="1700507886094" timestamp="8181602" timestamp2="8181602">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5022" _type="InsertStringCommand" date="Mon Nov 20 16:34:27 EST 2023" starttimestamp="1700507886094" timestamp="8181602" timestamp2="8181602">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5024" _type="InsertStringCommand" date="Mon Nov 20 16:34:27 EST 2023" starttimestamp="1700507886094" timestamp="8181818" timestamp2="8181818">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5025" _type="InsertStringCommand" date="Mon Nov 20 16:34:27 EST 2023" starttimestamp="1700507886094" timestamp="8181818" timestamp2="8181818">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5027" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8181998" timestamp2="8181998">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5028" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8181999" timestamp2="8181999">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5030" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8182119" timestamp2="8182119">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5031" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8182119" timestamp2="8182119">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5033" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8182211" timestamp2="8182211">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5034" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8182211" timestamp2="8182211">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5036" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8182295" timestamp2="8182295">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5037" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8182295" timestamp2="8182295">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5039" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8182312" timestamp2="8182312">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5040" _type="InsertStringCommand" date="Mon Nov 20 16:34:28 EST 2023" starttimestamp="1700507886094" timestamp="8182313" timestamp2="8182313">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5041" _type="MoveCaretCommand" caretOffset="1169" date="Mon Nov 20 16:34:28 EST 2023" docOffset="1169" starttimestamp="1700507886094" timestamp="8182764" />
  <Command __id="5042" _type="MoveCaretCommand" caretOffset="1169" date="Mon Nov 20 16:34:28 EST 2023" docOffset="1169" starttimestamp="1700507886094" timestamp="8182764" />
  <Command __id="5047" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:34:30 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8184696" type="Run" />
  <Command __id="5048" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:34:30 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8184696" type="Run" />
  <Command __id="5049" _type="ShellCommand" date="Mon Nov 20 16:34:30 EST 2023" starttimestamp="1700507886094" timestamp="8184702" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5050" _type="MoveCaretCommand" caretOffset="495" date="Mon Nov 20 16:34:32 EST 2023" docOffset="495" starttimestamp="1700507886094" timestamp="8185928" />
  <Command __id="5051" _type="MoveCaretCommand" caretOffset="495" date="Mon Nov 20 16:34:32 EST 2023" docOffset="495" starttimestamp="1700507886094" timestamp="8185928" />
  <Command __id="5053" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:34:32 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="8186390" />
  <Command __id="5054" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:34:34 EST 2023" starttimestamp="1700507886094" timestamp="8188435" />
  <Command __id="5055" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:34:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8188572" type="Run" />
  <Command __id="5056" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:34:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8188572" type="Run" />
  <Command __id="5057" _type="ShellCommand" date="Mon Nov 20 16:34:34 EST 2023" starttimestamp="1700507886094" timestamp="8188862" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5058" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191045" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5059" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191047" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5060" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191061" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5061" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191068" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):23
Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

(5)
(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):23¶Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶(5)¶(5)¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5062" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191069" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):23¶"), Diff(EQUAL,"Test Result:BaseCase"), Diff(DELETE,"SExpression"), Diff(INSERT,"List"), Diff(EQUAL,"ToStringChecker,100.0% complete,10.0,10.0,¶¶"), Diff(DELETE,"(5)¶(5)¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="5063" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191072" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5064" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191072" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5065" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191073" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5066" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191075" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5067" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191076" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5068" _type="ConsoleOutput" date="Mon Nov 20 16:34:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8191092" type="ConsoleOutput">
    <outputString><![CDATA[
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:1"), Diff(DELETE,"4"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:"), Diff(INSERT,"1"), Diff(EQUAL,"7"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5069" _type="ExceptionCommand" date="Mon Nov 20 16:34:37 EST 2023" starttimestamp="1700507886094" timestamp="8191101" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5)
(5)
(5)
(5)
(5)
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5070" _type="ShellCommand" date="Mon Nov 20 16:34:38 EST 2023" starttimestamp="1700507886094" timestamp="8192642" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5071" _type="LocalChecksRawCommand" date="Mon Nov 20 16:34:38 EST 2023" starttimestamp="1700507886094" timestamp="8192645">
    <CSVRow><![CDATA[66,Mon Nov 20 16:34:37 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,31,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5072" _type="LocalChecksRawCommand" date="Mon Nov 20 16:34:38 EST 2023" starttimestamp="1700507886094" timestamp="8192645">
    <CSVRow><![CDATA[66,Mon Nov 20 16:34:37 EST 2023,8,2,A5ToStringSuite,BaseCaseListToStringChecker+ BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,31,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5074" _type="MoveCaretCommand" caretOffset="495" date="Mon Nov 20 16:34:38 EST 2023" docOffset="495" starttimestamp="1700507886094" timestamp="8192776" />
  <Command __id="5075" _type="MoveCaretCommand" caretOffset="1287" date="Mon Nov 20 16:34:39 EST 2023" docOffset="1287" starttimestamp="1700507886094" timestamp="8193722" />
  <Command __id="5076" _type="MoveCaretCommand" caretOffset="1287" date="Mon Nov 20 16:34:39 EST 2023" docOffset="1287" starttimestamp="1700507886094" timestamp="8193722" />
  <Command __id="5077" _type="MoveCaretCommand" caretOffset="1283" date="Mon Nov 20 16:34:40 EST 2023" docOffset="1283" starttimestamp="1700507886094" timestamp="8194191" />
  <Command __id="5078" _type="MoveCaretCommand" caretOffset="1283" date="Mon Nov 20 16:34:40 EST 2023" docOffset="1283" starttimestamp="1700507886094" timestamp="8194191" />
  <Command __id="5079" _type="ShellCommand" date="Mon Nov 20 16:34:46 EST 2023" starttimestamp="1700507886094" timestamp="8200291" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5080" _type="ShellCommand" date="Mon Nov 20 16:35:13 EST 2023" starttimestamp="1700507886094" timestamp="8227283" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5081" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:35:13 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="8227343" />
  <Command __id="5082" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:35:13 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="8227343" />
  <Command __id="5083" _type="MoveCaretCommand" caretOffset="1275" date="Mon Nov 20 16:35:14 EST 2023" docOffset="1275" starttimestamp="1700507886094" timestamp="8228174" />
  <Command __id="5084" _type="MoveCaretCommand" caretOffset="1275" date="Mon Nov 20 16:35:14 EST 2023" docOffset="1275" starttimestamp="1700507886094" timestamp="8228174" />
  <Command __id="5085" _type="MoveCaretCommand" caretOffset="1275" date="Mon Nov 20 16:35:15 EST 2023" docOffset="1275" starttimestamp="1700507886094" timestamp="8229211" />
  <Command __id="5086" _type="MoveCaretCommand" caretOffset="1275" date="Mon Nov 20 16:35:15 EST 2023" docOffset="1275" starttimestamp="1700507886094" timestamp="8229211" />
  <Command __id="5087" _type="SelectTextCommand" caretOffset="1280" date="Mon Nov 20 16:35:15 EST 2023" end="1280" start="1272" starttimestamp="1700507886094" timestamp="8229409" />
  <Command __id="5088" _type="SelectTextCommand" caretOffset="1280" date="Mon Nov 20 16:35:15 EST 2023" end="1280" start="1272" starttimestamp="1700507886094" timestamp="8229409" />
  <Command __id="5089" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:35:17 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="8231574" />
  <Command __id="5090" _type="MoveCaretCommand" caretOffset="1246" date="Mon Nov 20 16:35:17 EST 2023" docOffset="1246" starttimestamp="1700507886094" timestamp="8231574" />
  <Command __id="5091" _type="SelectTextCommand" caretOffset="1235" date="Mon Nov 20 16:35:22 EST 2023" end="1235" start="1207" starttimestamp="1700507886094" timestamp="8236034" />
  <Command __id="5092" _type="SelectTextCommand" caretOffset="1235" date="Mon Nov 20 16:35:22 EST 2023" end="1235" start="1207" starttimestamp="1700507886094" timestamp="8236034" />
  <Command __id="5093" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:35:22 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="8236301" />
  <Command __id="5094" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:35:22 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="8236301" />
  <Command __id="5095" _type="SelectTextCommand" caretOffset="1202" date="Mon Nov 20 16:35:24 EST 2023" end="1235" start="1202" starttimestamp="1700507886094" timestamp="8238695" />
  <Command __id="5096" _type="SelectTextCommand" caretOffset="1202" date="Mon Nov 20 16:35:24 EST 2023" end="1235" start="1202" starttimestamp="1700507886094" timestamp="8238696" />
  <Command __id="5098" _type="InsertStringCommand" date="Mon Nov 20 16:35:25 EST 2023" starttimestamp="1700507886094" timestamp="8239136" timestamp2="8239136">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5099" _type="InsertStringCommand" date="Mon Nov 20 16:35:25 EST 2023" starttimestamp="1700507886094" timestamp="8239136" timestamp2="8239136">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5101" _type="InsertStringCommand" date="Mon Nov 20 16:35:25 EST 2023" starttimestamp="1700507886094" timestamp="8239363" timestamp2="8239363">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="5102" _type="InsertStringCommand" date="Mon Nov 20 16:35:25 EST 2023" starttimestamp="1700507886094" timestamp="8239363" timestamp2="8239363">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="5104" _type="InsertStringCommand" date="Mon Nov 20 16:35:26 EST 2023" starttimestamp="1700507886094" timestamp="8240234" timestamp2="8240234">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5105" _type="InsertStringCommand" date="Mon Nov 20 16:35:26 EST 2023" starttimestamp="1700507886094" timestamp="8240234" timestamp2="8240234">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5106" _type="MoveCaretCommand" caretOffset="1191" date="Mon Nov 20 16:35:26 EST 2023" docOffset="1191" starttimestamp="1700507886094" timestamp="8240684" />
  <Command __id="5107" _type="MoveCaretCommand" caretOffset="1191" date="Mon Nov 20 16:35:26 EST 2023" docOffset="1191" starttimestamp="1700507886094" timestamp="8240684" />
  <Command __id="5108" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:35:26 EST 2023" starttimestamp="1700507886094" timestamp="8240806" />
  <Command __id="5109" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:35:27 EST 2023" starttimestamp="1700507886094" timestamp="8240908" />
  <Command __id="5110" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:35:27 EST 2023" starttimestamp="1700507886094" timestamp="8240914" />
  <Command __id="5111" _type="ShellCommand" date="Mon Nov 20 16:35:27 EST 2023" starttimestamp="1700507886094" timestamp="8241809" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5112" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:35:28 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8242368" type="Run" />
  <Command __id="5113" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:35:28 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8242368" type="Run" />
  <Command __id="5114" _type="ShellCommand" date="Mon Nov 20 16:35:28 EST 2023" starttimestamp="1700507886094" timestamp="8242372" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5115" _type="ShellCommand" date="Mon Nov 20 16:35:30 EST 2023" starttimestamp="1700507886094" timestamp="8244230" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5116" _type="ShellCommand" date="Mon Nov 20 16:35:31 EST 2023" starttimestamp="1700507886094" timestamp="8245132" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5118" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:35:32 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="8246157" />
  <Command __id="5119" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:35:34 EST 2023" starttimestamp="1700507886094" timestamp="8248148" />
  <Command __id="5120" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:35:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8248283" type="Run" />
  <Command __id="5121" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:35:34 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8248283" type="Run" />
  <Command __id="5122" _type="ShellCommand" date="Mon Nov 20 16:35:34 EST 2023" starttimestamp="1700507886094" timestamp="8248575" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5123" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251150" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)"), Diff(INSERT,"Test execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5124" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251152" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5125" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251153" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):6¶")]]]></diff>
  </Command>
  <Command __id="5126" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251167" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5127" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251174" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

(5)
(5)
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):24¶Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶(5)¶(5)¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5128" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251175" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):24¶"), Diff(EQUAL,"Test Result:BaseCase"), Diff(DELETE,"SExpression"), Diff(INSERT,"List"), Diff(EQUAL,"ToStringChecker,100.0% complete,10.0,10.0,¶¶"), Diff(DELETE,"(5)¶(5)¶Test execution time (ms):2¶")]]]></diff>
  </Command>
  <Command __id="5129" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251177" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5130" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251177" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5131" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251178" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5132" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251180" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5133" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251181" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5134" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251187" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvalu"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,".eval(BasicExpressionEvaluator"), Diff(INSERT,"g.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:1"), Diff(DELETE,"4"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s."), Diff(DELETE,"BasicExpression.eval(BasicExpression"), Diff(INSERT,"ParentRunner.runLeaf(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpret"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"79"), Diff(INSERT,"290"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtual"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"19"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5135" _type="ConsoleOutput" date="Mon Nov 20 16:35:37 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8251223" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"org.junit.runners.model.Framework"), Diff(INSERT,"bus.uigen.controller."), Diff(EQUAL,"Method"), Diff(DELETE,".i"), Diff(INSERT,"I"), Diff(EQUAL,"nvo"), Diff(DELETE,"keExplosively(FrameworkMethod"), Diff(INSERT,"cationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"144"), Diff(EQUAL,"4"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"8"), Diff(INSERT,"7"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(INSERT,"663"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRun"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Contai"), Diff(EQUAL,"ner.java:2"), Diff(DELETE,"68"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"363"), Diff(INSERT,"2321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"348"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"19"), Diff(INSERT,"72"), Diff(EQUAL,"1)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethod"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain."), Diff(EQUAL,"java:"), Diff(DELETE,"62"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethod"), Diff(INSERT,"desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain."), Diff(EQUAL,"java:"), Diff(DELETE,"43"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Metho"), Diff(INSERT,"desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"566"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMetho"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"270"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶¶(5)¶(5)¶(5"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5136" _type="ExceptionCommand" date="Mon Nov 20 16:35:37 EST 2023" starttimestamp="1700507886094" timestamp="8251229" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4977" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:34:15 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8169121">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5000" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:34:22 EST 2023" docASTNodeCount="204" docActiveCodeLength="1300" docExpressionCount="144" docLength="1300" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8176267">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return this.toStringAsListHelperPublic();		}else {			return"), Diff(DELETE," "(" +"), Diff(EQUAL," this.getHead().toString"), Diff(DELETE,"() + " " + "." + " " +					this.getTail().toString() + ")""), Diff(INSERT,"AsList()"), Diff(EQUAL,";		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toStringAsList();
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5008" _type="Replace" date="Mon Nov 20 16:34:25 EST 2023" docASTNodeCount="204" docActiveCodeLength="1287" docExpressionCount="144" docLength="1287" endLine="47" insertionLength="1" int_docASTNodeCount="204" int_docActiveCodeLength="1286" int_docExpressionCount="144" int_docLength="1286" length="14" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8179679">
    <deletedText><![CDATA[toStringAsList]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5009" _type="Replace" date="Mon Nov 20 16:34:25 EST 2023" docASTNodeCount="204" docActiveCodeLength="1288" docExpressionCount="144" docLength="1288" endLine="47" insertionLength="2" int_docASTNodeCount="204" int_docActiveCodeLength="1286" int_docExpressionCount="144" int_docLength="1286" length="1" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8179768">
    <deletedText><![CDATA[t]]></deletedText>
    <insertedText><![CDATA[to]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5010" _type="Replace" date="Mon Nov 20 16:34:26 EST 2023" docASTNodeCount="204" docActiveCodeLength="1289" docExpressionCount="144" docLength="1289" endLine="47" insertionLength="3" int_docASTNodeCount="204" int_docActiveCodeLength="1286" int_docExpressionCount="144" int_docLength="1286" length="2" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8179936">
    <deletedText><![CDATA[to]]></deletedText>
    <insertedText><![CDATA[toS]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5011" _type="Replace" date="Mon Nov 20 16:34:26 EST 2023" docASTNodeCount="199" docActiveCodeLength="1293" docExpressionCount="141" docLength="1293" endLine="47" insertionLength="7" int_docASTNodeCount="204" int_docActiveCodeLength="1286" int_docExpressionCount="144" int_docLength="1286" length="3" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8180154">
    <deletedText><![CDATA[toS]]></deletedText>
    <insertedText><![CDATA[t'o'S't]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5012" _type="Replace" date="Mon Nov 20 16:34:26 EST 2023" docASTNodeCount="204" docActiveCodeLength="1295" docExpressionCount="144" docLength="1295" endLine="47" insertionLength="9" int_docASTNodeCount="204" int_docActiveCodeLength="1286" int_docExpressionCount="144" int_docLength="1286" length="7" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8180291">
    <deletedText><![CDATA[t'o'S't]]></deletedText>
    <insertedText><![CDATA[t'o'S't'r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5013" _type="Replace" date="Mon Nov 20 16:34:26 EST 2023" docASTNodeCount="204" docActiveCodeLength="1296" docExpressionCount="144" docLength="1296" endLine="47" insertionLength="10" int_docASTNodeCount="204" int_docActiveCodeLength="1286" int_docExpressionCount="144" int_docLength="1286" length="9" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8180376">
    <deletedText><![CDATA[t'o'S't'r]]></deletedText>
    <insertedText><![CDATA[t'o'S't'ri]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5014" _type="Replace" date="Mon Nov 20 16:34:26 EST 2023" docASTNodeCount="193" docActiveCodeLength="1298" docExpressionCount="136" docLength="1298" endLine="47" insertionLength="12" int_docASTNodeCount="204" int_docActiveCodeLength="1286" int_docExpressionCount="144" int_docLength="1286" length="10" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8180443">
    <deletedText><![CDATA[t'o'S't'ri]]></deletedText>
    <insertedText><![CDATA[t'o'S't'ri'n]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5015" _type="Replace" date="Mon Nov 20 16:34:26 EST 2023" docASTNodeCount="193" docActiveCodeLength="1301" docExpressionCount="136" docLength="1301" endLine="47" insertionLength="15" int_docASTNodeCount="204" int_docActiveCodeLength="1286" int_docExpressionCount="144" int_docLength="1286" length="12" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8180486">
    <deletedText><![CDATA[t'o'S't'ri'n]]></deletedText>
    <insertedText><![CDATA[t'o'S't'r'i'n'g]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5016" _type="Delete" date="Mon Nov 20 16:34:26 EST 2023" docASTNodeCount="204" docActiveCodeLength="1286" docExpressionCount="144" docLength="1286" endLine="47" length="15" offset="1272" startLine="47" starttimestamp="1700507886094" timestamp="8180759">
    <text><![CDATA[t'o'S't'r'i'n'g]]></text>
  </DocumentChange>
  <DocumentChange __id="5017" _type="Insert" date="Mon Nov 20 16:34:27 EST 2023" docASTNodeCount="204" docActiveCodeLength="1294" docExpressionCount="144" docLength="1294" length="8" offset="1272" repeat="8" starttimestamp="1700507886094" timestamp="8181506" timestamp2="8182310">
    <text><![CDATA[toString]]></text>
  </DocumentChange>
  <Command __id="5052" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:34:32 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8186318">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5073" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:34:38 EST 2023" docASTNodeCount="204" docActiveCodeLength="1294" docExpressionCount="144" docLength="1294" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8192725">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return this.toStringAsListHelperPublic();		}else {			return this.getHead().toString"), Diff(DELETE,"AsList"), Diff(EQUAL,"();		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return this.toStringAsListHelperPublic();
		}else {
			return this.getHead().toString();
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5097" _type="Replace" date="Mon Nov 20 16:35:25 EST 2023" docASTNodeCount="188" docActiveCodeLength="1262" docExpressionCount="133" docLength="1262" endLine="45" insertionLength="1" int_docASTNodeCount="201" int_docActiveCodeLength="1261" int_docExpressionCount="141" int_docLength="1261" length="33" offset="1202" startLine="45" starttimestamp="1700507886094" timestamp="8239127">
    <deletedText><![CDATA[this.toStringAsListHelperPublic()]]></deletedText>
    <insertedText><![CDATA["]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5100" _type="Insert" date="Mon Nov 20 16:35:25 EST 2023" docASTNodeCount="202" docActiveCodeLength="1264" docExpressionCount="142" docLength="1264" length="2" offset="1203" repeat="2" starttimestamp="1700507886094" timestamp="8239360" timestamp2="8240233">
    <text><![CDATA[1"]]></text>
  </DocumentChange>
  <Command __id="5117" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:35:32 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8246063">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5141" _type="LocalChecksRawCommand" date="Mon Nov 20 16:35:41 EST 2023" starttimestamp="1700507886094" timestamp="8255368">
    <CSVRow><![CDATA[67,Mon Nov 20 16:35:37 EST 2023,8,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,32,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5142" _type="LocalChecksRawCommand" date="Mon Nov 20 16:35:41 EST 2023" starttimestamp="1700507886094" timestamp="8255368">
    <CSVRow><![CDATA[67,Mon Nov 20 16:35:37 EST 2023,8,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,32,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5143" _type="MoveCaretCommand" caretOffset="1191" date="Mon Nov 20 16:35:41 EST 2023" docOffset="1191" starttimestamp="1700507886094" timestamp="8255419" />
  <Command __id="5144" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:35:44 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="8257955" />
  <Command __id="5145" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:35:44 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="8257955" />
  <Command __id="5140" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:35:41 EST 2023" docASTNodeCount="202" docActiveCodeLength="1264" docExpressionCount="142" docLength="1264" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8255366">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return "), Diff(DELETE,"this.toStringAsListHelperPublic()"), Diff(INSERT,""1""), Diff(EQUAL,";		}else {			return this.getHead().toString();		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.isAtom()) {
			return "1";
		}else {
			return this.getHead().toString();
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="5146" _type="MoveCaretCommand" caretOffset="1238" date="Mon Nov 20 16:35:45 EST 2023" docOffset="1238" starttimestamp="1700507886094" timestamp="8259760" />
  <Command __id="5147" _type="MoveCaretCommand" caretOffset="1238" date="Mon Nov 20 16:35:45 EST 2023" docOffset="1238" starttimestamp="1700507886094" timestamp="8259760" />
  <Command __id="5149" _type="MoveCaretCommand" caretOffset="15" date="Mon Nov 20 16:36:14 EST 2023" docOffset="15" starttimestamp="1700507886094" timestamp="8288059" />
  <Command __id="5150" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:36:16 EST 2023" starttimestamp="1700507886094" timestamp="8290498" />
  <Command __id="5151" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:36:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8290630" type="Run" />
  <Command __id="5152" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:36:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8290630" type="Run" />
  <Command __id="5153" _type="ShellCommand" date="Mon Nov 20 16:36:17 EST 2023" starttimestamp="1700507886094" timestamp="8290919" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5154" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293725" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶¶(5)¶(5)¶(5)"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5155" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293726" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5156" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293727" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5157" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293728" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):8"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5158" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293743" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5159" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293746" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):26"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5160" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293747" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):26"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5161" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293749" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5162" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293749" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5163" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293750" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5164" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293753" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"(5)¶(5)¶(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5165" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293754" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶(5)"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5166" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293757" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5167" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293758" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5)¶"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5168" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293759" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5169" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293772" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"14"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(INSERT,"4"), Diff(EQUAL,"7"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶"), Diff(INSERT,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶")]]]></diff>
  </Command>
  <Command __id="5170" _type="ConsoleOutput" date="Mon Nov 20 16:36:19 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8293816" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):6
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5)
(5)
(5)
(5)
(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"158"), Diff(EQUAL,"5"), Diff(DELETE,"0"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"2"), Diff(INSERT,"531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(INSERT,"35"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(INSERT,"2"), Diff(EQUAL,"78)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"29"), Diff(INSERT,"640"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"7"), Diff(INSERT,"501"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"5"), Diff(INSERT,"491"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"26"), Diff(INSERT,"448"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"363"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Componen"), Diff(EQUAL,"t.java:"), Diff(DELETE,"317"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"348"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.DelegatingMethod"), Diff(INSERT,"ava.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"270"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMetho"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThrea"), Diff(EQUAL,"d.java:2"), Diff(DELETE,"19"), Diff(INSERT,"03"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"444"), Diff(INSERT,"09"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicComman"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"69"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):6¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶¶(5)¶(5)¶(5)¶(5)¶(5)¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5148" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:36:14 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8288002">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5171" _type="ShellCommand" date="Mon Nov 20 16:36:38 EST 2023" starttimestamp="1700507886094" timestamp="8312185" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5172" _type="MoveCaretCommand" caretOffset="967" date="Mon Nov 20 16:36:38 EST 2023" docOffset="967" starttimestamp="1700507886094" timestamp="8312279" />
  <Command __id="5173" _type="MoveCaretCommand" caretOffset="967" date="Mon Nov 20 16:36:38 EST 2023" docOffset="967" starttimestamp="1700507886094" timestamp="8312279" />
  <Command __id="5175" _type="MoveCaretCommand" caretOffset="1238" date="Mon Nov 20 16:36:39 EST 2023" docOffset="1238" starttimestamp="1700507886094" timestamp="8313821" />
  <Command __id="5176" _type="ShellCommand" date="Mon Nov 20 16:36:45 EST 2023" starttimestamp="1700507886094" timestamp="8319130" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5177" _type="ShellCommand" date="Mon Nov 20 16:36:51 EST 2023" starttimestamp="1700507886094" timestamp="8325166" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5174" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:36:39 EST 2023" docASTNodeCount="202" docActiveCodeLength="1264" docExpressionCount="142" docLength="1264" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8313780">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return "1";		}else {			return this.getHead().toString();		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5178" _type="ShellCommand" date="Mon Nov 20 16:36:53 EST 2023" starttimestamp="1700507886094" timestamp="8327081" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5179" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:36:53 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8327252" type="Run" />
  <Command __id="5180" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:36:53 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8327252" type="Run" />
  <Command __id="5181" _type="ShellCommand" date="Mon Nov 20 16:36:53 EST 2023" starttimestamp="1700507886094" timestamp="8327262" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5183" _type="MoveCaretCommand" caretOffset="967" date="Mon Nov 20 16:36:54 EST 2023" docOffset="967" starttimestamp="1700507886094" timestamp="8328397" />
  <Command __id="5184" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:36:56 EST 2023" starttimestamp="1700507886094" timestamp="8330209" />
  <Command __id="5185" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:36:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8330341" type="Run" />
  <Command __id="5186" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:36:56 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8330341" type="Run" />
  <Command __id="5187" _type="ShellCommand" date="Mon Nov 20 16:36:56 EST 2023" starttimestamp="1700507886094" timestamp="8330631" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5188" _type="ConsoleOutput" date="Mon Nov 20 16:37:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8337421" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):6¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶¶(5)¶(5)¶(5)¶(5)¶(5)¶Test execution time (ms):1"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5189" _type="ConsoleOutput" date="Mon Nov 20 16:37:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8337422" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5190" _type="ConsoleOutput" date="Mon Nov 20 16:37:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8337422" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5191" _type="ConsoleOutput" date="Mon Nov 20 16:37:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8337423" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5192" _type="ConsoleOutput" date="Mon Nov 20 16:37:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8337443" type="ConsoleOutput">
    <outputString><![CDATA[(5)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5193" _type="ConsoleOutput" date="Mon Nov 20 16:37:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8337446" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):31
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)"), Diff(INSERT,"Test execution time (ms):31"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5194" _type="ConsoleOutput" date="Mon Nov 20 16:37:03 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8337452" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):31"), Diff(INSERT,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5195" _type="ShellCommand" date="Mon Nov 20 16:37:07 EST 2023" starttimestamp="1700507886094" timestamp="8341655" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5196" _type="MoveCaretCommand" caretOffset="863" date="Mon Nov 20 16:37:07 EST 2023" docOffset="863" starttimestamp="1700507886094" timestamp="8341734" />
  <Command __id="5197" _type="MoveCaretCommand" caretOffset="863" date="Mon Nov 20 16:37:07 EST 2023" docOffset="863" starttimestamp="1700507886094" timestamp="8341734" />
  <Command __id="5198" _type="ShellCommand" date="Mon Nov 20 16:37:08 EST 2023" starttimestamp="1700507886094" timestamp="8342684" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5199" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:37:08 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8342870" type="Run" />
  <Command __id="5200" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:37:08 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8342870" type="Run" />
  <Command __id="5201" _type="ShellCommand" date="Mon Nov 20 16:37:08 EST 2023" starttimestamp="1700507886094" timestamp="8342874" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5202" _type="ShellCommand" date="Mon Nov 20 16:37:09 EST 2023" starttimestamp="1700507886094" timestamp="8343742" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5203" _type="ShellCommand" date="Mon Nov 20 16:37:38 EST 2023" starttimestamp="1700507886094" timestamp="8372815" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5204" _type="ShellCommand" date="Mon Nov 20 16:37:39 EST 2023" starttimestamp="1700507886094" timestamp="8373503" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5182" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:36:54 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8328335">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5205" _type="ShellCommand" date="Mon Nov 20 16:38:07 EST 2023" starttimestamp="1700507886094" timestamp="8401435" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5206" _type="LocalChecksRawCommand" date="Mon Nov 20 16:38:07 EST 2023" starttimestamp="1700507886094" timestamp="8401437">
    <CSVRow><![CDATA[69,Mon Nov 20 16:37:03 EST 2023,8,0,ListToStringDeepCheckerBasic,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,34,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5207" _type="LocalChecksRawCommand" date="Mon Nov 20 16:38:07 EST 2023" starttimestamp="1700507886094" timestamp="8401437">
    <CSVRow><![CDATA[69,Mon Nov 20 16:37:03 EST 2023,8,0,ListToStringDeepCheckerBasic,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,34,0,false, ,ClassRegistryProvided MainClassProvided , ,ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5209" _type="MoveCaretCommand" caretOffset="1238" date="Mon Nov 20 16:38:09 EST 2023" docOffset="1238" starttimestamp="1700507886094" timestamp="8403006" />
  <Command __id="5210" _type="MoveCaretCommand" caretOffset="589" date="Mon Nov 20 16:38:11 EST 2023" docOffset="589" starttimestamp="1700507886094" timestamp="8405661" />
  <Command __id="5211" _type="MoveCaretCommand" caretOffset="589" date="Mon Nov 20 16:38:11 EST 2023" docOffset="589" starttimestamp="1700507886094" timestamp="8405661" />
  <Command __id="5212" _type="MoveCaretCommand" caretOffset="545" date="Mon Nov 20 16:38:12 EST 2023" docOffset="545" starttimestamp="1700507886094" timestamp="8406535" />
  <Command __id="5213" _type="MoveCaretCommand" caretOffset="545" date="Mon Nov 20 16:38:12 EST 2023" docOffset="545" starttimestamp="1700507886094" timestamp="8406535" />
  <Command __id="5214" _type="MoveCaretCommand" caretOffset="791" date="Mon Nov 20 16:38:13 EST 2023" docOffset="791" starttimestamp="1700507886094" timestamp="8407695" />
  <Command __id="5215" _type="MoveCaretCommand" caretOffset="791" date="Mon Nov 20 16:38:13 EST 2023" docOffset="791" starttimestamp="1700507886094" timestamp="8407695" />
  <Command __id="5216" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:38:15 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="8408915" />
  <Command __id="5217" _type="MoveCaretCommand" caretOffset="928" date="Mon Nov 20 16:38:15 EST 2023" docOffset="928" starttimestamp="1700507886094" timestamp="8408915" />
  <Command __id="5218" _type="MoveCaretCommand" caretOffset="1010" date="Mon Nov 20 16:38:15 EST 2023" docOffset="1010" starttimestamp="1700507886094" timestamp="8409552" />
  <Command __id="5219" _type="MoveCaretCommand" caretOffset="1010" date="Mon Nov 20 16:38:15 EST 2023" docOffset="1010" starttimestamp="1700507886094" timestamp="8409552" />
  <Command __id="5220" _type="MoveCaretCommand" caretOffset="1205" date="Mon Nov 20 16:38:34 EST 2023" docOffset="1205" starttimestamp="1700507886094" timestamp="8428195" />
  <Command __id="5221" _type="MoveCaretCommand" caretOffset="1205" date="Mon Nov 20 16:38:34 EST 2023" docOffset="1205" starttimestamp="1700507886094" timestamp="8428195" />
  <Command __id="5208" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:38:09 EST 2023" docASTNodeCount="202" docActiveCodeLength="1264" docExpressionCount="142" docLength="1264" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8402950">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.isAtom()) {			return "1";		}else {			return this.getHead().toString();		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5222" _type="MoveCaretCommand" caretOffset="1180" date="Mon Nov 20 16:38:36 EST 2023" docOffset="1180" starttimestamp="1700507886094" timestamp="8430032" />
  <Command __id="5223" _type="MoveCaretCommand" caretOffset="1180" date="Mon Nov 20 16:38:36 EST 2023" docOffset="1180" starttimestamp="1700507886094" timestamp="8430032" />
  <DocumentChange __id="5224" _type="Insert" date="Mon Nov 20 16:38:37 EST 2023" docASTNodeCount="202" docActiveCodeLength="1269" docExpressionCount="142" docLength="1269" length="5" offset="1180" repeat="5" starttimestamp="1700507886094" timestamp="8431512" timestamp2="8432028">
    <text><![CDATA[getHE]]></text>
  </DocumentChange>
  <Command __id="5225" _type="InsertStringCommand" date="Mon Nov 20 16:38:37 EST 2023" starttimestamp="1700507886094" timestamp="8431514" timestamp2="8431514">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5226" _type="InsertStringCommand" date="Mon Nov 20 16:38:37 EST 2023" starttimestamp="1700507886094" timestamp="8431514" timestamp2="8431514">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5228" _type="InsertStringCommand" date="Mon Nov 20 16:38:37 EST 2023" starttimestamp="1700507886094" timestamp="8431584" timestamp2="8431584">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5229" _type="InsertStringCommand" date="Mon Nov 20 16:38:37 EST 2023" starttimestamp="1700507886094" timestamp="8431584" timestamp2="8431584">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5231" _type="InsertStringCommand" date="Mon Nov 20 16:38:37 EST 2023" starttimestamp="1700507886094" timestamp="8431742" timestamp2="8431742">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5232" _type="InsertStringCommand" date="Mon Nov 20 16:38:37 EST 2023" starttimestamp="1700507886094" timestamp="8431742" timestamp2="8431742">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5234" _type="InsertStringCommand" date="Mon Nov 20 16:38:38 EST 2023" starttimestamp="1700507886094" timestamp="8431975" timestamp2="8431975">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="5235" _type="InsertStringCommand" date="Mon Nov 20 16:38:38 EST 2023" starttimestamp="1700507886094" timestamp="8431975" timestamp2="8431975">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="5237" _type="InsertStringCommand" date="Mon Nov 20 16:38:38 EST 2023" starttimestamp="1700507886094" timestamp="8432030" timestamp2="8432030">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5238" _type="InsertStringCommand" date="Mon Nov 20 16:38:38 EST 2023" starttimestamp="1700507886094" timestamp="8432030" timestamp2="8432030">
    <data><![CDATA[E]]></data>
  </Command>
  <DocumentChange __id="5239" _type="Delete" date="Mon Nov 20 16:38:38 EST 2023" docASTNodeCount="202" docActiveCodeLength="1268" docExpressionCount="142" docLength="1268" endLine="44" length="1" offset="1184" startLine="44" starttimestamp="1700507886094" timestamp="8432549">
    <text><![CDATA[E]]></text>
  </DocumentChange>
  <Command __id="5240" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:38:38 EST 2023" starttimestamp="1700507886094" timestamp="8432550" />
  <Command __id="5241" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:38:38 EST 2023" starttimestamp="1700507886094" timestamp="8432550" />
  <Command __id="5243" _type="InsertStringCommand" date="Mon Nov 20 16:38:38 EST 2023" starttimestamp="1700507886094" timestamp="8432857" timestamp2="8432857">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5244" _type="InsertStringCommand" date="Mon Nov 20 16:38:38 EST 2023" starttimestamp="1700507886094" timestamp="8432857" timestamp2="8432857">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5246" _type="InsertStringCommand" date="Mon Nov 20 16:38:39 EST 2023" starttimestamp="1700507886094" timestamp="8432940" timestamp2="8432940">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5247" _type="InsertStringCommand" date="Mon Nov 20 16:38:39 EST 2023" starttimestamp="1700507886094" timestamp="8432940" timestamp2="8432940">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5249" _type="InsertStringCommand" date="Mon Nov 20 16:38:39 EST 2023" starttimestamp="1700507886094" timestamp="8433032" timestamp2="8433032">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5250" _type="InsertStringCommand" date="Mon Nov 20 16:38:39 EST 2023" starttimestamp="1700507886094" timestamp="8433032" timestamp2="8433032">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5252" _type="InsertStringCommand" date="Mon Nov 20 16:38:39 EST 2023" starttimestamp="1700507886094" timestamp="8433359" timestamp2="8433359">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5253" _type="InsertStringCommand" date="Mon Nov 20 16:38:39 EST 2023" starttimestamp="1700507886094" timestamp="8433359" timestamp2="8433359">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5255" _type="InsertStringCommand" date="Mon Nov 20 16:38:39 EST 2023" starttimestamp="1700507886094" timestamp="8433436" timestamp2="8433436">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="5256" _type="InsertStringCommand" date="Mon Nov 20 16:38:39 EST 2023" starttimestamp="1700507886094" timestamp="8433436" timestamp2="8433436">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="5258" _type="InsertStringCommand" date="Mon Nov 20 16:38:40 EST 2023" starttimestamp="1700507886094" timestamp="8434052" timestamp2="8434052">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5259" _type="InsertStringCommand" date="Mon Nov 20 16:38:40 EST 2023" starttimestamp="1700507886094" timestamp="8434052" timestamp2="8434052">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5260" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:38:40 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8434055" />
  <Command __id="5261" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:38:40 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8434848" />
  <Command __id="5262" _type="MoveCaretCommand" caretOffset="1215" date="Mon Nov 20 16:38:41 EST 2023" docOffset="1215" starttimestamp="1700507886094" timestamp="8434910" />
  <Command __id="5263" _type="MoveCaretCommand" caretOffset="1215" date="Mon Nov 20 16:38:41 EST 2023" docOffset="1215" starttimestamp="1700507886094" timestamp="8434910" />
  <Command __id="5264" _type="MoveCaretCommand" caretOffset="1216" date="Mon Nov 20 16:38:41 EST 2023" docOffset="1216" starttimestamp="1700507886094" timestamp="8435757" />
  <Command __id="5265" _type="MoveCaretCommand" caretOffset="1216" date="Mon Nov 20 16:38:41 EST 2023" docOffset="1216" starttimestamp="1700507886094" timestamp="8435757" />
  <Command __id="5266" _type="MoveCaretCommand" caretOffset="1216" date="Mon Nov 20 16:38:43 EST 2023" docOffset="1216" starttimestamp="1700507886094" timestamp="8436953" />
  <Command __id="5267" _type="MoveCaretCommand" caretOffset="1216" date="Mon Nov 20 16:38:43 EST 2023" docOffset="1216" starttimestamp="1700507886094" timestamp="8436954" />
  <DocumentChange __id="5242" _type="Insert" date="Mon Nov 20 16:38:38 EST 2023" docASTNodeCount="204" docActiveCodeLength="1274" docExpressionCount="144" docLength="1274" length="6" offset="1184" repeat="6" starttimestamp="1700507886094" timestamp="8432853" timestamp2="8434051">
    <text><![CDATA[ead().]]></text>
  </DocumentChange>
  <Command __id="5268" _type="SelectTextCommand" caretOffset="1212" date="Mon Nov 20 16:38:44 EST 2023" end="1215" start="1212" starttimestamp="1700507886094" timestamp="8438366" />
  <Command __id="5269" _type="SelectTextCommand" caretOffset="1212" date="Mon Nov 20 16:38:44 EST 2023" end="1215" start="1212" starttimestamp="1700507886094" timestamp="8438366" />
  <DocumentChange __id="5270" _type="Replace" date="Mon Nov 20 16:38:46 EST 2023" docASTNodeCount="204" docActiveCodeLength="1272" docExpressionCount="144" docLength="1272" endLine="45" insertionLength="1" int_docASTNodeCount="203" int_docActiveCodeLength="1271" int_docExpressionCount="143" int_docLength="1271" length="3" offset="1212" startLine="45" starttimestamp="1700507886094" timestamp="8440265">
    <deletedText><![CDATA["1"]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="5271" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440270" timestamp2="8440270">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5272" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440271" timestamp2="8440271">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="5273" _type="Insert" date="Mon Nov 20 16:38:46 EST 2023" docASTNodeCount="206" docActiveCodeLength="1280" docExpressionCount="146" docLength="1280" length="8" offset="1213" repeat="8" starttimestamp="1700507886094" timestamp="8440328" timestamp2="8441640">
    <text><![CDATA[his.getH]]></text>
  </DocumentChange>
  <Command __id="5274" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440330" timestamp2="8440330">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5275" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440330" timestamp2="8440330">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5277" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440371" timestamp2="8440371">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5278" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440371" timestamp2="8440371">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5280" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440448" timestamp2="8440448">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5281" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440448" timestamp2="8440448">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5283" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440577" timestamp2="8440577">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5284" _type="InsertStringCommand" date="Mon Nov 20 16:38:46 EST 2023" starttimestamp="1700507886094" timestamp="8440577" timestamp2="8440577">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5285" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:38:46 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8440580" />
  <Command __id="5290" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:38:48 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8442158" />
  <DocumentChange __id="5291" _type="Replace" date="Mon Nov 20 16:38:48 EST 2023" docASTNodeCount="206" docActiveCodeLength="1285" docExpressionCount="146" docLength="1285" endLine="45" insertionLength="9" int_docASTNodeCount="206" int_docActiveCodeLength="1276" int_docExpressionCount="146" int_docLength="1276" length="4" offset="1217" startLine="45" starttimestamp="1700507886094" timestamp="8442160">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="5292" _type="InsertStringCommand" date="Mon Nov 20 16:38:48 EST 2023" starttimestamp="1700507886094" timestamp="8442165" timestamp2="8442165">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5293" _type="InsertStringCommand" date="Mon Nov 20 16:38:48 EST 2023" starttimestamp="1700507886094" timestamp="8442165" timestamp2="8442165">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5294" _type="Insert" date="Mon Nov 20 16:38:48 EST 2023" docASTNodeCount="208" docActiveCodeLength="1289" docExpressionCount="148" docLength="1289" length="4" offset="1226" repeat="4" starttimestamp="1700507886094" timestamp="8442380" timestamp2="8443161">
    <text><![CDATA[.toS]]></text>
  </DocumentChange>
  <Command __id="5295" _type="InsertStringCommand" date="Mon Nov 20 16:38:48 EST 2023" starttimestamp="1700507886094" timestamp="8442384" timestamp2="8442384">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5296" _type="InsertStringCommand" date="Mon Nov 20 16:38:48 EST 2023" starttimestamp="1700507886094" timestamp="8442384" timestamp2="8442384">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5297" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:38:48 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8442391" />
  <Command __id="5301" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:38:49 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8443429" />
  <Command __id="5303" _type="InsertStringCommand" date="Mon Nov 20 16:38:49 EST 2023" starttimestamp="1700507886094" timestamp="8443438" timestamp2="8443438">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5304" _type="InsertStringCommand" date="Mon Nov 20 16:38:49 EST 2023" starttimestamp="1700507886094" timestamp="8443438" timestamp2="8443438">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5305" _type="MoveCaretCommand" caretOffset="1285" date="Mon Nov 20 16:38:51 EST 2023" docOffset="1285" starttimestamp="1700507886094" timestamp="8445003" />
  <Command __id="5306" _type="MoveCaretCommand" caretOffset="1285" date="Mon Nov 20 16:38:51 EST 2023" docOffset="1285" starttimestamp="1700507886094" timestamp="8445003" />
  <Command __id="5307" _type="MoveCaretCommand" caretOffset="1283" date="Mon Nov 20 16:38:52 EST 2023" docOffset="1283" starttimestamp="1700507886094" timestamp="8446080" />
  <Command __id="5308" _type="MoveCaretCommand" caretOffset="1283" date="Mon Nov 20 16:38:52 EST 2023" docOffset="1283" starttimestamp="1700507886094" timestamp="8446080" />
  <Command __id="5309" _type="SelectTextCommand" caretOffset="1259" date="Mon Nov 20 16:38:53 EST 2023" end="1284" start="1259" starttimestamp="1700507886094" timestamp="8447631" />
  <Command __id="5310" _type="SelectTextCommand" caretOffset="1259" date="Mon Nov 20 16:38:53 EST 2023" end="1284" start="1259" starttimestamp="1700507886094" timestamp="8447632" />
  <Command __id="5312" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:38:53 EST 2023" starttimestamp="1700507886094" timestamp="8447837" />
  <Command __id="5313" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:38:53 EST 2023" starttimestamp="1700507886094" timestamp="8447837" />
  <Command __id="5314" _type="MoveCaretCommand" caretOffset="1248" date="Mon Nov 20 16:38:54 EST 2023" docOffset="1248" starttimestamp="1700507886094" timestamp="8448329" />
  <Command __id="5315" _type="MoveCaretCommand" caretOffset="1248" date="Mon Nov 20 16:38:54 EST 2023" docOffset="1248" starttimestamp="1700507886094" timestamp="8448329" />
  <DocumentChange __id="5302" _type="Replace" date="Mon Nov 20 16:38:49 EST 2023" docASTNodeCount="208" docActiveCodeLength="1296" docExpressionCount="148" docLength="1296" endLine="45" insertionLength="10" int_docASTNodeCount="208" int_docActiveCodeLength="1286" int_docExpressionCount="148" int_docLength="1286" length="3" offset="1227" startLine="45" starttimestamp="1700507886094" timestamp="8443432">
    <deletedText><![CDATA[toS]]></deletedText>
    <insertedText><![CDATA[toString()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5311" _type="Delete" date="Mon Nov 20 16:38:53 EST 2023" docASTNodeCount="203" docActiveCodeLength="1271" docExpressionCount="143" docLength="1271" endLine="47" length="25" offset="1259" startLine="47" starttimestamp="1700507886094" timestamp="8447832">
    <text><![CDATA[this.getHead().toString()]]></text>
  </DocumentChange>
  <DocumentChange __id="5318" _type="Replace" date="Mon Nov 20 16:39:18 EST 2023" docASTNodeCount="201" docActiveCodeLength="1254" docExpressionCount="141" docLength="1254" endLine="44" insertionLength="1" int_docASTNodeCount="201" int_docActiveCodeLength="1253" int_docExpressionCount="141" int_docLength="1253" length="18" offset="1180" startLine="44" starttimestamp="1700507886094" timestamp="8472509">
    <deletedText><![CDATA[getHead().isAtom()]]></deletedText>
    <insertedText><![CDATA[g]]></insertedText>
  </DocumentChange>
  <Command __id="5316" _type="SelectTextCommand" caretOffset="1198" date="Mon Nov 20 16:39:17 EST 2023" end="1198" start="1180" starttimestamp="1700507886094" timestamp="8471877" />
  <Command __id="5317" _type="SelectTextCommand" caretOffset="1198" date="Mon Nov 20 16:39:17 EST 2023" end="1198" start="1180" starttimestamp="1700507886094" timestamp="8471878" />
  <Command __id="5319" _type="InsertStringCommand" date="Mon Nov 20 16:39:18 EST 2023" starttimestamp="1700507886094" timestamp="8472514" timestamp2="8472514">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5320" _type="InsertStringCommand" date="Mon Nov 20 16:39:18 EST 2023" starttimestamp="1700507886094" timestamp="8472515" timestamp2="8472515">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5322" _type="InsertStringCommand" date="Mon Nov 20 16:39:18 EST 2023" starttimestamp="1700507886094" timestamp="8472560" timestamp2="8472560">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5323" _type="InsertStringCommand" date="Mon Nov 20 16:39:18 EST 2023" starttimestamp="1700507886094" timestamp="8472560" timestamp2="8472560">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5325" _type="InsertStringCommand" date="Mon Nov 20 16:39:18 EST 2023" starttimestamp="1700507886094" timestamp="8472714" timestamp2="8472714">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5326" _type="InsertStringCommand" date="Mon Nov 20 16:39:18 EST 2023" starttimestamp="1700507886094" timestamp="8472714" timestamp2="8472714">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5328" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8472924" timestamp2="8472924">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="5329" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8472924" timestamp2="8472924">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="5331" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473239" timestamp2="8473239">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5332" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473239" timestamp2="8473239">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5334" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473348" timestamp2="8473348">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5335" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473348" timestamp2="8473348">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5337" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473448" timestamp2="8473448">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5338" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473448" timestamp2="8473448">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5340" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473812" timestamp2="8473812">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5341" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473812" timestamp2="8473812">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5342" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473853" timestamp2="8473853">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="5343" _type="InsertStringCommand" date="Mon Nov 20 16:39:19 EST 2023" starttimestamp="1700507886094" timestamp="8473853" timestamp2="8473853">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="5345" _type="InsertStringCommand" date="Mon Nov 20 16:39:20 EST 2023" starttimestamp="1700507886094" timestamp="8474464" timestamp2="8474464">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5346" _type="InsertStringCommand" date="Mon Nov 20 16:39:20 EST 2023" starttimestamp="1700507886094" timestamp="8474464" timestamp2="8474464">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5347" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:39:20 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8474471" />
  <Command __id="5351" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:39:22 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8476542" />
  <Command __id="5353" _type="InsertStringCommand" date="Mon Nov 20 16:39:22 EST 2023" starttimestamp="1700507886094" timestamp="8476549" timestamp2="8476549">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5354" _type="InsertStringCommand" date="Mon Nov 20 16:39:22 EST 2023" starttimestamp="1700507886094" timestamp="8476549" timestamp2="8476549">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5321" _type="Insert" date="Mon Nov 20 16:39:18 EST 2023" docASTNodeCount="203" docActiveCodeLength="1266" docExpressionCount="143" docLength="1266" length="12" offset="1181" repeat="11" starttimestamp="1700507886094" timestamp="8472558" timestamp2="8476149">
    <text><![CDATA[etTail().isN]]></text>
  </DocumentChange>
  <DocumentChange __id="5352" _type="Replace" date="Mon Nov 20 16:39:22 EST 2023" docASTNodeCount="203" docActiveCodeLength="1270" docExpressionCount="143" docLength="1270" endLine="44" insertionLength="7" int_docASTNodeCount="203" int_docActiveCodeLength="1263" int_docExpressionCount="143" int_docLength="1263" length="3" offset="1190" startLine="44" starttimestamp="1700507886094" timestamp="8476545">
    <deletedText><![CDATA[isN]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <Command __id="5355" _type="MoveCaretCommand" caretOffset="1258" date="Mon Nov 20 16:39:26 EST 2023" docOffset="1258" starttimestamp="1700507886094" timestamp="8480825" />
  <Command __id="5356" _type="MoveCaretCommand" caretOffset="1258" date="Mon Nov 20 16:39:26 EST 2023" docOffset="1258" starttimestamp="1700507886094" timestamp="8480825" />
  <DocumentChange __id="5357" _type="Insert" date="Mon Nov 20 16:39:33 EST 2023" docASTNodeCount="206" docActiveCodeLength="1279" docExpressionCount="146" docLength="1279" length="9" offset="1258" repeat="9" starttimestamp="1700507886094" timestamp="8487550" timestamp2="8489251">
    <text><![CDATA[this.getH]]></text>
  </DocumentChange>
  <Command __id="5358" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487553" timestamp2="8487553">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5359" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487553" timestamp2="8487553">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5361" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487603" timestamp2="8487603">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5362" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487603" timestamp2="8487603">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5364" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487661" timestamp2="8487661">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5365" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487661" timestamp2="8487661">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5367" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487740" timestamp2="8487740">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5368" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487740" timestamp2="8487740">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5370" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487871" timestamp2="8487871">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5371" _type="InsertStringCommand" date="Mon Nov 20 16:39:33 EST 2023" starttimestamp="1700507886094" timestamp="8487871" timestamp2="8487871">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5372" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:39:33 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8487879" />
  <Command __id="5377" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:39:35 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8489793" />
  <DocumentChange __id="5378" _type="Replace" date="Mon Nov 20 16:39:35 EST 2023" docASTNodeCount="206" docActiveCodeLength="1284" docExpressionCount="146" docLength="1284" endLine="47" insertionLength="9" int_docASTNodeCount="206" int_docActiveCodeLength="1275" int_docExpressionCount="146" int_docLength="1275" length="4" offset="1263" startLine="47" starttimestamp="1700507886094" timestamp="8489794">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="5379" _type="InsertStringCommand" date="Mon Nov 20 16:39:35 EST 2023" starttimestamp="1700507886094" timestamp="8489797" timestamp2="8489797">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5380" _type="InsertStringCommand" date="Mon Nov 20 16:39:35 EST 2023" starttimestamp="1700507886094" timestamp="8489797" timestamp2="8489797">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5381" _type="Insert" date="Mon Nov 20 16:39:36 EST 2023" docASTNodeCount="208" docActiveCodeLength="1287" docExpressionCount="148" docLength="1287" length="3" offset="1272" repeat="3" starttimestamp="1700507886094" timestamp="8490029" timestamp2="8490714">
    <text><![CDATA[.to]]></text>
  </DocumentChange>
  <Command __id="5382" _type="InsertStringCommand" date="Mon Nov 20 16:39:36 EST 2023" starttimestamp="1700507886094" timestamp="8490032" timestamp2="8490032">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5383" _type="InsertStringCommand" date="Mon Nov 20 16:39:36 EST 2023" starttimestamp="1700507886094" timestamp="8490032" timestamp2="8490032">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5384" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:39:36 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8490037" />
  <Command __id="5388" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.smartEnter" date="Mon Nov 20 16:39:37 EST 2023" starttimestamp="1700507886094" timestamp="8491042" />
  <Command __id="5389" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:39:37 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8491056" />
  <DocumentChange __id="5387" _type="Insert" date="Mon Nov 20 16:39:37 EST 2023" docASTNodeCount="208" docActiveCodeLength="1291" docExpressionCount="148" docLength="1291" length="4" offset="1276" starttimestamp="1700507886094" timestamp="8491038">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="5394" _type="Insert" date="Mon Nov 20 16:39:40 EST 2023" docASTNodeCount="210" docActiveCodeLength="1300" docExpressionCount="150" docLength="1300" length="9" offset="1275" repeat="8" starttimestamp="1700507886094" timestamp="8494302" timestamp2="8496516">
    <text><![CDATA[String().]]></text>
  </DocumentChange>
  <Command __id="5390" _type="MoveCaretCommand" caretOffset="1276" date="Mon Nov 20 16:39:39 EST 2023" docOffset="1276" starttimestamp="1700507886094" timestamp="8493607" />
  <Command __id="5391" _type="MoveCaretCommand" caretOffset="1276" date="Mon Nov 20 16:39:39 EST 2023" docOffset="1276" starttimestamp="1700507886094" timestamp="8493607" />
  <Command __id="5392" _type="MoveCaretCommand" caretOffset="1275" date="Mon Nov 20 16:39:40 EST 2023" docOffset="1275" starttimestamp="1700507886094" timestamp="8494198" />
  <Command __id="5393" _type="MoveCaretCommand" caretOffset="1275" date="Mon Nov 20 16:39:40 EST 2023" docOffset="1275" starttimestamp="1700507886094" timestamp="8494198" />
  <Command __id="5395" _type="InsertStringCommand" date="Mon Nov 20 16:39:40 EST 2023" starttimestamp="1700507886094" timestamp="8494305" timestamp2="8494305">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5396" _type="InsertStringCommand" date="Mon Nov 20 16:39:40 EST 2023" starttimestamp="1700507886094" timestamp="8494305" timestamp2="8494305">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="5398" _type="InsertStringCommand" date="Mon Nov 20 16:39:40 EST 2023" starttimestamp="1700507886094" timestamp="8494899" timestamp2="8494899">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5399" _type="InsertStringCommand" date="Mon Nov 20 16:39:40 EST 2023" starttimestamp="1700507886094" timestamp="8494899" timestamp2="8494899">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5401" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495121" timestamp2="8495121">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5402" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495121" timestamp2="8495121">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5404" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495200" timestamp2="8495200">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5405" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495200" timestamp2="8495200">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5407" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495288" timestamp2="8495288">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5408" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495288" timestamp2="8495288">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5410" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495340" timestamp2="8495340">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5411" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495340" timestamp2="8495340">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5413" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495738" timestamp2="8495738">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5414" _type="InsertStringCommand" date="Mon Nov 20 16:39:41 EST 2023" starttimestamp="1700507886094" timestamp="8495738" timestamp2="8495738">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5415" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:39:42 EST 2023" starttimestamp="1700507886094" timestamp="8496233" />
  <Command __id="5416" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:39:42 EST 2023" starttimestamp="1700507886094" timestamp="8496233" />
  <Command __id="5418" _type="InsertStringCommand" date="Mon Nov 20 16:39:42 EST 2023" starttimestamp="1700507886094" timestamp="8496519" timestamp2="8496519">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5419" _type="InsertStringCommand" date="Mon Nov 20 16:39:42 EST 2023" starttimestamp="1700507886094" timestamp="8496519" timestamp2="8496519">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5420" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:39:42 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8496526" />
  <Command __id="5422" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:39:44 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8498399" />
  <DocumentChange __id="5421" _type="Delete" date="Mon Nov 20 16:39:43 EST 2023" docASTNodeCount="208" docActiveCodeLength="1299" docExpressionCount="148" docLength="1299" endLine="47" length="1" offset="1283" startLine="47" starttimestamp="1700507886094" timestamp="8497634">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="5423" _type="Insert" date="Mon Nov 20 16:39:44 EST 2023" docASTNodeCount="205" docActiveCodeLength="1321" docExpressionCount="145" docLength="1321" length="22" offset="1283" repeat="3" starttimestamp="1700507886094" timestamp="8498404" timestamp2="8498539">
    <text><![CDATA[BasicExpressionImpl + ]]></text>
  </DocumentChange>
  <DocumentChange __id="5432" _type="Delete" date="Mon Nov 20 16:39:45 EST 2023" docASTNodeCount="208" docActiveCodeLength="1299" docExpressionCount="148" docLength="1299" endLine="47" length="22" offset="1283" repeat="2" startLine="47" starttimestamp="1700507886094" timestamp="8499441" timestamp2="8499770">
    <text><![CDATA[BasicExpressionImpl + ]]></text>
  </DocumentChange>
  <DocumentChange __id="5436" _type="Insert" date="Mon Nov 20 16:39:46 EST 2023" docASTNodeCount="208" docActiveCodeLength="1302" docExpressionCount="148" docLength="1302" length="3" offset="1283" repeat="3" starttimestamp="1700507886094" timestamp="8500755" timestamp2="8501011">
    <text><![CDATA[ + ]]></text>
  </DocumentChange>
  <Command __id="5424" _type="InsertStringCommand" date="Mon Nov 20 16:39:44 EST 2023" starttimestamp="1700507886094" timestamp="8498407" timestamp2="8498407">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5425" _type="InsertStringCommand" date="Mon Nov 20 16:39:44 EST 2023" starttimestamp="1700507886094" timestamp="8498408" timestamp2="8498408">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5427" _type="InsertStringCommand" date="Mon Nov 20 16:39:44 EST 2023" starttimestamp="1700507886094" timestamp="8498501" timestamp2="8498501">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5428" _type="InsertStringCommand" date="Mon Nov 20 16:39:44 EST 2023" starttimestamp="1700507886094" timestamp="8498501" timestamp2="8498501">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5430" _type="InsertStringCommand" date="Mon Nov 20 16:39:44 EST 2023" starttimestamp="1700507886094" timestamp="8498541" timestamp2="8498541">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5431" _type="InsertStringCommand" date="Mon Nov 20 16:39:44 EST 2023" starttimestamp="1700507886094" timestamp="8498541" timestamp2="8498541">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5433" _type="UndoCommand" date="Mon Nov 20 16:39:45 EST 2023" starttimestamp="1700507886094" timestamp="8499445" />
  <Command __id="5435" _type="UndoCommand" date="Mon Nov 20 16:39:45 EST 2023" starttimestamp="1700507886094" timestamp="8499776" />
  <Command __id="5437" _type="InsertStringCommand" date="Mon Nov 20 16:39:46 EST 2023" starttimestamp="1700507886094" timestamp="8500757" timestamp2="8500757">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5438" _type="InsertStringCommand" date="Mon Nov 20 16:39:46 EST 2023" starttimestamp="1700507886094" timestamp="8500757" timestamp2="8500757">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5440" _type="InsertStringCommand" date="Mon Nov 20 16:39:46 EST 2023" starttimestamp="1700507886094" timestamp="8500897" timestamp2="8500897">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5441" _type="InsertStringCommand" date="Mon Nov 20 16:39:46 EST 2023" starttimestamp="1700507886094" timestamp="8500897" timestamp2="8500897">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5443" _type="InsertStringCommand" date="Mon Nov 20 16:39:47 EST 2023" starttimestamp="1700507886094" timestamp="8501014" timestamp2="8501014">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5444" _type="InsertStringCommand" date="Mon Nov 20 16:39:47 EST 2023" starttimestamp="1700507886094" timestamp="8501014" timestamp2="8501014">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5446" _type="InsertStringCommand" date="Mon Nov 20 16:39:55 EST 2023" starttimestamp="1700507886094" timestamp="8509809" timestamp2="8509809">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5447" _type="InsertStringCommand" date="Mon Nov 20 16:39:55 EST 2023" starttimestamp="1700507886094" timestamp="8509809" timestamp2="8509809">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5449" _type="InsertStringCommand" date="Mon Nov 20 16:39:56 EST 2023" starttimestamp="1700507886094" timestamp="8509939" timestamp2="8509939">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5450" _type="InsertStringCommand" date="Mon Nov 20 16:39:56 EST 2023" starttimestamp="1700507886094" timestamp="8509939" timestamp2="8509939">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5452" _type="InsertStringCommand" date="Mon Nov 20 16:39:56 EST 2023" starttimestamp="1700507886094" timestamp="8510018" timestamp2="8510018">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5453" _type="InsertStringCommand" date="Mon Nov 20 16:39:56 EST 2023" starttimestamp="1700507886094" timestamp="8510018" timestamp2="8510018">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5455" _type="InsertStringCommand" date="Mon Nov 20 16:39:56 EST 2023" starttimestamp="1700507886094" timestamp="8510073" timestamp2="8510073">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5456" _type="InsertStringCommand" date="Mon Nov 20 16:39:56 EST 2023" starttimestamp="1700507886094" timestamp="8510073" timestamp2="8510073">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5458" _type="InsertStringCommand" date="Mon Nov 20 16:39:56 EST 2023" starttimestamp="1700507886094" timestamp="8510232" timestamp2="8510232">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5459" _type="InsertStringCommand" date="Mon Nov 20 16:39:56 EST 2023" starttimestamp="1700507886094" timestamp="8510232" timestamp2="8510232">
    <data><![CDATA[.]]></data>
  </Command>
  <DocumentChange __id="5445" _type="Insert" date="Mon Nov 20 16:39:55 EST 2023" docASTNodeCount="212" docActiveCodeLength="1311" docExpressionCount="152" docLength="1311" length="9" offset="1286" repeat="9" starttimestamp="1700507886094" timestamp="8509806" timestamp2="8510863">
    <text><![CDATA[this.getT]]></text>
  </DocumentChange>
  <DocumentChange __id="5466" _type="Replace" date="Mon Nov 20 16:39:57 EST 2023" docASTNodeCount="212" docActiveCodeLength="1316" docExpressionCount="152" docLength="1316" endLine="47" insertionLength="9" int_docASTNodeCount="212" int_docActiveCodeLength="1307" int_docExpressionCount="152" int_docLength="1307" length="4" offset="1291" startLine="47" starttimestamp="1700507886094" timestamp="8511124">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="5460" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:39:56 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8510237" />
  <Command __id="5465" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:39:57 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8511122" />
  <Command __id="5467" _type="InsertStringCommand" date="Mon Nov 20 16:39:57 EST 2023" starttimestamp="1700507886094" timestamp="8511130" timestamp2="8511130">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5468" _type="InsertStringCommand" date="Mon Nov 20 16:39:57 EST 2023" starttimestamp="1700507886094" timestamp="8511130" timestamp2="8511130">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5470" _type="InsertStringCommand" date="Mon Nov 20 16:39:57 EST 2023" starttimestamp="1700507886094" timestamp="8511370" timestamp2="8511370">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5471" _type="InsertStringCommand" date="Mon Nov 20 16:39:57 EST 2023" starttimestamp="1700507886094" timestamp="8511371" timestamp2="8511371">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5472" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:39:57 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8511378" />
  <DocumentChange __id="5469" _type="Insert" date="Mon Nov 20 16:39:57 EST 2023" docASTNodeCount="214" docActiveCodeLength="1320" docExpressionCount="154" docLength="1320" length="4" offset="1300" repeat="4" starttimestamp="1700507886094" timestamp="8511367" timestamp2="8512669">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <DocumentChange __id="5476" _type="Delete" date="Mon Nov 20 16:39:58 EST 2023" docASTNodeCount="212" docActiveCodeLength="1316" docExpressionCount="152" docLength="1316" endLine="47" length="4" offset="1300" repeat="4" startLine="47" starttimestamp="1700507886094" timestamp="8512869" timestamp2="8513239">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <DocumentChange __id="5481" _type="Insert" date="Mon Nov 20 16:40:20 EST 2023" docASTNodeCount="216" docActiveCodeLength="1336" docExpressionCount="155" docLength="1336" length="20" offset="1300" starttimestamp="1700507886094" timestamp="8533983">
    <text><![CDATA[BasicExpressionImpl.]]></text>
  </DocumentChange>
  <DocumentChange __id="5485" _type="Delete" date="Mon Nov 20 16:40:20 EST 2023" docASTNodeCount="212" docActiveCodeLength="1335" docExpressionCount="152" docLength="1335" endLine="47" length="1" offset="1319" startLine="47" starttimestamp="1700507886094" timestamp="8534746">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="5486" _type="Insert" date="Mon Nov 20 16:40:21 EST 2023" docASTNodeCount="216" docActiveCodeLength="1336" docExpressionCount="155" docLength="1336" length="1" offset="1319" starttimestamp="1700507886094" timestamp="8535191">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="5488" _type="Delete" date="Mon Nov 20 16:40:21 EST 2023" docASTNodeCount="212" docActiveCodeLength="1316" docExpressionCount="152" docLength="1316" endLine="47" length="20" offset="1300" startLine="47" starttimestamp="1700507886094" timestamp="8535497">
    <text><![CDATA[BasicExpressionImpl.]]></text>
  </DocumentChange>
  <DocumentChange __id="5491" _type="Insert" date="Mon Nov 20 16:40:22 EST 2023" docASTNodeCount="216" docActiveCodeLength="1336" docExpressionCount="155" docLength="1336" length="20" offset="1300" starttimestamp="1700507886094" timestamp="8536386">
    <text><![CDATA[BasicExpressionImpl.]]></text>
  </DocumentChange>
  <DocumentChange __id="5495" _type="Delete" date="Mon Nov 20 16:40:23 EST 2023" docASTNodeCount="212" docActiveCodeLength="1315" docExpressionCount="152" docLength="1315" endLine="47" length="21" offset="1299" repeat="2" startLine="47" starttimestamp="1700507886094" timestamp="8537156" timestamp2="8538367">
    <text><![CDATA[)BasicExpressionImpl.]]></text>
  </DocumentChange>
  <DocumentChange __id="5498" _type="Insert" date="Mon Nov 20 16:40:25 EST 2023" docASTNodeCount="214" docActiveCodeLength="1317" docExpressionCount="154" docLength="1317" length="2" offset="1299" repeat="2" starttimestamp="1700507886094" timestamp="8539056" timestamp2="8539300">
    <text><![CDATA[).]]></text>
  </DocumentChange>
  <Command __id="5480" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:40:20 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8533977" />
  <Command __id="5482" _type="InsertStringCommand" date="Mon Nov 20 16:40:20 EST 2023" starttimestamp="1700507886094" timestamp="8533991" timestamp2="8533991">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5483" _type="InsertStringCommand" date="Mon Nov 20 16:40:20 EST 2023" starttimestamp="1700507886094" timestamp="8533991" timestamp2="8533991">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5484" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:40:20 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8534001" />
  <Command __id="5487" _type="UndoCommand" date="Mon Nov 20 16:40:21 EST 2023" starttimestamp="1700507886094" timestamp="8535198" />
  <Command __id="5489" _type="UndoCommand" date="Mon Nov 20 16:40:21 EST 2023" starttimestamp="1700507886094" timestamp="8535505" />
  <Command __id="5490" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:40:22 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8536382" />
  <Command __id="5492" _type="InsertStringCommand" date="Mon Nov 20 16:40:22 EST 2023" starttimestamp="1700507886094" timestamp="8536393" timestamp2="8536393">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5493" _type="InsertStringCommand" date="Mon Nov 20 16:40:22 EST 2023" starttimestamp="1700507886094" timestamp="8536393" timestamp2="8536393">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5494" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:40:22 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8536403" />
  <Command __id="5496" _type="UndoCommand" date="Mon Nov 20 16:40:23 EST 2023" starttimestamp="1700507886094" timestamp="8537164" />
  <Command __id="5499" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:40:25 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8539069" />
  <Command __id="5501" _type="InsertStringCommand" date="Mon Nov 20 16:40:25 EST 2023" starttimestamp="1700507886094" timestamp="8539303" timestamp2="8539303">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5502" _type="InsertStringCommand" date="Mon Nov 20 16:40:25 EST 2023" starttimestamp="1700507886094" timestamp="8539303" timestamp2="8539303">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5503" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 20 16:40:25 EST 2023" start_end="START" starttimestamp="1700507886094" timestamp="8539311" />
  <DocumentChange __id="5504" _type="Insert" date="Mon Nov 20 16:40:29 EST 2023" docASTNodeCount="214" docActiveCodeLength="1325" docExpressionCount="154" docLength="1325" length="8" offset="1301" repeat="8" starttimestamp="1700507886094" timestamp="8542965" timestamp2="8544815">
    <text><![CDATA[toString]]></text>
  </DocumentChange>
  <Command __id="5512" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 20 16:40:32 EST 2023" start_end="END" starttimestamp="1700507886094" timestamp="8546127" />
  <DocumentChange __id="5513" _type="Replace" date="Mon Nov 20 16:40:32 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" endLine="47" insertionLength="10" int_docASTNodeCount="214" int_docActiveCodeLength="1317" int_docExpressionCount="154" int_docLength="1317" length="8" offset="1301" startLine="47" starttimestamp="1700507886094" timestamp="8546129">
    <deletedText><![CDATA[toString]]></deletedText>
    <insertedText><![CDATA[toString()]]></insertedText>
  </DocumentChange>
  <Command __id="5514" _type="InsertStringCommand" date="Mon Nov 20 16:40:32 EST 2023" starttimestamp="1700507886094" timestamp="8546133" timestamp2="8546133">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5515" _type="InsertStringCommand" date="Mon Nov 20 16:40:32 EST 2023" starttimestamp="1700507886094" timestamp="8546134" timestamp2="8546134">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5516" _type="MoveCaretCommand" caretOffset="1121" date="Mon Nov 20 16:40:33 EST 2023" docOffset="1121" starttimestamp="1700507886094" timestamp="8547121" />
  <Command __id="5517" _type="MoveCaretCommand" caretOffset="1121" date="Mon Nov 20 16:40:33 EST 2023" docOffset="1121" starttimestamp="1700507886094" timestamp="8547121" />
  <Command __id="5518" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:40:33 EST 2023" starttimestamp="1700507886094" timestamp="8547244" />
  <Command __id="5519" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:40:33 EST 2023" starttimestamp="1700507886094" timestamp="8547345" />
  <Command __id="5520" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:40:33 EST 2023" starttimestamp="1700507886094" timestamp="8547351" />
  <Command __id="5522" _type="MoveCaretCommand" caretOffset="863" date="Mon Nov 20 16:40:35 EST 2023" docOffset="863" starttimestamp="1700507886094" timestamp="8549180" />
  <Command __id="5523" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:40:37 EST 2023" starttimestamp="1700507886094" timestamp="8551708" />
  <Command __id="5524" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:40:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8551829" type="Run" />
  <Command __id="5525" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:40:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8551829" type="Run" />
  <Command __id="5526" _type="ShellCommand" date="Mon Nov 20 16:40:38 EST 2023" starttimestamp="1700507886094" timestamp="8552131" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5527" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554653" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5528" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554654" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5529" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554655" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5530" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554655" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5531" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554671" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5532" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554674" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5533" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554679" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

(5)
(5)
Test execution time (ms):2
Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶(5)¶(5)¶Test execution time (ms):2¶Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5534" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554681" type="ConsoleOutput">
    <outputString><![CDATA[(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶¶(5)¶(5)¶Test execution time (ms):2¶Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))¶(5((("A" . "6"))((7))))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5535" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554683" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5((("A" . "6"))((7))))

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5((("A" . "6"))((7))))¶(5("), Diff(INSERT,"Test execution time (ms):3¶Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 "), Diff(EQUAL,"(("A" . "6"))"), Diff(DELETE,"("), Diff(INSERT," "), Diff(EQUAL,"(7))"), Diff(DELETE,"))¶"), Diff(INSERT,"actual string "), Diff(EQUAL,"(5((("A" . "6"))((7))))¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="5536" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554685" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):3¶Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string (5((("A" . "6"))((7))))¶"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5537" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554686" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5538" _type="ConsoleOutput" date="Mon Nov 20 16:40:40 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8554701" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:1"), Diff(DELETE,"4"), Diff(INSERT,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:"), Diff(INSERT,"1"), Diff(EQUAL,"7"), Diff(DELETE,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"69"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputt"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"4"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"19"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"44"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶"), Diff(INSERT,"	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶")]]]></diff>
  </Command>
  <Command __id="5539" _type="ExceptionCommand" date="Mon Nov 20 16:40:40 EST 2023" starttimestamp="1700507886094" timestamp="8554708" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
(5((("A" . "6"))((7))))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5540" _type="ShellCommand" date="Mon Nov 20 16:40:51 EST 2023" starttimestamp="1700507886094" timestamp="8565453" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5541" _type="LocalChecksRawCommand" date="Mon Nov 20 16:40:51 EST 2023" starttimestamp="1700507886094" timestamp="8565457">
    <CSVRow><![CDATA[70,Mon Nov 20 16:40:40 EST 2023,8,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,35,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5542" _type="LocalChecksRawCommand" date="Mon Nov 20 16:40:51 EST 2023" starttimestamp="1700507886094" timestamp="8565457">
    <CSVRow><![CDATA[70,Mon Nov 20 16:40:40 EST 2023,8,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,35,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5544" _type="MoveCaretCommand" caretOffset="1121" date="Mon Nov 20 16:40:51 EST 2023" docOffset="1121" starttimestamp="1700507886094" timestamp="8565611" />
  <Command __id="5545" _type="SelectTextCommand" caretOffset="938" date="Mon Nov 20 16:40:57 EST 2023" end="944" start="938" starttimestamp="1700507886094" timestamp="8571215" />
  <Command __id="5546" _type="SelectTextCommand" caretOffset="938" date="Mon Nov 20 16:40:57 EST 2023" end="944" start="938" starttimestamp="1700507886094" timestamp="8571215" />
  <Command __id="5548" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:57 EST 2023" starttimestamp="1700507886094" timestamp="8571554" />
  <Command __id="5549" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:57 EST 2023" starttimestamp="1700507886094" timestamp="8571554" />
  <Command __id="5550" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 16:40:58 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="8572873" />
  <Command __id="5551" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 20 16:40:58 EST 2023" docOffset="1000" starttimestamp="1700507886094" timestamp="8572873" />
  <Command __id="5553" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8572963" />
  <Command __id="5554" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8572963" />
  <Command __id="5556" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573114" />
  <Command __id="5557" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573114" />
  <Command __id="5559" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573218" />
  <Command __id="5560" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573218" />
  <Command __id="5562" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573344" />
  <Command __id="5563" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573344" />
  <Command __id="5565" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573471" />
  <Command __id="5566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573471" />
  <Command __id="5568" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573616" />
  <Command __id="5569" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:40:59 EST 2023" starttimestamp="1700507886094" timestamp="8573616" />
  <Command __id="5521" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:40:35 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8549106">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5543" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:40:51 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8565563">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this."), Diff(DELETE,"isAtom"), Diff(INSERT,"getTail().isNIL"), Diff(EQUAL,"()) {			return "), Diff(DELETE,""1""), Diff(INSERT,"this.getHead().toString()"), Diff(EQUAL,";		}else {			return this.getHead().toString()"), Diff(DELETE,";"), Diff(INSERT," + this.getTail().toString();			"), Diff(EQUAL,"		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return "(" + ((AbstractSExpression)this).toStringAsListHelperPublic() + ")";
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + this.getTail().toString();
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5547" _type="Delete" date="Mon Nov 20 16:40:57 EST 2023" docASTNodeCount="213" docActiveCodeLength="1321" docExpressionCount="153" docLength="1321" endLine="36" length="6" offset="938" startLine="36" starttimestamp="1700507886094" timestamp="8571545">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="5552" _type="Delete" date="Mon Nov 20 16:40:59 EST 2023" docASTNodeCount="211" docActiveCodeLength="1315" docExpressionCount="151" docLength="1315" endLine="36" length="6" offset="994" repeat="6" startLine="36" starttimestamp="1700507886094" timestamp="8572961" timestamp2="8573613">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="5570" _type="MoveCaretCommand" caretOffset="1199" date="Mon Nov 20 16:41:01 EST 2023" docOffset="1199" starttimestamp="1700507886094" timestamp="8575340" />
  <Command __id="5571" _type="MoveCaretCommand" caretOffset="1199" date="Mon Nov 20 16:41:01 EST 2023" docOffset="1199" starttimestamp="1700507886094" timestamp="8575341" />
  <Command __id="5573" _type="InsertStringCommand" date="Mon Nov 20 16:41:02 EST 2023" starttimestamp="1700507886094" timestamp="8576397" timestamp2="8576397">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5574" _type="InsertStringCommand" date="Mon Nov 20 16:41:02 EST 2023" starttimestamp="1700507886094" timestamp="8576397" timestamp2="8576397">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5576" _type="InsertStringCommand" date="Mon Nov 20 16:41:02 EST 2023" starttimestamp="1700507886094" timestamp="8576768" timestamp2="8576768">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5577" _type="InsertStringCommand" date="Mon Nov 20 16:41:02 EST 2023" starttimestamp="1700507886094" timestamp="8576768" timestamp2="8576768">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5578" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:41:03 EST 2023" starttimestamp="1700507886094" timestamp="8577089" />
  <Command __id="5579" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Mon Nov 20 16:41:03 EST 2023" starttimestamp="1700507886094" timestamp="8577089" />
  <Command __id="5581" _type="InsertStringCommand" date="Mon Nov 20 16:41:04 EST 2023" starttimestamp="1700507886094" timestamp="8578066" timestamp2="8578066">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5582" _type="InsertStringCommand" date="Mon Nov 20 16:41:04 EST 2023" starttimestamp="1700507886094" timestamp="8578067" timestamp2="8578067">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5583" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:41:04 EST 2023" starttimestamp="1700507886094" timestamp="8578392" />
  <Command __id="5584" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 20 16:41:04 EST 2023" starttimestamp="1700507886094" timestamp="8578392" />
  <Command __id="5586" _type="InsertStringCommand" date="Mon Nov 20 16:41:04 EST 2023" starttimestamp="1700507886094" timestamp="8578882" timestamp2="8578882">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5587" _type="InsertStringCommand" date="Mon Nov 20 16:41:04 EST 2023" starttimestamp="1700507886094" timestamp="8578882" timestamp2="8578882">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5589" _type="InsertStringCommand" date="Mon Nov 20 16:41:05 EST 2023" starttimestamp="1700507886094" timestamp="8578955" timestamp2="8578955">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5590" _type="InsertStringCommand" date="Mon Nov 20 16:41:05 EST 2023" starttimestamp="1700507886094" timestamp="8578955" timestamp2="8578955">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5592" _type="InsertStringCommand" date="Mon Nov 20 16:41:05 EST 2023" starttimestamp="1700507886094" timestamp="8579064" timestamp2="8579064">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5593" _type="InsertStringCommand" date="Mon Nov 20 16:41:05 EST 2023" starttimestamp="1700507886094" timestamp="8579064" timestamp2="8579064">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5594" _type="MoveCaretCommand" caretOffset="1230" date="Mon Nov 20 16:41:06 EST 2023" docOffset="1230" starttimestamp="1700507886094" timestamp="8580201" />
  <Command __id="5595" _type="MoveCaretCommand" caretOffset="1230" date="Mon Nov 20 16:41:06 EST 2023" docOffset="1230" starttimestamp="1700507886094" timestamp="8580201" />
  <Command __id="5597" _type="InsertStringCommand" date="Mon Nov 20 16:41:07 EST 2023" starttimestamp="1700507886094" timestamp="8581062" timestamp2="8581062">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5598" _type="InsertStringCommand" date="Mon Nov 20 16:41:07 EST 2023" starttimestamp="1700507886094" timestamp="8581063" timestamp2="8581063">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5600" _type="InsertStringCommand" date="Mon Nov 20 16:41:07 EST 2023" starttimestamp="1700507886094" timestamp="8581153" timestamp2="8581153">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5601" _type="InsertStringCommand" date="Mon Nov 20 16:41:07 EST 2023" starttimestamp="1700507886094" timestamp="8581153" timestamp2="8581153">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="5603" _type="InsertStringCommand" date="Mon Nov 20 16:41:07 EST 2023" starttimestamp="1700507886094" timestamp="8581243" timestamp2="8581243">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5604" _type="InsertStringCommand" date="Mon Nov 20 16:41:07 EST 2023" starttimestamp="1700507886094" timestamp="8581243" timestamp2="8581243">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5606" _type="InsertStringCommand" date="Mon Nov 20 16:41:07 EST 2023" starttimestamp="1700507886094" timestamp="8581490" timestamp2="8581490">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5607" _type="InsertStringCommand" date="Mon Nov 20 16:41:07 EST 2023" starttimestamp="1700507886094" timestamp="8581490" timestamp2="8581490">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5609" _type="InsertStringCommand" date="Mon Nov 20 16:41:08 EST 2023" starttimestamp="1700507886094" timestamp="8582404" timestamp2="8582404">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="5610" _type="InsertStringCommand" date="Mon Nov 20 16:41:08 EST 2023" starttimestamp="1700507886094" timestamp="8582404" timestamp2="8582404">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="5611" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:41:08 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="8582843" />
  <Command __id="5612" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:41:08 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="8582843" />
  <Command __id="5613" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:41:09 EST 2023" starttimestamp="1700507886094" timestamp="8582974" />
  <Command __id="5614" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:41:09 EST 2023" starttimestamp="1700507886094" timestamp="8583077" />
  <Command __id="5615" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:41:09 EST 2023" starttimestamp="1700507886094" timestamp="8583087" />
  <DocumentChange __id="5572" _type="Insert" date="Mon Nov 20 16:41:02 EST 2023" docASTNodeCount="213" docActiveCodeLength="1321" docExpressionCount="153" docLength="1321" length="6" offset="1199" repeat="6" starttimestamp="1700507886094" timestamp="8576395" timestamp2="8579062">
    <text><![CDATA["(" + ]]></text>
  </DocumentChange>
  <DocumentChange __id="5596" _type="Insert" date="Mon Nov 20 16:41:07 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="6" offset="1230" repeat="5" starttimestamp="1700507886094" timestamp="8581059" timestamp2="8582403">
    <text><![CDATA[ + ")"]]></text>
  </DocumentChange>
  <Command __id="5616" _type="ShellCommand" date="Mon Nov 20 16:41:10 EST 2023" starttimestamp="1700507886094" timestamp="8584107" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5617" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:41:10 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8584335" type="Run" />
  <Command __id="5618" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:41:10 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8584335" type="Run" />
  <Command __id="5619" _type="ShellCommand" date="Mon Nov 20 16:41:10 EST 2023" starttimestamp="1700507886094" timestamp="8584342" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5621" _type="MoveCaretCommand" caretOffset="863" date="Mon Nov 20 16:41:11 EST 2023" docOffset="863" starttimestamp="1700507886094" timestamp="8585483" />
  <Command __id="5622" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:41:13 EST 2023" starttimestamp="1700507886094" timestamp="8587356" />
  <Command __id="5623" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:41:13 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8587502" type="Run" />
  <Command __id="5624" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:41:13 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8587502" type="Run" />
  <Command __id="5625" _type="ShellCommand" date="Mon Nov 20 16:41:13 EST 2023" starttimestamp="1700507886094" timestamp="8587797" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5626" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589959" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)"), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5627" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589960" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5628" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589961" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5629" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589961" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5630" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589976" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5631" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589980" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5632" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589981" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5633" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589983" type="ConsoleOutput">
    <outputString><![CDATA[(5)
(5)
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"(5)¶(5)¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5634" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589984" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5)¶(5)¶Test execution time (ms):1"), Diff(INSERT,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5635" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589986" type="ConsoleOutput">
    <outputString><![CDATA[5(("A" . "6"))((7))
5(("A" . "6"))((7))
5(("A" . "6"))((7))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"5(("A" . "6"))((7))¶5(("A" . "6"))((7))¶5(("A" . "6"))((7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5636" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589987" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5(("A" . "6"))((7))¶5(("A" . "6"))((7))¶5(("A" . "6"))((7))"), Diff(INSERT,"Test execution time (ms):3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5637" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589988" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5(("A" . "6"))((7))
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):3"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5(("A" . "6"))((7))"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5638" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589990" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5(("A" . "6"))((7))"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5639" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8589993" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5640" _type="ConsoleOutput" date="Mon Nov 20 16:41:16 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8590051" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):4
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"6"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:6"), Diff(DELETE,"9"), Diff(INSERT,"638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(INSERT,"33"), Diff(EQUAL,"42)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"44"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:2"), Diff(INSERT,"26"), Diff(EQUAL,"3"), Diff(DELETE,"1"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(INSERT,"50"), Diff(EQUAL,"11)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(INSERT,"48"), Diff(EQUAL,"43)¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"325"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"5"), Diff(INSERT,"230"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"71"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"268"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4"), Diff(EQUAL,".run("), Diff(DELETE,"ParentRunner"), Diff(INSERT,"EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"191"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.DelegatingMethod"), Diff(INSERT,"ava.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"219"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"1906"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"1701"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"1585"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"538"), Diff(INSERT,"24"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"53"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"406"), Diff(INSERT,"09"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"469"), Diff(INSERT,"101"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"Multicaster.mouseClicked(AWTEventMulticaster.java:278)"), Diff(INSERT,"DispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):4¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5641" _type="ExceptionCommand" date="Mon Nov 20 16:41:16 EST 2023" starttimestamp="1700507886094" timestamp="8590057" type="Exception">
    <exceptionString><![CDATA[5(("A" . "6"))((7))
5(("A" . "6"))((7))
5(("A" . "6"))((7))
5(("A" . "6"))((7))
5(("A" . "6"))((7))
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5620" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:41:11 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8585400">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5642" _type="ShellCommand" date="Mon Nov 20 16:41:34 EST 2023" starttimestamp="1700507886094" timestamp="8608705" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5643" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:41:34 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8608712" type="Run" />
  <Command __id="5644" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:41:34 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8608712" type="Run" />
  <Command __id="5646" _type="MoveCaretCommand" caretOffset="1111" date="Mon Nov 20 16:41:36 EST 2023" docOffset="1111" starttimestamp="1700507886094" timestamp="8610165" />
  <Command __id="5647" _type="LocalChecksRawCommand" date="Mon Nov 20 16:41:36 EST 2023" starttimestamp="1700507886094" timestamp="8610166">
    <CSVRow><![CDATA[71,Mon Nov 20 16:41:16 EST 2023,8,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,36,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5648" _type="LocalChecksRawCommand" date="Mon Nov 20 16:41:36 EST 2023" starttimestamp="1700507886094" timestamp="8610166">
    <CSVRow><![CDATA[71,Mon Nov 20 16:41:16 EST 2023,8,0,A5ToStringSuite,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ClassRegistryProvided ListToStringDeepCheckerBasic MainClassProvided , ,A5CommonPropertiesInherited A5CommonSignaturesAreInherited A5Encapsulation A5NoHiddenFields A5NoStarImports A5NonPublicAccessModifiersMatched A5PackageDeclarations A5PublicMethodsOverride AndTestedChecker AndTestedTwoResultsChecker ComparatorEvaluatorCodeReuse CondTestedChecker CondTestedResultsChecker ConsTestedChecker ConsTestedTwoResultsChecker EvalTestedChecker EvalTestedTwoResultsChecker F21A5NoCheckstyleWarnings GorETestedChecker GorETestedTwoResultsChecker GreaterTestedChecker GreaterTestedTwoResultsChecker LTECallsNilAtomFactory LTECallsTAtomFactory LessTestedChecker LessTestedTwoResultsChecker ListTestedChecker ListTestedTwoResultsChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced LoadCallsInterpreterModelSingleton LoadCallsNewInput LoadCallsNilAtomFactory LoadCallsReadAllLines LoadCallsTAtomFactory LoadChecker LorETestedChecker LorETestedTwoResultsChecker MainCallsOperationRegisterer MainCallsSkeletonMain MainSetsExpressionFactory NotCallsNilAtomFactory NotCallsTAtomFactory NotTestedChecker NotTestedTwoResultsChecker OrTestedChecker OrTestedTwoResultsChecker QuoteTestedChecker QuoteTestedTwoResultsChecker TestLispFileProvided ToStringAsListCallsHelper ToStringAsListHelperIsRecursive ToStringCallsToStringAsList , ,36,0,true,BaseCaseListToStringChecker BaseCaseSExpressionToStringChecker ListToStringCheckerAdvanced ListToStringCheckerBasic ListToStringDeepCheckerAdvanced ListToStringDeepCheckerBasic ,ClassRegistryProvided MainClassProvided , ,BaseCaseListToStringChecker-(10.0/10.0) BaseCaseSExpressionToStringChecker-(10.0/10.0) ListToStringCheckerAdvanced-(0.0/15.0) ListToStringCheckerBasic-(0.0/15.0) ListToStringDeepCheckerAdvanced-(0.0/5.0) ListToStringDeepCheckerBasic-(5.0/5.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5649" _type="MoveCaretCommand" caretOffset="1275" date="Mon Nov 20 16:41:40 EST 2023" docOffset="1275" starttimestamp="1700507886094" timestamp="8614656" />
  <Command __id="5650" _type="MoveCaretCommand" caretOffset="1275" date="Mon Nov 20 16:41:40 EST 2023" docOffset="1275" starttimestamp="1700507886094" timestamp="8614656" />
  <Command __id="5651" _type="MoveCaretCommand" caretOffset="1247" date="Mon Nov 20 16:41:42 EST 2023" docOffset="1247" starttimestamp="1700507886094" timestamp="8615926" />
  <Command __id="5652" _type="MoveCaretCommand" caretOffset="1247" date="Mon Nov 20 16:41:42 EST 2023" docOffset="1247" starttimestamp="1700507886094" timestamp="8615926" />
  <Command __id="5653" _type="MoveCaretCommand" caretOffset="1268" date="Mon Nov 20 16:41:42 EST 2023" docOffset="1268" starttimestamp="1700507886094" timestamp="8616462" />
  <Command __id="5654" _type="MoveCaretCommand" caretOffset="1268" date="Mon Nov 20 16:41:42 EST 2023" docOffset="1268" starttimestamp="1700507886094" timestamp="8616462" />
  <Command __id="5655" _type="MoveCaretCommand" caretOffset="1277" date="Mon Nov 20 16:41:44 EST 2023" docOffset="1277" starttimestamp="1700507886094" timestamp="8617957" />
  <Command __id="5656" _type="MoveCaretCommand" caretOffset="1277" date="Mon Nov 20 16:41:44 EST 2023" docOffset="1277" starttimestamp="1700507886094" timestamp="8617957" />
  <Command __id="5657" _type="MoveCaretCommand" caretOffset="1203" date="Mon Nov 20 16:41:47 EST 2023" docOffset="1203" starttimestamp="1700507886094" timestamp="8621291" />
  <Command __id="5658" _type="MoveCaretCommand" caretOffset="1203" date="Mon Nov 20 16:41:47 EST 2023" docOffset="1203" starttimestamp="1700507886094" timestamp="8621291" />
  <Command __id="5659" _type="MoveCaretCommand" caretOffset="1263" date="Mon Nov 20 16:41:50 EST 2023" docOffset="1263" starttimestamp="1700507886094" timestamp="8624450" />
  <Command __id="5660" _type="MoveCaretCommand" caretOffset="1263" date="Mon Nov 20 16:41:50 EST 2023" docOffset="1263" starttimestamp="1700507886094" timestamp="8624450" />
  <Command __id="5661" _type="MoveCaretCommand" caretOffset="1247" date="Mon Nov 20 16:41:51 EST 2023" docOffset="1247" starttimestamp="1700507886094" timestamp="8625113" />
  <Command __id="5662" _type="MoveCaretCommand" caretOffset="1247" date="Mon Nov 20 16:41:51 EST 2023" docOffset="1247" starttimestamp="1700507886094" timestamp="8625113" />
  <Command __id="5663" _type="MoveCaretCommand" caretOffset="1203" date="Mon Nov 20 16:41:52 EST 2023" docOffset="1203" starttimestamp="1700507886094" timestamp="8625972" />
  <Command __id="5664" _type="MoveCaretCommand" caretOffset="1203" date="Mon Nov 20 16:41:52 EST 2023" docOffset="1203" starttimestamp="1700507886094" timestamp="8625972" />
  <Command __id="5665" _type="ShellCommand" date="Mon Nov 20 16:41:55 EST 2023" starttimestamp="1700507886094" timestamp="8629227" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5666" _type="ShellCommand" date="Mon Nov 20 16:41:55 EST 2023" starttimestamp="1700507886094" timestamp="8629840" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5667" _type="MoveCaretCommand" caretOffset="1237" date="Mon Nov 20 16:42:12 EST 2023" docOffset="1237" starttimestamp="1700507886094" timestamp="8646361" />
  <Command __id="5668" _type="MoveCaretCommand" caretOffset="1237" date="Mon Nov 20 16:42:12 EST 2023" docOffset="1237" starttimestamp="1700507886094" timestamp="8646361" />
  <Command __id="5669" _type="MoveCaretCommand" caretOffset="1237" date="Mon Nov 20 16:42:12 EST 2023" docOffset="1237" starttimestamp="1700507886094" timestamp="8646865" />
  <Command __id="5670" _type="MoveCaretCommand" caretOffset="1237" date="Mon Nov 20 16:42:12 EST 2023" docOffset="1237" starttimestamp="1700507886094" timestamp="8646865" />
  <Command __id="5671" _type="MoveCaretCommand" caretOffset="1247" date="Mon Nov 20 16:42:13 EST 2023" docOffset="1247" starttimestamp="1700507886094" timestamp="8647357" />
  <Command __id="5672" _type="MoveCaretCommand" caretOffset="1247" date="Mon Nov 20 16:42:13 EST 2023" docOffset="1247" starttimestamp="1700507886094" timestamp="8647357" />
  <Command __id="5673" _type="MoveCaretCommand" caretOffset="1237" date="Mon Nov 20 16:42:13 EST 2023" docOffset="1237" starttimestamp="1700507886094" timestamp="8647835" />
  <Command __id="5674" _type="MoveCaretCommand" caretOffset="1237" date="Mon Nov 20 16:42:13 EST 2023" docOffset="1237" starttimestamp="1700507886094" timestamp="8647835" />
  <Command __id="5675" _type="MoveCaretCommand" caretOffset="1234" date="Mon Nov 20 16:42:14 EST 2023" docOffset="1234" starttimestamp="1700507886094" timestamp="8648666" />
  <Command __id="5676" _type="MoveCaretCommand" caretOffset="1234" date="Mon Nov 20 16:42:14 EST 2023" docOffset="1234" starttimestamp="1700507886094" timestamp="8648666" />
  <Command __id="5677" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:42:15 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="8649258" />
  <Command __id="5678" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:42:15 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="8649258" />
  <Command __id="5679" _type="MoveCaretCommand" caretOffset="1201" date="Mon Nov 20 16:42:17 EST 2023" docOffset="1201" starttimestamp="1700507886094" timestamp="8651595" />
  <Command __id="5680" _type="MoveCaretCommand" caretOffset="1201" date="Mon Nov 20 16:42:17 EST 2023" docOffset="1201" starttimestamp="1700507886094" timestamp="8651596" />
  <Command __id="5682" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:42:18 EST 2023" starttimestamp="1700507886094" timestamp="8652522" />
  <Command __id="5683" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:42:18 EST 2023" starttimestamp="1700507886094" timestamp="8652522" />
  <Command __id="5685" _type="InsertStringCommand" date="Mon Nov 20 16:42:18 EST 2023" starttimestamp="1700507886094" timestamp="8652618" timestamp2="8652618">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="5686" _type="InsertStringCommand" date="Mon Nov 20 16:42:18 EST 2023" starttimestamp="1700507886094" timestamp="8652618" timestamp2="8652618">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="5645" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:41:36 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8610105">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.parser.terms.AbstractSExpression;import main.lisp.parser.terms.Atom;import main.lisp.parser.terms.BasicExpression;import main.lisp.parser.terms.SExpression;public class BasicExpressionImpl extends BasicExpression{		public BasicExpressionImpl(SExpression head, SExpression tail) {		super(head, tail);	}	public boolean isList() {		if((this.getTail() instanceof Atom)) {			return this.getTail().isNIL();		}else {			return this.getTail().isList();		}	}		public String toStringAsSExpressionDeep() {		if(this.isAtom()) {			return "(" + this.toString() + ")";		}				return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +				this.getTail().toStringAsSExpressionDeep() + ")";	}		public String toStringAsSExpression() {		return "(" + this.getHead().toString() + " " + "." + " " +				this.getTail().toString() + ")";	}		public String toStringAsList() {		return"), Diff(DELETE," "(" +"), Diff(EQUAL," ((AbstractSExpression)this).toStringAsListHelperPublic()"), Diff(DELETE," + ")""), Diff(EQUAL,";	}		public String toString() {		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();	}		public String toStringAsListHelperPublic() {		if(this.getTail().isNIL()) {			return"), Diff(INSERT," "(" +"), Diff(EQUAL," this.getHead().toString()"), Diff(INSERT," + ")""), Diff(EQUAL,";		}else {			return this.getHead().toString() + this.getTail().toString();					}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.Atom;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionImpl extends BasicExpression{
	
	public BasicExpressionImpl(SExpression head, SExpression tail) {
		super(head, tail);
	}

	public boolean isList() {
		if((this.getTail() instanceof Atom)) {
			return this.getTail().isNIL();
		}else {
			return this.getTail().isList();
		}
	}
	
	public String toStringAsSExpressionDeep() {
		if(this.isAtom()) {
			return "(" + this.toString() + ")";
		}
		
		return "(" + this.getHead().toStringAsSExpressionDeep() + " " + "." + " " +
				this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " " + "." + " " +
				this.getTail().toString() + ")";
	}
	
	public String toStringAsList() {
		return ((AbstractSExpression)this).toStringAsListHelperPublic();
	}
	
	public String toString() {
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	
	public String toStringAsListHelperPublic() {
		if(this.getTail().isNIL()) {
			return "(" + this.getHead().toString() + ")";
		}else {
			return this.getHead().toString() + this.getTail().toString();
			
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="5681" _type="Delete" date="Mon Nov 20 16:42:18 EST 2023" docASTNodeCount="214" docActiveCodeLength="1326" docExpressionCount="154" docLength="1326" endLine="45" length="1" offset="1200" startLine="45" starttimestamp="1700507886094" timestamp="8652515">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="5684" _type="Insert" date="Mon Nov 20 16:42:18 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="1" offset="1200" starttimestamp="1700507886094" timestamp="8652616">
    <text><![CDATA[[]]></text>
  </DocumentChange>
  <DocumentChange __id="5689" _type="Delete" date="Mon Nov 20 16:42:20 EST 2023" docASTNodeCount="214" docActiveCodeLength="1326" docExpressionCount="154" docLength="1326" endLine="45" length="1" offset="1234" startLine="45" starttimestamp="1700507886094" timestamp="8654238">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="5692" _type="Insert" date="Mon Nov 20 16:42:20 EST 2023" docASTNodeCount="214" docActiveCodeLength="1327" docExpressionCount="154" docLength="1327" length="1" offset="1234" starttimestamp="1700507886094" timestamp="8654324">
    <text><![CDATA[]]]></text>
  </DocumentChange>
  <Command __id="5687" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:42:19 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="8653900" />
  <Command __id="5688" _type="MoveCaretCommand" caretOffset="1235" date="Mon Nov 20 16:42:19 EST 2023" docOffset="1235" starttimestamp="1700507886094" timestamp="8653900" />
  <Command __id="5690" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:42:20 EST 2023" starttimestamp="1700507886094" timestamp="8654241" />
  <Command __id="5691" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 20 16:42:20 EST 2023" starttimestamp="1700507886094" timestamp="8654241" />
  <Command __id="5693" _type="InsertStringCommand" date="Mon Nov 20 16:42:20 EST 2023" starttimestamp="1700507886094" timestamp="8654328" timestamp2="8654328">
    <data><![CDATA[]]]></data>
  </Command>
  <Command __id="5694" _type="InsertStringCommand" date="Mon Nov 20 16:42:20 EST 2023" starttimestamp="1700507886094" timestamp="8654328" timestamp2="8654328">
    <data><![CDATA[]]]></data>
  </Command>
  <Command __id="5695" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 20 16:42:21 EST 2023" starttimestamp="1700507886094" timestamp="8655166" />
  <Command __id="5696" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:42:21 EST 2023" starttimestamp="1700507886094" timestamp="8655265" />
  <Command __id="5697" _type="EclipseCommand" commandID="" date="Mon Nov 20 16:42:21 EST 2023" starttimestamp="1700507886094" timestamp="8655272" />
  <Command __id="5699" _type="MoveCaretCommand" caretOffset="863" date="Mon Nov 20 16:42:22 EST 2023" docOffset="863" starttimestamp="1700507886094" timestamp="8656828" />
  <Command __id="5700" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Mon Nov 20 16:42:25 EST 2023" starttimestamp="1700507886094" timestamp="8659540" />
  <Command __id="5701" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:42:25 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8659679" type="Run" />
  <Command __id="5702" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:42:25 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8659679" type="Run" />
  <Command __id="5703" _type="ShellCommand" date="Mon Nov 20 16:42:26 EST 2023" starttimestamp="1700507886094" timestamp="8659990" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5704" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662656" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):4¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string "), Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5705" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662657" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5706" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662658" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5707" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662659" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5708" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662673" type="ConsoleOutput">
    <outputString><![CDATA[(5 . 2)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"(5 . 2)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5709" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662676" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(5 . 2)"), Diff(INSERT,"Test execution time (ms):24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5710" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662678" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):24"), Diff(INSERT,"Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5711" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662680" type="ConsoleOutput">
    <outputString><![CDATA[[5]
[5]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseSExpressionToStringChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"[5]¶[5]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5712" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662680" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"[5]¶[5]"), Diff(INSERT,"¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5713" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662681" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string [5]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string [5]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5714" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662683" type="ConsoleOutput">
    <outputString><![CDATA[5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BaseCaseListToStringChecker,0.0% complete,0.0,10.0,Expected strings:(5)actual string [5"), Diff(INSERT,"5[("A" . "6")][[7]]¶5[("A" . "6")][[7]]¶5[("A" . "6")][[7]"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="5715" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662684" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"5[("A" . "6")][[7]]¶5[("A" . "6")][[7]]¶5[("A" . "6")][[7]]"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5716" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662684" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5[("A" . "6")][[7]]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):2"), Diff(INSERT,"Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5[("A" . "6")][[7]]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5717" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662686" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ListToStringCheckerBasic,0.0% complete,0.0,15.0,Expected strings:(5 (("A" . "6")) (7))actual string 5[("A" . "6")][[7]]"), Diff(INSERT,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5718" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662690" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.IllegalStateException: No evaluator registered for operator 'LIST'"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5719" _type="ConsoleOutput" date="Mon Nov 20 16:42:28 EST 2023" overflow="false" starttimestamp="1700507886094" timestamp="8662719" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):5
Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string 

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpr"), Diff(INSERT,"java.base/java.security.Acc"), Diff(EQUAL,"ess"), Diff(DELETE,"i"), Diff(INSERT,"C"), Diff(EQUAL,"on"), Diff(DELETE,"Evaluator.java:14)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)¶	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"troller.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"74"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMetho"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"17"), Diff(INSERT,"203"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"288"), Diff(INSERT,"124"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"9"), Diff(EQUAL,"1"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"444"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):5¶Test Result:ListToStringCheckerAdvanced,0.0% complete,0.0,15.0,Expected strings:("a" (1 . 2) (1 T))actual string ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5720" _type="ExceptionCommand" date="Mon Nov 20 16:42:28 EST 2023" starttimestamp="1700507886094" timestamp="8662724" type="Exception">
    <exceptionString><![CDATA[5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5720" _type="ExceptionCommand" date="Mon Nov 20 16:42:28 EST 2023" starttimestamp="1700507886094" timestamp="8662724" type="Exception">
    <exceptionString><![CDATA[5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
5[("A" . "6")][[7]]
Test execution time (ms):2
Test Result:ListToStringDeepCheckerBasic,100.0% complete,5.0,5.0,

java.lang.IllegalStateException: No evaluator registered for operator 'LIST'
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:14)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreter.newInput(ObservableLispInterpreter.java:79)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:69)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionInputter.evaluate(AbstractLispExpressionInputter.java:42)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:19)
	at gradingTools.comp524f19.assignment1.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:44)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5721" _type="ShellCommand" date="Mon Nov 20 16:42:52 EST 2023" starttimestamp="1700507886094" timestamp="8686608" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5722" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:42:52 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8686623" type="Run" />
  <Command __id="5723" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Mon Nov 20 16:42:52 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8686623" type="Run" />
  <Command __id="5724" _type="ShellCommand" date="Mon Nov 20 16:42:53 EST 2023" starttimestamp="1700507886094" timestamp="8687117" type="ECLIPSE_CLOSED" />
  <Command __id="5698" _type="DiffBasedFileOpenCommand" date="Mon Nov 20 16:42:22 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1700507886094" timestamp="8656760">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment5.F23Assignment5Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment5Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
</Events>
