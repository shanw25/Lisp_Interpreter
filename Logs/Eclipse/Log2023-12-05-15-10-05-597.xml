<Events startTimestamp="1701807005597" logVersion="1.0.0.202308221630">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="361" date="Tue Dec 05 15:10:05 EST 2023" docOffset="574" starttimestamp="1701807005597" timestamp="137" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:10:05 EST 2023" docASTNodeCount="146" docActiveCodeLength="913" docExpressionCount="104" docLength="913" projectName="Assignment5" starttimestamp="1701807005597" timestamp="47">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;


public class FuncallEvaluator implements Evaluator{

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
    }
    public static SExpression evalHelper(SExpression expr, Environment environment) {
        Lambda lambda = (Lambda) expr.getHead().eval(environment);
        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());
        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();
        return basicExpressionEvaluatorImpl.eval(expression, environment);
	}
}
]]></snapshot>
  </Command>
  <Command __id="2" _type="MoveCaretCommand" caretOffset="268" date="Tue Dec 05 15:10:07 EST 2023" docOffset="481" starttimestamp="1701807005597" timestamp="2305" />
  <Command __id="3" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:10:09 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4171">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import java.util.ArrayList;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.NilAtom;
import main.lisp.evaluator.function.LambdaFactory;
import main.lisp.parser.terms.SExpression;

public class LambdaEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
		// return expr;
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());
        return LambdaFactory.newInstance(ids, expr.getTail());
	}

    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {
        ArrayList<IdentifierAtom> ids = new ArrayList<>();
        while(!(expr instanceof NilAtom)) {
            ids.add((IdentifierAtom) expr.getHead());
            expr = expr.getTail();
        }
        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];
        for(IdentifierAtom id : ids) {
            idArray[ids.indexOf(id)] = id;
        }
        return idArray;
    }
}]]></snapshot>
  </Command>
  <Command __id="4" _type="MoveCaretCommand" caretOffset="107" date="Tue Dec 05 15:10:09 EST 2023" docOffset="365" starttimestamp="1701807005597" timestamp="4274" />
  <Command __id="5" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:10:10 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4754">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp524f23.assignment6.F23Assignment6Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunF23A5Tests {
	public static void main(final String[] args) {
		
		final int maxPrintedTraces = 600;
		final int maxTraces = 2000;
		final int processTimeOut = 5;
		
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		F23Assignment6Suite.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="6" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:10:10 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="4839" />
  <Command __id="7" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:10:11 EST 2023" docASTNodeCount="155" docActiveCodeLength="925" docExpressionCount="111" docLength="925" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6183">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!expr.getHead().isAtom()){
			Environment childEnvironment = environment.newChild();
			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();
			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="8" _type="MoveCaretCommand" caretOffset="228" date="Tue Dec 05 15:10:11 EST 2023" docOffset="401" starttimestamp="1701807005597" timestamp="6271" />
  <Command __id="9" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:10:13 EST 2023" docASTNodeCount="460" docActiveCodeLength="3317" docExpressionCount="226" docLength="3997" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8068">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;	
import main.lisp.evaluator.OperationRegisterer;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;
import gradingTools.comp524f23.assignment6.ClassRegistryA6;

public class ClassRegistryImpl implements ClassRegistryA6 {

	@Override
	public Class<? extends Evaluator> getAndEvaluator() {
		// TODO Auto-generated method stub
		return AndEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getCondEvaluator() {
		// TODO Auto-generated method stub
		return CondEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {
		// TODO Auto-generated method stub
		return OperationRegistererImpl.class;
	}

	@Override
	public Class<? extends Evaluator> getEvalEvaluator() {
		// TODO Auto-generated method stub
		return EvalEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getGTEvaluator() {
		// TODO Auto-generated method stub
		return GreaterEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEEvaluator() {
		// TODO Auto-generated method stub
		return LesserEqualEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLTEvaluator() {
		// TODO Auto-generated method stub
		return LesserEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getListEvaluator() {
		// TODO Auto-generated method stub
		return ListEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLoadEvaluator() {
		// TODO Auto-generated method stub
		return LoadEvaluator.class;
	}

	@Override
	public Class<?> getMain() {
		// TODO Auto-generated method stub
		return index.class;
	}

	@Override
	public Class<? extends Evaluator> getNotEvaluator() {
		// TODO Auto-generated method stub
		return NotEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getOrEvaluator() {
		// TODO Auto-generated method stub
		return OrEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getQuoteEvaluator() {
		// TODO Auto-generated method stub
		return QuoteEvaluator.class;
	}

	@Override
	public Class<? extends SExpression> getStringFormattingSExpression() {
		// TODO Auto-generated method stub
		return BasicExpressionImpl.class;
	}

	@Override
	public Class<? extends SExpression> getFunctionCallingSExpression() {
		// TODO Auto-generated method stub
		throw new UnsupportedOperationException("Unimplemented method 'getFunctionCallingSExpression'");
	}

	@Override
	public Class<? extends Evaluator> getFunctionEvaluator() {
		return FuncallEvaluator.class;
	}

	@Override
	public Class<? extends Evaluator> getLetEvaluator() {
		// TODO Auto-generated method stub
		throw new UnsupportedOperationException("Unimplemented method 'getLetEvaluator'");
	}

	@Override
	public Class<? extends Evaluator> getBasicFuncallEvaluator() {
		// TODO Auto-generated method stub
		throw new UnsupportedOperationException("Unimplemented method 'getBasicFuncallEvaluator'");
	}

	@Override
	public Class<? extends IdentifierAtom> getIdentifierAtomWithLookup() {
		return IdentifierAtomImpl.class;
	}

	@Override
	public Class<? extends SExpression> getLambdaCallingSExpression() {
		return null;
	}

	@Override
	public Class<? extends Evaluator> getLambdaEvaluator() {
		return LambdaEvaluator.class;
	}

	@Override
	public Class<? extends Environment> getNestedLexicalEnvironment() {
		// TODO Auto-generated method stub
		return EnvironmentImpl.class;
	}

	@Override
	public Class<? extends Evaluator> getSetqEvaluator() {
		return SetqEvaluator.class;
	}

	@Override
	public Class<? extends OperationRegisterer> getStatefulOperationRegisterer() {
		// TODO Auto-generated method stub
		throw new UnsupportedOperationException("Unimplemented method 'getStatefulOperationRegisterer'");
	}

}
]]></snapshot>
  </Command>
  <Command __id="10" _type="MoveCaretCommand" caretOffset="3079" date="Tue Dec 05 15:10:13 EST 2023" docOffset="3315" starttimestamp="1701807005597" timestamp="8178" />
  <Command __id="12" _type="MoveCaretCommand" caretOffset="268" date="Tue Dec 05 15:10:15 EST 2023" docOffset="481" starttimestamp="1701807005597" timestamp="9421" />
  <Command __id="13" _type="MoveCaretCommand" caretOffset="491" date="Tue Dec 05 15:10:17 EST 2023" docOffset="704" starttimestamp="1701807005597" timestamp="11608" />
  <Command __id="14" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 15:10:17 EST 2023" docOffset="710" starttimestamp="1701807005597" timestamp="12292" />
  <Command __id="15" _type="MoveCaretCommand" caretOffset="504" date="Tue Dec 05 15:10:18 EST 2023" docOffset="717" starttimestamp="1701807005597" timestamp="12760" />
  <Command __id="16" _type="MoveCaretCommand" caretOffset="508" date="Tue Dec 05 15:10:18 EST 2023" docOffset="721" starttimestamp="1701807005597" timestamp="13246" />
  <Command __id="17" _type="MoveCaretCommand" caretOffset="499" date="Tue Dec 05 15:10:19 EST 2023" docOffset="712" starttimestamp="1701807005597" timestamp="13710" />
  <Command __id="18" _type="ShellCommand" date="Tue Dec 05 15:10:19 EST 2023" starttimestamp="1701807005597" timestamp="14261" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="19" _type="ShellCommand" date="Tue Dec 05 15:10:20 EST 2023" starttimestamp="1701807005597" timestamp="14553" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="20" _type="ShellCommand" date="Tue Dec 05 15:10:20 EST 2023" starttimestamp="1701807005597" timestamp="14989" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="21" _type="ShellCommand" date="Tue Dec 05 15:10:42 EST 2023" starttimestamp="1701807005597" timestamp="37388" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="22" _type="MoveCaretCommand" caretOffset="479" date="Tue Dec 05 15:10:43 EST 2023" docOffset="692" starttimestamp="1701807005597" timestamp="37498" />
  <Command __id="23" _type="ShellCommand" date="Tue Dec 05 15:10:47 EST 2023" starttimestamp="1701807005597" timestamp="42353" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="24" _type="ShellCommand" date="Tue Dec 05 15:10:50 EST 2023" starttimestamp="1701807005597" timestamp="45034" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="25" _type="SelectTextCommand" caretOffset="485" date="Tue Dec 05 15:10:51 EST 2023" end="485" start="478" starttimestamp="1701807005597" timestamp="45647" />
  <Command __id="26" _type="MoveCaretCommand" caretOffset="485" date="Tue Dec 05 15:10:51 EST 2023" docOffset="698" starttimestamp="1701807005597" timestamp="45835" />
  <Command __id="27" _type="MoveCaretCommand" caretOffset="308" date="Tue Dec 05 15:10:52 EST 2023" docOffset="521" starttimestamp="1701807005597" timestamp="46687" />
  <Command __id="28" _type="SelectTextCommand" caretOffset="315" date="Tue Dec 05 15:10:52 EST 2023" end="315" start="305" starttimestamp="1701807005597" timestamp="46830" />
  <Command __id="29" _type="MoveCaretCommand" caretOffset="311" date="Tue Dec 05 15:10:55 EST 2023" docOffset="524" starttimestamp="1701807005597" timestamp="49579" />
  <Command __id="30" _type="SelectTextCommand" caretOffset="315" date="Tue Dec 05 15:10:55 EST 2023" end="315" start="305" starttimestamp="1701807005597" timestamp="49703" />
  <Command __id="31" _type="MoveCaretCommand" caretOffset="568" date="Tue Dec 05 15:10:58 EST 2023" docOffset="781" starttimestamp="1701807005597" timestamp="52409" />
  <Command __id="32" _type="SelectTextCommand" caretOffset="581" date="Tue Dec 05 15:10:58 EST 2023" end="581" start="553" starttimestamp="1701807005597" timestamp="52556" />
  <Command __id="33" _type="ShellCommand" date="Tue Dec 05 15:11:04 EST 2023" starttimestamp="1701807005597" timestamp="59077" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="11" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:10:14 EST 2023" docASTNodeCount="146" docActiveCodeLength="913" docExpressionCount="104" docLength="913" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9357">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="35" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:11:06 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="61075">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="37" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:11:07 EST 2023" docASTNodeCount="146" docActiveCodeLength="913" docExpressionCount="104" docLength="913" projectName="Assignment5" starttimestamp="1701807005597" timestamp="61862">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="34" _type="ShellCommand" date="Tue Dec 05 15:11:06 EST 2023" starttimestamp="1701807005597" timestamp="60832" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="36" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:11:06 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="61161" />
  <Command __id="38" _type="SelectTextCommand" caretOffset="581" date="Tue Dec 05 15:11:07 EST 2023" end="581" start="553" starttimestamp="1701807005597" timestamp="61927" />
  <Command __id="40" _type="MoveCaretCommand" caretOffset="228" date="Tue Dec 05 15:11:10 EST 2023" docOffset="401" starttimestamp="1701807005597" timestamp="64730" />
  <Command __id="39" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:11:10 EST 2023" docASTNodeCount="155" docActiveCodeLength="925" docExpressionCount="111" docLength="925" projectName="Assignment5" starttimestamp="1701807005597" timestamp="64674">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!expr.getHead().isAtom()){			Environment childEnvironment = environment.newChild();			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="41" _type="MoveCaretCommand" caretOffset="100" date="Tue Dec 05 15:11:12 EST 2023" docOffset="273" starttimestamp="1701807005597" timestamp="66447" />
  <Command __id="42" _type="SelectTextCommand" caretOffset="111" date="Tue Dec 05 15:11:12 EST 2023" end="111" start="83" starttimestamp="1701807005597" timestamp="66578" />
  <Command __id="44" _type="SelectTextCommand" caretOffset="581" date="Tue Dec 05 15:11:17 EST 2023" end="581" start="553" starttimestamp="1701807005597" timestamp="71923" />
  <Command __id="45" _type="MoveCaretCommand" caretOffset="488" date="Tue Dec 05 15:11:18 EST 2023" docOffset="701" starttimestamp="1701807005597" timestamp="73168" />
  <Command __id="46" _type="MoveCaretCommand" caretOffset="483" date="Tue Dec 05 15:11:23 EST 2023" docOffset="696" starttimestamp="1701807005597" timestamp="77436" />
  <Command __id="47" _type="SelectTextCommand" caretOffset="490" date="Tue Dec 05 15:11:23 EST 2023" end="490" start="479" starttimestamp="1701807005597" timestamp="77597" />
  <Command __id="48" _type="MoveCaretCommand" caretOffset="470" date="Tue Dec 05 15:11:25 EST 2023" docOffset="683" starttimestamp="1701807005597" timestamp="79621" />
  <Command __id="49" _type="SelectTextCommand" caretOffset="478" date="Tue Dec 05 15:11:25 EST 2023" end="478" start="461" starttimestamp="1701807005597" timestamp="79779" />
  <Command __id="50" _type="MoveCaretCommand" caretOffset="495" date="Tue Dec 05 15:11:26 EST 2023" docOffset="708" starttimestamp="1701807005597" timestamp="80439" />
  <Command __id="51" _type="MoveCaretCommand" caretOffset="503" date="Tue Dec 05 15:11:26 EST 2023" docOffset="716" starttimestamp="1701807005597" timestamp="81251" />
  <Command __id="52" _type="MoveCaretCommand" caretOffset="495" date="Tue Dec 05 15:11:27 EST 2023" docOffset="708" starttimestamp="1701807005597" timestamp="81794" />
  <Command __id="53" _type="MoveCaretCommand" caretOffset="501" date="Tue Dec 05 15:11:28 EST 2023" docOffset="714" starttimestamp="1701807005597" timestamp="82591" />
  <Command __id="54" _type="SelectTextCommand" caretOffset="513" date="Tue Dec 05 15:11:30 EST 2023" end="513" start="499" starttimestamp="1701807005597" timestamp="84875" />
  <Command __id="55" _type="ShellCommand" date="Tue Dec 05 15:11:33 EST 2023" starttimestamp="1701807005597" timestamp="88272" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="56" _type="ShellCommand" date="Tue Dec 05 15:12:04 EST 2023" starttimestamp="1701807005597" timestamp="118547" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="57" _type="MoveCaretCommand" caretOffset="697" date="Tue Dec 05 15:12:07 EST 2023" docOffset="910" starttimestamp="1701807005597" timestamp="121597" />
  <Command __id="58" _type="MoveCaretCommand" caretOffset="697" date="Tue Dec 05 15:12:16 EST 2023" docOffset="910" starttimestamp="1701807005597" timestamp="130782" />
  <Command __id="59" _type="MoveCaretCommand" caretOffset="427" date="Tue Dec 05 15:12:49 EST 2023" docOffset="640" starttimestamp="1701807005597" timestamp="164071" />
  <Command __id="60" _type="MoveCaretCommand" caretOffset="380" date="Tue Dec 05 15:12:50 EST 2023" docOffset="593" starttimestamp="1701807005597" timestamp="165230" />
  <Command __id="61" _type="MoveCaretCommand" caretOffset="453" date="Tue Dec 05 15:12:51 EST 2023" docOffset="666" starttimestamp="1701807005597" timestamp="165979" />
  <Command __id="62" _type="MoveCaretCommand" caretOffset="515" date="Tue Dec 05 15:12:53 EST 2023" docOffset="728" starttimestamp="1701807005597" timestamp="167726" />
  <Command __id="63" _type="ShellCommand" date="Tue Dec 05 15:12:58 EST 2023" starttimestamp="1701807005597" timestamp="172594" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="64" _type="ShellCommand" date="Tue Dec 05 15:13:04 EST 2023" starttimestamp="1701807005597" timestamp="178564" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="65" _type="MoveCaretCommand" caretOffset="515" date="Tue Dec 05 15:13:04 EST 2023" docOffset="728" starttimestamp="1701807005597" timestamp="178634" />
  <Command __id="67" _type="InsertStringCommand" date="Tue Dec 05 15:13:04 EST 2023" starttimestamp="1701807005597" timestamp="178863" timestamp2="178863">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="69" _type="InsertStringCommand" date="Tue Dec 05 15:13:04 EST 2023" starttimestamp="1701807005597" timestamp="179277" timestamp2="179277">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="71" _type="InsertStringCommand" date="Tue Dec 05 15:13:05 EST 2023" starttimestamp="1701807005597" timestamp="179419" timestamp2="179419">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="73" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:05 EST 2023" starttimestamp="1701807005597" timestamp="179792" />
  <Command __id="75" _type="InsertStringCommand" date="Tue Dec 05 15:13:05 EST 2023" starttimestamp="1701807005597" timestamp="179817" timestamp2="179817">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="77" _type="InsertStringCommand" date="Tue Dec 05 15:13:05 EST 2023" starttimestamp="1701807005597" timestamp="180029" timestamp2="180029">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="79" _type="InsertStringCommand" date="Tue Dec 05 15:13:06 EST 2023" starttimestamp="1701807005597" timestamp="180412" timestamp2="180412">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="81" _type="InsertStringCommand" date="Tue Dec 05 15:13:06 EST 2023" starttimestamp="1701807005597" timestamp="180485" timestamp2="180485">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="83" _type="InsertStringCommand" date="Tue Dec 05 15:13:06 EST 2023" starttimestamp="1701807005597" timestamp="180593" timestamp2="180593">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="85" _type="InsertStringCommand" date="Tue Dec 05 15:13:06 EST 2023" starttimestamp="1701807005597" timestamp="180742" timestamp2="180742">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="87" _type="InsertStringCommand" date="Tue Dec 05 15:13:06 EST 2023" starttimestamp="1701807005597" timestamp="180808" timestamp2="180808">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="89" _type="InsertStringCommand" date="Tue Dec 05 15:13:06 EST 2023" starttimestamp="1701807005597" timestamp="180883" timestamp2="180883">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="91" _type="InsertStringCommand" date="Tue Dec 05 15:13:06 EST 2023" starttimestamp="1701807005597" timestamp="180917" timestamp2="180917">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="93" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:07 EST 2023" starttimestamp="1701807005597" timestamp="181683" />
  <Command __id="95" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:07 EST 2023" starttimestamp="1701807005597" timestamp="181812" />
  <Command __id="97" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:07 EST 2023" starttimestamp="1701807005597" timestamp="181925" />
  <Command __id="99" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:07 EST 2023" starttimestamp="1701807005597" timestamp="182040" />
  <Command __id="101" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:07 EST 2023" starttimestamp="1701807005597" timestamp="182149" />
  <Command __id="103" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:07 EST 2023" starttimestamp="1701807005597" timestamp="182250" />
  <Command __id="105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:07 EST 2023" starttimestamp="1701807005597" timestamp="182385" />
  <Command __id="107" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:08 EST 2023" starttimestamp="1701807005597" timestamp="182491" />
  <Command __id="109" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:08 EST 2023" starttimestamp="1701807005597" timestamp="182636" />
  <Command __id="43" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:11:17 EST 2023" docASTNodeCount="146" docActiveCodeLength="913" docExpressionCount="104" docLength="913" projectName="Assignment5" starttimestamp="1701807005597" timestamp="71838">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="66" _type="Insert" date="Tue Dec 05 15:13:04 EST 2023" docASTNodeCount="149" docActiveCodeLength="924" docExpressionCount="106" docLength="924" length="11" offset="728" repeat="3" starttimestamp="1701807005597" timestamp="178858" timestamp2="179417">
    <text><![CDATA[
        ec]]></text>
  </DocumentChange>
  <DocumentChange __id="72" _type="Delete" date="Tue Dec 05 15:13:05 EST 2023" docASTNodeCount="149" docActiveCodeLength="923" docExpressionCount="106" docLength="923" endLine="20" length="1" offset="738" startLine="20" starttimestamp="1701807005597" timestamp="179786">
    <text><![CDATA[c]]></text>
  </DocumentChange>
  <DocumentChange __id="74" _type="Insert" date="Tue Dec 05 15:13:05 EST 2023" docASTNodeCount="149" docActiveCodeLength="932" docExpressionCount="106" docLength="932" length="9" offset="738" repeat="9" starttimestamp="1701807005597" timestamp="179816" timestamp2="180916">
    <text><![CDATA[xpression]]></text>
  </DocumentChange>
  <DocumentChange __id="92" _type="Delete" date="Tue Dec 05 15:13:07 EST 2023" docASTNodeCount="146" docActiveCodeLength="922" docExpressionCount="104" docLength="922" endLine="20" length="10" offset="737" repeat="10" startLine="20" starttimestamp="1701807005597" timestamp="181682" timestamp2="182784">
    <text><![CDATA[expression]]></text>
  </DocumentChange>
  <Command __id="111" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:08 EST 2023" starttimestamp="1701807005597" timestamp="182785" />
  <DocumentChange __id="112" _type="Insert" date="Tue Dec 05 15:13:10 EST 2023" docASTNodeCount="149" docActiveCodeLength="923" docExpressionCount="106" docLength="923" length="1" offset="737" starttimestamp="1701807005597" timestamp="184485">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="113" _type="Replace" date="Tue Dec 05 15:13:10 EST 2023" docASTNodeCount="149" docActiveCodeLength="924" docExpressionCount="106" docLength="924" endLine="20" insertionLength="2" int_docASTNodeCount="146" int_docActiveCodeLength="922" int_docExpressionCount="104" int_docLength="922" length="1" offset="737" startLine="20" starttimestamp="1701807005597" timestamp="184568">
    <deletedText><![CDATA[r]]></deletedText>
    <insertedText><![CDATA[re]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="114" _type="Replace" date="Tue Dec 05 15:13:10 EST 2023" docASTNodeCount="106" docActiveCodeLength="926" docExpressionCount="76" docLength="926" endLine="20" insertionLength="4" int_docASTNodeCount="146" int_docActiveCodeLength="922" int_docExpressionCount="104" int_docLength="922" length="2" offset="737" startLine="20" starttimestamp="1701807005597" timestamp="184683">
    <deletedText><![CDATA[re]]></deletedText>
    <insertedText><![CDATA[re't]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="115" _type="Replace" date="Tue Dec 05 15:13:10 EST 2023" docASTNodeCount="149" docActiveCodeLength="926" docExpressionCount="106" docLength="926" endLine="20" insertionLength="4" int_docASTNodeCount="146" int_docActiveCodeLength="922" int_docExpressionCount="104" int_docLength="922" length="4" offset="737" startLine="20" starttimestamp="1701807005597" timestamp="184719">
    <deletedText><![CDATA[re't]]></deletedText>
    <insertedText><![CDATA[retu]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="116" _type="Replace" date="Tue Dec 05 15:13:10 EST 2023" docASTNodeCount="106" docActiveCodeLength="929" docExpressionCount="76" docLength="929" endLine="20" insertionLength="7" int_docASTNodeCount="146" int_docActiveCodeLength="922" int_docExpressionCount="104" int_docLength="922" length="4" offset="737" startLine="20" starttimestamp="1701807005597" timestamp="184857">
    <deletedText><![CDATA[retu]]></deletedText>
    <insertedText><![CDATA[re'tu'r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="117" _type="Replace" date="Tue Dec 05 15:13:10 EST 2023" docASTNodeCount="146" docActiveCodeLength="928" docExpressionCount="105" docLength="928" endLine="20" insertionLength="6" int_docASTNodeCount="146" int_docActiveCodeLength="922" int_docExpressionCount="104" int_docLength="922" length="7" offset="737" startLine="20" starttimestamp="1701807005597" timestamp="184904">
    <deletedText><![CDATA[re'tu'r]]></deletedText>
    <insertedText><![CDATA[return]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="118" _type="Delete" date="Tue Dec 05 15:13:10 EST 2023" docASTNodeCount="146" docActiveCodeLength="922" docExpressionCount="104" docLength="922" endLine="20" length="6" offset="737" startLine="20" starttimestamp="1701807005597" timestamp="185121">
    <text><![CDATA[return]]></text>
  </DocumentChange>
  <DocumentChange __id="119" _type="Insert" date="Tue Dec 05 15:13:10 EST 2023" docASTNodeCount="146" docActiveCodeLength="923" docExpressionCount="104" docLength="923" length="1" offset="737" starttimestamp="1701807005597" timestamp="185275">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="120" _type="InsertStringCommand" date="Tue Dec 05 15:13:10 EST 2023" starttimestamp="1701807005597" timestamp="185277" timestamp2="185277">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="121" _type="Delete" date="Tue Dec 05 15:13:11 EST 2023" docASTNodeCount="146" docActiveCodeLength="922" docExpressionCount="104" docLength="922" endLine="20" length="1" offset="737" startLine="20" starttimestamp="1701807005597" timestamp="185715">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="122" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:11 EST 2023" starttimestamp="1701807005597" timestamp="185718" />
  <DocumentChange __id="123" _type="Insert" date="Tue Dec 05 15:13:11 EST 2023" docASTNodeCount="148" docActiveCodeLength="930" docExpressionCount="105" docLength="930" length="8" offset="737" repeat="8" starttimestamp="1701807005597" timestamp="185821" timestamp2="186572">
    <text><![CDATA[return x]]></text>
  </DocumentChange>
  <Command __id="124" _type="InsertStringCommand" date="Tue Dec 05 15:13:11 EST 2023" starttimestamp="1701807005597" timestamp="185823" timestamp2="185823">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="126" _type="InsertStringCommand" date="Tue Dec 05 15:13:11 EST 2023" starttimestamp="1701807005597" timestamp="185893" timestamp2="185893">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="128" _type="InsertStringCommand" date="Tue Dec 05 15:13:11 EST 2023" starttimestamp="1701807005597" timestamp="185993" timestamp2="185993">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="130" _type="InsertStringCommand" date="Tue Dec 05 15:13:11 EST 2023" starttimestamp="1701807005597" timestamp="186061" timestamp2="186061">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="132" _type="InsertStringCommand" date="Tue Dec 05 15:13:11 EST 2023" starttimestamp="1701807005597" timestamp="186177" timestamp2="186177">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="134" _type="InsertStringCommand" date="Tue Dec 05 15:13:11 EST 2023" starttimestamp="1701807005597" timestamp="186200" timestamp2="186200">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="136" _type="InsertStringCommand" date="Tue Dec 05 15:13:11 EST 2023" starttimestamp="1701807005597" timestamp="186325" timestamp2="186325">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="138" _type="InsertStringCommand" date="Tue Dec 05 15:13:12 EST 2023" starttimestamp="1701807005597" timestamp="186574" timestamp2="186574">
    <data><![CDATA[x]]></data>
  </Command>
  <DocumentChange __id="139" _type="Delete" date="Tue Dec 05 15:13:12 EST 2023" docASTNodeCount="146" docActiveCodeLength="929" docExpressionCount="105" docLength="929" endLine="20" length="1" offset="744" startLine="20" starttimestamp="1701807005597" timestamp="186896">
    <text><![CDATA[x]]></text>
  </DocumentChange>
  <Command __id="140" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:13:12 EST 2023" starttimestamp="1701807005597" timestamp="186897" />
  <DocumentChange __id="141" _type="Insert" date="Tue Dec 05 15:13:12 EST 2023" docASTNodeCount="150" docActiveCodeLength="942" docExpressionCount="107" docLength="942" length="13" offset="744" repeat="13" starttimestamp="1701807005597" timestamp="186938" timestamp2="188329">
    <text><![CDATA[expression.ev]]></text>
  </DocumentChange>
  <Command __id="142" _type="InsertStringCommand" date="Tue Dec 05 15:13:12 EST 2023" starttimestamp="1701807005597" timestamp="186939" timestamp2="186939">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="144" _type="InsertStringCommand" date="Tue Dec 05 15:13:12 EST 2023" starttimestamp="1701807005597" timestamp="187093" timestamp2="187093">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="146" _type="InsertStringCommand" date="Tue Dec 05 15:13:12 EST 2023" starttimestamp="1701807005597" timestamp="187182" timestamp2="187182">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="148" _type="InsertStringCommand" date="Tue Dec 05 15:13:12 EST 2023" starttimestamp="1701807005597" timestamp="187307" timestamp2="187307">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="150" _type="InsertStringCommand" date="Tue Dec 05 15:13:12 EST 2023" starttimestamp="1701807005597" timestamp="187373" timestamp2="187373">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="152" _type="InsertStringCommand" date="Tue Dec 05 15:13:13 EST 2023" starttimestamp="1701807005597" timestamp="187506" timestamp2="187506">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="154" _type="InsertStringCommand" date="Tue Dec 05 15:13:13 EST 2023" starttimestamp="1701807005597" timestamp="187662" timestamp2="187662">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="156" _type="InsertStringCommand" date="Tue Dec 05 15:13:13 EST 2023" starttimestamp="1701807005597" timestamp="187739" timestamp2="187739">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="158" _type="InsertStringCommand" date="Tue Dec 05 15:13:13 EST 2023" starttimestamp="1701807005597" timestamp="187806" timestamp2="187806">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="160" _type="InsertStringCommand" date="Tue Dec 05 15:13:13 EST 2023" starttimestamp="1701807005597" timestamp="187860" timestamp2="187860">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="162" _type="InsertStringCommand" date="Tue Dec 05 15:13:13 EST 2023" starttimestamp="1701807005597" timestamp="188018" timestamp2="188018">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="163" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 15:13:13 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="188053" />
  <Command __id="166" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 15:13:14 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="188729" />
  <DocumentChange __id="167" _type="Replace" date="Tue Dec 05 15:13:14 EST 2023" docASTNodeCount="151" docActiveCodeLength="957" docExpressionCount="108" docLength="957" endLine="20" insertionLength="17" int_docASTNodeCount="148" int_docActiveCodeLength="940" int_docExpressionCount="107" int_docLength="940" length="2" offset="755" startLine="20" starttimestamp="1701807005597" timestamp="188732">
    <deletedText><![CDATA[ev]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="168" _type="InsertStringCommand" date="Tue Dec 05 15:13:14 EST 2023" starttimestamp="1701807005597" timestamp="188760" timestamp2="188760">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="169" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 15:13:15 EST 2023" starttimestamp="1701807005597" timestamp="189577" />
  <Command __id="170" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 15:13:15 EST 2023" starttimestamp="1701807005597" timestamp="190104" />
  <Command __id="172" _type="InsertStringCommand" date="Tue Dec 05 15:13:16 EST 2023" starttimestamp="1701807005597" timestamp="190686" timestamp2="190686">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="173" _type="SelectTextCommand" caretOffset="561" date="Tue Dec 05 15:13:18 EST 2023" end="739" start="561" starttimestamp="1701807005597" timestamp="192478" />
  <Command __id="176" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue Dec 05 15:13:18 EST 2023" starttimestamp="1701807005597" timestamp="192765" />
  <Command __id="177" _type="MoveCaretCommand" caretOffset="448" date="Tue Dec 05 15:13:18 EST 2023" docOffset="661" starttimestamp="1701807005597" timestamp="193221" />
  <Command __id="178" _type="MoveCaretCommand" caretOffset="560" date="Tue Dec 05 15:13:19 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="193703" />
  <Command __id="179" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:13:19 EST 2023" starttimestamp="1701807005597" timestamp="193991" />
  <Command __id="180" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 15:13:19 EST 2023" starttimestamp="1701807005597" timestamp="194038" />
  <Command __id="181" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:13:19 EST 2023" starttimestamp="1701807005597" timestamp="194082" />
  <Command __id="184" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:13:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="202939" type="Run" />
  <Command __id="185" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:13:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="202939" type="Run" />
  <Command __id="186" _type="ShellCommand" date="Tue Dec 05 15:13:29 EST 2023" starttimestamp="1701807005597" timestamp="204126" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="187" _type="ShellCommand" date="Tue Dec 05 15:13:33 EST 2023" starttimestamp="1701807005597" timestamp="208055" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="188" _type="PasteCommand" date="Tue Dec 05 15:13:34 EST 2023" starttimestamp="1701807005597" timestamp="208978" />
  <Command __id="189" _type="ConsoleInput" date="Tue Dec 05 15:13:38 EST 2023" starttimestamp="1701807005597" timestamp="212649" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))
]]></outputString>
  </Command>
  <Command __id="190" _type="ConsoleOutput" date="Tue Dec 05 15:13:38 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="212658" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="191" _type="ShellCommand" date="Tue Dec 05 15:13:41 EST 2023" starttimestamp="1701807005597" timestamp="215895" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="192" _type="ShellCommand" date="Tue Dec 05 15:13:42 EST 2023" starttimestamp="1701807005597" timestamp="216844" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="193" _type="ConsoleInput" date="Tue Dec 05 15:13:46 EST 2023" starttimestamp="1701807005597" timestamp="221032" type="Exception">
    <outputString><![CDATA[(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="194" _type="ExceptionCommand" date="Tue Dec 05 15:13:46 EST 2023" starttimestamp="1701807005597" timestamp="221036" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="195" _type="ConsoleOutput" date="Tue Dec 05 15:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="221045" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="196" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:13:46 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="221050" type="Run" />
  <Command __id="197" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:13:46 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="221050" type="Run" />
  <Command __id="198" _type="ShellCommand" date="Tue Dec 05 15:13:59 EST 2023" starttimestamp="1701807005597" timestamp="233443" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="199" _type="ShellCommand" date="Tue Dec 05 15:14:01 EST 2023" starttimestamp="1701807005597" timestamp="235673" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="200" _type="ShellCommand" date="Tue Dec 05 15:14:01 EST 2023" starttimestamp="1701807005597" timestamp="235679" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="201" _type="ShellCommand" date="Tue Dec 05 15:14:21 EST 2023" starttimestamp="1701807005597" timestamp="256247" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="202" _type="ShellCommand" date="Tue Dec 05 15:14:21 EST 2023" starttimestamp="1701807005597" timestamp="256255" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="203" _type="ShellCommand" date="Tue Dec 05 15:14:26 EST 2023" starttimestamp="1701807005597" timestamp="260508" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="204" _type="ShellCommand" date="Tue Dec 05 15:14:26 EST 2023" starttimestamp="1701807005597" timestamp="260517" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="205" _type="ShellCommand" date="Tue Dec 05 15:14:28 EST 2023" starttimestamp="1701807005597" timestamp="262915" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="206" _type="ShellCommand" date="Tue Dec 05 15:14:28 EST 2023" starttimestamp="1701807005597" timestamp="262921" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="207" _type="ShellCommand" date="Tue Dec 05 15:14:32 EST 2023" starttimestamp="1701807005597" timestamp="267153" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="208" _type="ShellCommand" date="Tue Dec 05 15:14:32 EST 2023" starttimestamp="1701807005597" timestamp="267161" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="171" _type="Insert" date="Tue Dec 05 15:13:16 EST 2023" docASTNodeCount="151" docActiveCodeLength="958" docExpressionCount="108" docLength="958" length="1" offset="772" starttimestamp="1701807005597" timestamp="190684">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="174" _type="Insert" date="Tue Dec 05 15:13:18 EST 2023" docASTNodeCount="143" docActiveCodeLength="855" docExpressionCount="104" docLength="960" length="2" offset="774" starttimestamp="1701807005597" timestamp="192753">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="175" _type="Insert" date="Tue Dec 05 15:13:18 EST 2023" docASTNodeCount="137" docActiveCodeLength="781" docExpressionCount="99" docLength="962" length="2" offset="880" starttimestamp="1701807005597" timestamp="192753">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="215" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:14:47 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="281864" type="Run" />
  <Command __id="216" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:14:47 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="281864" type="Run" />
  <Command __id="218" _type="SelectTextCommand" caretOffset="111" date="Tue Dec 05 15:14:58 EST 2023" end="111" start="83" starttimestamp="1701807005597" timestamp="292681" />
  <Command __id="219" _type="MoveCaretCommand" caretOffset="101" date="Tue Dec 05 15:14:59 EST 2023" docOffset="274" starttimestamp="1701807005597" timestamp="293873" />
  <Command __id="217" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:14:58 EST 2023" docASTNodeCount="155" docActiveCodeLength="925" docExpressionCount="111" docLength="925" projectName="Assignment5" starttimestamp="1701807005597" timestamp="292610">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!expr.getHead().isAtom()){			Environment childEnvironment = environment.newChild();			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="220" _type="MoveCaretCommand" caretOffset="126" date="Tue Dec 05 15:15:00 EST 2023" docOffset="299" starttimestamp="1701807005597" timestamp="295234" />
  <Command __id="221" _type="SelectTextCommand" caretOffset="144" date="Tue Dec 05 15:15:00 EST 2023" end="144" start="120" starttimestamp="1701807005597" timestamp="295369" />
  <Command __id="222" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:15:12 EST 2023" docASTNodeCount="236" docActiveCodeLength="2081" docExpressionCount="163" docLength="2081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="306558">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.OperationRegisterer;
import main.lisp.evaluator.BasicOperationRegisterer;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{
	
	public static void registerBasic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());
	}
	
	public static void registerArithmetic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());
	}
	
	public static void registerLogic() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());
	}
	
	public static void registerAdvance() {
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("SETQ", new SetqEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LAMBDA", new LambdaEvaluator());
		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("FUNCALL", new FuncallEvaluator());
	}
	

	@Override
	public void registerOperations() {
		registerAll();
	}
	
	public static void registerAll() {
		registerBasic();
		registerArithmetic();
		registerLogic();
		registerAdvance();
	}

}
]]></snapshot>
  </Command>
  <Command __id="223" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:15:12 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="306668" />
  <Command __id="225" _type="MoveCaretCommand" caretOffset="3079" date="Tue Dec 05 15:15:13 EST 2023" docOffset="3315" starttimestamp="1701807005597" timestamp="308384" />
  <Command __id="226" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:15:17 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="311568" />
  <Command __id="227" _type="SelectTextCommand" caretOffset="3069" date="Tue Dec 05 15:15:18 EST 2023" end="3167" start="3069" starttimestamp="1701807005597" timestamp="313122" />
  <Command __id="228" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:15:21 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="315488" />
  <Command __id="229" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:15:28 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="322923" />
  <Command __id="230" _type="MoveCaretCommand" caretOffset="3108" date="Tue Dec 05 15:15:29 EST 2023" docOffset="3344" starttimestamp="1701807005597" timestamp="323833" />
  <Command __id="231" _type="SelectTextCommand" caretOffset="3115" date="Tue Dec 05 15:15:29 EST 2023" end="3115" start="3104" starttimestamp="1701807005597" timestamp="323949" />
  <Command __id="232" _type="MoveCaretCommand" caretOffset="3108" date="Tue Dec 05 15:15:31 EST 2023" docOffset="3344" starttimestamp="1701807005597" timestamp="325897" />
  <Command __id="233" _type="SelectTextCommand" caretOffset="3115" date="Tue Dec 05 15:15:31 EST 2023" end="3115" start="3104" starttimestamp="1701807005597" timestamp="326359" />
  <Command __id="234" _type="SelectTextCommand" caretOffset="3149" date="Tue Dec 05 15:15:32 EST 2023" end="3149" start="3080" starttimestamp="1701807005597" timestamp="326498" />
  <Command __id="224" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:15:13 EST 2023" docASTNodeCount="460" docActiveCodeLength="3317" docExpressionCount="226" docLength="3997" projectName="Assignment5" starttimestamp="1701807005597" timestamp="308307">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;	import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;import gradingTools.comp524f23.assignment6.ClassRegistryA6;public class ClassRegistryImpl implements ClassRegistryA6 {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}	@Override	public Class<? extends SExpression> getFunctionCallingSExpression() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getFunctionCallingSExpression'");	}	@Override	public Class<? extends Evaluator> getFunctionEvaluator() {		return FuncallEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLetEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getLetEvaluator'");	}	@Override	public Class<? extends Evaluator> getBasicFuncallEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getBasicFuncallEvaluator'");	}	@Override	public Class<? extends IdentifierAtom> getIdentifierAtomWithLookup() {		return IdentifierAtomImpl.class;	}	@Override	public Class<? extends SExpression> getLambdaCallingSExpression() {		return null;	}	@Override	public Class<? extends Evaluator> getLambdaEvaluator() {		return LambdaEvaluator.class;	}	@Override	public Class<? extends Environment> getNestedLexicalEnvironment() {		// TODO Auto-generated method stub		return EnvironmentImpl.class;	}	@Override	public Class<? extends Evaluator> getSetqEvaluator() {		return SetqEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getStatefulOperationRegisterer() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getStatefulOperationRegisterer'");	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="235" _type="MoveCaretCommand" caretOffset="3167" date="Tue Dec 05 15:15:35 EST 2023" docOffset="3403" starttimestamp="1701807005597" timestamp="330369" />
  <Command __id="236" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:15:36 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="331003" />
  <Command __id="238" _type="SelectTextCommand" caretOffset="144" date="Tue Dec 05 15:15:46 EST 2023" end="144" start="120" starttimestamp="1701807005597" timestamp="341258" />
  <Command __id="239" _type="ShellCommand" date="Tue Dec 05 15:15:47 EST 2023" starttimestamp="1701807005597" timestamp="342231" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="240" _type="ShellCommand" date="Tue Dec 05 15:15:57 EST 2023" starttimestamp="1701807005597" timestamp="351601" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="237" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:15:46 EST 2023" docASTNodeCount="155" docActiveCodeLength="925" docExpressionCount="111" docLength="925" projectName="Assignment5" starttimestamp="1701807005597" timestamp="341178">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!expr.getHead().isAtom()){			Environment childEnvironment = environment.newChild();			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="241" _type="MoveCaretCommand" caretOffset="651" date="Tue Dec 05 15:16:07 EST 2023" docOffset="824" starttimestamp="1701807005597" timestamp="362386" />
  <Command __id="242" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:16:10 EST 2023" docASTNodeCount="236" docActiveCodeLength="2081" docExpressionCount="163" docLength="2081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="364911">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BasicOperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}		public static void registerAdvance() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("SETQ", new SetqEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LAMBDA", new LambdaEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("FUNCALL", new FuncallEvaluator());	}		@Override	public void registerOperations() {		registerAll();	}		public static void registerAll() {		registerBasic();		registerArithmetic();		registerLogic();		registerAdvance();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="243" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:16:10 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="364988" />
  <Command __id="244" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:16:11 EST 2023" docASTNodeCount="137" docActiveCodeLength="781" docExpressionCount="99" docLength="962" projectName="Assignment5" starttimestamp="1701807005597" timestamp="365854">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());"), Diff(INSERT,"        return expression.eval(environment);//"), Diff(EQUAL,"        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();"), Diff(INSERT,"//"), Diff(EQUAL,"        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;


public class FuncallEvaluator implements Evaluator{

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
    }
    public static SExpression evalHelper(SExpression expr, Environment environment) {
        Lambda lambda = (Lambda) expr.getHead().eval(environment);
        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());
        return expression.eval(environment);
//        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();
//        return basicExpressionEvaluatorImpl.eval(expression, environment);
	}
}
]]></snapshot>
  </Command>
  <Command __id="245" _type="MoveCaretCommand" caretOffset="198" date="Tue Dec 05 15:16:11 EST 2023" docOffset="411" starttimestamp="1701807005597" timestamp="365933" />
  <Command __id="247" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:16:12 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="366530" />
  <Command __id="248" _type="MoveCaretCommand" caretOffset="3163" date="Tue Dec 05 15:16:14 EST 2023" docOffset="3399" starttimestamp="1701807005597" timestamp="368777" />
  <Command __id="249" _type="MoveCaretCommand" caretOffset="3160" date="Tue Dec 05 15:16:15 EST 2023" docOffset="3396" starttimestamp="1701807005597" timestamp="370210" />
  <Command __id="250" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:16:15 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="370350" />
  <Command __id="251" _type="MoveCaretCommand" caretOffset="3163" date="Tue Dec 05 15:16:22 EST 2023" docOffset="3399" starttimestamp="1701807005597" timestamp="376645" />
  <Command __id="246" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:16:12 EST 2023" docASTNodeCount="460" docActiveCodeLength="3317" docExpressionCount="226" docLength="3997" projectName="Assignment5" starttimestamp="1701807005597" timestamp="366465">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;	import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;import gradingTools.comp524f23.assignment6.ClassRegistryA6;public class ClassRegistryImpl implements ClassRegistryA6 {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}	@Override	public Class<? extends SExpression> getFunctionCallingSExpression() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getFunctionCallingSExpression'");	}	@Override	public Class<? extends Evaluator> getFunctionEvaluator() {		return FuncallEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLetEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getLetEvaluator'");	}	@Override	public Class<? extends Evaluator> getBasicFuncallEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getBasicFuncallEvaluator'");	}	@Override	public Class<? extends IdentifierAtom> getIdentifierAtomWithLookup() {		return IdentifierAtomImpl.class;	}	@Override	public Class<? extends SExpression> getLambdaCallingSExpression() {		return null;	}	@Override	public Class<? extends Evaluator> getLambdaEvaluator() {		return LambdaEvaluator.class;	}	@Override	public Class<? extends Environment> getNestedLexicalEnvironment() {		// TODO Auto-generated method stub		return EnvironmentImpl.class;	}	@Override	public Class<? extends Evaluator> getSetqEvaluator() {		return SetqEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getStatefulOperationRegisterer() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getStatefulOperationRegisterer'");	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="252" _type="MoveCaretCommand" caretOffset="3155" date="Tue Dec 05 15:16:24 EST 2023" docOffset="3391" starttimestamp="1701807005597" timestamp="378664" />
  <Command __id="253" _type="MoveCaretCommand" caretOffset="3161" date="Tue Dec 05 15:16:24 EST 2023" docOffset="3397" starttimestamp="1701807005597" timestamp="379149" />
  <Command __id="254" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:16:24 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="379296" />
  <Command __id="255" _type="MoveCaretCommand" caretOffset="3163" date="Tue Dec 05 15:16:25 EST 2023" docOffset="3399" starttimestamp="1701807005597" timestamp="379758" />
  <Command __id="257" _type="MoveCaretCommand" caretOffset="122" date="Tue Dec 05 15:16:37 EST 2023" docOffset="338" starttimestamp="1701807005597" timestamp="391665" />
  <Command __id="256" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:16:37 EST 2023" docASTNodeCount="96" docActiveCodeLength="627" docExpressionCount="69" docLength="627" projectName="Assignment5" starttimestamp="1701807005597" timestamp="391579">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.Main;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.IdentifierAtomFactory;
import main.lisp.evaluator.ExpressionEvaluatorFactory;
import main.lisp.evaluator.environment.EnvironmentFactory;

public class index {

	public static void main(String[] args) {
		ExpressionEvaluatorFactory.setClass(BasicExpressionEvaluatorImpl.class);
		IdentifierAtomFactory.setClass(IdentifierAtomImpl.class);
		EnvironmentFactory.setClass(EnvironmentImpl.class);
		OperationRegistererImpl.registerAll();
		ExpressionFactory.setClass(BasicExpressionImpl.class);
		Main.main(args);
	}

}
]]></snapshot>
  </Command>
  <Command __id="258" _type="SelectTextCommand" caretOffset="127" date="Tue Dec 05 15:16:39 EST 2023" end="127" start="101" starttimestamp="1701807005597" timestamp="393453" />
  <Command __id="259" _type="MoveCaretCommand" caretOffset="98" date="Tue Dec 05 15:16:39 EST 2023" docOffset="314" starttimestamp="1701807005597" timestamp="394124" />
  <Command __id="260" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 15:16:39 EST 2023" end="406" start="98" starttimestamp="1701807005597" timestamp="394262" />
  <Command __id="261" _type="MoveCaretCommand" caretOffset="149" date="Tue Dec 05 15:16:40 EST 2023" docOffset="365" starttimestamp="1701807005597" timestamp="394632" />
  <Command __id="262" _type="SelectTextCommand" caretOffset="165" date="Tue Dec 05 15:16:40 EST 2023" end="165" start="137" starttimestamp="1701807005597" timestamp="394754" />
  <Command __id="264" _type="MoveCaretCommand" caretOffset="3163" date="Tue Dec 05 15:16:50 EST 2023" docOffset="3399" starttimestamp="1701807005597" timestamp="405002" />
  <Command __id="265" _type="MoveCaretCommand" caretOffset="3124" date="Tue Dec 05 15:16:52 EST 2023" docOffset="3360" starttimestamp="1701807005597" timestamp="406962" />
  <Command __id="266" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:16:53 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="407405" />
  <Command __id="267" _type="MoveCaretCommand" caretOffset="3159" date="Tue Dec 05 15:16:53 EST 2023" docOffset="3395" starttimestamp="1701807005597" timestamp="407672" />
  <Command __id="268" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:16:53 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="407922" />
  <Command __id="269" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:16:55 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="409871" />
  <Command __id="270" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:16:58 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="412801" />
  <Command __id="271" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:16:58 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="412995" />
  <Command __id="272" _type="MoveCaretCommand" caretOffset="3160" date="Tue Dec 05 15:17:01 EST 2023" docOffset="3396" starttimestamp="1701807005597" timestamp="415836" />
  <Command __id="273" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:17:01 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="415982" />
  <Command __id="274" _type="MoveCaretCommand" caretOffset="3161" date="Tue Dec 05 15:17:19 EST 2023" docOffset="3397" starttimestamp="1701807005597" timestamp="433737" />
  <Command __id="275" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:17:19 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="433870" />
  <Command __id="276" _type="ShellCommand" date="Tue Dec 05 15:17:21 EST 2023" starttimestamp="1701807005597" timestamp="436343" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="277" _type="ShellCommand" date="Tue Dec 05 15:17:24 EST 2023" starttimestamp="1701807005597" timestamp="439220" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="278" _type="MoveCaretCommand" caretOffset="3161" date="Tue Dec 05 15:17:25 EST 2023" docOffset="3397" starttimestamp="1701807005597" timestamp="439777" />
  <Command __id="279" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:17:25 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="439919" />
  <Command __id="280" _type="MoveCaretCommand" caretOffset="3160" date="Tue Dec 05 15:17:26 EST 2023" docOffset="3396" starttimestamp="1701807005597" timestamp="440765" />
  <Command __id="281" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:17:26 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="440894" />
  <Command __id="282" _type="MoveCaretCommand" caretOffset="3161" date="Tue Dec 05 15:17:30 EST 2023" docOffset="3397" starttimestamp="1701807005597" timestamp="445048" />
  <Command __id="283" _type="MoveCaretCommand" caretOffset="3161" date="Tue Dec 05 15:17:31 EST 2023" docOffset="3397" starttimestamp="1701807005597" timestamp="446169" />
  <Command __id="284" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:17:31 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="446288" />
  <Command __id="285" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:17:32 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="446749" />
  <Command __id="286" _type="ShellCommand" date="Tue Dec 05 15:17:33 EST 2023" starttimestamp="1701807005597" timestamp="447625" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="287" _type="ShellCommand" date="Tue Dec 05 15:17:34 EST 2023" starttimestamp="1701807005597" timestamp="448489" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="288" _type="MoveCaretCommand" caretOffset="3159" date="Tue Dec 05 15:17:35 EST 2023" docOffset="3395" starttimestamp="1701807005597" timestamp="449956" />
  <Command __id="289" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:17:35 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="450098" />
  <Command __id="290" _type="MoveCaretCommand" caretOffset="3161" date="Tue Dec 05 15:17:36 EST 2023" docOffset="3397" starttimestamp="1701807005597" timestamp="450948" />
  <Command __id="291" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:17:36 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="451095" />
  <Command __id="292" _type="ShellCommand" date="Tue Dec 05 15:17:42 EST 2023" starttimestamp="1701807005597" timestamp="456523" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="293" _type="ShellCommand" date="Tue Dec 05 15:17:46 EST 2023" starttimestamp="1701807005597" timestamp="461163" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="294" _type="MoveCaretCommand" caretOffset="3120" date="Tue Dec 05 15:17:48 EST 2023" docOffset="3356" starttimestamp="1701807005597" timestamp="462529" />
  <Command __id="295" _type="SelectTextCommand" caretOffset="3144" date="Tue Dec 05 15:17:48 EST 2023" end="3144" start="3117" starttimestamp="1701807005597" timestamp="462664" />
  <Command __id="296" _type="MoveCaretCommand" caretOffset="3160" date="Tue Dec 05 15:17:48 EST 2023" docOffset="3396" starttimestamp="1701807005597" timestamp="463396" />
  <Command __id="297" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:17:49 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="463522" />
  <Command __id="298" _type="MoveCaretCommand" caretOffset="3167" date="Tue Dec 05 15:18:12 EST 2023" docOffset="3403" starttimestamp="1701807005597" timestamp="486472" />
  <Command __id="299" _type="MoveCaretCommand" caretOffset="3166" date="Tue Dec 05 15:18:27 EST 2023" docOffset="3402" starttimestamp="1701807005597" timestamp="502059" />
  <Command __id="300" _type="MoveCaretCommand" caretOffset="3161" date="Tue Dec 05 15:18:32 EST 2023" docOffset="3397" starttimestamp="1701807005597" timestamp="506970" />
  <Command __id="301" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:18:32 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="507102" />
  <Command __id="302" _type="MoveCaretCommand" caretOffset="3108" date="Tue Dec 05 15:18:35 EST 2023" docOffset="3344" starttimestamp="1701807005597" timestamp="510112" />
  <Command __id="303" _type="SelectTextCommand" caretOffset="3115" date="Tue Dec 05 15:18:35 EST 2023" end="3115" start="3104" starttimestamp="1701807005597" timestamp="510255" />
  <Command __id="304" _type="MoveCaretCommand" caretOffset="3161" date="Tue Dec 05 15:18:36 EST 2023" docOffset="3397" starttimestamp="1701807005597" timestamp="511033" />
  <Command __id="305" _type="MoveCaretCommand" caretOffset="3160" date="Tue Dec 05 15:18:39 EST 2023" docOffset="3396" starttimestamp="1701807005597" timestamp="513642" />
  <Command __id="306" _type="SelectTextCommand" caretOffset="3162" date="Tue Dec 05 15:18:39 EST 2023" end="3162" start="3158" starttimestamp="1701807005597" timestamp="513790" />
  <Command __id="307" _type="MoveCaretCommand" caretOffset="2271" date="Tue Dec 05 15:18:51 EST 2023" docOffset="2507" starttimestamp="1701807005597" timestamp="525812" />
  <Command __id="308" _type="SelectTextCommand" caretOffset="2292" date="Tue Dec 05 15:18:51 EST 2023" end="2292" start="2263" starttimestamp="1701807005597" timestamp="525946" />
  <Command __id="309" _type="MoveCaretCommand" caretOffset="2255" date="Tue Dec 05 15:18:54 EST 2023" docOffset="2491" starttimestamp="1701807005597" timestamp="528835" />
  <Command __id="310" _type="SelectTextCommand" caretOffset="2261" date="Tue Dec 05 15:18:54 EST 2023" end="2261" start="2250" starttimestamp="1701807005597" timestamp="528988" />
  <Command __id="263" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:16:50 EST 2023" docASTNodeCount="460" docActiveCodeLength="3317" docExpressionCount="226" docLength="3997" projectName="Assignment5" starttimestamp="1701807005597" timestamp="404929">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;	import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;import gradingTools.comp524f23.assignment6.ClassRegistryA6;public class ClassRegistryImpl implements ClassRegistryA6 {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}	@Override	public Class<? extends SExpression> getFunctionCallingSExpression() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getFunctionCallingSExpression'");	}	@Override	public Class<? extends Evaluator> getFunctionEvaluator() {		return FuncallEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLetEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getLetEvaluator'");	}	@Override	public Class<? extends Evaluator> getBasicFuncallEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getBasicFuncallEvaluator'");	}	@Override	public Class<? extends IdentifierAtom> getIdentifierAtomWithLookup() {		return IdentifierAtomImpl.class;	}	@Override	public Class<? extends SExpression> getLambdaCallingSExpression() {		return null;	}	@Override	public Class<? extends Evaluator> getLambdaEvaluator() {		return LambdaEvaluator.class;	}	@Override	public Class<? extends Environment> getNestedLexicalEnvironment() {		// TODO Auto-generated method stub		return EnvironmentImpl.class;	}	@Override	public Class<? extends Evaluator> getSetqEvaluator() {		return SetqEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getStatefulOperationRegisterer() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getStatefulOperationRegisterer'");	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="311" _type="MoveCaretCommand" caretOffset="2269" date="Tue Dec 05 15:18:59 EST 2023" docOffset="2505" starttimestamp="1701807005597" timestamp="533411" />
  <Command __id="312" _type="SelectTextCommand" caretOffset="2292" date="Tue Dec 05 15:18:59 EST 2023" end="2292" start="2263" starttimestamp="1701807005597" timestamp="533536" />
  <Command __id="314" _type="MoveCaretCommand" caretOffset="651" date="Tue Dec 05 15:19:17 EST 2023" docOffset="824" starttimestamp="1701807005597" timestamp="551615" />
  <Command __id="315" _type="MoveCaretCommand" caretOffset="133" date="Tue Dec 05 15:19:20 EST 2023" docOffset="306" starttimestamp="1701807005597" timestamp="554469" />
  <Command __id="316" _type="SelectTextCommand" caretOffset="144" date="Tue Dec 05 15:19:20 EST 2023" end="144" start="120" starttimestamp="1701807005597" timestamp="554601" />
  <Command __id="317" _type="MoveCaretCommand" caretOffset="146" date="Tue Dec 05 15:19:20 EST 2023" docOffset="319" starttimestamp="1701807005597" timestamp="555396" />
  <Command __id="318" _type="MoveCaretCommand" caretOffset="137" date="Tue Dec 05 15:19:21 EST 2023" docOffset="310" starttimestamp="1701807005597" timestamp="556043" />
  <Command __id="319" _type="SelectTextCommand" caretOffset="144" date="Tue Dec 05 15:19:21 EST 2023" end="144" start="120" starttimestamp="1701807005597" timestamp="556173" />
  <Command __id="320" _type="MoveCaretCommand" caretOffset="135" date="Tue Dec 05 15:19:25 EST 2023" docOffset="308" starttimestamp="1701807005597" timestamp="559852" />
  <Command __id="321" _type="MoveCaretCommand" caretOffset="133" date="Tue Dec 05 15:19:26 EST 2023" docOffset="306" starttimestamp="1701807005597" timestamp="561267" />
  <Command __id="322" _type="MoveCaretCommand" caretOffset="69" date="Tue Dec 05 15:19:27 EST 2023" docOffset="242" starttimestamp="1701807005597" timestamp="561812" />
  <Command __id="323" _type="ShellCommand" date="Tue Dec 05 15:19:28 EST 2023" starttimestamp="1701807005597" timestamp="562728" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="324" _type="ShellCommand" date="Tue Dec 05 15:19:50 EST 2023" starttimestamp="1701807005597" timestamp="584731" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="325" _type="MoveCaretCommand" caretOffset="692" date="Tue Dec 05 15:20:00 EST 2023" docOffset="865" starttimestamp="1701807005597" timestamp="594657" />
  <Command __id="326" _type="MoveCaretCommand" caretOffset="106" date="Tue Dec 05 15:20:03 EST 2023" docOffset="279" starttimestamp="1701807005597" timestamp="597967" />
  <Command __id="327" _type="MoveCaretCommand" caretOffset="121" date="Tue Dec 05 15:20:04 EST 2023" docOffset="294" starttimestamp="1701807005597" timestamp="598440" />
  <Command __id="328" _type="ShellCommand" date="Tue Dec 05 15:20:04 EST 2023" starttimestamp="1701807005597" timestamp="598896" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="329" _type="ShellCommand" date="Tue Dec 05 15:20:10 EST 2023" starttimestamp="1701807005597" timestamp="605262" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="330" _type="SelectTextCommand" caretOffset="144" date="Tue Dec 05 15:20:13 EST 2023" end="144" start="120" starttimestamp="1701807005597" timestamp="607434" />
  <Command __id="331" _type="ShellCommand" date="Tue Dec 05 15:20:13 EST 2023" starttimestamp="1701807005597" timestamp="607723" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="313" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:19:17 EST 2023" docASTNodeCount="155" docActiveCodeLength="925" docExpressionCount="111" docLength="925" projectName="Assignment5" starttimestamp="1701807005597" timestamp="551540">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!expr.getHead().isAtom()){			Environment childEnvironment = environment.newChild();			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="332" _type="ShellCommand" date="Tue Dec 05 15:20:17 EST 2023" starttimestamp="1701807005597" timestamp="612144" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="333" _type="MoveCaretCommand" caretOffset="206" date="Tue Dec 05 15:20:18 EST 2023" docOffset="379" starttimestamp="1701807005597" timestamp="612721" />
  <Command __id="334" _type="MoveCaretCommand" caretOffset="363" date="Tue Dec 05 15:20:18 EST 2023" docOffset="536" starttimestamp="1701807005597" timestamp="613265" />
  <Command __id="335" _type="MoveCaretCommand" caretOffset="646" date="Tue Dec 05 15:20:19 EST 2023" docOffset="819" starttimestamp="1701807005597" timestamp="614082" />
  <Command __id="336" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:20:36 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="631306">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="337" _type="MoveCaretCommand" caretOffset="107" date="Tue Dec 05 15:20:36 EST 2023" docOffset="365" starttimestamp="1701807005597" timestamp="631379" />
  <Command __id="338" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:20:39 EST 2023" docASTNodeCount="155" docActiveCodeLength="925" docExpressionCount="111" docLength="925" projectName="Assignment5" starttimestamp="1701807005597" timestamp="634353">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!expr.getHead().isAtom()){			Environment childEnvironment = environment.newChild();			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="339" _type="MoveCaretCommand" caretOffset="646" date="Tue Dec 05 15:20:40 EST 2023" docOffset="819" starttimestamp="1701807005597" timestamp="634435" />
  <Command __id="340" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:20:40 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="634929">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="341" _type="MoveCaretCommand" caretOffset="107" date="Tue Dec 05 15:20:40 EST 2023" docOffset="365" starttimestamp="1701807005597" timestamp="635007" />
  <Command __id="342" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:20:42 EST 2023" docASTNodeCount="96" docActiveCodeLength="627" docExpressionCount="69" docLength="627" projectName="Assignment5" starttimestamp="1701807005597" timestamp="636802">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/index.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.Main;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.IdentifierAtomFactory;import main.lisp.evaluator.ExpressionEvaluatorFactory;import main.lisp.evaluator.environment.EnvironmentFactory;public class index {	public static void main(String[] args) {		ExpressionEvaluatorFactory.setClass(BasicExpressionEvaluatorImpl.class);		IdentifierAtomFactory.setClass(IdentifierAtomImpl.class);		EnvironmentFactory.setClass(EnvironmentImpl.class);		OperationRegistererImpl.registerAll();		ExpressionFactory.setClass(BasicExpressionImpl.class);		Main.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="343" _type="SelectTextCommand" caretOffset="165" date="Tue Dec 05 15:20:42 EST 2023" end="165" start="137" starttimestamp="1701807005597" timestamp="636867" />
  <Command __id="345" _type="MoveCaretCommand" caretOffset="198" date="Tue Dec 05 15:20:43 EST 2023" docOffset="411" starttimestamp="1701807005597" timestamp="637440" />
  <Command __id="347" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:20:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="642289" type="Run" />
  <Command __id="348" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:20:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="642289" type="Run" />
  <Command __id="349" _type="ShellCommand" date="Tue Dec 05 15:20:49 EST 2023" starttimestamp="1701807005597" timestamp="643682" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="350" _type="ShellCommand" date="Tue Dec 05 15:20:50 EST 2023" starttimestamp="1701807005597" timestamp="644525" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="351" _type="PasteCommand" date="Tue Dec 05 15:20:50 EST 2023" starttimestamp="1701807005597" timestamp="645343" />
  <Command __id="352" _type="ConsoleInput" date="Tue Dec 05 15:20:51 EST 2023" starttimestamp="1701807005597" timestamp="645691" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))
]]></outputString>
  </Command>
  <Command __id="353" _type="ConsoleOutput" date="Tue Dec 05 15:20:51 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="645702" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="354" _type="ConsoleInput" date="Tue Dec 05 15:20:55 EST 2023" starttimestamp="1701807005597" timestamp="649963" type="Exception">
    <outputString><![CDATA[(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="355" _type="ConsoleOutput" date="Tue Dec 05 15:20:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="649969" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="357" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:20:55 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="649972" type="Run" />
  <Command __id="358" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:20:55 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="649972" type="Run" />
  <Command __id="356" _type="ConsoleOutput" date="Tue Dec 05 15:20:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="649982" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator"), Diff(INSERT,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="359" _type="MoveCaretCommand" caretOffset="527" date="Tue Dec 05 15:21:01 EST 2023" docOffset="740" starttimestamp="1701807005597" timestamp="655959" />
  <Command __id="360" _type="MoveCaretCommand" caretOffset="441" date="Tue Dec 05 15:21:01 EST 2023" docOffset="654" starttimestamp="1701807005597" timestamp="656335" />
  <Command __id="383" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:21:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="668430" type="Run" />
  <Command __id="384" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:21:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="668430" type="Run" />
  <Command __id="385" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:21:14 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="668536" type="Run" />
  <Command __id="386" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:21:14 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="668553" type="Run" />
  <Command __id="387" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:21:14 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="668701" type="Run" />
  <Command __id="388" _type="PasteCommand" date="Tue Dec 05 15:21:17 EST 2023" starttimestamp="1701807005597" timestamp="671485" />
  <Command __id="389" _type="PasteCommand" date="Tue Dec 05 15:21:21 EST 2023" starttimestamp="1701807005597" timestamp="675549" />
  <Command __id="344" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:20:42 EST 2023" docASTNodeCount="137" docActiveCodeLength="781" docExpressionCount="99" docLength="962" projectName="Assignment5" starttimestamp="1701807005597" timestamp="637368">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);//        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();//        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="392" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:21:25 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="679975" type="Run" />
  <Command __id="397" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:21:28 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="683325" type="Run" />
  <Command __id="398" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:21:28 EST 2023" starttimestamp="1701807005597" timestamp="683326" />
  <Command __id="399" _type="ConsoleOutput" date="Tue Dec 05 15:21:28 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="683334" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="403" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:21:45 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="699864" type="Run" />
  <Command __id="404" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:21:45 EST 2023" starttimestamp="1701807005597" timestamp="699864" />
  <Command __id="405" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 15:21:49 EST 2023" starttimestamp="1701807005597" timestamp="703516" />
  <Command __id="406" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:21:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="703521" type="Run" />
  <Command __id="409" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:21:51 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="706175" type="Run" />
  <Command __id="410" _type="ShellCommand" date="Tue Dec 05 15:21:55 EST 2023" starttimestamp="1701807005597" timestamp="709653" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="411" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:21:56 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="710430" type="Run" />
  <Command __id="420" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:22:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="737366" type="Run" />
  <Command __id="421" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:22:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="737366" type="Run" />
  <Command __id="422" _type="ConsoleInput" date="Tue Dec 05 15:22:33 EST 2023" starttimestamp="1701807005597" timestamp="747970" type="Exception">
    <outputString><![CDATA[(lambda (x) x)( 1)
]]></outputString>
  </Command>
  <Command __id="423" _type="ConsoleOutput" date="Tue Dec 05 15:22:33 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="747977" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="424" _type="CopyCommand" date="Tue Dec 05 15:22:39 EST 2023" starttimestamp="1701807005597" timestamp="754108" />
  <Command __id="425" _type="PasteCommand" date="Tue Dec 05 15:22:40 EST 2023" starttimestamp="1701807005597" timestamp="754544" />
  <Command __id="426" _type="ConsoleOutput" date="Tue Dec 05 15:22:42 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="756499" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X 1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"LAMBDA (X) X "), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="427" _type="SelectTextCommand" caretOffset="513" date="Tue Dec 05 15:22:59 EST 2023" end="513" start="499" starttimestamp="1701807005597" timestamp="773632" />
  <Command __id="428" _type="MoveCaretCommand" caretOffset="499" date="Tue Dec 05 15:23:10 EST 2023" docOffset="712" starttimestamp="1701807005597" timestamp="785234" />
  <Command __id="429" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:23:11 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="786170" type="Debug" />
  <Command __id="430" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:23:11 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="786170" type="Run" />
  <Command __id="431" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:23:11 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="786170" type="Debug" />
  <Command __id="432" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:23:11 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="786170" type="Run" />
  <Command __id="433" _type="MoveCaretCommand" caretOffset="560" date="Tue Dec 05 15:23:23 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="797612" />
  <Command __id="434" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 15:23:32 EST 2023" docOffset="821" starttimestamp="1701807005597" timestamp="806853" />
  <Command __id="435" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 15:23:32 EST 2023" docOffset="821" starttimestamp="1701807005597" timestamp="806977" />
  <Command __id="436" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 15:23:33 EST 2023" docOffset="821" starttimestamp="1701807005597" timestamp="807521" />
  <Command __id="437" _type="SelectTextCommand" caretOffset="628" date="Tue Dec 05 15:23:33 EST 2023" end="628" start="600" starttimestamp="1701807005597" timestamp="807643" />
  <Command __id="438" _type="ShellCommand" date="Tue Dec 05 15:23:34 EST 2023" starttimestamp="1701807005597" timestamp="808504" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="440" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:27:29 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1043656" type="Run" />
  <Command __id="441" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:27:29 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1043656" type="Run" />
  <Command __id="442" _type="ShellCommand" date="Tue Dec 05 15:27:30 EST 2023" starttimestamp="1701807005597" timestamp="1045325" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="443" _type="ShellCommand" date="Tue Dec 05 15:27:32 EST 2023" starttimestamp="1701807005597" timestamp="1046594" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="444" _type="PasteCommand" date="Tue Dec 05 15:27:32 EST 2023" starttimestamp="1701807005597" timestamp="1047358" />
  <Command __id="445" _type="ConsoleInput" date="Tue Dec 05 15:27:33 EST 2023" starttimestamp="1701807005597" timestamp="1047759" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))
]]></outputString>
  </Command>
  <Command __id="446" _type="ConsoleOutput" date="Tue Dec 05 15:27:33 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="1047769" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X"), Diff(DELETE," 1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="454" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:27:47 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="1061499">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="457" _type="ShellCommand" date="Tue Dec 05 15:27:48 EST 2023" starttimestamp="1701807005597" timestamp="1062758" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="459" _type="SelectTextCommand" caretOffset="628" date="Tue Dec 05 15:27:51 EST 2023" end="628" start="600" starttimestamp="1701807005597" timestamp="1065632" />
  <Command __id="460" _type="ShellCommand" date="Tue Dec 05 15:27:52 EST 2023" starttimestamp="1701807005597" timestamp="1067327" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="461" _type="ShellCommand" date="Tue Dec 05 15:27:53 EST 2023" starttimestamp="1701807005597" timestamp="1067944" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="462" _type="ShellCommand" date="Tue Dec 05 15:27:58 EST 2023" starttimestamp="1701807005597" timestamp="1072808" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="463" _type="ShellCommand" date="Tue Dec 05 15:28:03 EST 2023" starttimestamp="1701807005597" timestamp="1077867" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="464" _type="MoveCaretCommand" caretOffset="560" date="Tue Dec 05 15:28:12 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="1087379" />
  <Command __id="465" _type="MoveCaretCommand" caretOffset="610" date="Tue Dec 05 15:28:13 EST 2023" docOffset="823" starttimestamp="1701807005597" timestamp="1087830" />
  <Command __id="466" _type="MoveCaretCommand" caretOffset="715" date="Tue Dec 05 15:28:13 EST 2023" docOffset="928" starttimestamp="1701807005597" timestamp="1088338" />
  <Command __id="467" _type="MoveCaretCommand" caretOffset="612" date="Tue Dec 05 15:28:14 EST 2023" docOffset="825" starttimestamp="1701807005597" timestamp="1088983" />
  <Command __id="468" _type="MoveCaretCommand" caretOffset="716" date="Tue Dec 05 15:28:15 EST 2023" docOffset="929" starttimestamp="1701807005597" timestamp="1089451" />
  <Command __id="469" _type="MoveCaretCommand" caretOffset="612" date="Tue Dec 05 15:28:15 EST 2023" docOffset="825" starttimestamp="1701807005597" timestamp="1089925" />
  <Command __id="470" _type="MoveCaretCommand" caretOffset="714" date="Tue Dec 05 15:28:15 EST 2023" docOffset="927" starttimestamp="1701807005597" timestamp="1090365" />
  <Command __id="471" _type="MoveCaretCommand" caretOffset="716" date="Tue Dec 05 15:28:16 EST 2023" docOffset="929" starttimestamp="1701807005597" timestamp="1090891" />
  <Command __id="472" _type="MoveCaretCommand" caretOffset="714" date="Tue Dec 05 15:28:17 EST 2023" docOffset="927" starttimestamp="1701807005597" timestamp="1091407" />
  <Command __id="473" _type="MoveCaretCommand" caretOffset="611" date="Tue Dec 05 15:28:17 EST 2023" docOffset="824" starttimestamp="1701807005597" timestamp="1091947" />
  <Command __id="474" _type="MoveCaretCommand" caretOffset="716" date="Tue Dec 05 15:28:18 EST 2023" docOffset="929" starttimestamp="1701807005597" timestamp="1092547" />
  <Command __id="475" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 15:28:18 EST 2023" docOffset="826" starttimestamp="1701807005597" timestamp="1093007" />
  <Command __id="458" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:27:51 EST 2023" docASTNodeCount="137" docActiveCodeLength="781" docExpressionCount="99" docLength="962" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1065581">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);//        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();//        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="476" _type="MoveCaretCommand" caretOffset="716" date="Tue Dec 05 15:28:20 EST 2023" docOffset="929" starttimestamp="1701807005597" timestamp="1095074" />
  <Command __id="477" _type="MoveCaretCommand" caretOffset="726" date="Tue Dec 05 15:28:21 EST 2023" docOffset="939" starttimestamp="1701807005597" timestamp="1095567" />
  <Command __id="479" _type="MoveCaretCommand" caretOffset="726" date="Tue Dec 05 15:28:27 EST 2023" docOffset="939" starttimestamp="1701807005597" timestamp="1101544" />
  <Command __id="480" _type="ShellCommand" date="Tue Dec 05 15:28:31 EST 2023" starttimestamp="1701807005597" timestamp="1106273" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="482" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:30:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1241686" type="Run" />
  <Command __id="483" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:30:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1241686" type="Run" />
  <Command __id="484" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:30:47 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1241895" type="Run" />
  <Command __id="485" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:30:47 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1241912" type="Run" />
  <Command __id="486" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:30:47 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1242065" type="Run" />
  <Command __id="487" _type="ShellCommand" date="Tue Dec 05 15:30:48 EST 2023" starttimestamp="1701807005597" timestamp="1242826" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="488" _type="ShellCommand" date="Tue Dec 05 15:30:50 EST 2023" starttimestamp="1701807005597" timestamp="1245351" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="489" _type="PasteCommand" date="Tue Dec 05 15:30:51 EST 2023" starttimestamp="1701807005597" timestamp="1245710" />
  <Command __id="490" _type="ConsoleOutput" date="Tue Dec 05 15:30:51 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="1246330" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:18)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:23)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:23)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="491" _type="ConsoleInput" date="Tue Dec 05 15:30:55 EST 2023" starttimestamp="1701807005597" timestamp="1249792" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="492" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:30:56 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1250558" type="Run" />
  <Command __id="493" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:30:58 EST 2023" starttimestamp="1701807005597" timestamp="1252522" />
  <Command __id="494" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:30:58 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1252523" type="Run" />
  <Command __id="495" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:30:58 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1253026" type="Run" />
  <Command __id="496" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:30:58 EST 2023" starttimestamp="1701807005597" timestamp="1253027" />
  <Command __id="497" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:30:59 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1253704" type="Run" />
  <Command __id="498" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:30:59 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1253705" type="Run" />
  <Command __id="499" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:31:00 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1254528" type="Run" />
  <Command __id="500" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:31:00 EST 2023" starttimestamp="1701807005597" timestamp="1254528" />
  <Command __id="501" _type="ExceptionCommand" date="Tue Dec 05 15:31:00 EST 2023" starttimestamp="1701807005597" timestamp="1254530" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.NullPointerException
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="502" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:31:00 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1254535" type="Debug" />
  <Command __id="503" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:31:00 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1254535" type="Run" />
  <Command __id="504" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:31:00 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1254535" type="Debug" />
  <Command __id="505" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:31:00 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1254535" type="Run" />
  <Command __id="508" _type="MoveCaretCommand" caretOffset="361" date="Tue Dec 05 15:32:38 EST 2023" docOffset="574" starttimestamp="1701807005597" timestamp="1352838" />
  <Command __id="509" _type="ShellCommand" date="Tue Dec 05 15:32:41 EST 2023" starttimestamp="1701807005597" timestamp="1355933" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="506" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:32:38 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="1352682">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="507" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:32:38 EST 2023" docASTNodeCount="137" docActiveCodeLength="781" docExpressionCount="99" docLength="962" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1352771">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);//        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();//        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="510" _type="ShellCommand" date="Tue Dec 05 15:32:44 EST 2023" starttimestamp="1701807005597" timestamp="1358956" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="511" _type="MoveCaretCommand" caretOffset="454" date="Tue Dec 05 15:32:45 EST 2023" docOffset="667" starttimestamp="1701807005597" timestamp="1359842" />
  <Command __id="512" _type="SelectTextCommand" caretOffset="458" date="Tue Dec 05 15:32:45 EST 2023" end="458" start="448" starttimestamp="1701807005597" timestamp="1359980" />
  <Command __id="514" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 15:32:59 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="1373872" />
  <Command __id="515" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 15:32:59 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="1373878" />
  <Command __id="516" _type="SelectTextCommand" caretOffset="458" date="Tue Dec 05 15:32:59 EST 2023" end="458" start="448" starttimestamp="1701807005597" timestamp="1374003" />
  <Command __id="517" _type="SelectTextCommand" caretOffset="458" date="Tue Dec 05 15:32:59 EST 2023" end="458" start="448" starttimestamp="1701807005597" timestamp="1374004" />
  <Command __id="518" _type="CopyCommand" date="Tue Dec 05 15:33:07 EST 2023" starttimestamp="1701807005597" timestamp="1382089" />
  <Command __id="519" _type="ShellCommand" date="Tue Dec 05 15:33:08 EST 2023" starttimestamp="1701807005597" timestamp="1382802" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="520" _type="ShellCommand" date="Tue Dec 05 15:34:05 EST 2023" starttimestamp="1701807005597" timestamp="1439657" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="521" _type="ShellCommand" date="Tue Dec 05 15:34:05 EST 2023" starttimestamp="1701807005597" timestamp="1440175" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="522" _type="ShellCommand" date="Tue Dec 05 15:34:06 EST 2023" starttimestamp="1701807005597" timestamp="1441220" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="523" _type="MoveCaretCommand" caretOffset="124" date="Tue Dec 05 15:34:06 EST 2023" docOffset="337" starttimestamp="1701807005597" timestamp="1441305" />
  <Command __id="524" _type="MoveCaretCommand" caretOffset="124" date="Tue Dec 05 15:34:06 EST 2023" docOffset="337" starttimestamp="1701807005597" timestamp="1441305" />
  <Command __id="525" _type="ShellCommand" date="Tue Dec 05 15:34:07 EST 2023" starttimestamp="1701807005597" timestamp="1442056" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="526" _type="ShellCommand" date="Tue Dec 05 15:34:10 EST 2023" starttimestamp="1701807005597" timestamp="1444745" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="527" _type="ShellCommand" date="Tue Dec 05 15:34:10 EST 2023" starttimestamp="1701807005597" timestamp="1444756" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="528" _type="ShellCommand" date="Tue Dec 05 15:36:50 EST 2023" starttimestamp="1701807005597" timestamp="1604685" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="529" _type="ShellCommand" date="Tue Dec 05 15:36:52 EST 2023" starttimestamp="1701807005597" timestamp="1607048" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="530" _type="ShellCommand" date="Tue Dec 05 15:36:53 EST 2023" starttimestamp="1701807005597" timestamp="1607609" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="531" _type="ShellCommand" date="Tue Dec 05 15:36:54 EST 2023" starttimestamp="1701807005597" timestamp="1608807" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="532" _type="ShellCommand" date="Tue Dec 05 15:37:08 EST 2023" starttimestamp="1701807005597" timestamp="1622523" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="533" _type="ShellCommand" date="Tue Dec 05 15:37:09 EST 2023" starttimestamp="1701807005597" timestamp="1623740" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="534" _type="ShellCommand" date="Tue Dec 05 15:37:10 EST 2023" starttimestamp="1701807005597" timestamp="1624673" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="535" _type="ShellCommand" date="Tue Dec 05 15:37:11 EST 2023" starttimestamp="1701807005597" timestamp="1625805" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="537" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:37:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1651789" type="Run" />
  <Command __id="538" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:37:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1651789" type="Run" />
  <Command __id="539" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:37:37 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1651999" type="Run" />
  <Command __id="540" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:37:37 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1652017" type="Run" />
  <Command __id="541" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:37:37 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1652172" type="Run" />
  <Command __id="547" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:37:40 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1654667" type="Run" />
  <Command __id="548" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:37:40 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1654667" type="Run" />
  <Command __id="549" _type="ShellCommand" date="Tue Dec 05 15:37:40 EST 2023" starttimestamp="1701807005597" timestamp="1655303" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="550" _type="ShellCommand" date="Tue Dec 05 15:37:41 EST 2023" starttimestamp="1701807005597" timestamp="1655921" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="551" _type="ShellCommand" date="Tue Dec 05 15:37:42 EST 2023" starttimestamp="1701807005597" timestamp="1656663" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="552" _type="ShellCommand" date="Tue Dec 05 15:37:46 EST 2023" starttimestamp="1701807005597" timestamp="1660798" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="553" _type="PasteCommand" date="Tue Dec 05 15:37:47 EST 2023" starttimestamp="1701807005597" timestamp="1661936" />
  <Command __id="554" _type="ExceptionCommand" date="Tue Dec 05 15:37:47 EST 2023" starttimestamp="1701807005597" timestamp="1662237" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.NullPointerException
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="555" _type="ConsoleOutput" date="Tue Dec 05 15:37:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="1662240" type="ConsoleOutput">
    <outputString><![CDATA[
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="556" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:37:47 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1662255" type="Debug" />
  <Command __id="557" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:37:47 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1662255" type="Run" />
  <Command __id="558" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:37:47 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1662255" type="Debug" />
  <Command __id="559" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:37:47 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1662255" type="Run" />
  <Command __id="560" _type="ShellCommand" date="Tue Dec 05 15:38:02 EST 2023" starttimestamp="1701807005597" timestamp="1676979" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="561" _type="ShellCommand" date="Tue Dec 05 15:38:13 EST 2023" starttimestamp="1701807005597" timestamp="1688188" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="563" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:38:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1692632" type="Run" />
  <Command __id="564" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:38:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1692632" type="Run" />
  <Command __id="565" _type="PasteCommand" date="Tue Dec 05 15:38:18 EST 2023" starttimestamp="1701807005597" timestamp="1693294" />
  <Command __id="566" _type="ConsoleInput" date="Tue Dec 05 15:38:21 EST 2023" starttimestamp="1701807005597" timestamp="1695451" type="Exception">
    <outputString><![CDATA[(lambda (x) x) 1)(
]]></outputString>
  </Command>
  <Command __id="567" _type="ConsoleOutput" date="Tue Dec 05 15:38:21 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="1695459" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="568" _type="ShellCommand" date="Tue Dec 05 15:38:23 EST 2023" starttimestamp="1701807005597" timestamp="1698165" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="569" _type="ShellCommand" date="Tue Dec 05 15:38:36 EST 2023" starttimestamp="1701807005597" timestamp="1711350" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="570" _type="MoveCaretCommand" caretOffset="537" date="Tue Dec 05 15:38:38 EST 2023" docOffset="750" starttimestamp="1701807005597" timestamp="1713063" />
  <Command __id="571" _type="MoveCaretCommand" caretOffset="537" date="Tue Dec 05 15:38:38 EST 2023" docOffset="750" starttimestamp="1701807005597" timestamp="1713063" />
  <Command __id="572" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 15:38:38 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="1713193" />
  <Command __id="573" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 15:38:38 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="1713193" />
  <Command __id="574" _type="MoveCaretCommand" caretOffset="583" date="Tue Dec 05 15:38:58 EST 2023" docOffset="796" starttimestamp="1701807005597" timestamp="1732775" />
  <Command __id="575" _type="MoveCaretCommand" caretOffset="583" date="Tue Dec 05 15:38:58 EST 2023" docOffset="796" starttimestamp="1701807005597" timestamp="1732775" />
  <Command __id="576" _type="SelectTextCommand" caretOffset="599" date="Tue Dec 05 15:38:58 EST 2023" end="599" start="571" starttimestamp="1701807005597" timestamp="1732862" />
  <Command __id="577" _type="SelectTextCommand" caretOffset="599" date="Tue Dec 05 15:38:58 EST 2023" end="599" start="571" starttimestamp="1701807005597" timestamp="1732862" />
  <Command __id="578" _type="MoveCaretCommand" caretOffset="538" date="Tue Dec 05 15:38:59 EST 2023" docOffset="751" starttimestamp="1701807005597" timestamp="1733528" />
  <Command __id="579" _type="MoveCaretCommand" caretOffset="538" date="Tue Dec 05 15:38:59 EST 2023" docOffset="751" starttimestamp="1701807005597" timestamp="1733528" />
  <Command __id="580" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 15:38:59 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="1733678" />
  <Command __id="581" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 15:38:59 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="1733678" />
  <Command __id="582" _type="MoveCaretCommand" caretOffset="536" date="Tue Dec 05 15:39:16 EST 2023" docOffset="749" starttimestamp="1701807005597" timestamp="1751044" />
  <Command __id="583" _type="MoveCaretCommand" caretOffset="536" date="Tue Dec 05 15:39:16 EST 2023" docOffset="749" starttimestamp="1701807005597" timestamp="1751044" />
  <Command __id="584" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 15:39:16 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="1751167" />
  <Command __id="585" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 15:39:16 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="1751168" />
  <Command __id="586" _type="MoveCaretCommand" caretOffset="538" date="Tue Dec 05 15:39:17 EST 2023" docOffset="751" starttimestamp="1701807005597" timestamp="1751878" />
  <Command __id="587" _type="MoveCaretCommand" caretOffset="538" date="Tue Dec 05 15:39:17 EST 2023" docOffset="751" starttimestamp="1701807005597" timestamp="1751879" />
  <Command __id="588" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 15:39:17 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="1752019" />
  <Command __id="589" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 15:39:17 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="1752019" />
  <Command __id="590" _type="ShellCommand" date="Tue Dec 05 15:40:13 EST 2023" starttimestamp="1701807005597" timestamp="1807964" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="592" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:42:48 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1962615" type="Run" />
  <Command __id="593" _type="ShellCommand" date="Tue Dec 05 15:42:50 EST 2023" starttimestamp="1701807005597" timestamp="1965316" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="594" _type="ShellCommand" date="Tue Dec 05 15:42:56 EST 2023" starttimestamp="1701807005597" timestamp="1970489" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="595" _type="PasteCommand" date="Tue Dec 05 15:42:56 EST 2023" starttimestamp="1701807005597" timestamp="1970962" />
  <Command __id="596" _type="ConsoleInput" date="Tue Dec 05 15:42:57 EST 2023" starttimestamp="1701807005597" timestamp="1972303" type="Exception">
    <outputString><![CDATA[(funcall (lambda (x) x) 1)
]]></outputString>
  </Command>
  <Command __id="597" _type="ExceptionCommand" date="Tue Dec 05 15:42:57 EST 2023" starttimestamp="1701807005597" timestamp="1972310" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="598" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:42:57 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1972315" type="Debug" />
  <Command __id="599" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:42:57 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1972315" type="Run" />
  <Command __id="600" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:42:57 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="1972315" type="Debug" />
  <Command __id="601" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:42:57 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1972315" type="Run" />
  <Command __id="602" _type="ConsoleOutput" date="Tue Dec 05 15:42:57 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="1972316" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="603" _type="ShellCommand" date="Tue Dec 05 15:43:05 EST 2023" starttimestamp="1701807005597" timestamp="1979857" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="513" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:32:59 EST 2023" docASTNodeCount="137" docActiveCodeLength="781" docExpressionCount="99" docLength="962" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1373822">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);//        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();//        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="605" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:43:16 EST 2023" docASTNodeCount="236" docActiveCodeLength="2081" docExpressionCount="163" docLength="2081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1991358">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BasicOperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}		public static void registerAdvance() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("SETQ", new SetqEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LAMBDA", new LambdaEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("FUNCALL", new FuncallEvaluator());	}		@Override	public void registerOperations() {		registerAll();	}		public static void registerAll() {		registerBasic();		registerArithmetic();		registerLogic();		registerAdvance();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="604" _type="ShellCommand" date="Tue Dec 05 15:43:16 EST 2023" starttimestamp="1701807005597" timestamp="1991282" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="606" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:43:17 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="1991416" />
  <Command __id="608" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 15:43:18 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="1992485" />
  <Command __id="609" _type="ShellCommand" date="Tue Dec 05 15:43:18 EST 2023" starttimestamp="1701807005597" timestamp="1992692" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="610" _type="ShellCommand" date="Tue Dec 05 15:43:18 EST 2023" starttimestamp="1701807005597" timestamp="1993251" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="611" _type="ShellCommand" date="Tue Dec 05 15:43:19 EST 2023" starttimestamp="1701807005597" timestamp="1994311" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="612" _type="ShellCommand" date="Tue Dec 05 15:43:52 EST 2023" starttimestamp="1701807005597" timestamp="2026899" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="613" _type="ShellCommand" date="Tue Dec 05 15:43:54 EST 2023" starttimestamp="1701807005597" timestamp="2029251" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="607" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:43:18 EST 2023" docASTNodeCount="137" docActiveCodeLength="781" docExpressionCount="99" docLength="962" projectName="Assignment5" starttimestamp="1701807005597" timestamp="1992426">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);//        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();//        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="614" _type="ShellCommand" date="Tue Dec 05 15:44:13 EST 2023" starttimestamp="1701807005597" timestamp="2047430" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="615" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:44:14 EST 2023" docASTNodeCount="166" docActiveCodeLength="1001" docExpressionCount="124" docLength="1001" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2048774">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;"), Diff(INSERT,"import main.lisp.evaluator.BuiltinOperationManagerSingleton;"), Diff(EQUAL,"import main.lisp.evaluator.Environment;"), Diff(DELETE,""), Diff(EQUAL,"import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!"), Diff(INSERT,"("), Diff(EQUAL,"expr.getHead()"), Diff(DELETE,".is"), Diff(INSERT," instanceof Identifier"), Diff(EQUAL,"Atom"), Diff(DELETE,"("), Diff(EQUAL,")){			Environment childEnvironment = environment.newChild();			"), Diff(DELETE,"LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			"), Diff(EQUAL,"Lambda lambda = (Lambda)"), Diff(DELETE,"lambdaEvaluator.eval("), Diff(EQUAL,"expr.getHead()"), Diff(DELETE,", "), Diff(INSERT,".eval("), Diff(EQUAL,"environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return "), Diff(DELETE,"super"), Diff(INSERT,"BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString())"), Diff(EQUAL,".eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)expr.getHead().eval(environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="618" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:44:15 EST 2023" starttimestamp="1701807005597" timestamp="2049843" />
  <Command __id="619" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:44:15 EST 2023" starttimestamp="1701807005597" timestamp="2049858" />
  <Command __id="620" _type="MoveCaretCommand" caretOffset="596" date="Tue Dec 05 15:44:16 EST 2023" docOffset="596" starttimestamp="1701807005597" timestamp="2050514" />
  <Command __id="621" _type="MoveCaretCommand" caretOffset="583" date="Tue Dec 05 15:44:16 EST 2023" docOffset="583" starttimestamp="1701807005597" timestamp="2051243" />
  <DocumentChange __id="617" _type="Replace" date="Tue Dec 05 15:44:14 EST 2023" docASTNodeCount="166" docActiveCodeLength="1001" docExpressionCount="124" docLength="1001" endLine="27" insertionLength="1001" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="1001" offset="0" startLine="0" starttimestamp="1701807005597" timestamp="2048920">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)expr.getHead().eval(environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)expr.getHead().eval(environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></insertedText>
  </DocumentChange>
  <Command __id="622" _type="MoveCaretCommand" caretOffset="596" date="Tue Dec 05 15:44:18 EST 2023" docOffset="596" starttimestamp="1701807005597" timestamp="2052427" />
  <Command __id="624" _type="SelectTextCommand" caretOffset="2292" date="Tue Dec 05 15:44:28 EST 2023" end="2292" start="2263" starttimestamp="1701807005597" timestamp="2063014" />
  <Command __id="625" _type="MoveCaretCommand" caretOffset="3052" date="Tue Dec 05 15:44:34 EST 2023" docOffset="3288" starttimestamp="1701807005597" timestamp="2069341" />
  <Command __id="626" _type="SelectTextCommand" caretOffset="3057" date="Tue Dec 05 15:44:35 EST 2023" end="3057" start="3039" starttimestamp="1701807005597" timestamp="2069481" />
  <Command __id="623" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:44:28 EST 2023" docASTNodeCount="460" docActiveCodeLength="3317" docExpressionCount="226" docLength="3997" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2062952">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;	import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;import gradingTools.comp524f23.assignment6.ClassRegistryA6;public class ClassRegistryImpl implements ClassRegistryA6 {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}	@Override	public Class<? extends SExpression> getFunctionCallingSExpression() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getFunctionCallingSExpression'");	}	@Override	public Class<? extends Evaluator> getFunctionEvaluator() {		return FuncallEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLetEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getLetEvaluator'");	}	@Override	public Class<? extends Evaluator> getBasicFuncallEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getBasicFuncallEvaluator'");	}	@Override	public Class<? extends IdentifierAtom> getIdentifierAtomWithLookup() {		return IdentifierAtomImpl.class;	}	@Override	public Class<? extends SExpression> getLambdaCallingSExpression() {		return null;	}	@Override	public Class<? extends Evaluator> getLambdaEvaluator() {		return LambdaEvaluator.class;	}	@Override	public Class<? extends Environment> getNestedLexicalEnvironment() {		// TODO Auto-generated method stub		return EnvironmentImpl.class;	}	@Override	public Class<? extends Evaluator> getSetqEvaluator() {		return SetqEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getStatefulOperationRegisterer() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getStatefulOperationRegisterer'");	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="628" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:44:39 EST 2023" docASTNodeCount="109" docActiveCodeLength="673" docExpressionCount="71" docLength="673" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2074033">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import java.util.Optional;

import main.lisp.scanner.tokens.Token;
import main.lisp.evaluator.Environment;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class IdentifierAtomImpl extends IdentifierAtom implements SExpression{

    public IdentifierAtomImpl(String string) {
        super(string);
    }
    
    public IdentifierAtomImpl(Token token) {
        super(token);
     }

    @Override
    public SExpression eval(Environment var1){
        Optional<SExpression> retVal = var1.lookup(this);
        if(retVal.isPresent()) {
            return retVal.get();
        }
        return this;
    }
}
]]></snapshot>
  </Command>
  <Command __id="627" _type="MoveCaretCommand" caretOffset="3054" date="Tue Dec 05 15:44:39 EST 2023" docOffset="3290" starttimestamp="1701807005597" timestamp="2073416" />
  <Command __id="629" _type="SelectTextCommand" caretOffset="75" date="Tue Dec 05 15:44:39 EST 2023" end="75" start="57" starttimestamp="1701807005597" timestamp="2074122" />
  <Command __id="631" _type="MoveCaretCommand" caretOffset="3050" date="Tue Dec 05 15:45:08 EST 2023" docOffset="3286" starttimestamp="1701807005597" timestamp="2103270" />
  <Command __id="632" _type="MoveCaretCommand" caretOffset="2540" date="Tue Dec 05 15:45:17 EST 2023" docOffset="2776" starttimestamp="1701807005597" timestamp="2111723" />
  <Command __id="634" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:45:18 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="2112473" />
  <Command __id="636" _type="MoveCaretCommand" caretOffset="596" date="Tue Dec 05 15:45:18 EST 2023" docOffset="596" starttimestamp="1701807005597" timestamp="2113235" />
  <Command __id="639" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:45:30 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="2125258">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="640" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:45:30 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="2125318" />
  <Command __id="642" _type="MoveCaretCommand" caretOffset="504" date="Tue Dec 05 15:45:32 EST 2023" docOffset="504" starttimestamp="1701807005597" timestamp="2126893" />
  <Command __id="643" _type="ShellCommand" date="Tue Dec 05 15:45:41 EST 2023" starttimestamp="1701807005597" timestamp="2136331" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="644" _type="ShellCommand" date="Tue Dec 05 15:45:57 EST 2023" starttimestamp="1701807005597" timestamp="2151522" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="648" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:46:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2161695" type="Run" />
  <Command __id="649" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:46:07 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2161695" type="Run" />
  <Command __id="650" _type="ShellCommand" date="Tue Dec 05 15:46:08 EST 2023" starttimestamp="1701807005597" timestamp="2163257" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="651" _type="ShellCommand" date="Tue Dec 05 15:46:12 EST 2023" starttimestamp="1701807005597" timestamp="2166670" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="652" _type="ExceptionCommand" date="Tue Dec 05 15:46:13 EST 2023" starttimestamp="1701807005597" timestamp="2167615" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="653" _type="ConsoleOutput" date="Tue Dec 05 15:46:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2167620" type="ConsoleOutput">
    <outputString><![CDATA[	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶"), Diff(EQUAL,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)¶")]]]></diff>
  </Command>
  <Command __id="654" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:46:13 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2167631" type="Debug" />
  <Command __id="655" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:46:13 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2167631" type="Run" />
  <Command __id="656" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:46:13 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2167631" type="Debug" />
  <Command __id="657" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:46:13 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2167631" type="Run" />
  <Command __id="641" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:45:32 EST 2023" docASTNodeCount="166" docActiveCodeLength="1001" docExpressionCount="124" docLength="1001" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2126843">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)expr.getHead().eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="658" _type="ShellCommand" date="Tue Dec 05 15:46:15 EST 2023" starttimestamp="1701807005597" timestamp="2169832" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="659" _type="ShellCommand" date="Tue Dec 05 15:46:15 EST 2023" starttimestamp="1701807005597" timestamp="2170292" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="661" _type="MoveCaretCommand" caretOffset="489" date="Tue Dec 05 15:46:40 EST 2023" docOffset="489" starttimestamp="1701807005597" timestamp="2194703" />
  <Command __id="662" _type="MoveCaretCommand" caretOffset="489" date="Tue Dec 05 15:46:40 EST 2023" docOffset="489" starttimestamp="1701807005597" timestamp="2194705" />
  <Command __id="663" _type="SelectTextCommand" caretOffset="494" date="Tue Dec 05 15:46:40 EST 2023" end="494" start="484" starttimestamp="1701807005597" timestamp="2194779" />
  <Command __id="664" _type="SelectTextCommand" caretOffset="494" date="Tue Dec 05 15:46:40 EST 2023" end="494" start="484" starttimestamp="1701807005597" timestamp="2194779" />
  <Command __id="665" _type="MoveCaretCommand" caretOffset="510" date="Tue Dec 05 15:46:45 EST 2023" docOffset="510" starttimestamp="1701807005597" timestamp="2199816" />
  <Command __id="666" _type="MoveCaretCommand" caretOffset="510" date="Tue Dec 05 15:46:45 EST 2023" docOffset="510" starttimestamp="1701807005597" timestamp="2199816" />
  <Command __id="667" _type="MoveCaretCommand" caretOffset="468" date="Tue Dec 05 15:46:47 EST 2023" docOffset="468" starttimestamp="1701807005597" timestamp="2202206" />
  <Command __id="668" _type="MoveCaretCommand" caretOffset="468" date="Tue Dec 05 15:46:47 EST 2023" docOffset="468" starttimestamp="1701807005597" timestamp="2202206" />
  <Command __id="669" _type="MoveCaretCommand" caretOffset="718" date="Tue Dec 05 15:46:51 EST 2023" docOffset="718" starttimestamp="1701807005597" timestamp="2205595" />
  <Command __id="670" _type="MoveCaretCommand" caretOffset="718" date="Tue Dec 05 15:46:51 EST 2023" docOffset="718" starttimestamp="1701807005597" timestamp="2205596" />
  <Command __id="671" _type="MoveCaretCommand" caretOffset="506" date="Tue Dec 05 15:46:53 EST 2023" docOffset="506" starttimestamp="1701807005597" timestamp="2207769" />
  <Command __id="672" _type="MoveCaretCommand" caretOffset="506" date="Tue Dec 05 15:46:53 EST 2023" docOffset="506" starttimestamp="1701807005597" timestamp="2207769" />
  <Command __id="673" _type="SelectTextCommand" caretOffset="509" date="Tue Dec 05 15:46:53 EST 2023" end="509" start="495" starttimestamp="1701807005597" timestamp="2207915" />
  <Command __id="674" _type="SelectTextCommand" caretOffset="509" date="Tue Dec 05 15:46:53 EST 2023" end="509" start="495" starttimestamp="1701807005597" timestamp="2207915" />
  <Command __id="675" _type="MoveCaretCommand" caretOffset="510" date="Tue Dec 05 15:46:54 EST 2023" docOffset="510" starttimestamp="1701807005597" timestamp="2208783" />
  <Command __id="676" _type="MoveCaretCommand" caretOffset="510" date="Tue Dec 05 15:46:54 EST 2023" docOffset="510" starttimestamp="1701807005597" timestamp="2208784" />
  <Command __id="677" _type="MoveCaretCommand" caretOffset="509" date="Tue Dec 05 15:46:55 EST 2023" docOffset="509" starttimestamp="1701807005597" timestamp="2209583" />
  <Command __id="678" _type="MoveCaretCommand" caretOffset="509" date="Tue Dec 05 15:46:55 EST 2023" docOffset="509" starttimestamp="1701807005597" timestamp="2209584" />
  <Command __id="679" _type="MoveCaretCommand" caretOffset="483" date="Tue Dec 05 15:47:04 EST 2023" docOffset="483" starttimestamp="1701807005597" timestamp="2218887" />
  <Command __id="680" _type="MoveCaretCommand" caretOffset="483" date="Tue Dec 05 15:47:04 EST 2023" docOffset="483" starttimestamp="1701807005597" timestamp="2218888" />
  <Command __id="681" _type="MoveCaretCommand" caretOffset="592" date="Tue Dec 05 15:47:10 EST 2023" docOffset="592" starttimestamp="1701807005597" timestamp="2224658" />
  <Command __id="682" _type="MoveCaretCommand" caretOffset="592" date="Tue Dec 05 15:47:10 EST 2023" docOffset="592" starttimestamp="1701807005597" timestamp="2224658" />
  <Command __id="660" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:46:40 EST 2023" docASTNodeCount="166" docActiveCodeLength="1001" docExpressionCount="124" docLength="1001" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2194655">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)expr.getHead().eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="683" _type="MoveCaretCommand" caretOffset="598" date="Tue Dec 05 15:47:11 EST 2023" docOffset="598" starttimestamp="1701807005597" timestamp="2225818" />
  <Command __id="684" _type="MoveCaretCommand" caretOffset="598" date="Tue Dec 05 15:47:11 EST 2023" docOffset="598" starttimestamp="1701807005597" timestamp="2225818" />
  <DocumentChange __id="685" _type="Insert" date="Tue Dec 05 15:47:13 EST 2023" docASTNodeCount="167" docActiveCodeLength="1002" docExpressionCount="126" docLength="1002" length="1" offset="598" starttimestamp="1701807005597" timestamp="2228335">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <Command __id="686" _type="InsertStringCommand" date="Tue Dec 05 15:47:13 EST 2023" starttimestamp="1701807005597" timestamp="2228336" timestamp2="2228336">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="687" _type="InsertStringCommand" date="Tue Dec 05 15:47:13 EST 2023" starttimestamp="1701807005597" timestamp="2228336" timestamp2="2228336">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="688" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 15:47:14 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="2229238" />
  <Command __id="689" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 15:47:14 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="2229239" />
  <Command __id="691" _type="InsertStringCommand" date="Tue Dec 05 15:47:15 EST 2023" starttimestamp="1701807005597" timestamp="2229731" timestamp2="2229731">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="692" _type="InsertStringCommand" date="Tue Dec 05 15:47:15 EST 2023" starttimestamp="1701807005597" timestamp="2229731" timestamp2="2229731">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="693" _type="MoveCaretCommand" caretOffset="631" date="Tue Dec 05 15:47:15 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="2230191" />
  <Command __id="694" _type="MoveCaretCommand" caretOffset="631" date="Tue Dec 05 15:47:15 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="2230191" />
  <Command __id="700" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:47:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2235427" type="Run" />
  <Command __id="701" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:47:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2235427" type="Run" />
  <Command __id="702" _type="PasteCommand" date="Tue Dec 05 15:47:21 EST 2023" starttimestamp="1701807005597" timestamp="2236309" />
  <Command __id="703" _type="ExceptionCommand" date="Tue Dec 05 15:47:22 EST 2023" starttimestamp="1701807005597" timestamp="2236685" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="704" _type="ConsoleOutput" date="Tue Dec 05 15:47:22 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2236690" type="ConsoleOutput">
    <outputString><![CDATA[
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)¶")]]]></diff>
  </Command>
  <Command __id="705" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:47:22 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2236690" type="Debug" />
  <Command __id="706" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:47:22 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2236690" type="Run" />
  <Command __id="707" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:47:22 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2236690" type="Debug" />
  <Command __id="708" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:47:22 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2236690" type="Run" />
  <Command __id="709" _type="SelectTextCommand" caretOffset="632" date="Tue Dec 05 15:47:43 EST 2023" end="632" start="614" starttimestamp="1701807005597" timestamp="2257916" />
  <Command __id="710" _type="SelectTextCommand" caretOffset="632" date="Tue Dec 05 15:47:43 EST 2023" end="632" start="614" starttimestamp="1701807005597" timestamp="2257916" />
  <Command __id="711" _type="MoveCaretCommand" caretOffset="632" date="Tue Dec 05 15:47:43 EST 2023" docOffset="632" starttimestamp="1701807005597" timestamp="2258232" />
  <Command __id="712" _type="MoveCaretCommand" caretOffset="632" date="Tue Dec 05 15:47:43 EST 2023" docOffset="632" starttimestamp="1701807005597" timestamp="2258232" />
  <DocumentChange __id="690" _type="Insert" date="Tue Dec 05 15:47:15 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" length="1" offset="613" starttimestamp="1701807005597" timestamp="2229727">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="713" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 15:47:46 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="2260849" />
  <Command __id="714" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 15:47:46 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="2260849" />
  <Command __id="716" _type="InsertStringCommand" date="Tue Dec 05 15:47:48 EST 2023" starttimestamp="1701807005597" timestamp="2262876" timestamp2="2262876">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="717" _type="InsertStringCommand" date="Tue Dec 05 15:47:48 EST 2023" starttimestamp="1701807005597" timestamp="2262876" timestamp2="2262876">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="718" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 15:47:48 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="2262902" />
  <Command __id="723" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 15:47:50 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="2265230" />
  <Command __id="725" _type="InsertStringCommand" date="Tue Dec 05 15:47:50 EST 2023" starttimestamp="1701807005597" timestamp="2265256" timestamp2="2265256">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="726" _type="InsertStringCommand" date="Tue Dec 05 15:47:50 EST 2023" starttimestamp="1701807005597" timestamp="2265256" timestamp2="2265256">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="727" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 15:47:52 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="2266936" />
  <Command __id="736" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:47:57 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2271624" type="Run" />
  <Command __id="737" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:47:57 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2271624" type="Run" />
  <Command __id="738" _type="PasteCommand" date="Tue Dec 05 15:47:57 EST 2023" starttimestamp="1701807005597" timestamp="2272235" />
  <Command __id="739" _type="ExceptionCommand" date="Tue Dec 05 15:47:57 EST 2023" starttimestamp="1701807005597" timestamp="2272393" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="740" _type="ConsoleOutput" date="Tue Dec 05 15:47:57 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2272395" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶"), Diff(EQUAL,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)¶")]]]></diff>
  </Command>
  <Command __id="741" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:47:57 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2272398" type="Debug" />
  <Command __id="742" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:47:57 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2272398" type="Run" />
  <Command __id="743" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:47:57 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2272398" type="Debug" />
  <Command __id="744" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:47:57 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2272398" type="Run" />
  <Command __id="745" _type="SelectTextCommand" caretOffset="631" date="Tue Dec 05 15:48:02 EST 2023" end="631" start="613" starttimestamp="1701807005597" timestamp="2276879" />
  <Command __id="746" _type="SelectTextCommand" caretOffset="631" date="Tue Dec 05 15:48:02 EST 2023" end="631" start="613" starttimestamp="1701807005597" timestamp="2276880" />
  <Command __id="748" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:48:02 EST 2023" starttimestamp="1701807005597" timestamp="2277097" />
  <Command __id="749" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:48:02 EST 2023" starttimestamp="1701807005597" timestamp="2277097" />
  <Command __id="750" _type="MoveCaretCommand" caretOffset="391" date="Tue Dec 05 15:48:03 EST 2023" docOffset="391" starttimestamp="1701807005597" timestamp="2277631" />
  <Command __id="751" _type="MoveCaretCommand" caretOffset="391" date="Tue Dec 05 15:48:03 EST 2023" docOffset="391" starttimestamp="1701807005597" timestamp="2277631" />
  <Command __id="752" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 15:48:03 EST 2023" starttimestamp="1701807005597" timestamp="2277738" />
  <Command __id="753" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:48:03 EST 2023" starttimestamp="1701807005597" timestamp="2277840" />
  <Command __id="754" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:48:03 EST 2023" starttimestamp="1701807005597" timestamp="2277849" />
  <Command __id="755" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:48:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2278847" type="Run" />
  <Command __id="756" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:48:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2278847" type="Run" />
  <Command __id="757" _type="PasteCommand" date="Tue Dec 05 15:48:05 EST 2023" starttimestamp="1701807005597" timestamp="2279588" />
  <Command __id="758" _type="ConsoleOutput" date="Tue Dec 05 15:48:05 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2279724" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="759" _type="MoveCaretCommand" caretOffset="563" date="Tue Dec 05 15:48:26 EST 2023" docOffset="563" starttimestamp="1701807005597" timestamp="2301018" />
  <Command __id="760" _type="MoveCaretCommand" caretOffset="563" date="Tue Dec 05 15:48:26 EST 2023" docOffset="563" starttimestamp="1701807005597" timestamp="2301018" />
  <Command __id="761" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 15:48:27 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="2301403" />
  <Command __id="762" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 15:48:27 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="2301403" />
  <Command __id="763" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 15:48:29 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="2303439" />
  <Command __id="764" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 15:48:29 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="2303439" />
  <Command __id="765" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 15:48:29 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="2304398" />
  <Command __id="766" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 15:48:29 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="2304399" />
  <Command __id="768" _type="InsertStringCommand" date="Tue Dec 05 15:48:30 EST 2023" starttimestamp="1701807005597" timestamp="2305211" timestamp2="2305211">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="769" _type="InsertStringCommand" date="Tue Dec 05 15:48:30 EST 2023" starttimestamp="1701807005597" timestamp="2305211" timestamp2="2305211">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="770" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 15:48:30 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="2305222" />
  <Command __id="774" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 15:48:31 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="2305780" />
  <Command __id="776" _type="InsertStringCommand" date="Tue Dec 05 15:48:31 EST 2023" starttimestamp="1701807005597" timestamp="2305799" timestamp2="2305799">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="777" _type="InsertStringCommand" date="Tue Dec 05 15:48:31 EST 2023" starttimestamp="1701807005597" timestamp="2305799" timestamp2="2305799">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="778" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 15:48:32 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="2306567" />
  <Command __id="779" _type="MoveCaretCommand" caretOffset="633" date="Tue Dec 05 15:48:32 EST 2023" docOffset="633" starttimestamp="1701807005597" timestamp="2306574" />
  <Command __id="780" _type="MoveCaretCommand" caretOffset="633" date="Tue Dec 05 15:48:32 EST 2023" docOffset="633" starttimestamp="1701807005597" timestamp="2306574" />
  <Command __id="781" _type="MoveCaretCommand" caretOffset="720" date="Tue Dec 05 15:48:33 EST 2023" docOffset="720" starttimestamp="1701807005597" timestamp="2307852" />
  <Command __id="782" _type="MoveCaretCommand" caretOffset="720" date="Tue Dec 05 15:48:33 EST 2023" docOffset="720" starttimestamp="1701807005597" timestamp="2307852" />
  <Command __id="783" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 15:48:33 EST 2023" starttimestamp="1701807005597" timestamp="2307917" />
  <Command __id="784" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:48:33 EST 2023" starttimestamp="1701807005597" timestamp="2308016" />
  <Command __id="785" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:48:33 EST 2023" starttimestamp="1701807005597" timestamp="2308023" />
  <Command __id="786" _type="MoveCaretCommand" caretOffset="623" date="Tue Dec 05 15:48:37 EST 2023" docOffset="623" starttimestamp="1701807005597" timestamp="2312164" />
  <Command __id="787" _type="MoveCaretCommand" caretOffset="623" date="Tue Dec 05 15:48:37 EST 2023" docOffset="623" starttimestamp="1701807005597" timestamp="2312164" />
  <Command __id="788" _type="CheckStyleCommand" date="Tue Dec 05 15:48:37 EST 2023" starttimestamp="1701807005597" timestamp="2312201">
    <CSVRow><![CDATA[119,Tue Dec 05 15:48:33 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]]]></CSVRow>
  </Command>
  <Command __id="789" _type="SelectTextCommand" caretOffset="630" date="Tue Dec 05 15:48:37 EST 2023" end="630" start="619" starttimestamp="1701807005597" timestamp="2312256" />
  <Command __id="790" _type="SelectTextCommand" caretOffset="630" date="Tue Dec 05 15:48:37 EST 2023" end="630" start="619" starttimestamp="1701807005597" timestamp="2312256" />
  <Command __id="791" _type="MoveCaretCommand" caretOffset="612" date="Tue Dec 05 15:48:38 EST 2023" docOffset="612" starttimestamp="1701807005597" timestamp="2313150" />
  <Command __id="792" _type="MoveCaretCommand" caretOffset="612" date="Tue Dec 05 15:48:38 EST 2023" docOffset="612" starttimestamp="1701807005597" timestamp="2313150" />
  <Command __id="797" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:48:41 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2315790" type="Run" />
  <Command __id="798" _type="PasteCommand" date="Tue Dec 05 15:48:42 EST 2023" starttimestamp="1701807005597" timestamp="2316470" />
  <Command __id="799" _type="ConsoleOutput" date="Tue Dec 05 15:48:42 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2316599" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="800" _type="ConsoleOutput" date="Tue Dec 05 15:48:42 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2316606" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.ClassCastException: class index.IdentifierA"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvalua"), Diff(EQUAL,"to"), Diff(DELETE,"m"), Diff(INSERT,"r"), Diff(EQUAL,"Impl"), Diff(DELETE," cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluato"), Diff(INSERT,".eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterControlle"), Diff(EQUAL,"r."), Diff(DELETE,"f"), Diff(INSERT,"r"), Diff(EQUAL,"un"), Diff(DELETE,"ction.Lambda are in unnamed module of loader 'app'"), Diff(INSERT,"(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="801" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:48:42 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2316614" type="Debug" />
  <Command __id="802" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:48:42 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2316614" type="Run" />
  <Command __id="803" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:48:42 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2316614" type="Debug" />
  <Command __id="804" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:48:42 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2316614" type="Run" />
  <Command __id="815" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:48:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2324794" type="Run" />
  <Command __id="816" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:48:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2324794" type="Run" />
  <Command __id="817" _type="PasteCommand" date="Tue Dec 05 15:48:51 EST 2023" starttimestamp="1701807005597" timestamp="2325423" />
  <Command __id="818" _type="ConsoleOutput" date="Tue Dec 05 15:48:51 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2325614" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="819" _type="ShellCommand" date="Tue Dec 05 15:48:53 EST 2023" starttimestamp="1701807005597" timestamp="2328315" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="820" _type="ShellCommand" date="Tue Dec 05 15:48:55 EST 2023" starttimestamp="1701807005597" timestamp="2329589" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="821" _type="ShellCommand" date="Tue Dec 05 15:48:55 EST 2023" starttimestamp="1701807005597" timestamp="2330078" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="823" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:49:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2335200" type="Run" />
  <Command __id="824" _type="PasteCommand" date="Tue Dec 05 15:49:01 EST 2023" starttimestamp="1701807005597" timestamp="2335814" />
  <Command __id="825" _type="ConsoleOutput" date="Tue Dec 05 15:49:01 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2336077" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="826" _type="ConsoleInput" date="Tue Dec 05 15:49:04 EST 2023" starttimestamp="1701807005597" timestamp="2338680" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="827" _type="ConsoleOutput" date="Tue Dec 05 15:49:04 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2338684" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="828" _type="MoveCaretCommand" caretOffset="487" date="Tue Dec 05 15:49:20 EST 2023" docOffset="487" starttimestamp="1701807005597" timestamp="2354791" />
  <Command __id="829" _type="MoveCaretCommand" caretOffset="487" date="Tue Dec 05 15:49:20 EST 2023" docOffset="487" starttimestamp="1701807005597" timestamp="2354791" />
  <Command __id="830" _type="MoveCaretCommand" caretOffset="498" date="Tue Dec 05 15:49:23 EST 2023" docOffset="498" starttimestamp="1701807005597" timestamp="2357891" />
  <Command __id="831" _type="MoveCaretCommand" caretOffset="498" date="Tue Dec 05 15:49:23 EST 2023" docOffset="498" starttimestamp="1701807005597" timestamp="2357891" />
  <Command __id="832" _type="MoveCaretCommand" caretOffset="498" date="Tue Dec 05 15:49:25 EST 2023" docOffset="498" starttimestamp="1701807005597" timestamp="2359964" />
  <Command __id="833" _type="MoveCaretCommand" caretOffset="498" date="Tue Dec 05 15:49:25 EST 2023" docOffset="498" starttimestamp="1701807005597" timestamp="2359964" />
  <Command __id="834" _type="SelectTextCommand" caretOffset="509" date="Tue Dec 05 15:49:25 EST 2023" end="509" start="495" starttimestamp="1701807005597" timestamp="2360123" />
  <Command __id="835" _type="SelectTextCommand" caretOffset="509" date="Tue Dec 05 15:49:25 EST 2023" end="509" start="495" starttimestamp="1701807005597" timestamp="2360123" />
  <Command __id="836" _type="MoveCaretCommand" caretOffset="490" date="Tue Dec 05 15:49:26 EST 2023" docOffset="490" starttimestamp="1701807005597" timestamp="2360954" />
  <Command __id="837" _type="MoveCaretCommand" caretOffset="490" date="Tue Dec 05 15:49:26 EST 2023" docOffset="490" starttimestamp="1701807005597" timestamp="2360954" />
  <Command __id="838" _type="SelectTextCommand" caretOffset="494" date="Tue Dec 05 15:49:26 EST 2023" end="494" start="484" starttimestamp="1701807005597" timestamp="2361146" />
  <Command __id="839" _type="SelectTextCommand" caretOffset="494" date="Tue Dec 05 15:49:26 EST 2023" end="494" start="484" starttimestamp="1701807005597" timestamp="2361146" />
  <Command __id="840" _type="ShellCommand" date="Tue Dec 05 15:50:45 EST 2023" starttimestamp="1701807005597" timestamp="2440157" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="841" _type="ShellCommand" date="Tue Dec 05 15:51:11 EST 2023" starttimestamp="1701807005597" timestamp="2465504" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="842" _type="MoveCaretCommand" caretOffset="872" date="Tue Dec 05 15:51:11 EST 2023" docOffset="872" starttimestamp="1701807005597" timestamp="2465603" />
  <Command __id="843" _type="MoveCaretCommand" caretOffset="872" date="Tue Dec 05 15:51:11 EST 2023" docOffset="872" starttimestamp="1701807005597" timestamp="2465603" />
  <Command __id="844" _type="SelectTextCommand" caretOffset="974" date="Tue Dec 05 15:51:14 EST 2023" end="974" start="872" starttimestamp="1701807005597" timestamp="2468874" />
  <Command __id="845" _type="SelectTextCommand" caretOffset="974" date="Tue Dec 05 15:51:14 EST 2023" end="974" start="872" starttimestamp="1701807005597" timestamp="2468874" />
  <Command __id="847" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2469870" timestamp2="2469870">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="848" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2469871" timestamp2="2469871">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="850" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2469967" timestamp2="2469967">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="851" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2469968" timestamp2="2469968">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="853" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2470064" timestamp2="2470064">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="854" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2470064" timestamp2="2470064">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="856" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2470257" timestamp2="2470257">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="857" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2470257" timestamp2="2470257">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="859" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2470381" timestamp2="2470381">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="860" _type="InsertStringCommand" date="Tue Dec 05 15:51:15 EST 2023" starttimestamp="1701807005597" timestamp="2470381" timestamp2="2470381">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="862" _type="InsertStringCommand" date="Tue Dec 05 15:51:16 EST 2023" starttimestamp="1701807005597" timestamp="2470576" timestamp2="2470576">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="863" _type="InsertStringCommand" date="Tue Dec 05 15:51:16 EST 2023" starttimestamp="1701807005597" timestamp="2470576" timestamp2="2470576">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="864" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 15:51:16 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="2470583" />
  <Command __id="867" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 15:51:16 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="2471014" />
  <Command __id="869" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:16 EST 2023" starttimestamp="1701807005597" timestamp="2471380" />
  <Command __id="870" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:16 EST 2023" starttimestamp="1701807005597" timestamp="2471381" />
  <Command __id="872" _type="InsertStringCommand" date="Tue Dec 05 15:51:17 EST 2023" starttimestamp="1701807005597" timestamp="2471494" timestamp2="2471494">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="873" _type="InsertStringCommand" date="Tue Dec 05 15:51:17 EST 2023" starttimestamp="1701807005597" timestamp="2471494" timestamp2="2471494">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="875" _type="InsertStringCommand" date="Tue Dec 05 15:51:17 EST 2023" starttimestamp="1701807005597" timestamp="2471567" timestamp2="2471567">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="876" _type="InsertStringCommand" date="Tue Dec 05 15:51:17 EST 2023" starttimestamp="1701807005597" timestamp="2471567" timestamp2="2471567">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="878" _type="InsertStringCommand" date="Tue Dec 05 15:51:17 EST 2023" starttimestamp="1701807005597" timestamp="2471636" timestamp2="2471636">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="879" _type="InsertStringCommand" date="Tue Dec 05 15:51:17 EST 2023" starttimestamp="1701807005597" timestamp="2471636" timestamp2="2471636">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="881" _type="InsertStringCommand" date="Tue Dec 05 15:51:17 EST 2023" starttimestamp="1701807005597" timestamp="2472203" timestamp2="2472203">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="882" _type="InsertStringCommand" date="Tue Dec 05 15:51:17 EST 2023" starttimestamp="1701807005597" timestamp="2472204" timestamp2="2472204">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="884" _type="InsertStringCommand" date="Tue Dec 05 15:51:18 EST 2023" starttimestamp="1701807005597" timestamp="2472440" timestamp2="2472440">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="885" _type="InsertStringCommand" date="Tue Dec 05 15:51:18 EST 2023" starttimestamp="1701807005597" timestamp="2472440" timestamp2="2472440">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="887" _type="InsertStringCommand" date="Tue Dec 05 15:51:18 EST 2023" starttimestamp="1701807005597" timestamp="2472802" timestamp2="2472802">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="888" _type="InsertStringCommand" date="Tue Dec 05 15:51:18 EST 2023" starttimestamp="1701807005597" timestamp="2472802" timestamp2="2472802">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="890" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:19 EST 2023" starttimestamp="1701807005597" timestamp="2473564" />
  <Command __id="891" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:19 EST 2023" starttimestamp="1701807005597" timestamp="2473564" />
  <Command __id="893" _type="InsertStringCommand" date="Tue Dec 05 15:51:19 EST 2023" starttimestamp="1701807005597" timestamp="2474282" timestamp2="2474282">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="894" _type="InsertStringCommand" date="Tue Dec 05 15:51:19 EST 2023" starttimestamp="1701807005597" timestamp="2474283" timestamp2="2474283">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="896" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2474481" timestamp2="2474481">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="897" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2474481" timestamp2="2474481">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="899" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2474612" timestamp2="2474612">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="900" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2474612" timestamp2="2474612">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="902" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2475041" timestamp2="2475041">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="903" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2475041" timestamp2="2475041">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="905" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2475113" timestamp2="2475113">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="906" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2475113" timestamp2="2475113">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="908" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2475181" timestamp2="2475181">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="909" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2475181" timestamp2="2475181">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="911" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2475347" timestamp2="2475347">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="912" _type="InsertStringCommand" date="Tue Dec 05 15:51:20 EST 2023" starttimestamp="1701807005597" timestamp="2475347" timestamp2="2475347">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="914" _type="InsertStringCommand" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475456" timestamp2="2475456">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="915" _type="InsertStringCommand" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475457" timestamp2="2475457">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="917" _type="InsertStringCommand" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475527" timestamp2="2475527">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="918" _type="InsertStringCommand" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475529" timestamp2="2475529">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="920" _type="InsertStringCommand" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475590" timestamp2="2475590">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="921" _type="InsertStringCommand" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475590" timestamp2="2475590">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="923" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475785" />
  <Command __id="924" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475786" />
  <Command __id="926" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475887" />
  <Command __id="927" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2475887" />
  <Command __id="929" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2476008" />
  <Command __id="930" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2476008" />
  <Command __id="932" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2476158" />
  <Command __id="933" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2476159" />
  <Command __id="935" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2476262" />
  <Command __id="936" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2476262" />
  <Command __id="938" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2476399" />
  <Command __id="939" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:21 EST 2023" starttimestamp="1701807005597" timestamp="2476400" />
  <Command __id="941" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2476515" />
  <Command __id="942" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2476516" />
  <Command __id="944" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2476634" />
  <Command __id="945" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2476634" />
  <Command __id="947" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2476755" />
  <Command __id="948" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2476755" />
  <Command __id="950" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2476876" />
  <Command __id="951" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2476876" />
  <Command __id="953" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2477019" />
  <Command __id="954" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2477022" />
  <Command __id="956" _type="InsertStringCommand" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2477196" timestamp2="2477196">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="957" _type="InsertStringCommand" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2477197" timestamp2="2477197">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="959" _type="InsertStringCommand" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2477379" timestamp2="2477379">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="960" _type="InsertStringCommand" date="Tue Dec 05 15:51:22 EST 2023" starttimestamp="1701807005597" timestamp="2477379" timestamp2="2477379">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="962" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2477469" timestamp2="2477469">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="963" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2477469" timestamp2="2477469">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="965" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2477578" timestamp2="2477578">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="966" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2477578" timestamp2="2477578">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="968" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2477680" timestamp2="2477680">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="969" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2477680" timestamp2="2477680">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="971" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2477816" timestamp2="2477816">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="972" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2477816" timestamp2="2477816">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="974" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2478065" timestamp2="2478065">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="975" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2478066" timestamp2="2478066">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="977" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2478262" timestamp2="2478262">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="978" _type="InsertStringCommand" date="Tue Dec 05 15:51:23 EST 2023" starttimestamp="1701807005597" timestamp="2478262" timestamp2="2478262">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="980" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2478406" timestamp2="2478406">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="981" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2478406" timestamp2="2478406">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="983" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2478539" timestamp2="2478539">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="984" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2478539" timestamp2="2478539">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="986" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2478906" timestamp2="2478906">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="987" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2478906" timestamp2="2478906">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="989" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2479046" timestamp2="2479046">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="990" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2479048" timestamp2="2479048">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="992" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2479113" timestamp2="2479113">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="993" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2479113" timestamp2="2479113">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="995" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2479302" timestamp2="2479302">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="996" _type="InsertStringCommand" date="Tue Dec 05 15:51:24 EST 2023" starttimestamp="1701807005597" timestamp="2479303" timestamp2="2479303">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="998" _type="InsertStringCommand" date="Tue Dec 05 15:51:25 EST 2023" starttimestamp="1701807005597" timestamp="2479436" timestamp2="2479436">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="999" _type="InsertStringCommand" date="Tue Dec 05 15:51:25 EST 2023" starttimestamp="1701807005597" timestamp="2479436" timestamp2="2479436">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1001" _type="InsertStringCommand" date="Tue Dec 05 15:51:25 EST 2023" starttimestamp="1701807005597" timestamp="2479459" timestamp2="2479459">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1002" _type="InsertStringCommand" date="Tue Dec 05 15:51:25 EST 2023" starttimestamp="1701807005597" timestamp="2479459" timestamp2="2479459">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1004" _type="InsertStringCommand" date="Tue Dec 05 15:51:25 EST 2023" starttimestamp="1701807005597" timestamp="2479568" timestamp2="2479568">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1005" _type="InsertStringCommand" date="Tue Dec 05 15:51:25 EST 2023" starttimestamp="1701807005597" timestamp="2479568" timestamp2="2479568">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1007" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:25 EST 2023" starttimestamp="1701807005597" timestamp="2480328" />
  <Command __id="1008" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:25 EST 2023" starttimestamp="1701807005597" timestamp="2480329" />
  <Command __id="1010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480412" />
  <Command __id="1011" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480413" />
  <Command __id="1013" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480546" />
  <Command __id="1014" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480546" />
  <Command __id="1016" _type="InsertStringCommand" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480675" timestamp2="2480675">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1017" _type="InsertStringCommand" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480675" timestamp2="2480675">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1019" _type="InsertStringCommand" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480720" timestamp2="2480720">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1020" _type="InsertStringCommand" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480720" timestamp2="2480720">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1022" _type="InsertStringCommand" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480739" timestamp2="2480739">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1023" _type="InsertStringCommand" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480739" timestamp2="2480739">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1025" _type="InsertStringCommand" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480811" timestamp2="2480811">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1026" _type="InsertStringCommand" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2480811" timestamp2="2480811">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1028" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2481340" />
  <Command __id="1029" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:26 EST 2023" starttimestamp="1701807005597" timestamp="2481340" />
  <Command __id="1031" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:27 EST 2023" starttimestamp="1701807005597" timestamp="2481440" />
  <Command __id="1032" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 15:51:27 EST 2023" starttimestamp="1701807005597" timestamp="2481440" />
  <Command __id="1034" _type="InsertStringCommand" date="Tue Dec 05 15:51:27 EST 2023" starttimestamp="1701807005597" timestamp="2481555" timestamp2="2481555">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1035" _type="InsertStringCommand" date="Tue Dec 05 15:51:27 EST 2023" starttimestamp="1701807005597" timestamp="2481555" timestamp2="2481555">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1043" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:51:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2487094" type="Run" />
  <Command __id="1044" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:51:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2487094" type="Run" />
  <Command __id="1045" _type="PasteCommand" date="Tue Dec 05 15:51:33 EST 2023" starttimestamp="1701807005597" timestamp="2487759" />
  <Command __id="1046" _type="ConsoleOutput" date="Tue Dec 05 15:51:33 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2488321" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1047" _type="ConsoleInput" date="Tue Dec 05 15:51:36 EST 2023" starttimestamp="1701807005597" timestamp="2491301" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="1048" _type="ConsoleOutput" date="Tue Dec 05 15:51:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2491308" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1063" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:51:56 EST 2023" starttimestamp="1701807005597" timestamp="2511232" />
  <Command __id="1064" _type="EclipseCommand" commandID="" date="Tue Dec 05 15:51:56 EST 2023" starttimestamp="1701807005597" timestamp="2511233" />
  <Command __id="1069" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:52:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2519170" type="Run" />
  <Command __id="1070" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:52:04 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2519170" type="Run" />
  <Command __id="1071" _type="ShellCommand" date="Tue Dec 05 15:52:05 EST 2023" starttimestamp="1701807005597" timestamp="2519484" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1072" _type="ConsoleOutput" date="Tue Dec 05 15:52:12 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2526696" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"Test execution time (ms):1¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1073" _type="ConsoleOutput" date="Tue Dec 05 15:52:12 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2526702" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1074" _type="ConsoleOutput" date="Tue Dec 05 15:52:12 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2526703" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1075" _type="ConsoleOutput" date="Tue Dec 05 15:52:12 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2526705" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="1076" _type="ExceptionCommand" date="Tue Dec 05 15:52:12 EST 2023" starttimestamp="1701807005597" timestamp="2526725" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1077" _type="ConsoleOutput" date="Tue Dec 05 15:52:12 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2526729" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1078" _type="ConsoleOutput" date="Tue Dec 05 15:52:12 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2526788" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluat"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccess"), Diff(EQUAL,"orImpl.java:"), Diff(INSERT,"6"), Diff(EQUAL,"2"), Diff(DELETE,"4"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer"), Diff(INSERT,"g.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"100"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"133"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.evaluate(AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"g.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Register"), Diff(INSERT,"g.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"65"), Diff(INSERT,"71"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"21"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"47"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"68"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"2"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvir"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Comp"), Diff(EQUAL,"on"), Diff(DELETE,"m"), Diff(EQUAL,"ent."), Diff(DELETE,"getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:4"), Diff(DELETE,"5"), Diff(INSERT,"918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessor"), Diff(INSERT,"desktop/java.awt.Window.dispatchEvent"), Diff(EQUAL,"Impl"), Diff(DELETE,".invoke0(Native Method"), Diff(INSERT,"(Window.java:2772"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1079" _type="ExceptionCommand" date="Tue Dec 05 15:52:12 EST 2023" starttimestamp="1701807005597" timestamp="2526799" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):37
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42

java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1080" _type="ExceptionCommand" date="Tue Dec 05 15:52:12 EST 2023" starttimestamp="1701807005597" timestamp="2526810" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1081" _type="ConsoleOutput" date="Tue Dec 05 15:52:12 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2526819" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶"), Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶"), Diff(DELETE,"	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶")]]]></diff>
  </Command>
  <Command __id="1082" _type="ExceptionCommand" date="Tue Dec 05 15:52:12 EST 2023" starttimestamp="1701807005597" timestamp="2526826" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1083" _type="ExceptionCommand" date="Tue Dec 05 15:52:12 EST 2023" starttimestamp="1701807005597" timestamp="2526832" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1084" _type="ConsoleOutput" date="Tue Dec 05 15:52:12 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2526840" type="ConsoleOutput">
    <outputString><![CDATA[	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶"), Diff(EQUAL,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶"), Diff(DELETE,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶")]]]></diff>
  </Command>
  <Command __id="1085" _type="ExceptionCommand" date="Tue Dec 05 15:52:12 EST 2023" starttimestamp="1701807005597" timestamp="2526850" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1086" _type="ConsoleOutput" date="Tue Dec 05 15:52:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2529679" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)"), Diff(INSERT,"Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1087" _type="ConsoleOutput" date="Tue Dec 05 15:52:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2529681" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicAndChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:BasicAndChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1088" _type="ConsoleOutput" date="Tue Dec 05 15:52:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2529682" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:Basic"), Diff(DELETE,"And"), Diff(INSERT,"Or"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="1089" _type="ConsoleOutput" date="Tue Dec 05 15:52:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2529683" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:BasicOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1090" _type="LocalChecksRawCommand" date="Tue Dec 05 15:52:15 EST 2023" starttimestamp="1701807005597" timestamp="2529685">
    <CSVRow><![CDATA[131,Tue Dec 05 15:52:12 EST 2023,49,-1,A6FuncallSocialDistanceSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLispChecker- PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,61,0,true,DerivedSafeChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,DerivedSafeChecker-(0.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1091" _type="LocalChecksRawCommand" date="Tue Dec 05 15:52:15 EST 2023" starttimestamp="1701807005597" timestamp="2529685">
    <CSVRow><![CDATA[131,Tue Dec 05 15:52:12 EST 2023,49,-1,A6FuncallSocialDistanceSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLispChecker- PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,61,0,true,DerivedSafeChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,DerivedSafeChecker-(0.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1092" _type="ConsoleOutput" date="Tue Dec 05 15:52:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2529685" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1093" _type="ConsoleOutput" date="Tue Dec 05 15:52:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2529686" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1094" _type="ConsoleOutput" date="Tue Dec 05 15:52:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2529688" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1095" _type="ConsoleOutput" date="Tue Dec 05 15:52:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2529690" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:VariableArgument"), Diff(DELETE,"And"), Diff(INSERT,"Or"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="1096" _type="ExceptionCommand" date="Tue Dec 05 15:52:17 EST 2023" starttimestamp="1701807005597" timestamp="2531989" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1097" _type="ExceptionCommand" date="Tue Dec 05 15:52:17 EST 2023" starttimestamp="1701807005597" timestamp="2531993" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1098" _type="ConsoleOutput" date="Tue Dec 05 15:52:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2531997" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1099" _type="ExceptionCommand" date="Tue Dec 05 15:52:17 EST 2023" starttimestamp="1701807005597" timestamp="2532003" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):2
Test Result:LispLambdaChecker3,0.0% complete,0.0,10.0,Expected strings:25actual string 

java.lang.IndexOutOfBoundsException: Index 3 out of bounds for length 3
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment2.testcases.LispLambdaCheckers.AbstractFunctionLambdaChecker.test(AbstractFunctionLambdaChecker.java:73)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1100" _type="ExceptionCommand" date="Tue Dec 05 15:52:17 EST 2023" starttimestamp="1701807005597" timestamp="2532006" type="Exception">
    <exceptionString><![CDATA[Test Result:LoadLambdaChecker2,0.0% complete,0.0,15.0,java.lang.IndexOutOfBoundsException Index 3 out of bounds for length 3

java.lang.IndexOutOfBoundsException: Index 3 out of bounds for length 3
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)
	at java.base/java.util.Objects.checkIndex(Objects.java:372)
	at java.base/java.util.ArrayList.get(ArrayList.java:459)
	at gradingTools.comp524f19.assignment2.testcases.LispLambdaCheckers.AbstractFunctionLambdaChecker.test(AbstractFunctionLambdaChecker.java:73)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1101" _type="ConsoleOutput" date="Tue Dec 05 15:52:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2532026" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):3
Test Result:LoadLambdaChecker3,0.0% complete,0.0,15.0,java.lang.IndexOutOfBoundsException Index 3 out of bounds for length 3
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:10"), Diff(DELETE,"0"), Diff(INSERT,"9"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"1)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMetho"), Diff(INSERT,"desktop/java.awt.EventDispatchThread.run(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"17"), Diff(INSERT,"90"), Diff(EQUAL,")¶"), Diff(DELETE,"	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)"), Diff(INSERT,"¶Test execution time (ms):3¶Test Result:LoadLambdaChecker3,0.0% complete,0.0,15.0,java.lang.IndexOutOfBoundsException Index 3 out of bounds for length 3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="715" _type="Insert" date="Tue Dec 05 15:47:48 EST 2023" docASTNodeCount="169" docActiveCodeLength="1008" docExpressionCount="127" docLength="1008" length="5" offset="613" repeat="5" starttimestamp="1701807005597" timestamp="2262875" timestamp2="2263972">
    <text><![CDATA[.eval]]></text>
  </DocumentChange>
  <DocumentChange __id="724" _type="Replace" date="Tue Dec 05 15:47:50 EST 2023" docASTNodeCount="170" docActiveCodeLength="1021" docExpressionCount="128" docLength="1021" endLine="15" insertionLength="17" int_docASTNodeCount="169" int_docActiveCodeLength="1004" int_docExpressionCount="128" int_docLength="1004" length="4" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="2265233">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="730" _type="Delete" date="Tue Dec 05 15:47:54 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" endLine="15" length="18" offset="632" startLine="15" starttimestamp="1701807005597" timestamp="2268768">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="747" _type="Delete" date="Tue Dec 05 15:48:02 EST 2023" docASTNodeCount="164" docActiveCodeLength="985" docExpressionCount="122" docLength="985" endLine="15" length="18" offset="613" startLine="15" starttimestamp="1701807005597" timestamp="2277092">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="767" _type="Insert" date="Tue Dec 05 15:48:30 EST 2023" docASTNodeCount="166" docActiveCodeLength="989" docExpressionCount="124" docLength="989" length="4" offset="613" repeat="4" starttimestamp="1701807005597" timestamp="2305210" timestamp2="2305542">
    <text><![CDATA[.eva]]></text>
  </DocumentChange>
  <DocumentChange __id="775" _type="Replace" date="Tue Dec 05 15:48:31 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" endLine="15" insertionLength="17" int_docASTNodeCount="130" int_docActiveCodeLength="986" int_docExpressionCount="98" int_docLength="986" length="3" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="2305784">
    <deletedText><![CDATA[eva]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="807" _type="Delete" date="Tue Dec 05 15:48:46 EST 2023" docASTNodeCount="164" docActiveCodeLength="985" docExpressionCount="122" docLength="985" endLine="15" length="18" offset="613" startLine="15" starttimestamp="1701807005597" timestamp="2320614">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="846" _type="Replace" date="Tue Dec 05 15:51:15 EST 2023" docASTNodeCount="151" docActiveCodeLength="884" docExpressionCount="109" docLength="884" endLine="23" insertionLength="1" int_docASTNodeCount="150" int_docActiveCodeLength="883" int_docExpressionCount="108" int_docLength="883" length="102" offset="872" startLine="23" starttimestamp="1701807005597" timestamp="2469861">
    <deletedText><![CDATA[BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment)]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="849" _type="Insert" date="Tue Dec 05 15:51:15 EST 2023" docASTNodeCount="152" docActiveCodeLength="891" docExpressionCount="110" docLength="891" length="7" offset="873" repeat="7" starttimestamp="1701807005597" timestamp="2469966" timestamp2="2471006">
    <text><![CDATA[uper.ea]]></text>
  </DocumentChange>
  <DocumentChange __id="868" _type="Delete" date="Tue Dec 05 15:51:16 EST 2023" docASTNodeCount="152" docActiveCodeLength="890" docExpressionCount="110" docLength="890" endLine="23" length="1" offset="879" startLine="23" starttimestamp="1701807005597" timestamp="2471377">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="871" _type="Insert" date="Tue Dec 05 15:51:17 EST 2023" docASTNodeCount="153" docActiveCodeLength="897" docExpressionCount="111" docLength="897" length="7" offset="879" repeat="6" starttimestamp="1701807005597" timestamp="2471491" timestamp2="2472801">
    <text><![CDATA[val(en)]]></text>
  </DocumentChange>
  <DocumentChange __id="889" _type="Delete" date="Tue Dec 05 15:51:19 EST 2023" docASTNodeCount="153" docActiveCodeLength="896" docExpressionCount="111" docLength="896" endLine="23" length="1" offset="884" startLine="23" starttimestamp="1701807005597" timestamp="2473560">
    <text><![CDATA[n]]></text>
  </DocumentChange>
  <DocumentChange __id="892" _type="Insert" date="Tue Dec 05 15:51:19 EST 2023" docASTNodeCount="153" docActiveCodeLength="906" docExpressionCount="111" docLength="906" length="10" offset="884" repeat="10" starttimestamp="1701807005597" timestamp="2474282" timestamp2="2475590">
    <text><![CDATA[nvironment]]></text>
  </DocumentChange>
  <DocumentChange __id="922" _type="Delete" date="Tue Dec 05 15:51:21 EST 2023" docASTNodeCount="152" docActiveCodeLength="895" docExpressionCount="110" docLength="895" endLine="23" length="11" offset="883" repeat="11" startLine="23" starttimestamp="1701807005597" timestamp="2475782" timestamp2="2477014">
    <text><![CDATA[environment]]></text>
  </DocumentChange>
  <DocumentChange __id="955" _type="Insert" date="Tue Dec 05 15:51:22 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" length="17" offset="883" repeat="17" starttimestamp="1701807005597" timestamp="2477195" timestamp2="2479568">
    <text><![CDATA[expr, environmnet]]></text>
  </DocumentChange>
  <DocumentChange __id="1006" _type="Delete" date="Tue Dec 05 15:51:25 EST 2023" docASTNodeCount="154" docActiveCodeLength="909" docExpressionCount="112" docLength="909" endLine="23" length="3" offset="897" repeat="3" startLine="23" starttimestamp="1701807005597" timestamp="2480326" timestamp2="2480543">
    <text><![CDATA[net]]></text>
  </DocumentChange>
  <DocumentChange __id="1015" _type="Insert" date="Tue Dec 05 15:51:26 EST 2023" docASTNodeCount="154" docActiveCodeLength="913" docExpressionCount="112" docLength="913" length="4" offset="897" repeat="4" starttimestamp="1701807005597" timestamp="2480675" timestamp2="2480811">
    <text><![CDATA[en t]]></text>
  </DocumentChange>
  <DocumentChange __id="1027" _type="Delete" date="Tue Dec 05 15:51:26 EST 2023" docASTNodeCount="154" docActiveCodeLength="911" docExpressionCount="112" docLength="911" endLine="23" length="2" offset="899" repeat="2" startLine="23" starttimestamp="1701807005597" timestamp="2481338" timestamp2="2481439">
    <text><![CDATA[ t]]></text>
  </DocumentChange>
  <DocumentChange __id="1033" _type="Insert" date="Tue Dec 05 15:51:27 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" length="1" offset="899" starttimestamp="1701807005597" timestamp="2481555">
    <text><![CDATA[t]]></text>
  </DocumentChange>
  <Command __id="1106" _type="LocalChecksRawCommand" date="Tue Dec 05 15:52:45 EST 2023" starttimestamp="1701807005597" timestamp="2560255">
    <CSVRow><![CDATA[133,Tue Dec 05 15:52:17 EST 2023,40,-9,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispLambdaChecker2- LispLambdaChecker3- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker- LoadLambdaChecker2- LoadLambdaChecker3- LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,61,2,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 , , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1107" _type="LocalChecksRawCommand" date="Tue Dec 05 15:52:45 EST 2023" starttimestamp="1701807005597" timestamp="2560255">
    <CSVRow><![CDATA[133,Tue Dec 05 15:52:17 EST 2023,40,-9,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispLambdaChecker2- LispLambdaChecker3- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker- LoadLambdaChecker2- LoadLambdaChecker3- LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,61,2,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 , , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1108" _type="MoveCaretCommand" caretOffset="178" date="Tue Dec 05 15:52:45 EST 2023" docOffset="436" starttimestamp="1701807005597" timestamp="2560326" />
  <Command __id="1105" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:52:45 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2560252">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1109" _type="MoveCaretCommand" caretOffset="765" date="Tue Dec 05 15:52:48 EST 2023" docOffset="1023" starttimestamp="1701807005597" timestamp="2563209" />
  <Command __id="1110" _type="MoveCaretCommand" caretOffset="765" date="Tue Dec 05 15:52:48 EST 2023" docOffset="1023" starttimestamp="1701807005597" timestamp="2563210" />
  <Command __id="1111" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:53:03 EST 2023" docASTNodeCount="236" docActiveCodeLength="2081" docExpressionCount="163" docLength="2081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2577637">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BasicOperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}		public static void registerAdvance() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("SETQ", new SetqEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LAMBDA", new LambdaEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("FUNCALL", new FuncallEvaluator());	}		@Override	public void registerOperations() {		registerAll();	}		public static void registerAll() {		registerBasic();		registerArithmetic();		registerLogic();		registerAdvance();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1112" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:53:03 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="2577702" />
  <Command __id="1115" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:53:59 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="2633918">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1118" _type="ShellCommand" date="Tue Dec 05 15:54:00 EST 2023" starttimestamp="1701807005597" timestamp="2635132" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1125" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:54:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2652673" type="Run" />
  <Command __id="1126" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:54:18 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2652674" type="Run" />
  <Command __id="1127" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:54:18 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2652784" type="Run" />
  <Command __id="1128" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:54:18 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2652796" type="Run" />
  <Command __id="1129" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:54:18 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2652928" type="Run" />
  <Command __id="1130" _type="ShellCommand" date="Tue Dec 05 15:54:23 EST 2023" starttimestamp="1701807005597" timestamp="2657512" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1131" _type="ShellCommand" date="Tue Dec 05 15:54:24 EST 2023" starttimestamp="1701807005597" timestamp="2658733" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1132" _type="ShellCommand" date="Tue Dec 05 15:54:25 EST 2023" starttimestamp="1701807005597" timestamp="2659809" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1119" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:54:01 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2636150">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead());			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1135" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:54:33 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2668117" type="Run" />
  <Command __id="1136" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:54:33 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2668128" type="Debug" />
  <Command __id="1137" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:54:33 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2668128" type="Run" />
  <Command __id="1138" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:54:33 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2668128" type="Debug" />
  <Command __id="1139" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 15:54:33 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2668128" type="Run" />
  <Command __id="1140" _type="ExceptionCommand" date="Tue Dec 05 15:54:33 EST 2023" starttimestamp="1701807005597" timestamp="2668144" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1142" _type="SelectTextCommand" caretOffset="615" date="Tue Dec 05 15:54:39 EST 2023" end="615" start="571" starttimestamp="1701807005597" timestamp="2673767" />
  <Command __id="1143" _type="ShellCommand" date="Tue Dec 05 15:54:43 EST 2023" starttimestamp="1701807005597" timestamp="2677728" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1144" _type="ShellCommand" date="Tue Dec 05 15:54:59 EST 2023" starttimestamp="1701807005597" timestamp="2693641" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1145" _type="ShellCommand" date="Tue Dec 05 15:55:01 EST 2023" starttimestamp="1701807005597" timestamp="2696402" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1147" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:55:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2725221" type="Run" />
  <Command __id="1148" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:55:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2725221" type="Run" />
  <Command __id="1149" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:30 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2725330" type="Run" />
  <Command __id="1150" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:30 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2725341" type="Run" />
  <Command __id="1151" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:31 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2725479" type="Run" />
  <Command __id="1152" _type="ShellCommand" date="Tue Dec 05 15:55:31 EST 2023" starttimestamp="1701807005597" timestamp="2725668" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1153" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:31 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2726183" type="Run" />
  <Command __id="1154" _type="ShellCommand" date="Tue Dec 05 15:55:35 EST 2023" starttimestamp="1701807005597" timestamp="2729963" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1155" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Tue Dec 05 15:55:35 EST 2023" starttimestamp="1701807005597" timestamp="2730173" />
  <Command __id="1156" _type="BreakPointCommand" date="Tue Dec 05 15:55:35 EST 2023" lineNumber="14" starttimestamp="1701807005597" timestamp="2730174" type="BreakPointAdded" />
  <Command __id="1157" _type="ShellCommand" date="Tue Dec 05 15:55:39 EST 2023" starttimestamp="1701807005597" timestamp="2733676" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1168" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:46 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2741383" type="Run" />
  <Command __id="1169" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:55:46 EST 2023" starttimestamp="1701807005597" timestamp="2741383" />
  <Command __id="1170" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:47 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2741818" type="Run" />
  <Command __id="1171" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:55:47 EST 2023" starttimestamp="1701807005597" timestamp="2741818" />
  <Command __id="1172" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:55:47 EST 2023" starttimestamp="1701807005597" timestamp="2742384" />
  <Command __id="1173" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:47 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2742386" type="Run" />
  <Command __id="1174" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:48 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2742732" type="Run" />
  <Command __id="1175" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:55:48 EST 2023" starttimestamp="1701807005597" timestamp="2742732" />
  <Command __id="1176" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:48 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2743107" type="Run" />
  <Command __id="1177" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:55:48 EST 2023" starttimestamp="1701807005597" timestamp="2743107" />
  <Command __id="1178" _type="ExceptionCommand" date="Tue Dec 05 15:55:48 EST 2023" starttimestamp="1701807005597" timestamp="2743118" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1179" _type="ConsoleOutput" date="Tue Dec 05 15:55:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2743142" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):6280
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):6280¶Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1180" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:55:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2743509" type="Run" />
  <Command __id="1181" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 15:55:49 EST 2023" starttimestamp="1701807005597" timestamp="2743510" />
  <Command __id="1182" _type="ExceptionCommand" date="Tue Dec 05 15:55:49 EST 2023" starttimestamp="1701807005597" timestamp="2743520" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1183" _type="ConsoleOutput" date="Tue Dec 05 15:55:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2743559" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):6671
Test Result:LispLambdaChecker,0.0% complete,0.0,10.0,Expected strings:3actual string 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶¶Test execution time (ms):6280¶Test Result:LoadLisp"), Diff(INSERT,"¶Test execution time (ms):6671¶Test Result:LispLambda"), Diff(EQUAL,"Checker,0.0% complete,0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,Expected strings:"), Diff(DELETE,"T"), Diff(INSERT,"3"), Diff(EQUAL,"actual string "), Diff(DELETE,"42"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1184" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Dec 05 15:56:05 EST 2023" starttimestamp="1701807005597" timestamp="2759701" />
  <Command __id="1185" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:05 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2759718" type="Debug" />
  <Command __id="1186" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:56:05 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2759718" type="Run" />
  <Command __id="1187" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:05 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2759718" type="Debug" />
  <Command __id="1188" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:56:05 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2759718" type="Run" />
  <Command __id="1189" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:56:06 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2760700" type="Run" />
  <Command __id="1190" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:56:06 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2760700" type="Run" />
  <Command __id="1191" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:06 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2760810" type="Run" />
  <Command __id="1192" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:06 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2760826" type="Run" />
  <Command __id="1193" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:06 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2760960" type="Run" />
  <Command __id="1194" _type="ShellCommand" date="Tue Dec 05 15:56:06 EST 2023" starttimestamp="1701807005597" timestamp="2761154" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1195" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:07 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2761670" type="Run" />
  <Command __id="1216" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:29 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2783663" type="Run" />
  <Command __id="1217" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 15:56:38 EST 2023" starttimestamp="1701807005597" timestamp="2793306" />
  <Command __id="1218" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:38 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2793313" type="Run" />
  <Command __id="1219" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 15:56:41 EST 2023" starttimestamp="1701807005597" timestamp="2795494" />
  <Command __id="1220" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:41 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2795498" type="Run" />
  <Command __id="1141" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:54:39 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2673720">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead());			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1224" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:56:45 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="2800268">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1228" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:56:52 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="2806814">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1230" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:56:53 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2808067">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead());			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1221" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 15:56:45 EST 2023" starttimestamp="1701807005597" timestamp="2799844" />
  <Command __id="1222" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:45 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2799849" type="Run" />
  <Command __id="1223" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:56:45 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2800093" type="Run" />
  <Command __id="1225" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:56:45 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="2800301" />
  <Command __id="1227" _type="MoveCaretCommand" caretOffset="571" date="Tue Dec 05 15:56:47 EST 2023" docOffset="571" starttimestamp="1701807005597" timestamp="2802227" />
  <Command __id="1229" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:56:52 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="2806845" />
  <Command __id="1231" _type="MoveCaretCommand" caretOffset="571" date="Tue Dec 05 15:56:53 EST 2023" docOffset="571" starttimestamp="1701807005597" timestamp="2808120" />
  <Command __id="1233" _type="MoveCaretCommand" caretOffset="571" date="Tue Dec 05 15:56:56 EST 2023" docOffset="571" starttimestamp="1701807005597" timestamp="2811321" />
  <Command __id="1234" _type="ShellCommand" date="Tue Dec 05 15:56:58 EST 2023" starttimestamp="1701807005597" timestamp="2812892" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1235" _type="ShellCommand" date="Tue Dec 05 15:57:09 EST 2023" starttimestamp="1701807005597" timestamp="2823441" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1236" _type="MoveCaretCommand" caretOffset="811" date="Tue Dec 05 15:57:09 EST 2023" docOffset="811" starttimestamp="1701807005597" timestamp="2824091" />
  <Command __id="1237" _type="MoveCaretCommand" caretOffset="811" date="Tue Dec 05 15:57:09 EST 2023" docOffset="811" starttimestamp="1701807005597" timestamp="2824091" />
  <Command __id="1238" _type="ShellCommand" date="Tue Dec 05 15:57:14 EST 2023" starttimestamp="1701807005597" timestamp="2829130" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1240" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:57:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2838228" type="Run" />
  <Command __id="1241" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:23 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2838351" type="Run" />
  <Command __id="1242" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:24 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2838492" type="Run" />
  <Command __id="1243" _type="ShellCommand" date="Tue Dec 05 15:57:24 EST 2023" starttimestamp="1701807005597" timestamp="2838684" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1244" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:24 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2839303" type="Run" />
  <Command __id="1232" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:56:56 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2811235">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead());			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1253" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:57:29 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="2843754">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1245" _type="ConsoleOutput" date="Tue Dec 05 15:57:28 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2842687" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):8¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1246" _type="ConsoleOutput" date="Tue Dec 05 15:57:28 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2842688" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1247" _type="ConsoleOutput" date="Tue Dec 05 15:57:28 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2842696" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1248" _type="ConsoleOutput" date="Tue Dec 05 15:57:28 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2842696" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1249" _type="ConsoleOutput" date="Tue Dec 05 15:57:28 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2842697" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1250" _type="ConsoleOutput" date="Tue Dec 05 15:57:28 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="2842699" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):8"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1251" _type="ShellCommand" date="Tue Dec 05 15:57:28 EST 2023" starttimestamp="1701807005597" timestamp="2842796" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1252" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:28 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2843147" type="Run" />
  <Command __id="1254" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 15:57:29 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="2843810" />
  <Command __id="1256" _type="MoveCaretCommand" caretOffset="811" date="Tue Dec 05 15:57:31 EST 2023" docOffset="811" starttimestamp="1701807005597" timestamp="2846250" />
  <Command __id="1257" _type="ShellCommand" date="Tue Dec 05 15:57:33 EST 2023" starttimestamp="1701807005597" timestamp="2847407" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1258" _type="ShellCommand" date="Tue Dec 05 15:57:34 EST 2023" starttimestamp="1701807005597" timestamp="2848633" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1259" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:34 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2848653" type="Debug" />
  <Command __id="1260" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:57:34 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2848653" type="Run" />
  <Command __id="1261" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:34 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2848653" type="Debug" />
  <Command __id="1262" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:57:34 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2848653" type="Run" />
  <Command __id="1263" _type="ShellCommand" date="Tue Dec 05 15:57:37 EST 2023" starttimestamp="1701807005597" timestamp="2851653" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1264" _type="ShellCommand" date="Tue Dec 05 15:57:40 EST 2023" starttimestamp="1701807005597" timestamp="2854760" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1265" _type="ShellCommand" date="Tue Dec 05 15:57:42 EST 2023" starttimestamp="1701807005597" timestamp="2857341" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1266" _type="ShellCommand" date="Tue Dec 05 15:57:44 EST 2023" starttimestamp="1701807005597" timestamp="2858705" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1267" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:44 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2859105" type="Debug" />
  <Command __id="1268" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:57:44 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2859105" type="Run" />
  <Command __id="1269" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:44 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2859105" type="Debug" />
  <Command __id="1270" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:57:44 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2859105" type="Run" />
  <Command __id="1271" _type="ShellCommand" date="Tue Dec 05 15:57:44 EST 2023" starttimestamp="1701807005597" timestamp="2859150" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1273" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:57:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2863540" type="Run" />
  <Command __id="1274" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 15:57:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2863540" type="Run" />
  <Command __id="1275" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:49 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2863650" type="Run" />
  <Command __id="1276" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2863664" type="Run" />
  <Command __id="1277" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:49 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2863797" type="Run" />
  <Command __id="1278" _type="ShellCommand" date="Tue Dec 05 15:57:49 EST 2023" starttimestamp="1701807005597" timestamp="2863979" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1279" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:57:50 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2864492" type="Run" />
  <Command __id="1291" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:58:02 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2876654" type="Run" />
  <Command __id="1292" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:58:02 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2877309" type="Run" />
  <Command __id="1293" _type="ShellCommand" date="Tue Dec 05 15:58:03 EST 2023" starttimestamp="1701807005597" timestamp="2878322" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1255" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:57:31 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2846196">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead());			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1295" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 15:59:52 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2986558" type="Run" />
  <Command __id="1310" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:00:02 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="2996538" type="Run" />
  <Command __id="1311" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:00:58 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="3053280" />
  <Command __id="1312" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:00:58 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="3053281" />
  <Command __id="1313" _type="SelectTextCommand" caretOffset="612" date="Tue Dec 05 16:01:02 EST 2023" end="614" start="612" starttimestamp="1701807005597" timestamp="3057041" />
  <Command __id="1314" _type="SelectTextCommand" caretOffset="612" date="Tue Dec 05 16:01:02 EST 2023" end="614" start="612" starttimestamp="1701807005597" timestamp="3057041" />
  <Command __id="1315" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:01:02 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="3057238" />
  <Command __id="1316" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:01:02 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="3057238" />
  <Command __id="1317" _type="ShellCommand" date="Tue Dec 05 16:01:03 EST 2023" starttimestamp="1701807005597" timestamp="3057968" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1318" _type="ShellCommand" date="Tue Dec 05 16:02:09 EST 2023" starttimestamp="1701807005597" timestamp="3123822" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1319" _type="MoveCaretCommand" caretOffset="472" date="Tue Dec 05 16:02:11 EST 2023" docOffset="472" starttimestamp="1701807005597" timestamp="3125983" />
  <Command __id="1320" _type="MoveCaretCommand" caretOffset="472" date="Tue Dec 05 16:02:11 EST 2023" docOffset="472" starttimestamp="1701807005597" timestamp="3125983" />
  <Command __id="1321" _type="SelectTextCommand" caretOffset="510" date="Tue Dec 05 16:02:13 EST 2023" end="510" start="467" starttimestamp="1701807005597" timestamp="3127916" />
  <Command __id="1322" _type="SelectTextCommand" caretOffset="510" date="Tue Dec 05 16:02:13 EST 2023" end="510" start="467" starttimestamp="1701807005597" timestamp="3127916" />
  <Command __id="1323" _type="CopyCommand" date="Tue Dec 05 16:02:13 EST 2023" starttimestamp="1701807005597" timestamp="3128044" />
  <Command __id="1324" _type="ShellCommand" date="Tue Dec 05 16:02:13 EST 2023" starttimestamp="1701807005597" timestamp="3128370" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1337" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:02:33 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3147992" type="Run" />
  <Command __id="1338" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:02:33 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3147992" type="Run" />
  <Command __id="1339" _type="ShellCommand" date="Tue Dec 05 16:02:33 EST 2023" starttimestamp="1701807005597" timestamp="3148317" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1340" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151232" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"6"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):8¶Test Result:MainClass"), Diff(INSERT,"TestLispFile"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="1341" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151238" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1342" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151240" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1343" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151270" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):37
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(INSERT,"3"), Diff(EQUAL,"7¶"), Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="1344" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151271" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):38
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1345" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151272" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:L"), Diff(DELETE,"oadLisp"), Diff(INSERT,"ispLambda"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):38¶")]]]></diff>
  </Command>
  <Command __id="1346" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151274" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1347" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151275" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1348" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151277" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1349" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151277" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1350" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151278" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1351" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151279" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1352" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151280" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1353" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151282" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="1354" _type="ConsoleOutput" date="Tue Dec 05 16:02:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3151282" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LoadLambdaChecker"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,",100.0% complete,15.0,15.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="1355" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155781" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1356" _type="LocalChecksRawCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155783">
    <CSVRow><![CDATA[135,Tue Dec 05 16:02:36 EST 2023,50,10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker+ LispLambdaChecker2+ LispLambdaChecker3+ LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker+ LoadLambdaChecker2+ LoadLambdaChecker3+ LoadLispChecker+ LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,63,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1357" _type="LocalChecksRawCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155783">
    <CSVRow><![CDATA[135,Tue Dec 05 16:02:36 EST 2023,50,10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker+ LispLambdaChecker2+ LispLambdaChecker3+ LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker+ LoadLambdaChecker2+ LoadLambdaChecker3+ LoadLispChecker+ LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,63,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1358" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155783" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1359" _type="ConsoleOutput" date="Tue Dec 05 16:02:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3155785" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1360" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155786" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1361" _type="ConsoleOutput" date="Tue Dec 05 16:02:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3155788" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶")]]]></diff>
  </Command>
  <Command __id="1362" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155790" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1363" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155791" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1364" _type="ConsoleOutput" date="Tue Dec 05 16:02:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3155792" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶"), Diff(EQUAL,"	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶"), Diff(INSERT,""), Diff(EQUAL,"	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶"), Diff(DELETE,""), Diff(EQUAL,"	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶"), Diff(INSERT,"	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶")]]]></diff>
  </Command>
  <Command __id="1365" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155793" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1366" _type="ConsoleOutput" date="Tue Dec 05 16:02:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3155817" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.desktop/java.awt.Container.processEvent(Contai"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRun"), Diff(EQUAL,"ner.java:2"), Diff(DELETE,"263"), Diff(INSERT,"88"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(EQUAL,".java:5"), Diff(DELETE,"011"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRun"), Diff(EQUAL,"ner.java:2"), Diff(DELETE,"321"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"484"), Diff(INSERT,"36"), Diff(EQUAL,"3)¶	at "), Diff(DELETE,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container"), Diff(INSERT,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"4918"), Diff(INSERT,"317"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(EQUAL,".java:"), Diff(DELETE,"4556"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(INSERT,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(EQUAL,".java:"), Diff(DELETE,"4488"), Diff(INSERT,"191"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"desktop/java.awt.Conta"), Diff(INSERT,"base/jdk."), Diff(EQUAL,"in"), Diff(INSERT,"t"), Diff(EQUAL,"er"), Diff(DELETE,".dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(INSERT,"nal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"277"), Diff(INSERT,"6"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(INSERT,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"48"), Diff(EQUAL,"43)¶	at java."), Diff(DELETE,"desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(INSERT,"base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"772"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"721"), Diff(INSERT,"270"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"715"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"85"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"745"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"743"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"85"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(EQUAL,".java:"), Diff(DELETE,"742"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(INSERT,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"DispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(INSERT,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"03"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(INSERT,"AWT"), Diff(EQUAL,"Event"), Diff(DELETE,"DispatchThread.pumpEventsForFilter(EventDispatchThread"), Diff(INSERT,"Multicaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"124"), Diff(INSERT,"277"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(INSERT,"Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"113"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at java.desktop/java"), Diff(DELETE,".awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(INSERT,"x.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"109"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(INSERT,"Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"101"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at java.desktop/java.awt."), Diff(DELETE,"EventDispatchThread.run(EventDispatchThread"), Diff(INSERT,"Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"90"), Diff(INSERT,"2263"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1367" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155822" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1368" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155829" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1369" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155839" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1370" _type="ConsoleOutput" date="Tue Dec 05 16:02:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3155848" type="ConsoleOutput">
    <outputString><![CDATA[	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶"), Diff(EQUAL,"	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶"), Diff(DELETE,""), Diff(EQUAL,"	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶"), Diff(INSERT,""), Diff(EQUAL,"	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶"), Diff(DELETE,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶")]]]></diff>
  </Command>
  <Command __id="1371" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155853" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1372" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155861" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1373" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155869" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1374" _type="ConsoleOutput" date="Tue Dec 05 16:02:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3155874" type="ConsoleOutput">
    <outputString><![CDATA[	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶"), Diff(EQUAL,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶"), Diff(INSERT,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶")]]]></diff>
  </Command>
  <Command __id="1375" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155880" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1376" _type="ConsoleOutput" date="Tue Dec 05 16:02:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3155889" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶"), Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶"), Diff(INSERT,"	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')¶")]]]></diff>
  </Command>
  <Command __id="1377" _type="ExceptionCommand" date="Tue Dec 05 16:02:41 EST 2023" starttimestamp="1701807005597" timestamp="3155901" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1378" _type="ConsoleOutput" date="Tue Dec 05 16:02:44 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3158836" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:BasicAndChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)¶java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')"), Diff(INSERT,"Test execution time (ms):0¶Test Result:BasicAndChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1379" _type="ConsoleOutput" date="Tue Dec 05 16:02:44 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3158838" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:NotChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:BasicOrChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:NotChecker,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶Test Result:"), Diff(DELETE,"Basic"), Diff(INSERT,"VariableArgument"), Diff(EQUAL,"AndChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1¶Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1380" _type="LocalChecksRawCommand" date="Tue Dec 05 16:02:44 EST 2023" starttimestamp="1701807005597" timestamp="3158839">
    <CSVRow><![CDATA[137,Tue Dec 05 16:02:44 EST 2023,50,0,LogicalSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,63,2,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker , ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(10.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1381" _type="LocalChecksRawCommand" date="Tue Dec 05 16:02:44 EST 2023" starttimestamp="1701807005597" timestamp="3158839">
    <CSVRow><![CDATA[137,Tue Dec 05 16:02:44 EST 2023,50,0,LogicalSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,63,2,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker , ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(10.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1382" _type="ConsoleOutput" date="Tue Dec 05 16:02:45 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3160270" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:BasicOrChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:NotChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1383" _type="ConsoleOutput" date="Tue Dec 05 16:02:45 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3160280" type="ConsoleOutput">
    <outputString><![CDATA[	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app'"), Diff(INSERT,"	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="1384" _type="ExceptionCommand" date="Tue Dec 05 16:02:45 EST 2023" starttimestamp="1701807005597" timestamp="3160287" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):2
Test Result:LispIsListChecker4,0.0% complete,0.0,15.0,Expected strings:NILactual string 

java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1385" _type="ConsoleOutput" date="Tue Dec 05 16:02:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3163149" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:GreaterChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)"), Diff(INSERT,"Test execution time (ms):0¶Test Result:GreaterChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1386" _type="ConsoleOutput" date="Tue Dec 05 16:02:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3163153" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"Greater"), Diff(INSERT,"Less"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):0¶Test Result:"), Diff(DELETE,"Greater"), Diff(INSERT,"Less"), Diff(EQUAL,"OrEqualChecker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="1387" _type="ConsoleOutput" date="Tue Dec 05 16:02:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3168505" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:CondChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
Test Result:A6ExtraCondChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:Less"), Diff(INSERT,"execution time (ms):0¶Test Result:Cond"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"LessOrEqual"), Diff(INSERT,"A6ExtraCond"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="1388" _type="ConsoleOutput" date="Tue Dec 05 16:02:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3168506" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0¶Test Result:CondChecker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):1¶Test Result:A6ExtraCond"), Diff(INSERT,"Result:Quote"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶"), Diff(DELETE,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="1389" _type="ConsoleOutput" date="Tue Dec 05 16:02:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3168507" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1390" _type="ConsoleOutput" date="Tue Dec 05 16:02:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3168507" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1391" _type="ConsoleOutput" date="Tue Dec 05 16:02:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3168508" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1392" _type="ConsoleOutput" date="Tue Dec 05 16:02:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3168509" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1393" _type="ConsoleOutput" date="Tue Dec 05 16:02:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3168510" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:ListChecker2,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:ListChecker"), Diff(INSERT,"2"), Diff(EQUAL,",100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="1394" _type="ConsoleOutput" date="Tue Dec 05 16:02:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3168511" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:ListChecker2,100.0% complete,10.0,10.0,¶¶")]]]></diff>
  </Command>
  <Command __id="1395" _type="ConsoleOutput" date="Tue Dec 05 16:02:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="3168511" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CombinationChecker,0.0% complete,0.0,10.0,Expected strings:4actual string COND
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:CombinationChecker,0.0% complete,0.0,10.0,Expected strings:4actual string COND"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1407" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:03:25 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="3199645" type="Debug" />
  <Command __id="1408" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:03:25 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3199645" type="Run" />
  <Command __id="1409" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:03:25 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="3199645" type="Debug" />
  <Command __id="1410" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:03:25 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3199645" type="Run" />
  <Command __id="1411" _type="ShellCommand" date="Tue Dec 05 16:03:25 EST 2023" starttimestamp="1701807005597" timestamp="3199646" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1412" _type="ShellCommand" date="Tue Dec 05 16:03:26 EST 2023" starttimestamp="1701807005597" timestamp="3201175" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1413" _type="ShellCommand" date="Tue Dec 05 16:03:36 EST 2023" starttimestamp="1701807005597" timestamp="3210699" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1416" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:04:01 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3235552" type="Run" />
  <Command __id="1417" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:04:01 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3235552" type="Run" />
  <Command __id="1418" _type="ShellCommand" date="Tue Dec 05 16:04:01 EST 2023" starttimestamp="1701807005597" timestamp="3236059" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1419" _type="ShellCommand" date="Tue Dec 05 16:04:02 EST 2023" starttimestamp="1701807005597" timestamp="3236971" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1420" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:04:02 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="3237095" type="Debug" />
  <Command __id="1421" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:04:02 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3237096" type="Run" />
  <Command __id="1422" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:04:02 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="3237096" type="Debug" />
  <Command __id="1423" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:04:02 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3237096" type="Run" />
  <Command __id="1424" _type="EclipseCommand" commandID="org.eclipse.eclemma.ui.removeAllSessions" date="Tue Dec 05 16:04:05 EST 2023" starttimestamp="1701807005597" timestamp="3239999" />
  <Command __id="1425" _type="ShellCommand" date="Tue Dec 05 16:04:17 EST 2023" starttimestamp="1701807005597" timestamp="3251793" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1426" _type="ShellCommand" date="Tue Dec 05 16:04:25 EST 2023" starttimestamp="1701807005597" timestamp="3259812" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1427" _type="LocalChecksRawCommand" date="Tue Dec 05 16:04:25 EST 2023" starttimestamp="1701807005597" timestamp="3259817">
    <CSVRow><![CDATA[142,Tue Dec 05 16:03:14 EST 2023,50,0,LispSetqSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,63,7,true,LispSetqChecker LispSetqChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 , , ,LispSetqChecker-(10.0/10.0) LispSetqChecker2-(10.0/10.0) LoadSetqChecker-(15.0/15.0) LoadSetqChecker2-(15.0/15.0) LoadSetqChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1428" _type="LocalChecksRawCommand" date="Tue Dec 05 16:04:25 EST 2023" starttimestamp="1701807005597" timestamp="3259817">
    <CSVRow><![CDATA[142,Tue Dec 05 16:03:14 EST 2023,50,0,LispSetqSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,63,7,true,LispSetqChecker LispSetqChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 , , ,LispSetqChecker-(10.0/10.0) LispSetqChecker2-(10.0/10.0) LoadSetqChecker-(15.0/15.0) LoadSetqChecker2-(15.0/15.0) LoadSetqChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="1429" _type="ShellCommand" date="Tue Dec 05 16:04:25 EST 2023" starttimestamp="1701807005597" timestamp="3260253" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1430" _type="ShellCommand" date="Tue Dec 05 16:04:29 EST 2023" starttimestamp="1701807005597" timestamp="3263898" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1431" _type="ShellCommand" date="Tue Dec 05 16:04:30 EST 2023" starttimestamp="1701807005597" timestamp="3264428" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1432" _type="ShellCommand" date="Tue Dec 05 16:04:30 EST 2023" starttimestamp="1701807005597" timestamp="3265059" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1433" _type="ShellCommand" date="Tue Dec 05 16:04:36 EST 2023" starttimestamp="1701807005597" timestamp="3270918" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1434" _type="ShellCommand" date="Tue Dec 05 16:04:42 EST 2023" starttimestamp="1701807005597" timestamp="3276843" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1435" _type="MoveCaretCommand" caretOffset="881" date="Tue Dec 05 16:04:50 EST 2023" docOffset="881" starttimestamp="1701807005597" timestamp="3284889" />
  <Command __id="1436" _type="MoveCaretCommand" caretOffset="881" date="Tue Dec 05 16:04:50 EST 2023" docOffset="881" starttimestamp="1701807005597" timestamp="3284889" />
  <Command __id="1437" _type="MoveCaretCommand" caretOffset="773" date="Tue Dec 05 16:04:50 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="3285318" />
  <Command __id="1438" _type="MoveCaretCommand" caretOffset="773" date="Tue Dec 05 16:04:50 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="3285318" />
  <Command __id="1439" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:04:53 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3287465" />
  <Command __id="1440" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:04:53 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3287465" />
  <Command __id="1441" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:04:53 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3288014" />
  <Command __id="1442" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:04:53 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3288015" />
  <Command __id="1443" _type="ShellCommand" date="Tue Dec 05 16:04:56 EST 2023" starttimestamp="1701807005597" timestamp="3290597" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1444" _type="ShellCommand" date="Tue Dec 05 16:05:04 EST 2023" starttimestamp="1701807005597" timestamp="3299023" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1445" _type="ShellCommand" date="Tue Dec 05 16:05:07 EST 2023" starttimestamp="1701807005597" timestamp="3302093" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1446" _type="ShellCommand" date="Tue Dec 05 16:05:11 EST 2023" starttimestamp="1701807005597" timestamp="3305689" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1447" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:11 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3305757" />
  <Command __id="1448" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:11 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3305757" />
  <Command __id="1449" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:05:11 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3306272" />
  <Command __id="1450" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:05:11 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3306272" />
  <Command __id="1451" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:12 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3306864" />
  <Command __id="1452" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:12 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3306864" />
  <Command __id="1453" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:05:12 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3307392" />
  <Command __id="1454" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:05:12 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3307392" />
  <Command __id="1455" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:13 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3307892" />
  <Command __id="1456" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:13 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3307892" />
  <Command __id="1457" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:05:14 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3308406" />
  <Command __id="1458" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:05:14 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3308406" />
  <Command __id="1459" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:14 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3309014" />
  <Command __id="1460" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:14 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3309014" />
  <Command __id="1461" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:05:15 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3309523" />
  <Command __id="1462" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:05:15 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="3309523" />
  <Command __id="1463" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:15 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3310178" />
  <Command __id="1464" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:05:15 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="3310178" />
  <Command __id="1465" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 16:05:27 EST 2023" docOffset="397" starttimestamp="1701807005597" timestamp="3321664" />
  <Command __id="1466" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 16:05:27 EST 2023" docOffset="397" starttimestamp="1701807005597" timestamp="3321664" />
  <Command __id="1467" _type="MoveCaretCommand" caretOffset="509" date="Tue Dec 05 16:05:27 EST 2023" docOffset="509" starttimestamp="1701807005597" timestamp="3322134" />
  <Command __id="1468" _type="MoveCaretCommand" caretOffset="509" date="Tue Dec 05 16:05:27 EST 2023" docOffset="509" starttimestamp="1701807005597" timestamp="3322134" />
  <Command __id="1469" _type="MoveCaretCommand" caretOffset="509" date="Tue Dec 05 16:05:28 EST 2023" docOffset="509" starttimestamp="1701807005597" timestamp="3322546" />
  <Command __id="1470" _type="MoveCaretCommand" caretOffset="509" date="Tue Dec 05 16:05:28 EST 2023" docOffset="509" starttimestamp="1701807005597" timestamp="3322546" />
  <Command __id="1471" _type="MoveCaretCommand" caretOffset="400" date="Tue Dec 05 16:05:28 EST 2023" docOffset="400" starttimestamp="1701807005597" timestamp="3323348" />
  <Command __id="1472" _type="MoveCaretCommand" caretOffset="400" date="Tue Dec 05 16:05:28 EST 2023" docOffset="400" starttimestamp="1701807005597" timestamp="3323348" />
  <Command __id="1473" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 16:05:29 EST 2023" docOffset="451" starttimestamp="1701807005597" timestamp="3323768" />
  <Command __id="1474" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 16:05:29 EST 2023" docOffset="451" starttimestamp="1701807005597" timestamp="3323768" />
  <Command __id="1475" _type="MoveCaretCommand" caretOffset="400" date="Tue Dec 05 16:05:30 EST 2023" docOffset="400" starttimestamp="1701807005597" timestamp="3324466" />
  <Command __id="1476" _type="MoveCaretCommand" caretOffset="400" date="Tue Dec 05 16:05:30 EST 2023" docOffset="400" starttimestamp="1701807005597" timestamp="3324466" />
  <Command __id="1477" _type="MoveCaretCommand" caretOffset="330" date="Tue Dec 05 16:05:30 EST 2023" docOffset="330" starttimestamp="1701807005597" timestamp="3324977" />
  <Command __id="1478" _type="MoveCaretCommand" caretOffset="330" date="Tue Dec 05 16:05:30 EST 2023" docOffset="330" starttimestamp="1701807005597" timestamp="3324977" />
  <Command __id="1479" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 16:05:30 EST 2023" docOffset="451" starttimestamp="1701807005597" timestamp="3325362" />
  <Command __id="1480" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 16:05:30 EST 2023" docOffset="451" starttimestamp="1701807005597" timestamp="3325362" />
  <Command __id="1481" _type="MoveCaretCommand" caretOffset="884" date="Tue Dec 05 16:05:31 EST 2023" docOffset="884" starttimestamp="1701807005597" timestamp="3325751" />
  <Command __id="1482" _type="MoveCaretCommand" caretOffset="884" date="Tue Dec 05 16:05:31 EST 2023" docOffset="884" starttimestamp="1701807005597" timestamp="3325751" />
  <Command __id="1483" _type="MoveCaretCommand" caretOffset="893" date="Tue Dec 05 16:05:31 EST 2023" docOffset="893" starttimestamp="1701807005597" timestamp="3326176" />
  <Command __id="1484" _type="MoveCaretCommand" caretOffset="893" date="Tue Dec 05 16:05:31 EST 2023" docOffset="893" starttimestamp="1701807005597" timestamp="3326176" />
  <Command __id="1485" _type="MoveCaretCommand" caretOffset="884" date="Tue Dec 05 16:05:32 EST 2023" docOffset="884" starttimestamp="1701807005597" timestamp="3326589" />
  <Command __id="1486" _type="MoveCaretCommand" caretOffset="884" date="Tue Dec 05 16:05:32 EST 2023" docOffset="884" starttimestamp="1701807005597" timestamp="3326589" />
  <Command __id="1487" _type="MoveCaretCommand" caretOffset="934" date="Tue Dec 05 16:05:32 EST 2023" docOffset="934" starttimestamp="1701807005597" timestamp="3326992" />
  <Command __id="1488" _type="MoveCaretCommand" caretOffset="934" date="Tue Dec 05 16:05:32 EST 2023" docOffset="934" starttimestamp="1701807005597" timestamp="3326992" />
  <Command __id="1489" _type="MoveCaretCommand" caretOffset="938" date="Tue Dec 05 16:05:32 EST 2023" docOffset="938" starttimestamp="1701807005597" timestamp="3327346" />
  <Command __id="1490" _type="MoveCaretCommand" caretOffset="938" date="Tue Dec 05 16:05:32 EST 2023" docOffset="938" starttimestamp="1701807005597" timestamp="3327347" />
  <Command __id="1492" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 16:05:33 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="3328185" />
  <Command __id="1494" _type="MoveCaretCommand" caretOffset="938" date="Tue Dec 05 16:05:34 EST 2023" docOffset="938" starttimestamp="1701807005597" timestamp="3328904" />
  <Command __id="1496" _type="SelectTextCommand" caretOffset="541" date="Tue Dec 05 16:05:35 EST 2023" end="541" start="531" starttimestamp="1701807005597" timestamp="3329735" />
  <Command __id="1497" _type="SelectTextCommand" caretOffset="561" date="Tue Dec 05 16:05:38 EST 2023" end="742" start="561" starttimestamp="1701807005597" timestamp="3333040" />
  <Command __id="1498" _type="SelectTextCommand" caretOffset="561" date="Tue Dec 05 16:05:38 EST 2023" end="742" start="561" starttimestamp="1701807005597" timestamp="3333040" />
  <Command __id="1500" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:05:38 EST 2023" starttimestamp="1701807005597" timestamp="3333351" />
  <Command __id="1501" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:05:38 EST 2023" starttimestamp="1701807005597" timestamp="3333351" />
  <Command __id="1502" _type="InsertStringCommand" date="Tue Dec 05 16:05:39 EST 2023" starttimestamp="1701807005597" timestamp="3333901" timestamp2="3333901">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1503" _type="InsertStringCommand" date="Tue Dec 05 16:05:39 EST 2023" starttimestamp="1701807005597" timestamp="3333901" timestamp2="3333901">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1296" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 15:59:53 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" projectName="Assignment5" starttimestamp="1701807005597" timestamp="2987926">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead());			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1326" _type="Replace" date="Tue Dec 05 16:02:27 EST 2023" docASTNodeCount="157" docActiveCodeLength="944" docExpressionCount="112" docLength="944" endLine="27" insertionLength="944" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="912" offset="0" startLine="0" starttimestamp="1701807005597" timestamp="3141520">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead());
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();
			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></insertedText>
  </DocumentChange>
  <Command __id="1491" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:05:33 EST 2023" docASTNodeCount="236" docActiveCodeLength="2081" docExpressionCount="163" docLength="2081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3328120">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BasicOperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}		public static void registerAdvance() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("SETQ", new SetqEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LAMBDA", new LambdaEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("FUNCALL", new FuncallEvaluator());	}		@Override	public void registerOperations() {		registerAll();	}		public static void registerAll() {		registerBasic();		registerArithmetic();		registerLogic();		registerAdvance();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1493" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:05:34 EST 2023" docASTNodeCount="157" docActiveCodeLength="944" docExpressionCount="112" docLength="944" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3328848">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;"), Diff(DELETE,"import main.lisp.evaluator.BuiltinOperationManagerSingleton;"), Diff(EQUAL,"import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda"), Diff(DELETE," lambda = (Lambda)"), Diff(INSERT,"Evaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval"), Diff(EQUAL,"(expr.getHead()"), Diff(INSERT,", environment"), Diff(EQUAL,");			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();
			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="1495" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:05:35 EST 2023" docASTNodeCount="137" docActiveCodeLength="781" docExpressionCount="99" docLength="962" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3329650">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);//        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();//        return basicExpressionEvaluatorImpl.eval(expression, environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="1499" _type="Delete" date="Tue Dec 05 16:05:38 EST 2023" docASTNodeCount="138" docActiveCodeLength="781" docExpressionCount="99" docLength="781" endLine="22" length="181" offset="774" startLine="21" starttimestamp="1701807005597" timestamp="3333341">
    <text><![CDATA[//        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();
//        return basicExpressionEvaluatorImpl.eval(expression, environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="1508" _type="Delete" date="Tue Dec 05 16:05:41 EST 2023" docASTNodeCount="137" docActiveCodeLength="779" docExpressionCount="99" docLength="779" endLine="22" length="2" offset="774" startLine="21" starttimestamp="1701807005597" timestamp="3336391">
    <text><![CDATA[;
]]></text>
  </DocumentChange>
  <Command __id="1515" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:05:43 EST 2023" docASTNodeCount="157" docActiveCodeLength="944" docExpressionCount="112" docLength="944" projectName="Assignment5" starttimestamp="1701807005597" timestamp="3338392">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1504" _type="InsertStringCommand" date="Tue Dec 05 16:05:40 EST 2023" starttimestamp="1701807005597" timestamp="3335169" timestamp2="3335169">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1505" _type="InsertStringCommand" date="Tue Dec 05 16:05:40 EST 2023" starttimestamp="1701807005597" timestamp="3335170" timestamp2="3335170">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1506" _type="MoveCaretCommand" caretOffset="562" date="Tue Dec 05 16:05:41 EST 2023" docOffset="775" starttimestamp="1701807005597" timestamp="3335704" />
  <Command __id="1507" _type="MoveCaretCommand" caretOffset="562" date="Tue Dec 05 16:05:41 EST 2023" docOffset="775" starttimestamp="1701807005597" timestamp="3335704" />
  <Command __id="1509" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Dec 05 16:05:41 EST 2023" starttimestamp="1701807005597" timestamp="3336394" />
  <Command __id="1510" _type="MoveCaretCommand" caretOffset="464" date="Tue Dec 05 16:05:42 EST 2023" docOffset="677" starttimestamp="1701807005597" timestamp="3336947" />
  <Command __id="1511" _type="MoveCaretCommand" caretOffset="464" date="Tue Dec 05 16:05:42 EST 2023" docOffset="677" starttimestamp="1701807005597" timestamp="3336947" />
  <Command __id="1512" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 16:05:42 EST 2023" starttimestamp="1701807005597" timestamp="3337101" />
  <Command __id="1513" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:05:42 EST 2023" starttimestamp="1701807005597" timestamp="3337197" />
  <Command __id="1514" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:05:42 EST 2023" starttimestamp="1701807005597" timestamp="3337207" />
  <Command __id="1516" _type="MoveCaretCommand" caretOffset="938" date="Tue Dec 05 16:05:44 EST 2023" docOffset="938" starttimestamp="1701807005597" timestamp="3338438" />
  <Command __id="1518" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 16:06:04 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="3358546" />
  <Command __id="1520" _type="MoveCaretCommand" caretOffset="938" date="Tue Dec 05 16:06:04 EST 2023" docOffset="938" starttimestamp="1701807005597" timestamp="3359051" />
  <Command __id="1521" _type="ShellCommand" date="Tue Dec 05 16:06:20 EST 2023" starttimestamp="1701807005597" timestamp="3375281" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1546" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:16:32 EST 2023" docLength="7315" projectName="Assignment4" starttimestamp="1701807005597" timestamp="3986630">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment4/src/SocialDistance.sml]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];val SMALL_DISTANCE = 6;val MEDIUM_DISTANCE = 13;val LARGE_DISTANCE = 27;val SMALL_DURATION = 15;val MEDIUM_DURATION = 30;val LARGE_DURATION = 120;val SMALL_EXHALATION = 10;val MEDIUM_EXHALATION = 30;val LARGE_EXHALATION = 50;val MIN_VALUE = 0;val MAX_VALUE = 200;fun givenSafe (13, 30, 30) = true |		givenSafe (6, 30, 10) = true |		givenSafe (27, 30, 50) = true |		givenSafe (13, 15, 50) = true |		givenSafe (13, 120, 10) = true |		givenSafe (27, 120, 30) = true |		givenSafe (6, 15, 30) = true |		givenSafe (_,_,_) = false;				fun interpolateDistanceSmall(distance) =    if (distance >= SMALL_DISTANCE andalso distance < MEDIUM_DISTANCE) then        true    else        false;fun interpolateDistanceMedium(distance) =    if (distance >= MEDIUM_DISTANCE andalso distance < LARGE_DISTANCE) then        true    else        false;fun interpolateDistanceLarge(distance) =    if (distance >= LARGE_DISTANCE) then        true    else        false;fun interpolateDurationSmall(duration) =    if (duration >= MIN_VALUE andalso duration <= SMALL_DURATION) then        true    else        false;fun interpolateDurationMedium(duration) =    if (duration > SMALL_DURATION andalso duration <= MEDIUM_DURATION) then        true    else        false;fun interpolateDurationLarge(duration) =    if (duration > MEDIUM_DURATION andalso duration <= LARGE_DURATION) then        true    else        false;        fun interpolateExhalationSmall(exhalation) =    if (exhalation >= MIN_VALUE andalso exhalation <= SMALL_EXHALATION) then        true    else        false;fun interpolateExhalationMedium(exhalation) =    if (exhalation > SMALL_EXHALATION andalso exhalation <= MEDIUM_EXHALATION) then        true    else        false;fun interpolateExhalationLarge(exhalation) =    if (exhalation > MEDIUM_EXHALATION andalso exhalation <= LARGE_EXHALATION) then        true    else        false;        fun interpolatedSafe(distance, duration, exhalation) =     if ((interpolateDistanceMedium(distance) andalso interpolateDurationMedium(duration) andalso interpolateExhalationMedium(exhalation)) orelse    (interpolateDistanceMedium(distance) andalso interpolateDurationSmall(duration) andalso interpolateExhalationLarge(exhalation)) orelse    (interpolateDistanceMedium(distance) andalso interpolateDurationLarge(duration) andalso interpolateExhalationSmall(exhalation)) orelse    (interpolateDistanceSmall(distance) andalso interpolateDurationMedium(duration) andalso interpolateExhalationSmall(exhalation)) orelse    (interpolateDistanceSmall(distance) andalso interpolateDurationSmall(duration) andalso interpolateExhalationMedium(exhalation)) orelse    (interpolateDistanceLarge(distance) andalso interpolateDurationMedium(duration) andalso interpolateExhalationLarge(exhalation)) orelse    (interpolateDistanceLarge(distance) andalso interpolateDurationLarge(duration) andalso interpolateExhalationMedium(exhalation))) then    		true    else    		false;fun listDerivedSafeHelper(_, _, _, nil) = false |listDerivedSafeHelper(distance, duration, exhalation, (Dist, Dura, Exha)::tail) =if (distance >= Dist andalso duration <= Dura andalso exhalation <= Exha) then		trueelse		listDerivedSafeHelper(distance, duration, exhalation, tail);fun listDerivedSafe(distance, duration, exhalation) =		listDerivedSafeHelper(distance, duration, exhalation, SAFETY_TABLE);		fun printSafety(safetyComputer, (distance: int, duration: int, exhalation: int)) = 		(print ("Distance:" ^ Int.toString (distance) ^ " Duration:" ^ Int.toString (duration) ^ " Exhalation:" ^ Int.toString (exhalation) ^ " Safe:");		if (safetyComputer(distance, duration, exhalation)) then				print("true\n")		else				print("false\n"));fun concisePrintSafety(safetyComputer, (distance: int, duration: int, exhalation: int)) = 		(print ("(" ^ Int.toString (distance) ^ ", " ^ Int.toString (duration) ^ ", " ^ Int.toString (exhalation) ^ ", ");		if (safetyComputer(distance, duration, exhalation)) then				print("true)\n")		else				print("false)\n"));				fun listPrintSafety(_, _, nil) = () |listPrintSafety(printSafety, safetyComputer, head::tail) =		(printSafety(safetyComputer, head);		listPrintSafety(printSafety, safetyComputer, tail));fun givenSafeMatcher((distance, duration, exhalation), (Dist, Dura, Exha)) =    distance = Dist andalso duration = Dura andalso exhalation = Exha;fun derivedSafeMatcher((distance, duration, exhalation), (Dist, Dura, Exha)) =		distance >= Dist andalso duration <= Dura andalso exhalation <= Exha; fun matchingSafeHelper(_, _, nil) = false |matchingSafeHelper(safeMatcher, (distance, duration, exhalation), (Dist, Dura, Exha)::tail) =if (safeMatcher((distance, duration, exhalation), (Dist, Dura, Exha))) then		trueelse		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), tail);fun matchingSafe(safeMatcher, (distance, duration, exhalation)) =		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), SAFETY_TABLE);fun matchingDerivedSafe(distance, duration, exhalation) =    let        fun matchingDerivedSafeHelper(_, _, _, nil) = false          | matchingDerivedSafeHelper(dist, dur, exh, (Dist, Dura, Exha)::tail) =            if (matchingSafe(derivedSafeMatcher, (dist, dur, exh))) then                true            else                matchingDerivedSafeHelper(dist, dur, exh, tail)    in        matchingDerivedSafeHelper(distance, duration, exhalation, SAFETY_TABLE)    endfun matchingGivenSafe(distance, duration, exhalation) =    let        fun matchingGivenSafeHelper(_, _, _, nil) = false          | matchingGivenSafeHelper(dist, dur, exh, (Dist, Dura, Exha)::tail) =            if (matchingSafe(givenSafeMatcher, (dist, dur, exh))) then                true            else                matchingGivenSafeHelper(dist, dur, exh, tail)    in        matchingGivenSafeHelper(distance, duration, exhalation, SAFETY_TABLE)    endfun curryableInterpolatedSafe distance duration exhalation =     if(interpolatedSafe(distance, duration, exhalation)) then    		true    else    		falsefun curriedOnceInterpolatedSafe duration exhalation =     if (curryableInterpolatedSafe MEDIUM_DISTANCE duration exhalation) then    		true    else    		false;fun curriedTwiceInterpolatedSafe exhalation =     if (curriedOnceInterpolatedSafe MEDIUM_DURATION exhalation) then    		true    else    		false;    		fun matchingSafeHelper(_, _, nil) = false |matchingSafeHelper(safeMatcher, (distance, duration, exhalation), (Dist, Dura, Exha)::tail) =if (safeMatcher((distance, duration, exhalation), (Dist, Dura, Exha))) then		trueelse		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), tail);fun curryableMatchingSafe safeMatcher (distance, duration, exhalation) =		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), SAFETY_TABLE);		fun curriedMatchingDerivedSafe (distance, duration, exhalation) =		curryableMatchingSafe derivedSafeMatcher (distance, duration, exhalation);		fun curriedMatchingGivenSafe (distance, duration, exhalation) =		curryableMatchingSafe givenSafeMatcher (distance, duration, exhalation);")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1653" _type="ConsoleInput" date="Tue Dec 05 16:26:04 EST 2023" starttimestamp="1701807005597" timestamp="4559155" type="Exception">
    <outputString><![CDATA[(listDerivedSafefuncall listDerivedSafe (1 1 1))
]]></outputString>
  </Command>
  <Command __id="1654" _type="ExceptionCommand" date="Tue Dec 05 16:26:04 EST 2023" starttimestamp="1701807005597" timestamp="4559165" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.LambdaEvaluator.eval(LambdaEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1655" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:26:04 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4559167" type="Debug" />
  <Command __id="1656" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:26:04 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4559167" type="Run" />
  <Command __id="1657" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:26:04 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4559167" type="Debug" />
  <Command __id="1658" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:26:04 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4559167" type="Run" />
  <Command __id="1660" _type="SelectTextCommand" caretOffset="208" date="Tue Dec 05 16:26:12 EST 2023" end="208" start="178" starttimestamp="1701807005597" timestamp="4566415" />
  <Command __id="1661" _type="ShellCommand" date="Tue Dec 05 16:26:30 EST 2023" starttimestamp="1701807005597" timestamp="4585073" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1662" _type="ShellCommand" date="Tue Dec 05 16:27:40 EST 2023" starttimestamp="1701807005597" timestamp="4655344" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1665" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:27:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4661991" type="Run" />
  <Command __id="1666" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:27:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4661991" type="Run" />
  <Command __id="1667" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:27:47 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4662101" type="Run" />
  <Command __id="1668" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:27:47 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4662113" type="Run" />
  <Command __id="1669" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:27:47 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4662253" type="Run" />
  <Command __id="1670" _type="ShellCommand" date="Tue Dec 05 16:27:48 EST 2023" starttimestamp="1701807005597" timestamp="4663308" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1675" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:27:54 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4668888" type="Run" />
  <Command __id="1676" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 16:27:54 EST 2023" starttimestamp="1701807005597" timestamp="4668888" />
  <Command __id="1677" _type="ConsoleOutput" date="Tue Dec 05 16:27:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4668904" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (DISTANCE DURATION EXHALATION) (COND ((AND (>= DISTANCE 13) (<= DURATION 30) (<= EXHALATION 30)) T) ((AND (>= DISTANCE 6) (<= DURATION 30) (<= EXHALATION 10)) T) ((AND (>= DISTANCE 27) (<= DURATION 30) (<= EXHALATION 50)) T) ((AND (>= DISTANCE 13) (<= DURATION 15) (<= EXHALATION 50)) T) ((AND (>= DISTANCE 13) (<= DURATION 120) (<= EXHALATION 10)) T) ((AND (>= DISTANCE 27) (<= DURATION 120) (<= EXHALATION 30)) T) ((AND (>= DISTANCE 6) (<= DURATION 15) (<= EXHALATION 30)) T))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq listDerivedSafe (¶	lambda (Distance Duration Exhalation)¶	(cond ((and (>= Distance"), Diff(INSERT,"LAMBDA (DISTANCE DURATION EXHALATION) (COND ((AND (>= DISTANCE"), Diff(EQUAL," 13) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 30) (<= E"), Diff(DELETE,"xhalation 30)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 30)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 6) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 30) (<= E"), Diff(DELETE,"xhalation 10)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 10)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 27) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 30) (<= E"), Diff(DELETE,"xhalation 50)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 50)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 13) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 15) (<= E"), Diff(DELETE,"xhalation 50)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 50)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 13) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 120) (<= E"), Diff(DELETE,"xhalation 10)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 10)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 27) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 120) (<= E"), Diff(DELETE,"xhalation 30)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 30)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 6) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 15) (<= E"), Diff(DELETE,"xhalation 30)) T)¶		)¶	"), Diff(INSERT,"XHALATION 30)) T"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="1678" _type="ShellCommand" date="Tue Dec 05 16:27:59 EST 2023" starttimestamp="1701807005597" timestamp="4674019" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1679" _type="ShellCommand" date="Tue Dec 05 16:28:01 EST 2023" starttimestamp="1701807005597" timestamp="4675516" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1680" _type="PasteCommand" date="Tue Dec 05 16:28:01 EST 2023" starttimestamp="1701807005597" timestamp="4675860" />
  <Command __id="1659" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:26:11 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4566349">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1684" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:28:16 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4690616" type="Run" />
  <Command __id="1686" _type="MoveCaretCommand" caretOffset="198" date="Tue Dec 05 16:28:23 EST 2023" docOffset="411" starttimestamp="1701807005597" timestamp="4698128" />
  <Command __id="1687" _type="BreakPointCommand" date="Tue Dec 05 16:28:23 EST 2023" lineNumber="15" starttimestamp="1701807005597" timestamp="4698234" type="BreakPointRemoved" />
  <Command __id="1688" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Tue Dec 05 16:28:23 EST 2023" starttimestamp="1701807005597" timestamp="4698254" />
  <Command __id="1691" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:28:27 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4701475" type="Run" />
  <Command __id="1692" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 16:28:27 EST 2023" starttimestamp="1701807005597" timestamp="4701475" />
  <Command __id="1694" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 16:28:27 EST 2023" docOffset="452" starttimestamp="1701807005597" timestamp="4701831" />
  <Command __id="1695" _type="BreakPointCommand" date="Tue Dec 05 16:28:30 EST 2023" lineNumber="14" starttimestamp="1701807005597" timestamp="4704643" type="BreakPointRemoved" />
  <Command __id="1696" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Tue Dec 05 16:28:30 EST 2023" starttimestamp="1701807005597" timestamp="4704670" />
  <Command __id="1703" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:28:38 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4712741" type="Run" />
  <Command __id="1685" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:28:23 EST 2023" docASTNodeCount="137" docActiveCodeLength="779" docExpressionCount="99" docLength="779" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4698078">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);"), Diff(DELETE,"//        BasicExpressionEvaluatorImpl basicExpressionEvaluatorImpl = new BasicExpressionEvaluatorImpl();//        return basicExpressionEvaluatorImpl.eval(expression, environment);"), Diff(EQUAL,"	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;


public class FuncallEvaluator implements Evaluator{

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
    }
    public static SExpression evalHelper(SExpression expr, Environment environment) {
        Lambda lambda = (Lambda) expr.getHead().eval(environment);
        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());
        return expression.eval(environment);
	}
}
]]></snapshot>
  </Command>
  <Command __id="1693" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:28:27 EST 2023" docASTNodeCount="157" docActiveCodeLength="944" docExpressionCount="112" docLength="944" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4701792">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1701" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:28:36 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4710669">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1707" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:28:50 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="4724772">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1711" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 16:28:56 EST 2023" starttimestamp="1701807005597" timestamp="4731241" />
  <Command __id="1712" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:28:56 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4731244" type="Run" />
  <Command __id="1713" _type="ConsoleOutput" date="Tue Dec 05 16:28:56 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4731249" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (DISTANCE DURATION EXHALATION) (COND ((AND (>= DISTANCE 13) (<= DURATION 30) (<= EXHALATION 30)) T) ((AND (>= DISTANCE 6) (<= DURATION 30) (<= EXHALATION 10)) T) ((AND (>= DISTANCE 27) (<= DURATION 30) (<= EXHALATION 50)) T) ((AND (>= DISTANCE 13) (<= DURATION 15) (<= EXHALATION 50)) T) ((AND (>= DISTANCE 13) (<= DURATION 120) (<= EXHALATION 10)) T) ((AND (>= DISTANCE 27) (<= DURATION 120) (<= EXHALATION 30)) T) ((AND (>= DISTANCE 6) (<= DURATION 15) (<= EXHALATION 30)) T))"), Diff(INSERT,"java.lang.UnsupportedOperationException: Instances of Atom do not have a tail"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1714" _type="ConsoleOutput" date="Tue Dec 05 16:28:56 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4731251" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.LambdaEvaluator.eval(LambdaEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.UnsupportedOperationException: Instances of Atom do not have a tail"), Diff(INSERT,"	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)¶	at index.LambdaEvaluator.eval(LambdaEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1715" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:28:56 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4731256" type="Debug" />
  <Command __id="1716" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:28:56 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4731256" type="Run" />
  <Command __id="1717" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:28:56 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4731256" type="Debug" />
  <Command __id="1718" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:28:56 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4731256" type="Run" />
  <Command __id="1721" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:29:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4748974" type="Run" />
  <Command __id="1722" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:29:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4748974" type="Run" />
  <Command __id="1723" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:29:14 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4749084" type="Run" />
  <Command __id="1724" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:29:14 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4749093" type="Run" />
  <Command __id="1725" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:29:14 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4749230" type="Run" />
  <Command __id="1726" _type="ShellCommand" date="Tue Dec 05 16:29:18 EST 2023" starttimestamp="1701807005597" timestamp="4752706" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1727" _type="ShellCommand" date="Tue Dec 05 16:29:20 EST 2023" starttimestamp="1701807005597" timestamp="4754569" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1730" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:29:24 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4759257" type="Run" />
  <Command __id="1731" _type="ConsoleOutput" date="Tue Dec 05 16:29:24 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4759275" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (DISTANCE DURATION EXHALATION) (COND ((AND (>= DISTANCE 13) (<= DURATION 30) (<= EXHALATION 30)) T) ((AND (>= DISTANCE 6) (<= DURATION 30) (<= EXHALATION 10)) T) ((AND (>= DISTANCE 27) (<= DURATION 30) (<= EXHALATION 50)) T) ((AND (>= DISTANCE 13) (<= DURATION 15) (<= EXHALATION 50)) T) ((AND (>= DISTANCE 13) (<= DURATION 120) (<= EXHALATION 10)) T) ((AND (>= DISTANCE 27) (<= DURATION 120) (<= EXHALATION 30)) T) ((AND (>= DISTANCE 6) (<= DURATION 15) (<= EXHALATION 30)) T))
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"(setq listDerivedSafe (¶	lambda (Distance Duration Exhalation)¶	(cond ((and (>= Distance"), Diff(INSERT,"LAMBDA (DISTANCE DURATION EXHALATION) (COND ((AND (>= DISTANCE"), Diff(EQUAL," 13) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 30) (<= E"), Diff(DELETE,"xhalation 30)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 30)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 6) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 30) (<= E"), Diff(DELETE,"xhalation 10)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 10)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 27) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 30) (<= E"), Diff(DELETE,"xhalation 50)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 50)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 13) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 15) (<= E"), Diff(DELETE,"xhalation 50)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 50)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 13) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 120) (<= E"), Diff(DELETE,"xhalation 10)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 10)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 27) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 120) (<= E"), Diff(DELETE,"xhalation 30)) T)¶		((and (>= Distance"), Diff(INSERT,"XHALATION 30)) T) ((AND (>= DISTANCE"), Diff(EQUAL," 6) (<= D"), Diff(DELETE,"uration"), Diff(INSERT,"URATION"), Diff(EQUAL," 15) (<= E"), Diff(DELETE,"xhalation 30)) T)¶		)¶	"), Diff(INSERT,"XHALATION 30)) T"), Diff(EQUAL,"))¶")]]]></diff>
  </Command>
  <Command __id="1732" _type="ShellCommand" date="Tue Dec 05 16:29:25 EST 2023" starttimestamp="1701807005597" timestamp="4760084" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1733" _type="ShellCommand" date="Tue Dec 05 16:29:27 EST 2023" starttimestamp="1701807005597" timestamp="4761989" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1736" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:29:38 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4772908" type="Run" />
  <Command __id="1737" _type="ShellCommand" date="Tue Dec 05 16:29:51 EST 2023" starttimestamp="1701807005597" timestamp="4786028" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1719" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:29:12 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4747205">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1738" _type="ShellCommand" date="Tue Dec 05 16:30:18 EST 2023" starttimestamp="1701807005597" timestamp="4812763" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1799" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:31:42 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4896950" type="Run" />
  <Command __id="1800" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 16:31:42 EST 2023" starttimestamp="1701807005597" timestamp="4896951" />
  <Command __id="1801" _type="ConsoleOutput" date="Tue Dec 05 16:31:42 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4896983" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA ("), Diff(DELETE,"DISTANCE DURATION EXHALATION) (COND ((AND (>= DISTANCE 13) (<= DURATION 30) (<= EXHALATION 30)) T) ((AND (>= DISTANCE 6) (<= DURATION 30) (<= EXHALATION 10)) T) ((AND (>= DISTANCE 27) (<= DURATION 30) (<= EXHALATION 50)) T) ((AND (>= DISTANCE 13) (<= DURATION 15) (<= EXHALATION 50)) T) ((AND (>= DISTANCE 13) (<= DURATION 120) (<= EXHALATION 10)) T) ((AND (>= DISTANCE 27) (<= DURATION 120) (<= EXHALATION 30)) T) ((AND (>= DISTANCE 6) (<= DURATION 15) (<= EXHALATION 30)) T))"), Diff(INSERT,"X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1802" _type="ShellCommand" date="Tue Dec 05 16:31:43 EST 2023" starttimestamp="1701807005597" timestamp="4897686" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1803" _type="ShellCommand" date="Tue Dec 05 16:31:52 EST 2023" starttimestamp="1701807005597" timestamp="4906674" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1806" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:31:59 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4914001" type="Run" />
  <Command __id="1739" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:30:27 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4822328">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1781" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:31:29 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="4883898">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1810" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:32:04 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4919326" type="Run" />
  <Command __id="1811" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 16:32:04 EST 2023" starttimestamp="1701807005597" timestamp="4919326" />
  <Command __id="1812" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:32:04 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4919334" type="Debug" />
  <Command __id="1813" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:32:04 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4919334" type="Run" />
  <Command __id="1814" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:32:04 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4919334" type="Debug" />
  <Command __id="1815" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:32:04 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4919334" type="Run" />
  <Command __id="1816" _type="ExceptionCommand" date="Tue Dec 05 16:32:04 EST 2023" starttimestamp="1701807005597" timestamp="4919341" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.LambdaEvaluator.eval(LambdaEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1826" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:32:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4942716" type="Run" />
  <Command __id="1827" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:32:28 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4942716" type="Run" />
  <Command __id="1828" _type="ShellCommand" date="Tue Dec 05 16:32:28 EST 2023" starttimestamp="1701807005597" timestamp="4943024" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1829" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945750" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1830" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945752" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1831" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945757" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1832" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945757" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1833" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945758" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1834" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945759" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1835" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945785" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):33"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1836" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945786" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):35
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1837" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945788" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:L"), Diff(DELETE,"oadLisp"), Diff(INSERT,"ispLambda"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):35¶")]]]></diff>
  </Command>
  <Command __id="1838" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945789" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1839" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945790" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1840" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945791" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1841" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945792" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1842" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945792" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1843" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945794" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1844" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945794" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1845" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945797" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,¶¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="1846" _type="ConsoleOutput" date="Tue Dec 05 16:32:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4945797" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:LoadLambdaChecker"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,",100.0% complete,15.0,15.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="1847" _type="ConsoleOutput" date="Tue Dec 05 16:32:37 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4951872" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test Result:GreaterChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):2¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadLambda"), Diff(INSERT,"Greater"), Diff(EQUAL,"Checker"), Diff(DELETE,"3"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="1848" _type="ConsoleOutput" date="Tue Dec 05 16:32:37 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4951873" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2¶Test Result:GreaterChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1849" _type="ConsoleOutput" date="Tue Dec 05 16:32:37 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4951874" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1850" _type="ConsoleOutput" date="Tue Dec 05 16:32:37 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4951874" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1851" _type="ConsoleOutput" date="Tue Dec 05 16:32:37 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4951875" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1852" _type="ConsoleOutput" date="Tue Dec 05 16:32:37 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4951876" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1853" _type="ConsoleOutput" date="Tue Dec 05 16:32:37 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4951877" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1861" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:32:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4960938" type="Run" />
  <Command __id="1862" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:32:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4960939" type="Run" />
  <Command __id="1863" _type="ShellCommand" date="Tue Dec 05 16:32:47 EST 2023" starttimestamp="1701807005597" timestamp="4961755" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1864" _type="ShellCommand" date="Tue Dec 05 16:32:54 EST 2023" starttimestamp="1701807005597" timestamp="4968962" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1865" _type="ConsoleOutput" date="Tue Dec 05 16:32:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4969625" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1866" _type="ShellCommand" date="Tue Dec 05 16:32:55 EST 2023" starttimestamp="1701807005597" timestamp="4970220" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1817" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:32:09 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4924050">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1867" _type="ShellCommand" date="Tue Dec 05 16:32:58 EST 2023" starttimestamp="1701807005597" timestamp="4972830" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1868" _type="ConsoleOutput" date="Tue Dec 05 16:32:58 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="4973235" type="ConsoleOutput">
    <outputString><![CDATA[(funcall f 1)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"(funcall f 1)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1869" _type="ExceptionCommand" date="Tue Dec 05 16:32:58 EST 2023" starttimestamp="1701807005597" timestamp="4973243" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.LambdaEvaluator.eval(LambdaEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1870" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:32:58 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4973246" type="Debug" />
  <Command __id="1871" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:32:58 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4973246" type="Run" />
  <Command __id="1872" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:32:58 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="4973246" type="Debug" />
  <Command __id="1873" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:32:58 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4973246" type="Run" />
  <Command __id="1875" _type="SelectTextCommand" caretOffset="647" date="Tue Dec 05 16:33:05 EST 2023" end="647" start="570" starttimestamp="1701807005597" timestamp="4979869" />
  <Command __id="1874" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:33:05 EST 2023" docASTNodeCount="157" docActiveCodeLength="944" docExpressionCount="112" docLength="944" projectName="Assignment5" starttimestamp="1701807005597" timestamp="4979815">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="1876" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:33:44 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="5018953" />
  <Command __id="1877" _type="MoveCaretCommand" caretOffset="843" date="Tue Dec 05 16:33:44 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="5018953" />
  <DocumentChange __id="1878" _type="Replace" date="Tue Dec 05 16:33:45 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" endLine="27" insertionLength="912" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="944" offset="0" startLine="0" starttimestamp="1701807005597" timestamp="5020007">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();
			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead());
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></insertedText>
  </DocumentChange>
  <Command __id="1879" _type="UndoCommand" date="Tue Dec 05 16:33:45 EST 2023" starttimestamp="1701807005597" timestamp="5020018" />
  <DocumentChange __id="1880" _type="Replace" date="Tue Dec 05 16:33:47 EST 2023" docASTNodeCount="157" docActiveCodeLength="944" docExpressionCount="112" docLength="944" endLine="27" insertionLength="944" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="912" offset="0" startLine="0" starttimestamp="1701807005597" timestamp="5021811">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead());
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();
			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></insertedText>
  </DocumentChange>
  <Command __id="1881" _type="RedoCommand" date="Tue Dec 05 16:33:47 EST 2023" starttimestamp="1701807005597" timestamp="5021827" />
  <Command __id="1883" _type="UndoCommand" date="Tue Dec 05 16:33:48 EST 2023" starttimestamp="1701807005597" timestamp="5023218" />
  <Command __id="1884" _type="MoveCaretCommand" caretOffset="811" date="Tue Dec 05 16:33:50 EST 2023" docOffset="811" starttimestamp="1701807005597" timestamp="5025343" />
  <Command __id="1885" _type="MoveCaretCommand" caretOffset="811" date="Tue Dec 05 16:33:50 EST 2023" docOffset="811" starttimestamp="1701807005597" timestamp="5025343" />
  <Command __id="1898" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:34:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5035173" type="Run" />
  <Command __id="1899" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:34:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5035173" type="Run" />
  <Command __id="1908" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:34:06 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5041362" type="Run" />
  <Command __id="1909" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:34:06 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5041362" type="Run" />
  <Command __id="1910" _type="ShellCommand" date="Tue Dec 05 16:34:07 EST 2023" starttimestamp="1701807005597" timestamp="5041772" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1911" _type="ShellCommand" date="Tue Dec 05 16:34:09 EST 2023" starttimestamp="1701807005597" timestamp="5043968" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1912" _type="PasteCommand" date="Tue Dec 05 16:34:09 EST 2023" starttimestamp="1701807005597" timestamp="5044292" />
  <Command __id="1913" _type="ConsoleOutput" date="Tue Dec 05 16:34:10 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5044753" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:19)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1916" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:34:17 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5051838" type="Debug" />
  <Command __id="1917" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:34:17 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5051838" type="Run" />
  <Command __id="1918" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:34:17 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5051838" type="Debug" />
  <Command __id="1919" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:34:17 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5051838" type="Run" />
  <Command __id="1920" _type="MoveCaretCommand" caretOffset="741" date="Tue Dec 05 16:34:17 EST 2023" docOffset="741" starttimestamp="1701807005597" timestamp="5052396" />
  <Command __id="1921" _type="MoveCaretCommand" caretOffset="741" date="Tue Dec 05 16:34:17 EST 2023" docOffset="741" starttimestamp="1701807005597" timestamp="5052396" />
  <Command __id="1922" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:18 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5052918" />
  <Command __id="1923" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:18 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5052918" />
  <Command __id="1924" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:18 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5053373" />
  <Command __id="1925" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:18 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5053373" />
  <Command __id="1926" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:19 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5054200" />
  <Command __id="1927" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:19 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5054200" />
  <Command __id="1928" _type="MoveCaretCommand" caretOffset="750" date="Tue Dec 05 16:34:20 EST 2023" docOffset="750" starttimestamp="1701807005597" timestamp="5054711" />
  <Command __id="1929" _type="MoveCaretCommand" caretOffset="750" date="Tue Dec 05 16:34:20 EST 2023" docOffset="750" starttimestamp="1701807005597" timestamp="5054711" />
  <Command __id="1930" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:20 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5055308" />
  <Command __id="1931" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:20 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5055308" />
  <Command __id="1932" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:21 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5055772" />
  <Command __id="1933" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:21 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5055772" />
  <Command __id="1934" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:21 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5056266" />
  <Command __id="1935" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:21 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5056266" />
  <Command __id="1936" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:22 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5056748" />
  <Command __id="1937" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:22 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5056748" />
  <Command __id="1938" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:22 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5057147" />
  <Command __id="1939" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:22 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5057147" />
  <Command __id="1940" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:23 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5057551" />
  <Command __id="1941" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:23 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5057551" />
  <Command __id="1942" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:23 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5057976" />
  <Command __id="1943" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:23 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5057976" />
  <Command __id="1944" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:24 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5058542" />
  <Command __id="1945" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:24 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5058543" />
  <Command __id="1946" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:24 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5059086" />
  <Command __id="1947" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:24 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5059086" />
  <Command __id="1948" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:25 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5059519" />
  <Command __id="1949" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:25 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5059519" />
  <Command __id="1950" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:25 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5059955" />
  <Command __id="1951" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:25 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5059955" />
  <Command __id="1952" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:25 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5060362" />
  <Command __id="1953" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:25 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5060362" />
  <Command __id="1954" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:26 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5060772" />
  <Command __id="1955" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:26 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5060772" />
  <Command __id="1956" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:26 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5061194" />
  <Command __id="1957" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:26 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5061194" />
  <Command __id="1958" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:27 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5061703" />
  <Command __id="1959" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:34:27 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5061703" />
  <Command __id="1960" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:27 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5062162" />
  <Command __id="1961" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:34:27 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5062162" />
  <Command __id="1962" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:28 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5062567" />
  <Command __id="1963" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:34:28 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5062567" />
  <Command __id="1988" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:34:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5077992" type="Run" />
  <Command __id="1989" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:34:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5077993" type="Run" />
  <Command __id="1990" _type="ShellCommand" date="Tue Dec 05 16:34:43 EST 2023" starttimestamp="1701807005597" timestamp="5078293" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1991" _type="ConsoleOutput" date="Tue Dec 05 16:34:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5082295" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"Test execution time (ms):0¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1992" _type="ConsoleOutput" date="Tue Dec 05 16:34:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5082297" type="ConsoleOutput">
    <outputString><![CDATA[
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1993" _type="ConsoleOutput" date="Tue Dec 05 16:34:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5082300" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1994" _type="ConsoleOutput" date="Tue Dec 05 16:34:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5082300" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1995" _type="ConsoleOutput" date="Tue Dec 05 16:34:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5082301" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1996" _type="ConsoleOutput" date="Tue Dec 05 16:34:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5082301" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1997" _type="ExceptionCommand" date="Tue Dec 05 16:34:47 EST 2023" starttimestamp="1701807005597" timestamp="5082322" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1998" _type="ConsoleOutput" date="Tue Dec 05 16:34:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5082325" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1999" _type="ConsoleOutput" date="Tue Dec 05 16:34:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5082384" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(INSERT,"56"), Diff(EQUAL,"6)¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:4"), Diff(DELETE,"2"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"24"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s.B"), Diff(DELETE,"asicExpression.eval(BasicExpression"), Diff(INSERT,"lockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"57"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"10"), Diff(INSERT,"29"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"33"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"6"), Diff(EQUAL,"5"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"1"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"47"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"68"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContex"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Componen"), Diff(EQUAL,"t.java:5"), Diff(DELETE,"2"), Diff(INSERT,"011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironm"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Compon"), Diff(EQUAL,"ent.java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contain"), Diff(EQUAL,"er.java:45"), Diff(INSERT,"56"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:23"), Diff(DELETE,"1"), Diff(INSERT,"07"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"77"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"721"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2000" _type="ExceptionCommand" date="Tue Dec 05 16:34:47 EST 2023" starttimestamp="1701807005597" timestamp="5082391" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):34
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42

java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <DocumentChange __id="1882" _type="Replace" date="Tue Dec 05 16:33:48 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" endLine="27" insertionLength="912" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="944" offset="0" startLine="0" starttimestamp="1701807005597" timestamp="5023202">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();
			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead());
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></insertedText>
  </DocumentChange>
  <Command __id="2001" _type="ShellCommand" date="Tue Dec 05 16:34:56 EST 2023" starttimestamp="1701807005597" timestamp="5091399" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2003" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 16:35:16 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="5110922" />
  <Command __id="2004" _type="MoveCaretCommand" caretOffset="1639" date="Tue Dec 05 16:35:21 EST 2023" docOffset="1753" starttimestamp="1701807005597" timestamp="5115725" />
  <Command __id="2005" _type="SelectTextCommand" caretOffset="1640" date="Tue Dec 05 16:35:21 EST 2023" end="1640" start="1634" starttimestamp="1701807005597" timestamp="5115886" />
  <Command __id="2002" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:35:16 EST 2023" docASTNodeCount="236" docActiveCodeLength="2081" docExpressionCount="163" docLength="2081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5110863">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BasicOperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}		public static void registerAdvance() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("SETQ", new SetqEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LAMBDA", new LambdaEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("FUNCALL", new FuncallEvaluator());	}		@Override	public void registerOperations() {		registerAll();	}		public static void registerAll() {		registerBasic();		registerArithmetic();		registerLogic();		registerAdvance();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2006" _type="MoveCaretCommand" caretOffset="1621" date="Tue Dec 05 16:35:32 EST 2023" docOffset="1735" starttimestamp="1701807005597" timestamp="5127190" />
  <Command __id="2007" _type="LocalChecksRawCommand" date="Tue Dec 05 16:35:32 EST 2023" starttimestamp="1701807005597" timestamp="5127195">
    <CSVRow><![CDATA[146,Tue Dec 05 16:34:47 EST 2023,47,-3,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLispChecker- PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,66,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2008" _type="LocalChecksRawCommand" date="Tue Dec 05 16:35:32 EST 2023" starttimestamp="1701807005597" timestamp="5127195">
    <CSVRow><![CDATA[146,Tue Dec 05 16:34:47 EST 2023,47,-3,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLispChecker- PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,66,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2009" _type="SelectTextCommand" caretOffset="1632" date="Tue Dec 05 16:35:32 EST 2023" end="1632" start="1610" starttimestamp="1701807005597" timestamp="5127352" />
  <Command __id="2010" _type="MoveCaretCommand" caretOffset="1634" date="Tue Dec 05 16:35:33 EST 2023" docOffset="1748" starttimestamp="1701807005597" timestamp="5128024" />
  <Command __id="2011" _type="MoveCaretCommand" caretOffset="1636" date="Tue Dec 05 16:35:34 EST 2023" docOffset="1750" starttimestamp="1701807005597" timestamp="5128577" />
  <Command __id="2012" _type="SelectTextCommand" caretOffset="1640" date="Tue Dec 05 16:35:34 EST 2023" end="1640" start="1634" starttimestamp="1701807005597" timestamp="5128735" />
  <Command __id="2013" _type="MoveCaretCommand" caretOffset="1628" date="Tue Dec 05 16:35:34 EST 2023" docOffset="1742" starttimestamp="1701807005597" timestamp="5129205" />
  <Command __id="2014" _type="SelectTextCommand" caretOffset="1632" date="Tue Dec 05 16:35:34 EST 2023" end="1632" start="1610" starttimestamp="1701807005597" timestamp="5129351" />
  <Command __id="2015" _type="MoveCaretCommand" caretOffset="1635" date="Tue Dec 05 16:35:35 EST 2023" docOffset="1749" starttimestamp="1701807005597" timestamp="5129845" />
  <Command __id="2016" _type="SelectTextCommand" caretOffset="1640" date="Tue Dec 05 16:35:35 EST 2023" end="1640" start="1634" starttimestamp="1701807005597" timestamp="5130010" />
  <Command __id="2017" _type="MoveCaretCommand" caretOffset="1650" date="Tue Dec 05 16:35:36 EST 2023" docOffset="1764" starttimestamp="1701807005597" timestamp="5130604" />
  <Command __id="2018" _type="MoveCaretCommand" caretOffset="1637" date="Tue Dec 05 16:35:36 EST 2023" docOffset="1751" starttimestamp="1701807005597" timestamp="5131222" />
  <Command __id="2019" _type="SelectTextCommand" caretOffset="1640" date="Tue Dec 05 16:35:36 EST 2023" end="1640" start="1634" starttimestamp="1701807005597" timestamp="5131378" />
  <Command __id="2020" _type="MoveCaretCommand" caretOffset="1628" date="Tue Dec 05 16:35:37 EST 2023" docOffset="1742" starttimestamp="1701807005597" timestamp="5131815" />
  <Command __id="2021" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:35:38 EST 2023" docASTNodeCount="137" docActiveCodeLength="779" docExpressionCount="99" docLength="779" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5133263">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2022" _type="MoveCaretCommand" caretOffset="361" date="Tue Dec 05 16:35:38 EST 2023" docOffset="574" starttimestamp="1701807005597" timestamp="5133336" />
  <Command __id="2023" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:35:39 EST 2023" docASTNodeCount="460" docActiveCodeLength="3317" docExpressionCount="226" docLength="3997" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5134120">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;	import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;import gradingTools.comp524f23.assignment6.ClassRegistryA6;public class ClassRegistryImpl implements ClassRegistryA6 {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}	@Override	public Class<? extends SExpression> getFunctionCallingSExpression() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getFunctionCallingSExpression'");	}	@Override	public Class<? extends Evaluator> getFunctionEvaluator() {		return FuncallEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLetEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getLetEvaluator'");	}	@Override	public Class<? extends Evaluator> getBasicFuncallEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getBasicFuncallEvaluator'");	}	@Override	public Class<? extends IdentifierAtom> getIdentifierAtomWithLookup() {		return IdentifierAtomImpl.class;	}	@Override	public Class<? extends SExpression> getLambdaCallingSExpression() {		return null;	}	@Override	public Class<? extends Evaluator> getLambdaEvaluator() {		return LambdaEvaluator.class;	}	@Override	public Class<? extends Environment> getNestedLexicalEnvironment() {		// TODO Auto-generated method stub		return EnvironmentImpl.class;	}	@Override	public Class<? extends Evaluator> getSetqEvaluator() {		return SetqEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getStatefulOperationRegisterer() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getStatefulOperationRegisterer'");	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2024" _type="MoveCaretCommand" caretOffset="2540" date="Tue Dec 05 16:35:39 EST 2023" docOffset="2776" starttimestamp="1701807005597" timestamp="5134168" />
  <Command __id="2031" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:35:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5148002" type="Run" />
  <Command __id="2032" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:35:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5148002" type="Run" />
  <Command __id="2033" _type="ShellCommand" date="Tue Dec 05 16:35:53 EST 2023" starttimestamp="1701807005597" timestamp="5148383" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2037" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:36:06 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5161260" type="Debug" />
  <Command __id="2038" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:36:06 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5161260" type="Run" />
  <Command __id="2039" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:36:06 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5161260" type="Debug" />
  <Command __id="2040" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:36:06 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5161260" type="Run" />
  <Command __id="2025" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:35:40 EST 2023" docASTNodeCount="137" docActiveCodeLength="779" docExpressionCount="99" docLength="779" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5134941">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2043" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:36:12 EST 2023" docASTNodeCount="460" docActiveCodeLength="3317" docExpressionCount="226" docLength="3997" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5167146">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/ClassRegistryImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;	import main.lisp.evaluator.OperationRegisterer;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;import gradingTools.comp524f23.assignment6.ClassRegistryA6;public class ClassRegistryImpl implements ClassRegistryA6 {	@Override	public Class<? extends Evaluator> getAndEvaluator() {		// TODO Auto-generated method stub		return AndEvaluator.class;	}	@Override	public Class<? extends Evaluator> getCondEvaluator() {		// TODO Auto-generated method stub		return CondEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getCustomOperationRegisterer() {		// TODO Auto-generated method stub		return OperationRegistererImpl.class;	}	@Override	public Class<? extends Evaluator> getEvalEvaluator() {		// TODO Auto-generated method stub		return EvalEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEEvaluator() {		// TODO Auto-generated method stub		return GreaterEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getGTEvaluator() {		// TODO Auto-generated method stub		return GreaterEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEEvaluator() {		// TODO Auto-generated method stub		return LesserEqualEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLTEvaluator() {		// TODO Auto-generated method stub		return LesserEvaluator.class;	}	@Override	public Class<? extends Evaluator> getListEvaluator() {		// TODO Auto-generated method stub		return ListEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLoadEvaluator() {		// TODO Auto-generated method stub		return LoadEvaluator.class;	}	@Override	public Class<?> getMain() {		// TODO Auto-generated method stub		return index.class;	}	@Override	public Class<? extends Evaluator> getNotEvaluator() {		// TODO Auto-generated method stub		return NotEvaluator.class;	}	@Override	public Class<? extends Evaluator> getOrEvaluator() {		// TODO Auto-generated method stub		return OrEvaluator.class;	}	@Override	public Class<? extends Evaluator> getQuoteEvaluator() {		// TODO Auto-generated method stub		return QuoteEvaluator.class;	}	@Override	public Class<? extends SExpression> getStringFormattingSExpression() {		// TODO Auto-generated method stub		return BasicExpressionImpl.class;	}	@Override	public Class<? extends SExpression> getFunctionCallingSExpression() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getFunctionCallingSExpression'");	}	@Override	public Class<? extends Evaluator> getFunctionEvaluator() {		return FuncallEvaluator.class;	}	@Override	public Class<? extends Evaluator> getLetEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getLetEvaluator'");	}	@Override	public Class<? extends Evaluator> getBasicFuncallEvaluator() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getBasicFuncallEvaluator'");	}	@Override	public Class<? extends IdentifierAtom> getIdentifierAtomWithLookup() {		return IdentifierAtomImpl.class;	}	@Override	public Class<? extends SExpression> getLambdaCallingSExpression() {		return null;	}	@Override	public Class<? extends Evaluator> getLambdaEvaluator() {		return LambdaEvaluator.class;	}	@Override	public Class<? extends Environment> getNestedLexicalEnvironment() {		// TODO Auto-generated method stub		return EnvironmentImpl.class;	}	@Override	public Class<? extends Evaluator> getSetqEvaluator() {		return SetqEvaluator.class;	}	@Override	public Class<? extends OperationRegisterer> getStatefulOperationRegisterer() {		// TODO Auto-generated method stub		throw new UnsupportedOperationException("Unimplemented method 'getStatefulOperationRegisterer'");	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2041" _type="MoveCaretCommand" caretOffset="14" date="Tue Dec 05 16:36:12 EST 2023" docOffset="14" starttimestamp="1701807005597" timestamp="5166608" />
  <Command __id="2042" _type="MoveCaretCommand" caretOffset="14" date="Tue Dec 05 16:36:12 EST 2023" docOffset="14" starttimestamp="1701807005597" timestamp="5166608" />
  <Command __id="2044" _type="MoveCaretCommand" caretOffset="2540" date="Tue Dec 05 16:36:12 EST 2023" docOffset="2776" starttimestamp="1701807005597" timestamp="5167190" />
  <Command __id="2046" _type="MoveCaretCommand" caretOffset="1628" date="Tue Dec 05 16:36:15 EST 2023" docOffset="1742" starttimestamp="1701807005597" timestamp="5169943" />
  <Command __id="2048" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:36:16 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="5170585" />
  <Command __id="2049" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:36:21 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5175485" />
  <Command __id="2050" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:36:21 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5175485" />
  <Command __id="2051" _type="ShellCommand" date="Tue Dec 05 16:36:21 EST 2023" starttimestamp="1701807005597" timestamp="5176335" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2052" _type="ShellCommand" date="Tue Dec 05 16:36:52 EST 2023" starttimestamp="1701807005597" timestamp="5206571" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2053" _type="MoveCaretCommand" caretOffset="665" date="Tue Dec 05 16:36:56 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="5211022" />
  <Command __id="2054" _type="MoveCaretCommand" caretOffset="665" date="Tue Dec 05 16:36:56 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="5211022" />
  <Command __id="2045" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:36:15 EST 2023" docASTNodeCount="236" docActiveCodeLength="2081" docExpressionCount="163" docLength="2081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5169875">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/OperationRegistererImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.OperationRegisterer;import main.lisp.evaluator.BasicOperationRegisterer;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class OperationRegistererImpl extends BasicOperationRegisterer implements OperationRegisterer{		public static void registerBasic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("QUOTE", new QuoteEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LIST", new ListEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LOAD", new LoadEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("EVAL", new EvalEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("COND", new CondEvaluator());	}		public static void registerArithmetic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">", new GreaterEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<", new LesserEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew(">=", new GreaterEqualEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("<=", new LesserEqualEvaluator());	}		public static void registerLogic() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("AND", new AndEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("OR", new OrEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("NOT", new NotEvaluator());	}		public static void registerAdvance() {		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("SETQ", new SetqEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("LAMBDA", new LambdaEvaluator());		BuiltinOperationManagerSingleton.get().registerEvaluatorIfNew("FUNCALL", new FuncallEvaluator());	}		@Override	public void registerOperations() {		registerAll();	}		public static void registerAll() {		registerBasic();		registerArithmetic();		registerLogic();		registerAdvance();	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2047" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:36:16 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5170513">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;"), Diff(INSERT,"import main.lisp.evaluator.BuiltinOperationManagerSingleton;"), Diff(EQUAL,"import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda"), Diff(DELETE,"Evaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval"), Diff(INSERT," lambda = (Lambda)"), Diff(EQUAL,"(expr.getHead()"), Diff(DELETE,", environment"), Diff(EQUAL,");			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead());
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="2055" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:36:57 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="5212365" />
  <Command __id="2056" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:36:57 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="5212365" />
  <Command __id="2057" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:36:58 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="5212911" />
  <Command __id="2058" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:36:58 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="5212911" />
  <DocumentChange __id="2059" _type="Insert" date="Tue Dec 05 16:37:00 EST 2023" docASTNodeCount="127" docActiveCodeLength="913" docExpressionCount="94" docLength="913" length="1" offset="614" starttimestamp="1701807005597" timestamp="5215300">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="2060" _type="InsertStringCommand" date="Tue Dec 05 16:37:00 EST 2023" starttimestamp="1701807005597" timestamp="5215303" timestamp2="5215303">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2061" _type="InsertStringCommand" date="Tue Dec 05 16:37:00 EST 2023" starttimestamp="1701807005597" timestamp="5215303" timestamp2="5215303">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2062" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 16:37:00 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="5215325" />
  <Command __id="2064" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 16:37:02 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="5216870" />
  <Command __id="2065" _type="MoveCaretCommand" caretOffset="380" date="Tue Dec 05 16:37:02 EST 2023" docOffset="380" starttimestamp="1701807005597" timestamp="5216879" />
  <Command __id="2066" _type="MoveCaretCommand" caretOffset="380" date="Tue Dec 05 16:37:02 EST 2023" docOffset="380" starttimestamp="1701807005597" timestamp="5216879" />
  <Command __id="2067" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:37:04 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5219246" />
  <Command __id="2068" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:37:04 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5219246" />
  <Command __id="2069" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:37:05 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="5220120" />
  <Command __id="2070" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:37:05 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="5220120" />
  <Command __id="2071" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:37:06 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5220783" />
  <Command __id="2072" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:37:06 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5220783" />
  <Command __id="2073" _type="MoveCaretCommand" caretOffset="667" date="Tue Dec 05 16:37:06 EST 2023" docOffset="667" starttimestamp="1701807005597" timestamp="5221264" />
  <Command __id="2074" _type="MoveCaretCommand" caretOffset="667" date="Tue Dec 05 16:37:06 EST 2023" docOffset="667" starttimestamp="1701807005597" timestamp="5221264" />
  <Command __id="2075" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:37:07 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5221750" />
  <Command __id="2076" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:37:07 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5221750" />
  <Command __id="2077" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:37:07 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5222206" />
  <Command __id="2078" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:37:07 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5222206" />
  <Command __id="2080" _type="InsertStringCommand" date="Tue Dec 05 16:37:08 EST 2023" starttimestamp="1701807005597" timestamp="5222619" timestamp2="5222619">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2081" _type="InsertStringCommand" date="Tue Dec 05 16:37:08 EST 2023" starttimestamp="1701807005597" timestamp="5222619" timestamp2="5222619">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2083" _type="InsertStringCommand" date="Tue Dec 05 16:37:08 EST 2023" starttimestamp="1701807005597" timestamp="5222876" timestamp2="5222876">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2084" _type="InsertStringCommand" date="Tue Dec 05 16:37:08 EST 2023" starttimestamp="1701807005597" timestamp="5222876" timestamp2="5222876">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2086" _type="InsertStringCommand" date="Tue Dec 05 16:37:08 EST 2023" starttimestamp="1701807005597" timestamp="5222986" timestamp2="5222986">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2087" _type="InsertStringCommand" date="Tue Dec 05 16:37:08 EST 2023" starttimestamp="1701807005597" timestamp="5222986" timestamp2="5222986">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2089" _type="InsertStringCommand" date="Tue Dec 05 16:37:08 EST 2023" starttimestamp="1701807005597" timestamp="5223128" timestamp2="5223128">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2090" _type="InsertStringCommand" date="Tue Dec 05 16:37:08 EST 2023" starttimestamp="1701807005597" timestamp="5223128" timestamp2="5223128">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2092" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:37:09 EST 2023" starttimestamp="1701807005597" timestamp="5223515" />
  <Command __id="2093" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:37:09 EST 2023" starttimestamp="1701807005597" timestamp="5223515" />
  <Command __id="2095" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:37:09 EST 2023" starttimestamp="1701807005597" timestamp="5223627" />
  <Command __id="2096" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:37:09 EST 2023" starttimestamp="1701807005597" timestamp="5223627" />
  <Command __id="2098" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:37:09 EST 2023" starttimestamp="1701807005597" timestamp="5223763" />
  <Command __id="2099" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:37:09 EST 2023" starttimestamp="1701807005597" timestamp="5223764" />
  <Command __id="2101" _type="InsertStringCommand" date="Tue Dec 05 16:37:09 EST 2023" starttimestamp="1701807005597" timestamp="5224381" timestamp2="5224381">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2102" _type="InsertStringCommand" date="Tue Dec 05 16:37:09 EST 2023" starttimestamp="1701807005597" timestamp="5224381" timestamp2="5224381">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2104" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:37:10 EST 2023" starttimestamp="1701807005597" timestamp="5224785" />
  <Command __id="2105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 16:37:10 EST 2023" starttimestamp="1701807005597" timestamp="5224785" />
  <Command __id="2107" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5225683" timestamp2="5225683">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2108" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5225683" timestamp2="5225683">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2110" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5225816" timestamp2="5225816">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2111" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5225816" timestamp2="5225816">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2113" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5225865" timestamp2="5225865">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2114" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5225865" timestamp2="5225865">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2116" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5226030" timestamp2="5226030">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2117" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5226030" timestamp2="5226030">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2119" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5226333" timestamp2="5226333">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2120" _type="InsertStringCommand" date="Tue Dec 05 16:37:11 EST 2023" starttimestamp="1701807005597" timestamp="5226333" timestamp2="5226333">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2122" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5226418" timestamp2="5226418">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2123" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5226419" timestamp2="5226419">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2125" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5226726" timestamp2="5226726">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2126" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5226727" timestamp2="5226727">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2128" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5226769" timestamp2="5226769">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2129" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5226769" timestamp2="5226769">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2131" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5226910" timestamp2="5226910">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2132" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5226910" timestamp2="5226910">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="2063" _type="Delete" date="Tue Dec 05 16:37:01 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" endLine="15" length="1" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="5215658">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2079" _type="Insert" date="Tue Dec 05 16:37:08 EST 2023" docASTNodeCount="108" docActiveCodeLength="919" docExpressionCount="80" docLength="919" length="7" offset="615" repeat="4" starttimestamp="1701807005597" timestamp="5222614" timestamp2="5223127">
    <text><![CDATA[
			lam]]></text>
  </DocumentChange>
  <DocumentChange __id="2091" _type="Delete" date="Tue Dec 05 16:37:09 EST 2023" docASTNodeCount="154" docActiveCodeLength="916" docExpressionCount="112" docLength="916" endLine="16" length="3" offset="619" repeat="3" startLine="16" starttimestamp="1701807005597" timestamp="5223512" timestamp2="5223761">
    <text><![CDATA[lam]]></text>
  </DocumentChange>
  <DocumentChange __id="2100" _type="Insert" date="Tue Dec 05 16:37:09 EST 2023" docASTNodeCount="108" docActiveCodeLength="917" docExpressionCount="80" docLength="917" length="1" offset="619" starttimestamp="1701807005597" timestamp="5224380">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="2103" _type="Delete" date="Tue Dec 05 16:37:10 EST 2023" docASTNodeCount="154" docActiveCodeLength="916" docExpressionCount="112" docLength="916" endLine="16" length="1" offset="619" startLine="16" starttimestamp="1701807005597" timestamp="5224783">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="2106" _type="Insert" date="Tue Dec 05 16:37:11 EST 2023" docASTNodeCount="152" docActiveCodeLength="935" docExpressionCount="114" docLength="935" length="19" offset="619" repeat="19" starttimestamp="1701807005597" timestamp="5225681" timestamp2="5228605">
    <text><![CDATA[lambda = lambda.eva]]></text>
  </DocumentChange>
  <DocumentChange __id="2159" _type="Replace" date="Tue Dec 05 16:37:14 EST 2023" docASTNodeCount="153" docActiveCodeLength="954" docExpressionCount="115" docLength="954" endLine="16" insertionLength="22" int_docASTNodeCount="131" int_docActiveCodeLength="932" int_docExpressionCount="97" int_docLength="932" length="3" offset="635" startLine="16" starttimestamp="1701807005597" timestamp="5229071">
    <deletedText><![CDATA[eva]]></deletedText>
    <insertedText><![CDATA[eval(childEnvironment)]]></insertedText>
  </DocumentChange>
  <Command __id="2134" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5227132" timestamp2="5227132">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2135" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5227132" timestamp2="5227132">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2137" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5227295" timestamp2="5227295">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2138" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5227296" timestamp2="5227296">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2140" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5227346" timestamp2="5227346">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2141" _type="InsertStringCommand" date="Tue Dec 05 16:37:12 EST 2023" starttimestamp="1701807005597" timestamp="5227346" timestamp2="5227346">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2143" _type="InsertStringCommand" date="Tue Dec 05 16:37:13 EST 2023" starttimestamp="1701807005597" timestamp="5227467" timestamp2="5227467">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2144" _type="InsertStringCommand" date="Tue Dec 05 16:37:13 EST 2023" starttimestamp="1701807005597" timestamp="5227467" timestamp2="5227467">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2146" _type="InsertStringCommand" date="Tue Dec 05 16:37:13 EST 2023" starttimestamp="1701807005597" timestamp="5227656" timestamp2="5227656">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2147" _type="InsertStringCommand" date="Tue Dec 05 16:37:13 EST 2023" starttimestamp="1701807005597" timestamp="5227656" timestamp2="5227656">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2149" _type="InsertStringCommand" date="Tue Dec 05 16:37:13 EST 2023" starttimestamp="1701807005597" timestamp="5227710" timestamp2="5227710">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2150" _type="InsertStringCommand" date="Tue Dec 05 16:37:13 EST 2023" starttimestamp="1701807005597" timestamp="5227710" timestamp2="5227710">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2152" _type="InsertStringCommand" date="Tue Dec 05 16:37:13 EST 2023" starttimestamp="1701807005597" timestamp="5227860" timestamp2="5227860">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2153" _type="InsertStringCommand" date="Tue Dec 05 16:37:13 EST 2023" starttimestamp="1701807005597" timestamp="5227860" timestamp2="5227860">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2154" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 16:37:13 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="5227866" />
  <Command __id="2158" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 16:37:14 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="5229066" />
  <Command __id="2160" _type="InsertStringCommand" date="Tue Dec 05 16:37:14 EST 2023" starttimestamp="1701807005597" timestamp="5229099" timestamp2="5229099">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2161" _type="InsertStringCommand" date="Tue Dec 05 16:37:14 EST 2023" starttimestamp="1701807005597" timestamp="5229099" timestamp2="5229099">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2163" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5230434" timestamp2="5230434">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2164" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5230434" timestamp2="5230434">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2166" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5230535" timestamp2="5230535">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2167" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5230535" timestamp2="5230535">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2169" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5230701" timestamp2="5230701">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2170" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5230701" timestamp2="5230701">
    <data><![CDATA[v]]></data>
  </Command>
  <DocumentChange __id="2162" _type="Replace" date="Tue Dec 05 16:37:16 EST 2023" docASTNodeCount="153" docActiveCodeLength="939" docExpressionCount="115" docLength="939" endLine="16" insertionLength="1" int_docASTNodeCount="152" int_docActiveCodeLength="938" int_docExpressionCount="114" int_docLength="938" length="16" offset="640" startLine="16" starttimestamp="1701807005597" timestamp="5230428">
    <deletedText><![CDATA[childEnvironment]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2165" _type="Insert" date="Tue Dec 05 16:37:16 EST 2023" docASTNodeCount="153" docActiveCodeLength="942" docExpressionCount="115" docLength="942" length="3" offset="641" repeat="3" starttimestamp="1701807005597" timestamp="5230534" timestamp2="5230912">
    <text><![CDATA[nvi]]></text>
  </DocumentChange>
  <DocumentChange __id="2174" _type="Replace" date="Tue Dec 05 16:37:16 EST 2023" docASTNodeCount="153" docActiveCodeLength="949" docExpressionCount="115" docLength="949" endLine="16" insertionLength="11" int_docASTNodeCount="152" int_docActiveCodeLength="938" int_docExpressionCount="114" int_docLength="938" length="4" offset="640" startLine="16" starttimestamp="1701807005597" timestamp="5231223">
    <deletedText><![CDATA[envi]]></deletedText>
    <insertedText><![CDATA[environment]]></insertedText>
  </DocumentChange>
  <Command __id="2172" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5230912" timestamp2="5230912">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2173" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5230913" timestamp2="5230913">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2175" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5231232" timestamp2="5231232">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2176" _type="InsertStringCommand" date="Tue Dec 05 16:37:16 EST 2023" starttimestamp="1701807005597" timestamp="5231232" timestamp2="5231232">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2178" _type="InsertStringCommand" date="Tue Dec 05 16:37:17 EST 2023" starttimestamp="1701807005597" timestamp="5232273" timestamp2="5232273">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2179" _type="InsertStringCommand" date="Tue Dec 05 16:37:17 EST 2023" starttimestamp="1701807005597" timestamp="5232273" timestamp2="5232273">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2180" _type="ShellCommand" date="Tue Dec 05 16:37:21 EST 2023" starttimestamp="1701807005597" timestamp="5235584" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2181" _type="ShellCommand" date="Tue Dec 05 16:37:21 EST 2023" starttimestamp="1701807005597" timestamp="5235642" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2185" _type="MoveCaretCommand" caretOffset="606" date="Tue Dec 05 16:37:21 EST 2023" docOffset="606" starttimestamp="1701807005597" timestamp="5236141" />
  <Command __id="2186" _type="MoveCaretCommand" caretOffset="606" date="Tue Dec 05 16:37:21 EST 2023" docOffset="606" starttimestamp="1701807005597" timestamp="5236141" />
  <Command __id="2187" _type="MoveCaretCommand" caretOffset="662" date="Tue Dec 05 16:37:22 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="5236638" />
  <Command __id="2188" _type="MoveCaretCommand" caretOffset="662" date="Tue Dec 05 16:37:22 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="5236639" />
  <Command __id="2189" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 16:37:22 EST 2023" starttimestamp="1701807005597" timestamp="5237008" />
  <Command __id="2190" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:37:22 EST 2023" starttimestamp="1701807005597" timestamp="5237104" />
  <Command __id="2191" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:37:22 EST 2023" starttimestamp="1701807005597" timestamp="5237113" />
  <Command __id="2192" _type="MoveCaretCommand" caretOffset="14" date="Tue Dec 05 16:37:23 EST 2023" docOffset="14" starttimestamp="1701807005597" timestamp="5238333" />
  <Command __id="2193" _type="MoveCaretCommand" caretOffset="14" date="Tue Dec 05 16:37:23 EST 2023" docOffset="14" starttimestamp="1701807005597" timestamp="5238333" />
  <Command __id="2194" _type="ShellCommand" date="Tue Dec 05 16:37:25 EST 2023" starttimestamp="1701807005597" timestamp="5239741" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2195" _type="ShellCommand" date="Tue Dec 05 16:37:32 EST 2023" starttimestamp="1701807005597" timestamp="5247221" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2196" _type="MoveCaretCommand" caretOffset="662" date="Tue Dec 05 16:37:32 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="5247291" />
  <Command __id="2197" _type="MoveCaretCommand" caretOffset="662" date="Tue Dec 05 16:37:32 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="5247291" />
  <Command __id="2199" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Dec 05 16:37:33 EST 2023" starttimestamp="1701807005597" timestamp="5247655" />
  <Command __id="2200" _type="MoveCaretCommand" caretOffset="567" date="Tue Dec 05 16:37:33 EST 2023" docOffset="567" starttimestamp="1701807005597" timestamp="5248149" />
  <Command __id="2201" _type="MoveCaretCommand" caretOffset="567" date="Tue Dec 05 16:37:33 EST 2023" docOffset="567" starttimestamp="1701807005597" timestamp="5248149" />
  <Command __id="2202" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 16:37:33 EST 2023" starttimestamp="1701807005597" timestamp="5248327" />
  <Command __id="2203" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:37:34 EST 2023" starttimestamp="1701807005597" timestamp="5248424" />
  <Command __id="2204" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:37:34 EST 2023" starttimestamp="1701807005597" timestamp="5248463" />
  <Command __id="2205" _type="ShellCommand" date="Tue Dec 05 16:37:45 EST 2023" starttimestamp="1701807005597" timestamp="5259906" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2206" _type="ShellCommand" date="Tue Dec 05 16:37:48 EST 2023" starttimestamp="1701807005597" timestamp="5262561" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2207" _type="ShellCommand" date="Tue Dec 05 16:37:51 EST 2023" starttimestamp="1701807005597" timestamp="5266092" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2208" _type="ShellCommand" date="Tue Dec 05 16:37:58 EST 2023" starttimestamp="1701807005597" timestamp="5272461" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2209" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:37:58 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5272551" />
  <Command __id="2210" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:37:58 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="5272551" />
  <Command __id="2217" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:38:19 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5294146" type="Debug" />
  <Command __id="2218" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:38:19 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5294146" type="Run" />
  <Command __id="2219" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:38:19 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5294146" type="Debug" />
  <Command __id="2220" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:38:19 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5294146" type="Run" />
  <Command __id="2221" _type="ShellCommand" date="Tue Dec 05 16:38:20 EST 2023" starttimestamp="1701807005597" timestamp="5295330" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2222" _type="ShellCommand" date="Tue Dec 05 16:38:34 EST 2023" starttimestamp="1701807005597" timestamp="5309056" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2223" _type="MoveCaretCommand" caretOffset="611" date="Tue Dec 05 16:38:34 EST 2023" docOffset="611" starttimestamp="1701807005597" timestamp="5309128" />
  <Command __id="2224" _type="MoveCaretCommand" caretOffset="611" date="Tue Dec 05 16:38:34 EST 2023" docOffset="611" starttimestamp="1701807005597" timestamp="5309128" />
  <Command __id="2225" _type="MoveCaretCommand" caretOffset="609" date="Tue Dec 05 16:38:35 EST 2023" docOffset="609" starttimestamp="1701807005597" timestamp="5309900" />
  <Command __id="2226" _type="MoveCaretCommand" caretOffset="609" date="Tue Dec 05 16:38:35 EST 2023" docOffset="609" starttimestamp="1701807005597" timestamp="5309900" />
  <Command __id="2227" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:38:37 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="5311712" />
  <Command __id="2228" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:38:37 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="5311712" />
  <Command __id="2229" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:38:38 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="5312857" />
  <Command __id="2230" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:38:38 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="5312857" />
  <Command __id="2231" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:38:39 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="5313584" />
  <Command __id="2232" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:38:39 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="5313585" />
  <Command __id="2233" _type="SelectTextCommand" caretOffset="611" date="Tue Dec 05 16:38:39 EST 2023" end="611" start="604" starttimestamp="1701807005597" timestamp="5313731" />
  <Command __id="2234" _type="SelectTextCommand" caretOffset="611" date="Tue Dec 05 16:38:39 EST 2023" end="611" start="604" starttimestamp="1701807005597" timestamp="5313731" />
  <Command __id="2235" _type="MoveCaretCommand" caretOffset="654" date="Tue Dec 05 16:38:40 EST 2023" docOffset="654" starttimestamp="1701807005597" timestamp="5314860" />
  <Command __id="2236" _type="MoveCaretCommand" caretOffset="654" date="Tue Dec 05 16:38:40 EST 2023" docOffset="654" starttimestamp="1701807005597" timestamp="5314860" />
  <Command __id="2237" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:38:40 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="5315362" />
  <Command __id="2238" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:38:40 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="5315362" />
  <Command __id="2239" _type="MoveCaretCommand" caretOffset="552" date="Tue Dec 05 16:38:41 EST 2023" docOffset="552" starttimestamp="1701807005597" timestamp="5315905" />
  <Command __id="2240" _type="MoveCaretCommand" caretOffset="552" date="Tue Dec 05 16:38:41 EST 2023" docOffset="552" starttimestamp="1701807005597" timestamp="5315905" />
  <Command __id="2241" _type="MoveCaretCommand" caretOffset="562" date="Tue Dec 05 16:38:41 EST 2023" docOffset="562" starttimestamp="1701807005597" timestamp="5316379" />
  <Command __id="2242" _type="MoveCaretCommand" caretOffset="562" date="Tue Dec 05 16:38:41 EST 2023" docOffset="562" starttimestamp="1701807005597" timestamp="5316379" />
  <Command __id="2243" _type="MoveCaretCommand" caretOffset="556" date="Tue Dec 05 16:38:42 EST 2023" docOffset="556" starttimestamp="1701807005597" timestamp="5316988" />
  <Command __id="2244" _type="MoveCaretCommand" caretOffset="556" date="Tue Dec 05 16:38:42 EST 2023" docOffset="556" starttimestamp="1701807005597" timestamp="5316988" />
  <Command __id="2245" _type="MoveCaretCommand" caretOffset="562" date="Tue Dec 05 16:38:43 EST 2023" docOffset="562" starttimestamp="1701807005597" timestamp="5317490" />
  <Command __id="2246" _type="MoveCaretCommand" caretOffset="562" date="Tue Dec 05 16:38:43 EST 2023" docOffset="562" starttimestamp="1701807005597" timestamp="5317491" />
  <Command __id="2247" _type="MoveCaretCommand" caretOffset="555" date="Tue Dec 05 16:38:43 EST 2023" docOffset="555" starttimestamp="1701807005597" timestamp="5317919" />
  <Command __id="2248" _type="MoveCaretCommand" caretOffset="555" date="Tue Dec 05 16:38:43 EST 2023" docOffset="555" starttimestamp="1701807005597" timestamp="5317919" />
  <Command __id="2249" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:38:44 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5318440" />
  <Command __id="2250" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:38:44 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5318440" />
  <Command __id="2251" _type="MoveCaretCommand" caretOffset="602" date="Tue Dec 05 16:38:44 EST 2023" docOffset="602" starttimestamp="1701807005597" timestamp="5318951" />
  <Command __id="2252" _type="MoveCaretCommand" caretOffset="602" date="Tue Dec 05 16:38:44 EST 2023" docOffset="602" starttimestamp="1701807005597" timestamp="5318952" />
  <Command __id="2253" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:38:44 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5319387" />
  <Command __id="2254" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:38:44 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5319387" />
  <Command __id="2255" _type="MoveCaretCommand" caretOffset="599" date="Tue Dec 05 16:38:45 EST 2023" docOffset="599" starttimestamp="1701807005597" timestamp="5319971" />
  <Command __id="2256" _type="MoveCaretCommand" caretOffset="599" date="Tue Dec 05 16:38:45 EST 2023" docOffset="599" starttimestamp="1701807005597" timestamp="5319971" />
  <Command __id="2257" _type="MoveCaretCommand" caretOffset="609" date="Tue Dec 05 16:38:46 EST 2023" docOffset="609" starttimestamp="1701807005597" timestamp="5320464" />
  <Command __id="2258" _type="MoveCaretCommand" caretOffset="609" date="Tue Dec 05 16:38:46 EST 2023" docOffset="609" starttimestamp="1701807005597" timestamp="5320464" />
  <Command __id="2259" _type="MoveCaretCommand" caretOffset="602" date="Tue Dec 05 16:38:46 EST 2023" docOffset="602" starttimestamp="1701807005597" timestamp="5320902" />
  <Command __id="2260" _type="MoveCaretCommand" caretOffset="602" date="Tue Dec 05 16:38:46 EST 2023" docOffset="602" starttimestamp="1701807005597" timestamp="5320903" />
  <Command __id="2261" _type="MoveCaretCommand" caretOffset="609" date="Tue Dec 05 16:38:46 EST 2023" docOffset="609" starttimestamp="1701807005597" timestamp="5321333" />
  <Command __id="2262" _type="MoveCaretCommand" caretOffset="609" date="Tue Dec 05 16:38:46 EST 2023" docOffset="609" starttimestamp="1701807005597" timestamp="5321333" />
  <Command __id="2275" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:38:57 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5331459" type="Run" />
  <Command __id="2276" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:38:57 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5331459" type="Run" />
  <Command __id="2277" _type="ShellCommand" date="Tue Dec 05 16:38:57 EST 2023" starttimestamp="1701807005597" timestamp="5331777" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2278" _type="ConsoleOutput" date="Tue Dec 05 16:39:01 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5335616" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X Y) (PRINT X) (+ X Y)"), Diff(INSERT,"Test execution time (ms):0¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2279" _type="ConsoleOutput" date="Tue Dec 05 16:39:01 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5335622" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2280" _type="ConsoleOutput" date="Tue Dec 05 16:39:01 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5335622" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2281" _type="ConsoleOutput" date="Tue Dec 05 16:39:01 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5335624" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2282" _type="ConsoleOutput" date="Tue Dec 05 16:39:01 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5335624" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2283" _type="ExceptionCommand" date="Tue Dec 05 16:39:01 EST 2023" starttimestamp="1701807005597" timestamp="5335645" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2284" _type="ConsoleOutput" date="Tue Dec 05 16:39:01 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5335648" type="ConsoleOutput">
    <outputString><![CDATA[
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2285" _type="ConsoleOutput" date="Tue Dec 05 16:39:01 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5335698" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"43"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"42"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"16"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:"), Diff(INSERT,"1"), Diff(EQUAL,"2"), Diff(DELETE,"4"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"100"), Diff(INSERT,"57"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"33"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"6"), Diff(EQUAL,"5"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"1"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"47"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtual"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"19"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"144"), Diff(EQUAL,"4"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer"), Diff(EQUAL,".java:"), Diff(DELETE,"17"), Diff(INSERT,"99"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"78"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(INSERT,"158"), Diff(EQUAL,"5"), Diff(DELETE,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"58"), Diff(INSERT,"1357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"268"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"363"), Diff(INSERT,"278"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"31"), Diff(INSERT,"27"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContex"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Componen"), Diff(EQUAL,"t.java:"), Diff(DELETE,"52"), Diff(INSERT,"6638"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitT"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.proc"), Diff(EQUAL,"es"), Diff(DELETE,"t"), Diff(EQUAL,"sE"), Diff(DELETE,"nvironm"), Diff(INSERT,"vent(Compon"), Diff(EQUAL,"ent.java:6"), Diff(DELETE,"2"), Diff(INSERT,"400"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(EQUAL,"5"), Diff(INSERT,"011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:23"), Diff(INSERT,"2"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(INSERT,"455"), Diff(EQUAL,"6"), Diff(DELETE,"2"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2286" _type="ExceptionCommand" date="Tue Dec 05 16:39:01 EST 2023" starttimestamp="1701807005597" timestamp="5335705" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):36
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42

java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2288" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:39:19 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5353700" type="Debug" />
  <Command __id="2289" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:39:19 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5353700" type="Run" />
  <Command __id="2290" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:39:19 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5353700" type="Debug" />
  <Command __id="2291" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:39:19 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5353700" type="Run" />
  <Command __id="2292" _type="MoveCaretCommand" caretOffset="811" date="Tue Dec 05 16:39:19 EST 2023" docOffset="811" starttimestamp="1701807005597" timestamp="5354309" />
  <Command __id="2293" _type="MoveCaretCommand" caretOffset="811" date="Tue Dec 05 16:39:19 EST 2023" docOffset="811" starttimestamp="1701807005597" timestamp="5354309" />
  <Command __id="2294" _type="InsertStringCommand" date="Tue Dec 05 16:39:20 EST 2023" starttimestamp="1701807005597" timestamp="5354907" timestamp2="5354907">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2295" _type="InsertStringCommand" date="Tue Dec 05 16:39:20 EST 2023" starttimestamp="1701807005597" timestamp="5354907" timestamp2="5354907">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2296" _type="MoveCaretCommand" caretOffset="811" date="Tue Dec 05 16:39:21 EST 2023" docOffset="811" starttimestamp="1701807005597" timestamp="5356039" />
  <Command __id="2297" _type="MoveCaretCommand" caretOffset="811" date="Tue Dec 05 16:39:21 EST 2023" docOffset="811" starttimestamp="1701807005597" timestamp="5356039" />
  <Command __id="2298" _type="LocalChecksRawCommand" date="Tue Dec 05 16:39:21 EST 2023" starttimestamp="1701807005597" timestamp="5356044">
    <CSVRow><![CDATA[147,Tue Dec 05 16:39:01 EST 2023,47,0,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,67,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2299" _type="LocalChecksRawCommand" date="Tue Dec 05 16:39:21 EST 2023" starttimestamp="1701807005597" timestamp="5356044">
    <CSVRow><![CDATA[147,Tue Dec 05 16:39:01 EST 2023,47,0,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,67,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2300" _type="InsertStringCommand" date="Tue Dec 05 16:39:22 EST 2023" starttimestamp="1701807005597" timestamp="5356507" timestamp2="5356507">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2301" _type="InsertStringCommand" date="Tue Dec 05 16:39:22 EST 2023" starttimestamp="1701807005597" timestamp="5356507" timestamp2="5356507">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2302" _type="InsertStringCommand" date="Tue Dec 05 16:39:22 EST 2023" starttimestamp="1701807005597" timestamp="5357141" timestamp2="5357141">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2303" _type="InsertStringCommand" date="Tue Dec 05 16:39:22 EST 2023" starttimestamp="1701807005597" timestamp="5357141" timestamp2="5357141">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2304" _type="InsertStringCommand" date="Tue Dec 05 16:39:23 EST 2023" starttimestamp="1701807005597" timestamp="5357511" timestamp2="5357511">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2305" _type="InsertStringCommand" date="Tue Dec 05 16:39:23 EST 2023" starttimestamp="1701807005597" timestamp="5357511" timestamp2="5357511">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2306" _type="InsertStringCommand" date="Tue Dec 05 16:39:23 EST 2023" starttimestamp="1701807005597" timestamp="5357710" timestamp2="5357710">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2307" _type="InsertStringCommand" date="Tue Dec 05 16:39:23 EST 2023" starttimestamp="1701807005597" timestamp="5357710" timestamp2="5357710">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2308" _type="InsertStringCommand" date="Tue Dec 05 16:39:23 EST 2023" starttimestamp="1701807005597" timestamp="5357984" timestamp2="5357984">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2309" _type="InsertStringCommand" date="Tue Dec 05 16:39:23 EST 2023" starttimestamp="1701807005597" timestamp="5357984" timestamp2="5357984">
    <data><![CDATA[z]]></data>
  </Command>
  <Command __id="2310" _type="ShellCommand" date="Tue Dec 05 16:39:24 EST 2023" starttimestamp="1701807005597" timestamp="5359011" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2311" _type="ShellCommand" date="Tue Dec 05 16:39:40 EST 2023" starttimestamp="1701807005597" timestamp="5374671" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2313" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:39:40 EST 2023" starttimestamp="1701807005597" timestamp="5375042" />
  <Command __id="2314" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:39:40 EST 2023" starttimestamp="1701807005597" timestamp="5375054" />
  <Command __id="2315" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:39:41 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="5375542" />
  <Command __id="2316" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:39:41 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="5375542" />
  <Command __id="2317" _type="MoveCaretCommand" caretOffset="700" date="Tue Dec 05 16:39:42 EST 2023" docOffset="700" starttimestamp="1701807005597" timestamp="5376500" />
  <Command __id="2318" _type="MoveCaretCommand" caretOffset="700" date="Tue Dec 05 16:39:42 EST 2023" docOffset="700" starttimestamp="1701807005597" timestamp="5376500" />
  <Command __id="2319" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:39:42 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="5377347" />
  <Command __id="2320" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:39:42 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="5377347" />
  <Command __id="2321" _type="MoveCaretCommand" caretOffset="700" date="Tue Dec 05 16:39:43 EST 2023" docOffset="700" starttimestamp="1701807005597" timestamp="5377774" />
  <Command __id="2322" _type="MoveCaretCommand" caretOffset="700" date="Tue Dec 05 16:39:43 EST 2023" docOffset="700" starttimestamp="1701807005597" timestamp="5377775" />
  <Command __id="2323" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:39:43 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="5378193" />
  <Command __id="2324" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:39:43 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="5378193" />
  <Command __id="2325" _type="MoveCaretCommand" caretOffset="700" date="Tue Dec 05 16:39:44 EST 2023" docOffset="700" starttimestamp="1701807005597" timestamp="5378620" />
  <Command __id="2326" _type="MoveCaretCommand" caretOffset="700" date="Tue Dec 05 16:39:44 EST 2023" docOffset="700" starttimestamp="1701807005597" timestamp="5378620" />
  <Command __id="2327" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:39:44 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="5379060" />
  <Command __id="2328" _type="MoveCaretCommand" caretOffset="734" date="Tue Dec 05 16:39:44 EST 2023" docOffset="734" starttimestamp="1701807005597" timestamp="5379060" />
  <Command __id="2329" _type="MoveCaretCommand" caretOffset="598" date="Tue Dec 05 16:39:45 EST 2023" docOffset="598" starttimestamp="1701807005597" timestamp="5380103" />
  <Command __id="2330" _type="MoveCaretCommand" caretOffset="598" date="Tue Dec 05 16:39:45 EST 2023" docOffset="598" starttimestamp="1701807005597" timestamp="5380104" />
  <Command __id="2331" _type="MoveCaretCommand" caretOffset="597" date="Tue Dec 05 16:39:46 EST 2023" docOffset="597" starttimestamp="1701807005597" timestamp="5380696" />
  <Command __id="2332" _type="MoveCaretCommand" caretOffset="597" date="Tue Dec 05 16:39:46 EST 2023" docOffset="597" starttimestamp="1701807005597" timestamp="5380697" />
  <Command __id="2333" _type="MoveCaretCommand" caretOffset="619" date="Tue Dec 05 16:39:48 EST 2023" docOffset="619" starttimestamp="1701807005597" timestamp="5382812" />
  <Command __id="2334" _type="MoveCaretCommand" caretOffset="619" date="Tue Dec 05 16:39:48 EST 2023" docOffset="619" starttimestamp="1701807005597" timestamp="5382812" />
  <Command __id="2337" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:39:58 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5392433" type="Run" />
  <Command __id="2338" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:39:58 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5392433" type="Run" />
  <Command __id="2339" _type="ShellCommand" date="Tue Dec 05 16:39:58 EST 2023" starttimestamp="1701807005597" timestamp="5392761" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2365" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:40:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5399757" type="Run" />
  <Command __id="2366" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:40:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5399757" type="Run" />
  <Command __id="2367" _type="ShellCommand" date="Tue Dec 05 16:40:05 EST 2023" starttimestamp="1701807005597" timestamp="5400061" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2373" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:40:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5404304" type="Run" />
  <Command __id="2374" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:40:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5404304" type="Run" />
  <Command __id="2375" _type="ShellCommand" date="Tue Dec 05 16:40:10 EST 2023" starttimestamp="1701807005597" timestamp="5404955" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2376" _type="ShellCommand" date="Tue Dec 05 16:40:13 EST 2023" starttimestamp="1701807005597" timestamp="5408087" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2377" _type="PasteCommand" date="Tue Dec 05 16:40:14 EST 2023" starttimestamp="1701807005597" timestamp="5408776" />
  <Command __id="2378" _type="ConsoleOutput" date="Tue Dec 05 16:40:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5409493" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="2177" _type="Insert" date="Tue Dec 05 16:37:17 EST 2023" docASTNodeCount="161" docActiveCodeLength="950" docExpressionCount="118" docLength="950" length="1" offset="652" starttimestamp="1701807005597" timestamp="5232271">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2182" _type="Delete" date="Tue Dec 05 16:37:21 EST 2023" docASTNodeCount="129" docActiveCodeLength="926" docExpressionCount="95" docLength="926" endLine="16" length="24" offset="628" startLine="16" starttimestamp="1701807005597" timestamp="5235674">
    <text><![CDATA[lambda.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2183" _type="Insert" date="Tue Dec 05 16:37:21 EST 2023" docASTNodeCount="164" docActiveCodeLength="959" docExpressionCount="120" docLength="959" length="33" offset="628" repeat="2" starttimestamp="1701807005597" timestamp="5235675" timestamp2="5235675">
    <text><![CDATA[(Lambda) lambda.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2198" _type="Delete" date="Tue Dec 05 16:37:33 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" endLine="17" length="47" offset="616" startLine="16" starttimestamp="1701807005597" timestamp="5247652">
    <text><![CDATA[			lambda = (Lambda) lambda.eval(environment);
]]></text>
  </DocumentChange>
  <DocumentChange __id="2312" _type="Replace" date="Tue Dec 05 16:39:40 EST 2023" docASTNodeCount="157" docActiveCodeLength="944" docExpressionCount="112" docLength="944" endLine="27" insertionLength="944" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="912" offset="0" startLine="0" starttimestamp="1701807005597" timestamp="5374953">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead());
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();
			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></insertedText>
  </DocumentChange>
  <Command __id="2379" _type="ConsoleInput" date="Tue Dec 05 16:40:18 EST 2023" starttimestamp="1701807005597" timestamp="5413087" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="2380" _type="ExceptionCommand" date="Tue Dec 05 16:40:18 EST 2023" starttimestamp="1701807005597" timestamp="5413091" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.UnsupportedOperationException: Instances of Atom do not have a tail
	at main.lisp.parser.terms.Atom.getTail(Atom.java:36)
	at index.LambdaEvaluator.eval(LambdaEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2381" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:40:18 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5413096" type="Debug" />
  <Command __id="2382" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:40:18 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5413096" type="Run" />
  <Command __id="2383" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:40:18 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5413096" type="Debug" />
  <Command __id="2384" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:40:18 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5413096" type="Run" />
  <Command __id="2385" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:40:36 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5430953">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="2386" _type="SelectTextCommand" caretOffset="208" date="Tue Dec 05 16:40:36 EST 2023" end="208" start="178" starttimestamp="1701807005597" timestamp="5431006" />
  <Command __id="2388" _type="SelectTextCommand" caretOffset="647" date="Tue Dec 05 16:40:39 EST 2023" end="647" start="570" starttimestamp="1701807005597" timestamp="5433746" />
  <Command __id="2391" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:40:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5444351" type="Run" />
  <Command __id="2392" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:40:49 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5444351" type="Run" />
  <Command __id="2393" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:40:50 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5444468" type="Run" />
  <Command __id="2394" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:40:50 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5444479" type="Run" />
  <Command __id="2395" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:40:50 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5444627" type="Run" />
  <Command __id="2400" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:00 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5454558" type="Run" />
  <Command __id="2407" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:18 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5472962" type="Run" />
  <Command __id="2412" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5477602" type="Run" />
  <Command __id="2413" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5477602" type="Run" />
  <Command __id="2414" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5477602" type="Run" />
  <Command __id="2415" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5477611" type="Run" />
  <Command __id="2416" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5477611" type="Run" />
  <Command __id="2417" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5477611" type="Run" />
  <Command __id="2418" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5477611" type="Run" />
  <Command __id="2419" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5477611" type="Run" />
  <Command __id="2420" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:23 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5477611" type="Run" />
  <Command __id="2451" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:36 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5491374" type="Run" />
  <Command __id="2454" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:41:41 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5495986" type="Run" />
  <Command __id="2455" _type="ShellCommand" date="Tue Dec 05 16:42:08 EST 2023" starttimestamp="1701807005597" timestamp="5522722" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2456" _type="MoveCaretCommand" caretOffset="500" date="Tue Dec 05 16:42:08 EST 2023" docOffset="500" starttimestamp="1701807005597" timestamp="5522823" />
  <Command __id="2457" _type="MoveCaretCommand" caretOffset="500" date="Tue Dec 05 16:42:08 EST 2023" docOffset="500" starttimestamp="1701807005597" timestamp="5522823" />
  <Command __id="2460" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:42:10 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5525120" type="Run" />
  <Command __id="2461" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 16:42:12 EST 2023" docOffset="451" starttimestamp="1701807005597" timestamp="5527009" />
  <Command __id="2462" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 16:42:12 EST 2023" docOffset="451" starttimestamp="1701807005597" timestamp="5527009" />
  <Command __id="2463" _type="MoveCaretCommand" caretOffset="621" date="Tue Dec 05 16:42:14 EST 2023" docOffset="621" starttimestamp="1701807005597" timestamp="5528796" />
  <Command __id="2464" _type="MoveCaretCommand" caretOffset="621" date="Tue Dec 05 16:42:14 EST 2023" docOffset="621" starttimestamp="1701807005597" timestamp="5528796" />
  <Command __id="2387" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:40:39 EST 2023" docASTNodeCount="157" docActiveCodeLength="944" docExpressionCount="112" docLength="944" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5433700">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;"), Diff(DELETE,"import main.lisp.evaluator.BuiltinOperationManagerSingleton;"), Diff(EQUAL,"import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda"), Diff(DELETE," lambda = (Lambda)"), Diff(INSERT,"Evaluator lambdaEvaluator = new LambdaEvaluator();			Lambda lambda = (Lambda)lambdaEvaluator.eval"), Diff(EQUAL,"(expr.getHead()"), Diff(INSERT,", environment"), Diff(EQUAL,");			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return super.eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();
			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="2465" _type="MoveCaretCommand" caretOffset="569" date="Tue Dec 05 16:42:15 EST 2023" docOffset="569" starttimestamp="1701807005597" timestamp="5530305" />
  <Command __id="2466" _type="MoveCaretCommand" caretOffset="569" date="Tue Dec 05 16:42:15 EST 2023" docOffset="569" starttimestamp="1701807005597" timestamp="5530305" />
  <Command __id="2468" _type="UndoCommand" date="Tue Dec 05 16:42:17 EST 2023" starttimestamp="1701807005597" timestamp="5531446" />
  <Command __id="2469" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:42:18 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5532571" />
  <Command __id="2470" _type="MoveCaretCommand" caretOffset="668" date="Tue Dec 05 16:42:18 EST 2023" docOffset="668" starttimestamp="1701807005597" timestamp="5532571" />
  <Command __id="2471" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Dec 05 16:42:20 EST 2023" starttimestamp="1701807005597" timestamp="5534640" />
  <Command __id="2472" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:42:20 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5534646" type="Debug" />
  <Command __id="2473" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:42:20 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5534646" type="Run" />
  <Command __id="2474" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:42:20 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5534646" type="Debug" />
  <Command __id="2475" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 16:42:20 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5534646" type="Run" />
  <Command __id="2476" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:21 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5535668" />
  <Command __id="2477" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:21 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5535668" />
  <Command __id="2478" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:21 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5535828" />
  <Command __id="2479" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:21 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5535828" />
  <Command __id="2480" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:21 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5536397" />
  <Command __id="2481" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:21 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5536397" />
  <Command __id="2482" _type="MoveCaretCommand" caretOffset="600" date="Tue Dec 05 16:42:22 EST 2023" docOffset="600" starttimestamp="1701807005597" timestamp="5536843" />
  <Command __id="2483" _type="MoveCaretCommand" caretOffset="600" date="Tue Dec 05 16:42:22 EST 2023" docOffset="600" starttimestamp="1701807005597" timestamp="5536843" />
  <Command __id="2484" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:22 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5536993" />
  <Command __id="2485" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:22 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5536994" />
  <Command __id="2486" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:23 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5537448" />
  <Command __id="2487" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:23 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5537448" />
  <Command __id="2488" _type="MoveCaretCommand" caretOffset="602" date="Tue Dec 05 16:42:23 EST 2023" docOffset="602" starttimestamp="1701807005597" timestamp="5537896" />
  <Command __id="2489" _type="MoveCaretCommand" caretOffset="602" date="Tue Dec 05 16:42:23 EST 2023" docOffset="602" starttimestamp="1701807005597" timestamp="5537896" />
  <Command __id="2490" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:23 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5538046" />
  <Command __id="2491" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:23 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5538046" />
  <Command __id="2492" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:24 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5538501" />
  <Command __id="2493" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:24 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5538501" />
  <Command __id="2494" _type="MoveCaretCommand" caretOffset="603" date="Tue Dec 05 16:42:24 EST 2023" docOffset="603" starttimestamp="1701807005597" timestamp="5538962" />
  <Command __id="2495" _type="MoveCaretCommand" caretOffset="603" date="Tue Dec 05 16:42:24 EST 2023" docOffset="603" starttimestamp="1701807005597" timestamp="5538962" />
  <Command __id="2496" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:24 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5539115" />
  <Command __id="2497" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:24 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5539115" />
  <Command __id="2498" _type="MoveCaretCommand" caretOffset="606" date="Tue Dec 05 16:42:25 EST 2023" docOffset="606" starttimestamp="1701807005597" timestamp="5539564" />
  <Command __id="2499" _type="MoveCaretCommand" caretOffset="606" date="Tue Dec 05 16:42:25 EST 2023" docOffset="606" starttimestamp="1701807005597" timestamp="5539564" />
  <Command __id="2500" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:25 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5540068" />
  <Command __id="2501" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:25 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5540068" />
  <Command __id="2502" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:25 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5540222" />
  <Command __id="2503" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:25 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5540222" />
  <Command __id="2504" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:26 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5540677" />
  <Command __id="2505" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:26 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5540677" />
  <Command __id="2506" _type="MoveCaretCommand" caretOffset="603" date="Tue Dec 05 16:42:26 EST 2023" docOffset="603" starttimestamp="1701807005597" timestamp="5541120" />
  <Command __id="2507" _type="MoveCaretCommand" caretOffset="603" date="Tue Dec 05 16:42:26 EST 2023" docOffset="603" starttimestamp="1701807005597" timestamp="5541120" />
  <Command __id="2508" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:26 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5541268" />
  <Command __id="2509" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:26 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5541268" />
  <Command __id="2510" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:27 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5541711" />
  <Command __id="2511" _type="MoveCaretCommand" caretOffset="608" date="Tue Dec 05 16:42:27 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="5541711" />
  <Command __id="2512" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:27 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5542130" />
  <Command __id="2513" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:27 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5542130" />
  <Command __id="2514" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:27 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5542300" />
  <Command __id="2515" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:27 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5542300" />
  <Command __id="2516" _type="MoveCaretCommand" caretOffset="606" date="Tue Dec 05 16:42:28 EST 2023" docOffset="606" starttimestamp="1701807005597" timestamp="5542731" />
  <Command __id="2517" _type="MoveCaretCommand" caretOffset="606" date="Tue Dec 05 16:42:28 EST 2023" docOffset="606" starttimestamp="1701807005597" timestamp="5542731" />
  <Command __id="2518" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:28 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5543133" />
  <Command __id="2519" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:28 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5543133" />
  <Command __id="2520" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:28 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5543283" />
  <Command __id="2521" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:28 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5543283" />
  <Command __id="2522" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:42:29 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="5543748" />
  <Command __id="2523" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:42:29 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="5543748" />
  <Command __id="2524" _type="ShellCommand" date="Tue Dec 05 16:42:29 EST 2023" starttimestamp="1701807005597" timestamp="5544282" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2525" _type="ShellCommand" date="Tue Dec 05 16:42:30 EST 2023" starttimestamp="1701807005597" timestamp="5544699" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2526" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:32 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5547280" />
  <Command __id="2527" _type="MoveCaretCommand" caretOffset="601" date="Tue Dec 05 16:42:32 EST 2023" docOffset="601" starttimestamp="1701807005597" timestamp="5547280" />
  <Command __id="2528" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:33 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5547434" />
  <Command __id="2529" _type="SelectTextCommand" caretOffset="603" date="Tue Dec 05 16:42:33 EST 2023" end="603" start="599" starttimestamp="1701807005597" timestamp="5547434" />
  <Command __id="2530" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:42:33 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="5547877" />
  <Command __id="2531" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:42:33 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="5547877" />
  <Command __id="2532" _type="ShellCommand" date="Tue Dec 05 16:42:35 EST 2023" starttimestamp="1701807005597" timestamp="5549697" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2533" _type="ShellCommand" date="Tue Dec 05 16:42:37 EST 2023" starttimestamp="1701807005597" timestamp="5551413" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2534" _type="ShellCommand" date="Tue Dec 05 16:42:40 EST 2023" starttimestamp="1701807005597" timestamp="5554984" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2535" _type="ShellCommand" date="Tue Dec 05 16:42:43 EST 2023" starttimestamp="1701807005597" timestamp="5557475" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2536" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:42:43 EST 2023" starttimestamp="1701807005597" timestamp="5557500" />
  <Command __id="2537" _type="EclipseCommand" commandID="" date="Tue Dec 05 16:42:43 EST 2023" starttimestamp="1701807005597" timestamp="5557510" />
  <Command __id="2538" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:42:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5557784" type="Run" />
  <Command __id="2539" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:42:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5557784" type="Run" />
  <Command __id="2540" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:42:43 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5557891" type="Run" />
  <Command __id="2541" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:42:43 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5557902" type="Run" />
  <Command __id="2542" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:42:43 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5558051" type="Run" />
  <Command __id="2543" _type="ShellCommand" date="Tue Dec 05 16:42:43 EST 2023" starttimestamp="1701807005597" timestamp="5558248" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2544" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:42:44 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5558857" type="Run" />
  <Command __id="2545" _type="ConsoleOutput" date="Tue Dec 05 16:42:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5563602" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2546" _type="ConsoleOutput" date="Tue Dec 05 16:42:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5563604" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2547" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]]]></CSVRow>
  </Command>
  <Command __id="2548" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr]]></CSVRow>
  </Command>
  <Command __id="2549" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index]]></CSVRow>
  </Command>
  <Command __id="2550" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic]]></CSVRow>
  </Command>
  <Command __id="2551" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression]]></CSVRow>
  </Command>
  <Command __id="2552" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl]]></CSVRow>
  </Command>
  <Command __id="2553" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child]]></CSVRow>
  </Command>
  <Command __id="2554" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment]]></CSVRow>
  </Command>
  <Command __id="2555" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda]]></CSVRow>
  </Command>
  <Command __id="2556" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids]]></CSVRow>
  </Command>
  <Command __id="2557" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id]]></CSVRow>
  </Command>
  <Command __id="2558" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment]]></CSVRow>
  </Command>
  <Command __id="2559" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,bulkierThen,126.0,17.0,7.411764705882353]]></CSVRow>
  </Command>
  <Command __id="2560" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedBlockDepth,2,1]]></CSVRow>
  </Command>
  <Command __id="2561" _type="CheckStyleCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563608">
    <CSVRow><![CDATA[130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]]]></CSVRow>
  </Command>
  <Command __id="2562" _type="ConsoleOutput" date="Tue Dec 05 16:42:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5563610" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2563" _type="ConsoleOutput" date="Tue Dec 05 16:42:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5563611" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2564" _type="ConsoleOutput" date="Tue Dec 05 16:42:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5563612" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2565" _type="ConsoleOutput" date="Tue Dec 05 16:42:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5563613" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):8"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2566" _type="ConsoleOutput" date="Tue Dec 05 16:42:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5563648" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2567" _type="ConsoleOutput" date="Tue Dec 05 16:42:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5563655" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app'"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2568" _type="ConsoleOutput" date="Tue Dec 05 16:42:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5563723" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"17"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluato"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunne"), Diff(EQUAL,"r.java:"), Diff(DELETE,"16"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"24"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s.B"), Diff(DELETE,"asicExpression.eval(BasicExpression"), Diff(INSERT,"lockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"57"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"00"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"133"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"6"), Diff(EQUAL,"5"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"1"), Diff(INSERT,"68"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"47"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFail"), Diff(INSERT,"junit.AGradableJUnitTest.test(AGradable"), Diff(EQUAL,"JUnitTest"), Diff(DELETE,"Case"), Diff(EQUAL,".java:"), Diff(DELETE,"2"), Diff(EQUAL,"31"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"68"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContex"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Componen"), Diff(EQUAL,"t.java:5"), Diff(DELETE,"2"), Diff(INSERT,"011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvir"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Comp"), Diff(EQUAL,"on"), Diff(DELETE,"m"), Diff(EQUAL,"ent.java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contain"), Diff(EQUAL,"er.java:45"), Diff(INSERT,"56"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:23"), Diff(DELETE,"1"), Diff(INSERT,"07"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"2772"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"77"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"85"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2569" _type="ExceptionCommand" date="Tue Dec 05 16:42:49 EST 2023" starttimestamp="1701807005597" timestamp="5563729" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):55
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42

java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2570" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:42:49 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5564059" type="Run" />
  <Command __id="2571" _type="ShellCommand" date="Tue Dec 05 16:43:05 EST 2023" starttimestamp="1701807005597" timestamp="5579800" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2572" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Tue Dec 05 16:43:10 EST 2023" starttimestamp="1701807005597" timestamp="5584437" />
  <Command __id="2573" _type="BreakPointCommand" date="Tue Dec 05 16:43:10 EST 2023" lineNumber="16" starttimestamp="1701807005597" timestamp="5584438" type="BreakPointAdded" />
  <Command __id="2579" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:43:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5589487" type="Run" />
  <Command __id="2580" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:43:15 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5589487" type="Run" />
  <Command __id="2581" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:43:15 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5589595" type="Run" />
  <Command __id="2582" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:43:15 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5589608" type="Run" />
  <Command __id="2583" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:43:15 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5589742" type="Run" />
  <Command __id="2584" _type="ShellCommand" date="Tue Dec 05 16:43:15 EST 2023" starttimestamp="1701807005597" timestamp="5589929" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2585" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:43:16 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5590543" type="Run" />
  <Command __id="2596" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:43:27 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5601638" type="Run" />
  <Command __id="2597" _type="ShellCommand" date="Tue Dec 05 16:43:28 EST 2023" starttimestamp="1701807005597" timestamp="5602527" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2598" _type="ShellCommand" date="Tue Dec 05 16:43:37 EST 2023" starttimestamp="1701807005597" timestamp="5611570" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2599" _type="MoveCaretCommand" caretOffset="505" date="Tue Dec 05 16:43:37 EST 2023" docOffset="505" starttimestamp="1701807005597" timestamp="5611649" />
  <Command __id="2600" _type="MoveCaretCommand" caretOffset="505" date="Tue Dec 05 16:43:37 EST 2023" docOffset="505" starttimestamp="1701807005597" timestamp="5611649" />
  <Command __id="2601" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Dec 05 16:43:38 EST 2023" starttimestamp="1701807005597" timestamp="5613232" />
  <Command __id="2602" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:43:38 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5613247" type="Debug" />
  <Command __id="2603" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:43:38 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5613247" type="Run" />
  <Command __id="2604" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:43:38 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5613247" type="Debug" />
  <Command __id="2605" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:43:38 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5613247" type="Run" />
  <DocumentChange __id="2467" _type="Replace" date="Tue Dec 05 16:42:17 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" endLine="27" insertionLength="912" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="944" offset="0" startLine="0" starttimestamp="1701807005597" timestamp="5531433">
    <deletedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();
			Lambda lambda = (Lambda)lambdaEvaluator.eval(expr.getHead(), environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></deletedText>
    <insertedText><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead());
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return super.eval(expr, environment);
		}
	}
}
]]></insertedText>
  </DocumentChange>
  <Command __id="2606" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:43:40 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="5614591" />
  <Command __id="2607" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:43:40 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="5614592" />
  <DocumentChange __id="2608" _type="Insert" date="Tue Dec 05 16:43:41 EST 2023" docASTNodeCount="156" docActiveCodeLength="917" docExpressionCount="114" docLength="917" length="5" offset="613" repeat="5" starttimestamp="1701807005597" timestamp="5615626" timestamp2="5616733">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <Command __id="2609" _type="InsertStringCommand" date="Tue Dec 05 16:43:41 EST 2023" starttimestamp="1701807005597" timestamp="5615628" timestamp2="5615628">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2610" _type="InsertStringCommand" date="Tue Dec 05 16:43:41 EST 2023" starttimestamp="1701807005597" timestamp="5615628" timestamp2="5615628">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2611" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 16:43:41 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="5615648" />
  <Command __id="2616" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 16:43:42 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="5616913" />
  <Command __id="2625" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:43:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5621162" type="Run" />
  <Command __id="2626" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:43:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5621162" type="Run" />
  <Command __id="2627" _type="ShellCommand" date="Tue Dec 05 16:43:47 EST 2023" starttimestamp="1701807005597" timestamp="5621474" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2628" _type="ConsoleOutput" date="Tue Dec 05 16:43:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5623919" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2629" _type="ConsoleOutput" date="Tue Dec 05 16:43:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5623922" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2630" _type="ConsoleOutput" date="Tue Dec 05 16:43:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5623925" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2631" _type="ConsoleOutput" date="Tue Dec 05 16:43:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5623926" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2632" _type="ConsoleOutput" date="Tue Dec 05 16:43:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5623927" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2633" _type="ConsoleOutput" date="Tue Dec 05 16:43:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5623927" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2634" _type="ExceptionCommand" date="Tue Dec 05 16:43:49 EST 2023" starttimestamp="1701807005597" timestamp="5623947" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2635" _type="ConsoleOutput" date="Tue Dec 05 16:43:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5623950" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2636" _type="ConsoleOutput" date="Tue Dec 05 16:43:49 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5624009" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:4"), Diff(DELETE,"2"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"24"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s.B"), Diff(DELETE,"asicExpression.eval(BasicExpression"), Diff(INSERT,"lockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"00"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"133"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"65"), Diff(INSERT,"268"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"21"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"31"), Diff(EQUAL,"7)¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"68"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"2"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:4"), Diff(DELETE,"5"), Diff(INSERT,"918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"277"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"721"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2637" _type="ExceptionCommand" date="Tue Dec 05 16:43:49 EST 2023" starttimestamp="1701807005597" timestamp="5624017" type="Exception">
    <exceptionString><![CDATA[	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):33
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42

java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2758" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654988">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,args,nameInDictionary,args,args]]></CSVRow>
  </Command>
  <Command __id="2759" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,class]]></CSVRow>
  </Command>
  <Command __id="2760" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,impl]]></CSVRow>
  </Command>
  <Command __id="2761" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,index]]></CSVRow>
  </Command>
  <Command __id="2762" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,registry]]></CSVRow>
  </Command>
  <Command __id="2763" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.parser.terms.AbstractAtom,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]]]></CSVRow>
  </Command>
  <Command __id="2764" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,index.OperationRegistererImpl,nameNotInDictionary,index.OperationRegistererImpl,registerer]]></CSVRow>
  </Command>
  <Command __id="2765" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,index.OperationRegistererImpl,nameInDictionary,index.OperationRegistererImpl,index]]></CSVRow>
  </Command>
  <Command __id="2766" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,index.OperationRegistererImpl,nameInDictionary,index.OperationRegistererImpl,operation]]></CSVRow>
  </Command>
  <Command __id="2767" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,index.OperationRegistererImpl,nameInDictionary,index.OperationRegistererImpl,impl]]></CSVRow>
  </Command>
  <Command __id="2768" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,secondEvaled,nameInDictionary,secondEvaled,second]]></CSVRow>
  </Command>
  <Command __id="2769" _type="CheckStyleCommand" date="Tue Dec 05 16:44:20 EST 2023" starttimestamp="1701807005597" timestamp="5654989">
    <CSVRow><![CDATA[131,Tue Dec 05 16:43:43 EST 2023,false,secondEvaled,nameNotInDictionary,secondEvaled,evaled]]></CSVRow>
  </Command>
  <Command __id="2770" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:44:20 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="5655147" />
  <Command __id="2771" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:44:20 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="5655147" />
  <Command __id="2788" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:44:30 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5664466" type="Debug" />
  <Command __id="2789" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:44:30 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5664466" type="Run" />
  <Command __id="2790" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:44:30 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5664466" type="Debug" />
  <Command __id="2791" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:44:30 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5664466" type="Run" />
  <Command __id="2792" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:44:30 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5665038" type="Run" />
  <Command __id="2801" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:44:34 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="5669123" type="Run" />
  <Command __id="2802" _type="ShellCommand" date="Tue Dec 05 16:45:06 EST 2023" starttimestamp="1701807005597" timestamp="5701275" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2803" _type="ShellCommand" date="Tue Dec 05 16:45:36 EST 2023" starttimestamp="1701807005597" timestamp="5730528" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2804" _type="ShellCommand" date="Tue Dec 05 16:45:37 EST 2023" starttimestamp="1701807005597" timestamp="5731459" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2809" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:45:45 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5739951" type="Run" />
  <Command __id="2810" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:45:45 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="5739951" type="Run" />
  <Command __id="2811" _type="ShellCommand" date="Tue Dec 05 16:45:45 EST 2023" starttimestamp="1701807005597" timestamp="5740273" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2812" _type="ConsoleOutput" date="Tue Dec 05 16:45:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5743189" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"8¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2813" _type="ConsoleOutput" date="Tue Dec 05 16:45:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5743190" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2814" _type="ConsoleOutput" date="Tue Dec 05 16:45:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5743196" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2815" _type="ConsoleOutput" date="Tue Dec 05 16:45:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5743196" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2816" _type="ConsoleOutput" date="Tue Dec 05 16:45:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5743197" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2817" _type="ConsoleOutput" date="Tue Dec 05 16:45:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5743197" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2818" _type="ExceptionCommand" date="Tue Dec 05 16:45:48 EST 2023" starttimestamp="1701807005597" timestamp="5743219" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2819" _type="ConsoleOutput" date="Tue Dec 05 16:45:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5743221" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2820" _type="ConsoleOutput" date="Tue Dec 05 16:45:48 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="5743283" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:4"), Diff(DELETE,"2"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.evaluator.BasicExpressionEvaluator.eval(BasicExpressionEvaluator"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl"), Diff(INSERT,"org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"24"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s.B"), Diff(DELETE,"asicExpression.eval(BasicExpression"), Diff(INSERT,"lockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(EQUAL,"2"), Diff(INSERT,"90"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"100"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"133"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"65"), Diff(INSERT,"268"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"21"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"31"), Diff(EQUAL,"7)¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"68"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"2"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:4"), Diff(DELETE,"5"), Diff(INSERT,"918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"277"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(INSERT,"48"), Diff(EQUAL,"43)¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(INSERT,"71"), Diff(EQUAL,"5"), Diff(DELETE,"0"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2821" _type="ExceptionCommand" date="Tue Dec 05 16:45:48 EST 2023" starttimestamp="1701807005597" timestamp="5743291" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):36
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string LAMBDA () (+ 21 21)

java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2822" _type="ShellCommand" date="Tue Dec 05 16:49:56 EST 2023" starttimestamp="1701807005597" timestamp="5990603" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2823" _type="LocalChecksRawCommand" date="Tue Dec 05 16:49:56 EST 2023" starttimestamp="1701807005597" timestamp="5990608">
    <CSVRow><![CDATA[151,Tue Dec 05 16:45:48 EST 2023,40,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,71,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2824" _type="LocalChecksRawCommand" date="Tue Dec 05 16:49:56 EST 2023" starttimestamp="1701807005597" timestamp="5990608">
    <CSVRow><![CDATA[151,Tue Dec 05 16:45:48 EST 2023,40,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,71,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <DocumentChange __id="2617" _type="Replace" date="Tue Dec 05 16:43:42 EST 2023" docASTNodeCount="156" docActiveCodeLength="922" docExpressionCount="114" docLength="922" endLine="15" insertionLength="9" int_docASTNodeCount="120" int_docActiveCodeLength="913" int_docExpressionCount="88" int_docLength="913" length="4" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="5616917">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2774" _type="Delete" date="Tue Dec 05 16:44:22 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" endLine="15" length="10" offset="613" startLine="15" starttimestamp="1701807005597" timestamp="5657148">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="2827" _type="Insert" date="Tue Dec 05 16:50:18 EST 2023" docASTNodeCount="156" docActiveCodeLength="922" docExpressionCount="114" docLength="922" length="10" offset="613" starttimestamp="1701807005597" timestamp="6013130">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <DocumentChange __id="2829" _type="Replace" date="Tue Dec 05 16:50:20 EST 2023" docASTNodeCount="156" docActiveCodeLength="917" docExpressionCount="114" docLength="917" endLine="15" insertionLength="4" int_docASTNodeCount="120" int_docActiveCodeLength="913" int_docExpressionCount="88" int_docLength="913" length="9" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="6014408">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[getH]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2831" _type="Delete" date="Tue Dec 05 16:50:20 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" endLine="15" length="5" offset="613" startLine="15" starttimestamp="1701807005597" timestamp="6014806">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="2833" _type="Insert" date="Tue Dec 05 16:50:20 EST 2023" docASTNodeCount="164" docActiveCodeLength="959" docExpressionCount="120" docLength="959" length="47" offset="616" starttimestamp="1701807005597" timestamp="6015261">
    <text><![CDATA[			lambda = (Lambda) lambda.eval(environment);
]]></text>
  </DocumentChange>
  <DocumentChange __id="2835" _type="Delete" date="Tue Dec 05 16:50:22 EST 2023" docASTNodeCount="129" docActiveCodeLength="926" docExpressionCount="95" docLength="926" endLine="16" length="33" offset="628" repeat="2" startLine="16" starttimestamp="1701807005597" timestamp="6016873" timestamp2="6016878">
    <text><![CDATA[(Lambda) lambda.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2837" _type="Insert" date="Tue Dec 05 16:50:22 EST 2023" docASTNodeCount="161" docActiveCodeLength="950" docExpressionCount="118" docLength="950" length="24" offset="628" starttimestamp="1701807005597" timestamp="6016879">
    <text><![CDATA[lambda.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2839" _type="Delete" date="Tue Dec 05 16:50:23 EST 2023" docASTNodeCount="153" docActiveCodeLength="949" docExpressionCount="115" docLength="949" endLine="16" length="1" offset="652" startLine="16" starttimestamp="1701807005597" timestamp="6018171">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2841" _type="Replace" date="Tue Dec 05 16:50:24 EST 2023" docASTNodeCount="153" docActiveCodeLength="942" docExpressionCount="115" docLength="942" endLine="16" insertionLength="4" int_docASTNodeCount="152" int_docActiveCodeLength="938" int_docExpressionCount="114" int_docLength="938" length="11" offset="640" startLine="16" starttimestamp="1701807005597" timestamp="6018550">
    <deletedText><![CDATA[environment]]></deletedText>
    <insertedText><![CDATA[envi]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2842" _type="Delete" date="Tue Dec 05 16:50:24 EST 2023" docASTNodeCount="153" docActiveCodeLength="939" docExpressionCount="115" docLength="939" endLine="16" length="3" offset="641" startLine="16" starttimestamp="1701807005597" timestamp="6018552">
    <text><![CDATA[nvi]]></text>
  </DocumentChange>
  <DocumentChange __id="2843" _type="Replace" date="Tue Dec 05 16:50:24 EST 2023" docASTNodeCount="153" docActiveCodeLength="954" docExpressionCount="115" docLength="954" endLine="16" insertionLength="16" int_docASTNodeCount="152" int_docActiveCodeLength="938" int_docExpressionCount="114" int_docLength="938" length="1" offset="640" startLine="16" starttimestamp="1701807005597" timestamp="6018556">
    <deletedText><![CDATA[e]]></deletedText>
    <insertedText><![CDATA[childEnvironment]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2845" _type="Replace" date="Tue Dec 05 16:50:24 EST 2023" docASTNodeCount="152" docActiveCodeLength="935" docExpressionCount="114" docLength="935" endLine="16" insertionLength="3" int_docASTNodeCount="131" int_docActiveCodeLength="932" int_docExpressionCount="97" int_docLength="932" length="22" offset="635" startLine="16" starttimestamp="1701807005597" timestamp="6018858">
    <deletedText><![CDATA[eval(childEnvironment)]]></deletedText>
    <insertedText><![CDATA[eva]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2847" _type="Delete" date="Tue Dec 05 16:50:24 EST 2023" docASTNodeCount="154" docActiveCodeLength="916" docExpressionCount="112" docLength="916" endLine="16" length="19" offset="619" startLine="16" starttimestamp="1701807005597" timestamp="6019213">
    <text><![CDATA[lambda = lambda.eva]]></text>
  </DocumentChange>
  <DocumentChange __id="2849" _type="Insert" date="Tue Dec 05 16:50:25 EST 2023" docASTNodeCount="108" docActiveCodeLength="917" docExpressionCount="80" docLength="917" length="1" offset="619" starttimestamp="1701807005597" timestamp="6019666">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="2851" _type="Delete" date="Tue Dec 05 16:50:25 EST 2023" docASTNodeCount="154" docActiveCodeLength="916" docExpressionCount="112" docLength="916" endLine="16" length="1" offset="619" startLine="16" starttimestamp="1701807005597" timestamp="6020081">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="2853" _type="Insert" date="Tue Dec 05 16:50:26 EST 2023" docASTNodeCount="108" docActiveCodeLength="919" docExpressionCount="80" docLength="919" length="3" offset="619" starttimestamp="1701807005597" timestamp="6020426">
    <text><![CDATA[lam]]></text>
  </DocumentChange>
  <DocumentChange __id="2855" _type="Delete" date="Tue Dec 05 16:50:26 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" endLine="16" length="7" offset="615" startLine="15" starttimestamp="1701807005597" timestamp="6020773">
    <text><![CDATA[
			lam]]></text>
  </DocumentChange>
  <DocumentChange __id="2857" _type="Insert" date="Tue Dec 05 16:50:27 EST 2023" docASTNodeCount="127" docActiveCodeLength="913" docExpressionCount="94" docLength="913" length="1" offset="614" starttimestamp="1701807005597" timestamp="6021541">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2859" _type="Delete" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" endLine="15" length="1" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="6022584">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="2861" _type="Delete" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="154" docActiveCodeLength="911" docExpressionCount="112" docLength="911" endLine="23" length="1" offset="899" startLine="23" starttimestamp="1701807005597" timestamp="6023090">
    <text><![CDATA[t]]></text>
  </DocumentChange>
  <DocumentChange __id="2862" _type="Insert" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="154" docActiveCodeLength="913" docExpressionCount="112" docLength="913" length="2" offset="899" starttimestamp="1701807005597" timestamp="6023092">
    <text><![CDATA[ t]]></text>
  </DocumentChange>
  <DocumentChange __id="2863" _type="Delete" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="154" docActiveCodeLength="909" docExpressionCount="112" docLength="909" endLine="23" length="4" offset="897" startLine="23" starttimestamp="1701807005597" timestamp="6023092">
    <text><![CDATA[en t]]></text>
  </DocumentChange>
  <DocumentChange __id="2864" _type="Insert" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="154" docActiveCodeLength="912" docExpressionCount="112" docLength="912" length="3" offset="897" starttimestamp="1701807005597" timestamp="6023093">
    <text><![CDATA[net]]></text>
  </DocumentChange>
  <DocumentChange __id="2865" _type="Delete" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="152" docActiveCodeLength="895" docExpressionCount="110" docLength="895" endLine="23" length="17" offset="883" startLine="23" starttimestamp="1701807005597" timestamp="6023094">
    <text><![CDATA[expr, environmnet]]></text>
  </DocumentChange>
  <DocumentChange __id="2866" _type="Insert" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="153" docActiveCodeLength="906" docExpressionCount="111" docLength="906" length="11" offset="883" starttimestamp="1701807005597" timestamp="6023094">
    <text><![CDATA[environment]]></text>
  </DocumentChange>
  <DocumentChange __id="2867" _type="Delete" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="153" docActiveCodeLength="896" docExpressionCount="111" docLength="896" endLine="23" length="10" offset="884" startLine="23" starttimestamp="1701807005597" timestamp="6023095">
    <text><![CDATA[nvironment]]></text>
  </DocumentChange>
  <DocumentChange __id="2868" _type="Insert" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="153" docActiveCodeLength="897" docExpressionCount="111" docLength="897" length="1" offset="884" starttimestamp="1701807005597" timestamp="6023095">
    <text><![CDATA[n]]></text>
  </DocumentChange>
  <DocumentChange __id="2869" _type="Delete" date="Tue Dec 05 16:50:28 EST 2023" docASTNodeCount="152" docActiveCodeLength="895" docExpressionCount="110" docLength="895" endLine="23" length="2" offset="883" startLine="23" starttimestamp="1701807005597" timestamp="6023096">
    <text><![CDATA[en]]></text>
  </DocumentChange>
  <Command __id="2825" _type="MoveCaretCommand" caretOffset="665" date="Tue Dec 05 16:50:18 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="6013035" />
  <Command __id="2826" _type="MoveCaretCommand" caretOffset="665" date="Tue Dec 05 16:50:18 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="6013035" />
  <Command __id="2828" _type="UndoCommand" date="Tue Dec 05 16:50:18 EST 2023" starttimestamp="1701807005597" timestamp="6013133" />
  <Command __id="2830" _type="UndoCommand" date="Tue Dec 05 16:50:20 EST 2023" starttimestamp="1701807005597" timestamp="6014416" />
  <Command __id="2832" _type="UndoCommand" date="Tue Dec 05 16:50:20 EST 2023" starttimestamp="1701807005597" timestamp="6014815" />
  <Command __id="2834" _type="UndoCommand" date="Tue Dec 05 16:50:20 EST 2023" starttimestamp="1701807005597" timestamp="6015265" />
  <Command __id="2838" _type="UndoCommand" date="Tue Dec 05 16:50:22 EST 2023" starttimestamp="1701807005597" timestamp="6016895" />
  <Command __id="2840" _type="UndoCommand" date="Tue Dec 05 16:50:23 EST 2023" starttimestamp="1701807005597" timestamp="6018177" />
  <Command __id="2844" _type="UndoCommand" date="Tue Dec 05 16:50:24 EST 2023" starttimestamp="1701807005597" timestamp="6018571" />
  <Command __id="2846" _type="UndoCommand" date="Tue Dec 05 16:50:24 EST 2023" starttimestamp="1701807005597" timestamp="6018863" />
  <Command __id="2848" _type="UndoCommand" date="Tue Dec 05 16:50:24 EST 2023" starttimestamp="1701807005597" timestamp="6019219" />
  <Command __id="2850" _type="UndoCommand" date="Tue Dec 05 16:50:25 EST 2023" starttimestamp="1701807005597" timestamp="6019670" />
  <Command __id="2852" _type="UndoCommand" date="Tue Dec 05 16:50:25 EST 2023" starttimestamp="1701807005597" timestamp="6020086" />
  <Command __id="2854" _type="UndoCommand" date="Tue Dec 05 16:50:26 EST 2023" starttimestamp="1701807005597" timestamp="6020429" />
  <Command __id="2856" _type="UndoCommand" date="Tue Dec 05 16:50:26 EST 2023" starttimestamp="1701807005597" timestamp="6020780" />
  <Command __id="2858" _type="UndoCommand" date="Tue Dec 05 16:50:27 EST 2023" starttimestamp="1701807005597" timestamp="6021544" />
  <Command __id="2860" _type="UndoCommand" date="Tue Dec 05 16:50:28 EST 2023" starttimestamp="1701807005597" timestamp="6022590" />
  <Command __id="2870" _type="UndoCommand" date="Tue Dec 05 16:50:28 EST 2023" starttimestamp="1701807005597" timestamp="6023112" />
  <Command __id="2872" _type="UndoCommand" date="Tue Dec 05 16:50:30 EST 2023" starttimestamp="1701807005597" timestamp="6025335" />
  <Command __id="2874" _type="UndoCommand" date="Tue Dec 05 16:50:31 EST 2023" starttimestamp="1701807005597" timestamp="6025703" />
  <Command __id="2876" _type="UndoCommand" date="Tue Dec 05 16:50:31 EST 2023" starttimestamp="1701807005597" timestamp="6026036" />
  <Command __id="2878" _type="UndoCommand" date="Tue Dec 05 16:50:32 EST 2023" starttimestamp="1701807005597" timestamp="6026461" />
  <Command __id="2880" _type="UndoCommand" date="Tue Dec 05 16:50:32 EST 2023" starttimestamp="1701807005597" timestamp="6026904" />
  <Command __id="2881" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:50:34 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="6029307" />
  <Command __id="2882" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:50:34 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="6029308" />
  <DocumentChange __id="2871" _type="Delete" date="Tue Dec 05 16:50:30 EST 2023" docASTNodeCount="152" docActiveCodeLength="890" docExpressionCount="110" docLength="890" endLine="23" length="5" offset="879" repeat="2" startLine="23" starttimestamp="1701807005597" timestamp="6025328" timestamp2="6025697">
    <text><![CDATA[val()]]></text>
  </DocumentChange>
  <DocumentChange __id="2875" _type="Insert" date="Tue Dec 05 16:50:31 EST 2023" docASTNodeCount="152" docActiveCodeLength="891" docExpressionCount="110" docLength="891" length="1" offset="879" starttimestamp="1701807005597" timestamp="6026033">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="2877" _type="Delete" date="Tue Dec 05 16:50:32 EST 2023" docASTNodeCount="151" docActiveCodeLength="884" docExpressionCount="109" docLength="884" endLine="23" length="7" offset="873" startLine="23" starttimestamp="1701807005597" timestamp="6026453">
    <text><![CDATA[uper.ea]]></text>
  </DocumentChange>
  <DocumentChange __id="2879" _type="Replace" date="Tue Dec 05 16:50:32 EST 2023" docASTNodeCount="164" docActiveCodeLength="985" docExpressionCount="122" docLength="985" endLine="23" insertionLength="102" int_docASTNodeCount="150" int_docActiveCodeLength="883" int_docExpressionCount="108" int_docLength="883" length="1" offset="872" startLine="23" starttimestamp="1701807005597" timestamp="6026898">
    <deletedText><![CDATA[s]]></deletedText>
    <insertedText><![CDATA[BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2885" _type="Insert" date="Tue Dec 05 16:50:37 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" length="18" offset="613" starttimestamp="1701807005597" timestamp="6031801">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2887" _type="Replace" date="Tue Dec 05 16:50:38 EST 2023" docASTNodeCount="166" docActiveCodeLength="989" docExpressionCount="124" docLength="989" endLine="15" insertionLength="3" int_docASTNodeCount="130" int_docActiveCodeLength="986" int_docExpressionCount="98" int_docLength="986" length="17" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="6033070">
    <deletedText><![CDATA[eval(environment)]]></deletedText>
    <insertedText><![CDATA[eva]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2889" _type="Delete" date="Tue Dec 05 16:50:39 EST 2023" docASTNodeCount="164" docActiveCodeLength="985" docExpressionCount="122" docLength="985" endLine="15" length="4" offset="613" startLine="15" starttimestamp="1701807005597" timestamp="6033545">
    <text><![CDATA[.eva]]></text>
  </DocumentChange>
  <DocumentChange __id="2891" _type="Insert" date="Tue Dec 05 16:50:40 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" length="18" offset="613" starttimestamp="1701807005597" timestamp="6034498">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2893" _type="Insert" date="Tue Dec 05 16:50:40 EST 2023" docASTNodeCount="170" docActiveCodeLength="1021" docExpressionCount="128" docLength="1021" length="18" offset="632" starttimestamp="1701807005597" timestamp="6034918">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2895" _type="Replace" date="Tue Dec 05 16:50:41 EST 2023" docASTNodeCount="169" docActiveCodeLength="1008" docExpressionCount="127" docLength="1008" endLine="15" insertionLength="4" int_docASTNodeCount="169" int_docActiveCodeLength="1004" int_docExpressionCount="128" int_docLength="1004" length="17" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="6035526">
    <deletedText><![CDATA[eval(environment)]]></deletedText>
    <insertedText><![CDATA[eval]]></insertedText>
  </DocumentChange>
  <Command __id="2883" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:50:37 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="6031512" />
  <Command __id="2884" _type="MoveCaretCommand" caretOffset="702" date="Tue Dec 05 16:50:37 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="6031512" />
  <Command __id="2886" _type="UndoCommand" date="Tue Dec 05 16:50:37 EST 2023" starttimestamp="1701807005597" timestamp="6031806" />
  <Command __id="2888" _type="UndoCommand" date="Tue Dec 05 16:50:38 EST 2023" starttimestamp="1701807005597" timestamp="6033078" />
  <Command __id="2890" _type="UndoCommand" date="Tue Dec 05 16:50:39 EST 2023" starttimestamp="1701807005597" timestamp="6033552" />
  <Command __id="2892" _type="UndoCommand" date="Tue Dec 05 16:50:40 EST 2023" starttimestamp="1701807005597" timestamp="6034501" />
  <Command __id="2894" _type="UndoCommand" date="Tue Dec 05 16:50:40 EST 2023" starttimestamp="1701807005597" timestamp="6034920" />
  <Command __id="2896" _type="UndoCommand" date="Tue Dec 05 16:50:41 EST 2023" starttimestamp="1701807005597" timestamp="6035531" />
  <Command __id="2898" _type="RedoCommand" date="Tue Dec 05 16:50:42 EST 2023" starttimestamp="1701807005597" timestamp="6037215" />
  <Command __id="2900" _type="RedoCommand" date="Tue Dec 05 16:50:43 EST 2023" starttimestamp="1701807005597" timestamp="6037589" />
  <Command __id="2902" _type="RedoCommand" date="Tue Dec 05 16:50:43 EST 2023" starttimestamp="1701807005597" timestamp="6037987" />
  <Command __id="2903" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:50:44 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="6039080" />
  <Command __id="2904" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:50:44 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="6039080" />
  <Command __id="2912" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:50:52 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6047172" type="Run" />
  <Command __id="2913" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:50:52 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6047172" type="Run" />
  <Command __id="2914" _type="ShellCommand" date="Tue Dec 05 16:50:53 EST 2023" starttimestamp="1701807005597" timestamp="6047506" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2915" _type="ConsoleOutput" date="Tue Dec 05 16:50:56 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6050470" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2916" _type="ConsoleOutput" date="Tue Dec 05 16:50:56 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6050471" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2917" _type="ConsoleOutput" date="Tue Dec 05 16:50:56 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6050478" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):5¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClass"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="2918" _type="ExceptionCommand" date="Tue Dec 05 16:50:56 EST 2023" starttimestamp="1701807005597" timestamp="6050500" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2919" _type="ConsoleOutput" date="Tue Dec 05 16:50:56 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6050505" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):5¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2920" _type="ConsoleOutput" date="Tue Dec 05 16:50:56 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6050563" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:"), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,"2)¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:4"), Diff(DELETE,"2"), Diff(INSERT,"7"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"24"), Diff(INSERT,"17"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.t"), Diff(INSERT,"org.junit.runn"), Diff(EQUAL,"er"), Diff(DELETE,"m"), Diff(EQUAL,"s."), Diff(DELETE,"BasicExpression.eval(BasicExpression"), Diff(INSERT,"ParentRunner.runLeaf(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"57"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(INSERT,"7"), Diff(EQUAL,"1"), Diff(DELETE,"00"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"133"), Diff(INSERT,"58"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"65"), Diff(INSERT,"268"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"21"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"31"), Diff(EQUAL,"7)¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"68"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"2"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:4"), Diff(DELETE,"5"), Diff(INSERT,"918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"277"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"721"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2921" _type="ExceptionCommand" date="Tue Dec 05 16:50:56 EST 2023" starttimestamp="1701807005597" timestamp="6050571" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):35
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42

java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2922" _type="ShellCommand" date="Tue Dec 05 16:51:26 EST 2023" starttimestamp="1701807005597" timestamp="6080835" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2923" _type="ShellCommand" date="Tue Dec 05 16:51:27 EST 2023" starttimestamp="1701807005597" timestamp="6081622" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2924" _type="ShellCommand" date="Tue Dec 05 16:51:29 EST 2023" starttimestamp="1701807005597" timestamp="6083794" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2925" _type="MoveCaretCommand" caretOffset="610" date="Tue Dec 05 16:51:31 EST 2023" docOffset="610" starttimestamp="1701807005597" timestamp="6086162" />
  <Command __id="2926" _type="MoveCaretCommand" caretOffset="610" date="Tue Dec 05 16:51:31 EST 2023" docOffset="610" starttimestamp="1701807005597" timestamp="6086163" />
  <Command __id="2927" _type="LocalChecksRawCommand" date="Tue Dec 05 16:51:31 EST 2023" starttimestamp="1701807005597" timestamp="6086164">
    <CSVRow><![CDATA[152,Tue Dec 05 16:50:56 EST 2023,40,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,72,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2928" _type="LocalChecksRawCommand" date="Tue Dec 05 16:51:31 EST 2023" starttimestamp="1701807005597" timestamp="6086164">
    <CSVRow><![CDATA[152,Tue Dec 05 16:50:56 EST 2023,40,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,72,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2929" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:51:32 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="6086620" />
  <Command __id="2930" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:51:32 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="6086620" />
  <Command __id="2931" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:51:32 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="6087095" />
  <Command __id="2932" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:51:32 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="6087095" />
  <Command __id="2933" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:51:39 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="6094169" />
  <Command __id="2934" _type="MoveCaretCommand" caretOffset="615" date="Tue Dec 05 16:51:39 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="6094170" />
  <Command __id="2935" _type="ShellCommand" date="Tue Dec 05 16:51:40 EST 2023" starttimestamp="1701807005597" timestamp="6094870" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2936" _type="ShellCommand" date="Tue Dec 05 16:51:44 EST 2023" starttimestamp="1701807005597" timestamp="6098886" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2897" _type="Replace" date="Tue Dec 05 16:50:42 EST 2023" docASTNodeCount="170" docActiveCodeLength="1021" docExpressionCount="128" docLength="1021" endLine="15" insertionLength="17" int_docASTNodeCount="169" int_docActiveCodeLength="1004" int_docExpressionCount="128" int_docLength="1004" length="4" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="6037208">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2899" _type="Delete" date="Tue Dec 05 16:50:43 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" endLine="15" length="18" offset="632" startLine="15" starttimestamp="1701807005597" timestamp="6037585">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="2901" _type="Delete" date="Tue Dec 05 16:50:43 EST 2023" docASTNodeCount="164" docActiveCodeLength="985" docExpressionCount="122" docLength="985" endLine="15" length="18" offset="613" startLine="15" starttimestamp="1701807005597" timestamp="6037982">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <Command __id="2937" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:51:50 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="6104699" />
  <Command __id="2938" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:51:50 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="6104699" />
  <DocumentChange __id="2939" _type="Insert" date="Tue Dec 05 16:51:51 EST 2023" docASTNodeCount="166" docActiveCodeLength="989" docExpressionCount="124" docLength="989" length="4" offset="613" repeat="4" starttimestamp="1701807005597" timestamp="6105945" timestamp2="6106538">
    <text><![CDATA[.eva]]></text>
  </DocumentChange>
  <Command __id="2940" _type="InsertStringCommand" date="Tue Dec 05 16:51:51 EST 2023" starttimestamp="1701807005597" timestamp="6105948" timestamp2="6105948">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2941" _type="InsertStringCommand" date="Tue Dec 05 16:51:51 EST 2023" starttimestamp="1701807005597" timestamp="6105949" timestamp2="6105949">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2942" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 16:51:51 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="6105967" />
  <Command __id="2946" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 16:51:52 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="6107067" />
  <Command __id="2968" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:52:05 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6119665" type="Debug" />
  <Command __id="2969" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:52:05 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6119666" type="Run" />
  <Command __id="2970" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:52:05 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6119666" type="Debug" />
  <Command __id="2971" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:52:05 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6119666" type="Run" />
  <Command __id="2972" _type="ConsoleOutput" date="Tue Dec 05 16:52:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6121838" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2973" _type="ConsoleOutput" date="Tue Dec 05 16:52:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6121839" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2974" _type="ConsoleOutput" date="Tue Dec 05 16:52:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6121845" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):6¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="2975" _type="ConsoleOutput" date="Tue Dec 05 16:52:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6121846" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"6¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2976" _type="ConsoleOutput" date="Tue Dec 05 16:52:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6121846" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2977" _type="ConsoleOutput" date="Tue Dec 05 16:52:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6121871" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.NullPointerException
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"java.lang.NullPointerException"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2978" _type="ConsoleOutput" date="Tue Dec 05 16:52:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6121873" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.NullPointerException"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2979" _type="ConsoleOutput" date="Tue Dec 05 16:52:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6121876" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶"), Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶"), Diff(INSERT,""), Diff(EQUAL,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.A"), Diff(DELETE,"JUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"GradableJUnitSuite.open(AGradableJUnitSuite"), Diff(EQUAL,".java:"), Diff(DELETE,"52"), Diff(INSERT,"191"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(EQUAL,".java:4"), Diff(DELETE,"5"), Diff(INSERT,"3"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(EQUAL,".java:2"), Diff(DELETE,"31"), Diff(INSERT,"70"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2980" _type="ConsoleOutput" date="Tue Dec 05 16:52:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6121914" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(INSERT,"190"), Diff(EQUAL,"6"), Diff(DELETE,"2"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"java.base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"1585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"50"), Diff(INSERT,"1538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(DELETE,"2"), Diff(INSERT,"531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager"), Diff(EQUAL,".java:1"), Diff(INSERT,"35"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"325"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(INSERT,"2"), Diff(EQUAL,"78)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"7)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"71"), Diff(INSERT,"2263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:2"), Diff(DELETE,"88"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"5"), Diff(INSERT,"491"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"26"), Diff(INSERT,"448"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"363"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Componen"), Diff(EQUAL,"t.java:"), Diff(DELETE,"317"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"19"), Diff(INSERT,"72"), Diff(EQUAL,"1)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethod"), Diff(INSERT,"desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(NativeMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.DelegatingMethod"), Diff(INSERT,"ava.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"95"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"270"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMetho"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThrea"), Diff(EQUAL,"d.java:2"), Diff(DELETE,"19"), Diff(INSERT,"03"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:1"), Diff(DELETE,"444"), Diff(INSERT,"09"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicComman"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThrea"), Diff(EQUAL,"d.java:"), Diff(DELETE,"6"), Diff(EQUAL,"9"), Diff(INSERT,"0"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="2981" _type="ExceptionCommand" date="Tue Dec 05 16:52:07 EST 2023" starttimestamp="1701807005597" timestamp="6121920" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):40
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string LAMBDA

java.lang.NullPointerException
	at index.ArithmeticEvaluatorHelper.getDifference(ArithmeticEvaluatorHelper.java:31)
	at index.GreaterEqualEvaluator.eval(GreaterEqualEvaluator.java:15)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.evalHelper(AndEvaluator.java:20)
	at index.AndEvaluator.eval(AndEvaluator.java:13)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.CondEvaluator.evalHelper(CondEvaluator.java:21)
	at index.CondEvaluator.eval(CondEvaluator.java:13)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2982" _type="ShellCommand" date="Tue Dec 05 16:52:25 EST 2023" starttimestamp="1701807005597" timestamp="6140029" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2983" _type="LocalChecksRawCommand" date="Tue Dec 05 16:52:25 EST 2023" starttimestamp="1701807005597" timestamp="6140032">
    <CSVRow><![CDATA[153,Tue Dec 05 16:52:07 EST 2023,40,0,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,73,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2984" _type="LocalChecksRawCommand" date="Tue Dec 05 16:52:25 EST 2023" starttimestamp="1701807005597" timestamp="6140032">
    <CSVRow><![CDATA[153,Tue Dec 05 16:52:07 EST 2023,40,0,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,73,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="2987" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:52:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6167855" type="Run" />
  <Command __id="2988" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:52:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6167855" type="Run" />
  <Command __id="2989" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:52:53 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6167966" type="Run" />
  <Command __id="2990" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:52:53 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6167978" type="Run" />
  <Command __id="2991" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:52:53 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6168124" type="Run" />
  <Command __id="2992" _type="ShellCommand" date="Tue Dec 05 16:52:53 EST 2023" starttimestamp="1701807005597" timestamp="6168321" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2993" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:52:54 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6169041" type="Run" />
  <Command __id="3001" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:06 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6180443" type="Run" />
  <Command __id="3002" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 16:53:16 EST 2023" starttimestamp="1701807005597" timestamp="6190887" />
  <Command __id="3003" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:16 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6190893" type="Run" />
  <Command __id="3005" _type="MoveCaretCommand" caretOffset="178" date="Tue Dec 05 16:53:16 EST 2023" docOffset="436" starttimestamp="1701807005597" timestamp="6191250" />
  <Command __id="3012" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:28 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6203290" type="Run" />
  <Command __id="3013" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 16:53:32 EST 2023" starttimestamp="1701807005597" timestamp="6207064" />
  <Command __id="3014" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:32 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6207071" type="Run" />
  <Command __id="3015" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 16:53:36 EST 2023" starttimestamp="1701807005597" timestamp="6210509" />
  <Command __id="3016" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:36 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6210513" type="Run" />
  <Command __id="3017" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 16:53:36 EST 2023" starttimestamp="1701807005597" timestamp="6211290" />
  <Command __id="3018" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:36 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6211294" type="Run" />
  <Command __id="3019" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 16:53:37 EST 2023" starttimestamp="1701807005597" timestamp="6212129" />
  <Command __id="3020" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:37 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6212132" type="Run" />
  <Command __id="3021" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 16:53:39 EST 2023" starttimestamp="1701807005597" timestamp="6213655" />
  <Command __id="3022" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:39 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6213659" type="Run" />
  <Command __id="3025" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:41 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6215980" type="Run" />
  <Command __id="3026" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 16:53:41 EST 2023" starttimestamp="1701807005597" timestamp="6215980" />
  <Command __id="3027" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:53:42 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6216752" type="Run" />
  <Command __id="3028" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 16:53:42 EST 2023" starttimestamp="1701807005597" timestamp="6216752" />
  <Command __id="3029" _type="ExceptionCommand" date="Tue Dec 05 16:53:42 EST 2023" starttimestamp="1701807005597" timestamp="6216799" type="Exception">
    <exceptionString><![CDATA[java.lang.NullPointerException
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3030" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:54:02 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="6236885" />
  <Command __id="3031" _type="MoveCaretCommand" caretOffset="607" date="Tue Dec 05 16:54:02 EST 2023" docOffset="607" starttimestamp="1701807005597" timestamp="6236885" />
  <Command __id="3032" _type="MoveCaretCommand" caretOffset="612" date="Tue Dec 05 16:54:03 EST 2023" docOffset="612" starttimestamp="1701807005597" timestamp="6237479" />
  <Command __id="3033" _type="MoveCaretCommand" caretOffset="612" date="Tue Dec 05 16:54:03 EST 2023" docOffset="612" starttimestamp="1701807005597" timestamp="6237479" />
  <Command __id="3034" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:54:03 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="6238131" />
  <Command __id="3035" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 16:54:03 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="6238131" />
  <Command __id="3036" _type="MoveCaretCommand" caretOffset="610" date="Tue Dec 05 16:54:04 EST 2023" docOffset="610" starttimestamp="1701807005597" timestamp="6239032" />
  <Command __id="3037" _type="MoveCaretCommand" caretOffset="610" date="Tue Dec 05 16:54:04 EST 2023" docOffset="610" starttimestamp="1701807005597" timestamp="6239033" />
  <Command __id="3038" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:54:05 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="6239655" />
  <Command __id="3039" _type="MoveCaretCommand" caretOffset="613" date="Tue Dec 05 16:54:05 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="6239655" />
  <Command __id="3040" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Tue Dec 05 16:54:24 EST 2023" starttimestamp="1701807005597" timestamp="6258929" />
  <Command __id="3041" _type="BreakPointCommand" date="Tue Dec 05 16:54:24 EST 2023" lineNumber="14" starttimestamp="1701807005597" timestamp="6258930" type="BreakPointAdded" />
  <Command __id="3042" _type="LocalChecksRawCommand" date="Tue Dec 05 16:54:24 EST 2023" starttimestamp="1701807005597" timestamp="6258931">
    <CSVRow><![CDATA[154,Tue Dec 05 16:53:42 EST 2023,40,0,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,74,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3043" _type="LocalChecksRawCommand" date="Tue Dec 05 16:54:24 EST 2023" starttimestamp="1701807005597" timestamp="6258931">
    <CSVRow><![CDATA[154,Tue Dec 05 16:53:42 EST 2023,40,0,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,74,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3056" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:54:33 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6268002" type="Debug" />
  <Command __id="3057" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:54:33 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6268002" type="Run" />
  <Command __id="3058" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:54:33 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6268002" type="Debug" />
  <Command __id="3059" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:54:33 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6268002" type="Run" />
  <Command __id="3060" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:54:33 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6268351" type="Run" />
  <Command __id="3073" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:54:49 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6284105" type="Run" />
  <Command __id="3085" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:55:03 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6297900" type="Run" />
  <Command __id="3088" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:55:11 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6306100" type="Run" />
  <Command __id="3095" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:55:31 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6326028" type="Run" />
  <Command __id="3096" _type="ShellCommand" date="Tue Dec 05 16:55:52 EST 2023" starttimestamp="1701807005597" timestamp="6347112" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3106" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:56:08 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6362788" type="Debug" />
  <Command __id="3107" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:56:08 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6362788" type="Debug" />
  <Command __id="3108" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:56:08 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6362788" type="Run" />
  <Command __id="3109" _type="MoveCaretCommand" caretOffset="944" date="Tue Dec 05 16:56:09 EST 2023" docOffset="944" starttimestamp="1701807005597" timestamp="6364352" />
  <Command __id="3110" _type="MoveCaretCommand" caretOffset="949" date="Tue Dec 05 16:56:10 EST 2023" docOffset="949" starttimestamp="1701807005597" timestamp="6365301" />
  <Command __id="3111" _type="ShellCommand" date="Tue Dec 05 16:56:14 EST 2023" starttimestamp="1701807005597" timestamp="6368824" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3112" _type="ShellCommand" date="Tue Dec 05 16:56:53 EST 2023" starttimestamp="1701807005597" timestamp="6407644" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3113" _type="MoveCaretCommand" caretOffset="930" date="Tue Dec 05 16:56:53 EST 2023" docOffset="930" starttimestamp="1701807005597" timestamp="6407703" />
  <Command __id="3114" _type="MoveCaretCommand" caretOffset="940" date="Tue Dec 05 16:56:54 EST 2023" docOffset="940" starttimestamp="1701807005597" timestamp="6408596" />
  <Command __id="3115" _type="MoveCaretCommand" caretOffset="950" date="Tue Dec 05 16:56:55 EST 2023" docOffset="950" starttimestamp="1701807005597" timestamp="6409584" />
  <Command __id="3116" _type="MoveCaretCommand" caretOffset="970" date="Tue Dec 05 16:56:56 EST 2023" docOffset="970" starttimestamp="1701807005597" timestamp="6411307" />
  <Command __id="3117" _type="MoveCaretCommand" caretOffset="969" date="Tue Dec 05 16:56:58 EST 2023" docOffset="969" starttimestamp="1701807005597" timestamp="6412730" />
  <DocumentChange __id="2947" _type="Replace" date="Tue Dec 05 16:51:52 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" endLine="15" insertionLength="17" int_docASTNodeCount="130" int_docActiveCodeLength="986" int_docExpressionCount="98" int_docLength="986" length="3" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="6107072">
    <deletedText><![CDATA[eva]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="3004" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:53:16 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6191167">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3010" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:53:23 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6198341">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;"), Diff(INSERT,"import main.lisp.evaluator.BuiltinOperationManagerSingleton;"), Diff(EQUAL,"import main.lisp.evaluator.Environment;"), Diff(DELETE,""), Diff(EQUAL,"import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			"), Diff(DELETE,"LambdaEvaluator lambdaEvaluator = new LambdaEvaluator();			"), Diff(EQUAL,"Lambda lambda = (Lambda)"), Diff(DELETE,"lambdaEvaluator.eval"), Diff(EQUAL,"(expr.getHead()"), Diff(DELETE,", "), Diff(INSERT,".eval("), Diff(EQUAL,"environment)"), Diff(INSERT,")"), Diff(EQUAL,";			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return "), Diff(DELETE,"super"), Diff(INSERT,"BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString())"), Diff(EQUAL,".eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead().eval(environment));
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="3100" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:55:57 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="6351771">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3104" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:56:01 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6356099">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3118" _type="MoveCaretCommand" caretOffset="969" date="Tue Dec 05 16:56:59 EST 2023" docOffset="969" starttimestamp="1701807005597" timestamp="6413926" />
  <Command __id="3119" _type="MoveCaretCommand" caretOffset="971" date="Tue Dec 05 16:57:00 EST 2023" docOffset="971" starttimestamp="1701807005597" timestamp="6414753" />
  <Command __id="3120" _type="MoveCaretCommand" caretOffset="980" date="Tue Dec 05 16:57:00 EST 2023" docOffset="980" starttimestamp="1701807005597" timestamp="6415324" />
  <Command __id="3121" _type="MoveCaretCommand" caretOffset="977" date="Tue Dec 05 16:57:01 EST 2023" docOffset="977" starttimestamp="1701807005597" timestamp="6415891" />
  <Command __id="3123" _type="MoveCaretCommand" caretOffset="178" date="Tue Dec 05 16:57:11 EST 2023" docOffset="436" starttimestamp="1701807005597" timestamp="6425855" />
  <Command __id="3124" _type="MoveCaretCommand" caretOffset="202" date="Tue Dec 05 16:57:13 EST 2023" docOffset="460" starttimestamp="1701807005597" timestamp="6428018" />
  <Command __id="3125" _type="MoveCaretCommand" caretOffset="202" date="Tue Dec 05 16:57:13 EST 2023" docOffset="460" starttimestamp="1701807005597" timestamp="6428018" />
  <Command __id="3128" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:57:27 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6441920" type="Run" />
  <Command __id="3129" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:57:27 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6441921" type="Run" />
  <Command __id="3130" _type="ShellCommand" date="Tue Dec 05 16:57:27 EST 2023" starttimestamp="1701807005597" timestamp="6442235" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3131" _type="ConsoleOutput" date="Tue Dec 05 16:57:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6446486" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClass"), Diff(INSERT,"execution time (ms):0¶Test Result:TestLispFile"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="3132" _type="ConsoleOutput" date="Tue Dec 05 16:57:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6446493" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,

Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"TestLispFile"), Diff(INSERT,"ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶¶"), Diff(INSERT,"Test execution time (ms):7¶")]]]></diff>
  </Command>
  <Command __id="3133" _type="ConsoleOutput" date="Tue Dec 05 16:57:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6446494" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):5¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶Test execution time (ms):7¶")]]]></diff>
  </Command>
  <Command __id="3134" _type="ConsoleOutput" date="Tue Dec 05 16:57:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6446520" type="ConsoleOutput">
    <outputString><![CDATA[java.lang.NullPointerException
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"java.lang.NullPointerException"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3135" _type="ConsoleOutput" date="Tue Dec 05 16:57:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6446522" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.lang.NullPointerException"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3136" _type="ConsoleOutput" date="Tue Dec 05 16:57:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="6446541" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶"), Diff(EQUAL,"	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.A"), Diff(DELETE,"JUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRun"), Diff(EQUAL,"GradableJUnit"), Diff(DELETE,"Test(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"Suite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶"), Diff(INSERT,"	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶")]]]></diff>
  </Command>
  <Command __id="3137" _type="ExceptionCommand" date="Tue Dec 05 16:57:32 EST 2023" starttimestamp="1701807005597" timestamp="6446547" type="Exception">
    <exceptionString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):41
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string LAMBDA

java.lang.NullPointerException
	at index.ArithmeticEvaluatorHelper.getDifference(ArithmeticEvaluatorHelper.java:31)
	at index.GreaterEqualEvaluator.eval(GreaterEqualEvaluator.java:15)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.evalHelper(AndEvaluator.java:20)
	at index.AndEvaluator.eval(AndEvaluator.java:13)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3122" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:57:11 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6425768">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3141" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:57:47 EST 2023" docASTNodeCount="241" docActiveCodeLength="1458" docExpressionCount="183" docLength="1753" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6461895">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LoadEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.TAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.StringAtom;
import main.lisp.interpreter.InterpreterModel;
import main.lisp.interpreter.InterpreterModelSingleton;
import main.lisp.parser.terms.TAtomicExpressionFactory;
import main.lisp.parser.terms.NilAtomicExpressionFactory;


import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class LoadEvaluator implements Evaluator {

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        // Ensure the argument is a string
        if(expr.getTail().getHead() instanceof NilAtom) {
        	return NilAtomicExpressionFactory.newInstance();
        }

        String fileName = ((StringAtom)(expr.getTail().getHead())).getValue();
//        fileName = fileName.substring(fileName.lastIndexOf("/") + 1, fileName.length() - 1);
//        System.out.println("Filename: " + fileName);
        try {
//        	Charset charset = Charset.forName("ISO-8859-1");
        	List<String> lines = Files.readAllLines(Path.of(fileName));


            // Get the singleton instance of the interpreter model
            InterpreterModel interpreterModel = InterpreterModelSingleton.get();

            for (String line : lines) {
                interpreterModel.newInput(line);
            }

            return TAtomicExpressionFactory.newInstance();
        } catch (IOException e) {
        	System.out.println(e);
            return NilAtomicExpressionFactory.newInstance();
        }
    }
}
]]></snapshot>
  </Command>
  <Command __id="3143" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:58:02 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6476876">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3145" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:58:08 EST 2023" docASTNodeCount="90" docActiveCodeLength="717" docExpressionCount="56" docLength="1109" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6482978">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/RunF23A5Tests.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import grader.basics.execution.BasicProjectExecution;import gradingTools.comp524f23.assignment6.F23Assignment6Suite;import trace.grader.basics.GraderBasicsTraceUtility;public class RunF23A5Tests {	public static void main(final String[] args) {				final int maxPrintedTraces = 600;		final int maxTraces = 2000;		final int processTimeOut = 5;				// if you set this to false, grader steps will not be traced		GraderBasicsTraceUtility.setTracerShowInfo(true);			// if you set this to false, all grader steps will be traced,		// not just the ones that failed				GraderBasicsTraceUtility.setBufferTracedMessages(true);		// Change this number if a test trace gets longer than 600 and is clipped		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);		// Change this number if all traces together are longer than 2000		GraderBasicsTraceUtility.setMaxTraces(maxTraces);		// Change this number if your process times out prematurely		BasicProjectExecution.setProcessTimeOut(processTimeOut);		// You need to always call such a method		F23Assignment6Suite.main(args);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3147" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:58:09 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6483897">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3138" _type="ShellCommand" date="Tue Dec 05 16:57:47 EST 2023" starttimestamp="1701807005597" timestamp="6461725" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3139" _type="LocalChecksRawCommand" date="Tue Dec 05 16:57:47 EST 2023" starttimestamp="1701807005597" timestamp="6461730">
    <CSVRow><![CDATA[155,Tue Dec 05 16:57:32 EST 2023,40,0,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,75,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3140" _type="LocalChecksRawCommand" date="Tue Dec 05 16:57:47 EST 2023" starttimestamp="1701807005597" timestamp="6461730">
    <CSVRow><![CDATA[155,Tue Dec 05 16:57:32 EST 2023,40,0,LispLambdaChecker,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,75,0,false, ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3142" _type="SelectTextCommand" caretOffset="976" date="Tue Dec 05 16:57:47 EST 2023" end="976" start="928" starttimestamp="1701807005597" timestamp="6461950" />
  <Command __id="3144" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 16:58:02 EST 2023" docOffset="639" starttimestamp="1701807005597" timestamp="6476932" />
  <Command __id="3146" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 16:58:08 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="6483044" />
  <Command __id="3148" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 16:58:09 EST 2023" docOffset="639" starttimestamp="1701807005597" timestamp="6483966" />
  <Command __id="3150" _type="SelectTextCommand" caretOffset="993" date="Tue Dec 05 16:58:16 EST 2023" end="993" start="880" starttimestamp="1701807005597" timestamp="6491032" />
  <Command __id="3151" _type="MoveCaretCommand" caretOffset="879" date="Tue Dec 05 16:58:19 EST 2023" docOffset="879" starttimestamp="1701807005597" timestamp="6494050" />
  <Command __id="3152" _type="MoveCaretCommand" caretOffset="879" date="Tue Dec 05 16:58:19 EST 2023" docOffset="879" starttimestamp="1701807005597" timestamp="6494050" />
  <Command __id="3155" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 16:58:27 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6501871" type="Run" />
  <Command __id="3156" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:58:27 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6501981" type="Run" />
  <Command __id="3157" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:58:27 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6501993" type="Run" />
  <Command __id="3158" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:58:27 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6502134" type="Run" />
  <Command __id="3159" _type="ShellCommand" date="Tue Dec 05 16:58:27 EST 2023" starttimestamp="1701807005597" timestamp="6502325" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3160" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:58:28 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6503036" type="Run" />
  <Command __id="3176" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:58:39 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6513727" type="Run" />
  <Command __id="3184" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:58:47 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6522197" type="Run" />
  <Command __id="3149" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 16:58:16 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6490988">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3187" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:58:57 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6532127" type="Run" />
  <Command __id="3189" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 16:59:01 EST 2023" docOffset="639" starttimestamp="1701807005597" timestamp="6535876" />
  <Command __id="3195" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:59:08 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6542676" type="Run" />
  <Command __id="3196" _type="ShellCommand" date="Tue Dec 05 16:59:10 EST 2023" starttimestamp="1701807005597" timestamp="6544740" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3197" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:59:10 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6544766" type="Run" />
  <Command __id="3198" _type="ShellCommand" date="Tue Dec 05 16:59:45 EST 2023" starttimestamp="1701807005597" timestamp="6580168" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3199" _type="MoveCaretCommand" caretOffset="107" date="Tue Dec 05 16:59:45 EST 2023" docOffset="365" starttimestamp="1701807005597" timestamp="6580263" />
  <Command __id="3200" _type="MoveCaretCommand" caretOffset="107" date="Tue Dec 05 16:59:45 EST 2023" docOffset="365" starttimestamp="1701807005597" timestamp="6580263" />
  <Command __id="3201" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 16:59:47 EST 2023" starttimestamp="1701807005597" timestamp="6581640" />
  <Command __id="3202" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:59:47 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6581643" type="Run" />
  <Command __id="3205" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:59:51 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6586340" type="Run" />
  <Command __id="3206" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 16:59:55 EST 2023" starttimestamp="1701807005597" timestamp="6590394" />
  <Command __id="3207" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:59:55 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6590397" type="Run" />
  <Command __id="3213" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:00:00 EST 2023" docLength="7315" projectName="Assignment4" starttimestamp="1701807005597" timestamp="6595067">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment4/src/SocialDistance.sml]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"val SAFETY_TABLE = [(13,30,30),(6,30,10),(27,30,50),(13,15,50),(13,120,10),(27,120,30),(6,15,30)];val SMALL_DISTANCE = 6;val MEDIUM_DISTANCE = 13;val LARGE_DISTANCE = 27;val SMALL_DURATION = 15;val MEDIUM_DURATION = 30;val LARGE_DURATION = 120;val SMALL_EXHALATION = 10;val MEDIUM_EXHALATION = 30;val LARGE_EXHALATION = 50;val MIN_VALUE = 0;val MAX_VALUE = 200;fun givenSafe (13, 30, 30) = true |		givenSafe (6, 30, 10) = true |		givenSafe (27, 30, 50) = true |		givenSafe (13, 15, 50) = true |		givenSafe (13, 120, 10) = true |		givenSafe (27, 120, 30) = true |		givenSafe (6, 15, 30) = true |		givenSafe (_,_,_) = false;				fun interpolateDistanceSmall(distance) =    if (distance >= SMALL_DISTANCE andalso distance < MEDIUM_DISTANCE) then        true    else        false;fun interpolateDistanceMedium(distance) =    if (distance >= MEDIUM_DISTANCE andalso distance < LARGE_DISTANCE) then        true    else        false;fun interpolateDistanceLarge(distance) =    if (distance >= LARGE_DISTANCE) then        true    else        false;fun interpolateDurationSmall(duration) =    if (duration >= MIN_VALUE andalso duration <= SMALL_DURATION) then        true    else        false;fun interpolateDurationMedium(duration) =    if (duration > SMALL_DURATION andalso duration <= MEDIUM_DURATION) then        true    else        false;fun interpolateDurationLarge(duration) =    if (duration > MEDIUM_DURATION andalso duration <= LARGE_DURATION) then        true    else        false;        fun interpolateExhalationSmall(exhalation) =    if (exhalation >= MIN_VALUE andalso exhalation <= SMALL_EXHALATION) then        true    else        false;fun interpolateExhalationMedium(exhalation) =    if (exhalation > SMALL_EXHALATION andalso exhalation <= MEDIUM_EXHALATION) then        true    else        false;fun interpolateExhalationLarge(exhalation) =    if (exhalation > MEDIUM_EXHALATION andalso exhalation <= LARGE_EXHALATION) then        true    else        false;        fun interpolatedSafe(distance, duration, exhalation) =     if ((interpolateDistanceMedium(distance) andalso interpolateDurationMedium(duration) andalso interpolateExhalationMedium(exhalation)) orelse    (interpolateDistanceMedium(distance) andalso interpolateDurationSmall(duration) andalso interpolateExhalationLarge(exhalation)) orelse    (interpolateDistanceMedium(distance) andalso interpolateDurationLarge(duration) andalso interpolateExhalationSmall(exhalation)) orelse    (interpolateDistanceSmall(distance) andalso interpolateDurationMedium(duration) andalso interpolateExhalationSmall(exhalation)) orelse    (interpolateDistanceSmall(distance) andalso interpolateDurationSmall(duration) andalso interpolateExhalationMedium(exhalation)) orelse    (interpolateDistanceLarge(distance) andalso interpolateDurationMedium(duration) andalso interpolateExhalationLarge(exhalation)) orelse    (interpolateDistanceLarge(distance) andalso interpolateDurationLarge(duration) andalso interpolateExhalationMedium(exhalation))) then    		true    else    		false;fun listDerivedSafeHelper(_, _, _, nil) = false |listDerivedSafeHelper(distance, duration, exhalation, (Dist, Dura, Exha)::tail) =if (distance >= Dist andalso duration <= Dura andalso exhalation <= Exha) then		trueelse		listDerivedSafeHelper(distance, duration, exhalation, tail);fun listDerivedSafe(distance, duration, exhalation) =		listDerivedSafeHelper(distance, duration, exhalation, SAFETY_TABLE);		fun printSafety(safetyComputer, (distance: int, duration: int, exhalation: int)) = 		(print ("Distance:" ^ Int.toString (distance) ^ " Duration:" ^ Int.toString (duration) ^ " Exhalation:" ^ Int.toString (exhalation) ^ " Safe:");		if (safetyComputer(distance, duration, exhalation)) then				print("true\n")		else				print("false\n"));fun concisePrintSafety(safetyComputer, (distance: int, duration: int, exhalation: int)) = 		(print ("(" ^ Int.toString (distance) ^ ", " ^ Int.toString (duration) ^ ", " ^ Int.toString (exhalation) ^ ", ");		if (safetyComputer(distance, duration, exhalation)) then				print("true)\n")		else				print("false)\n"));				fun listPrintSafety(_, _, nil) = () |listPrintSafety(printSafety, safetyComputer, head::tail) =		(printSafety(safetyComputer, head);		listPrintSafety(printSafety, safetyComputer, tail));fun givenSafeMatcher((distance, duration, exhalation), (Dist, Dura, Exha)) =    distance = Dist andalso duration = Dura andalso exhalation = Exha;fun derivedSafeMatcher((distance, duration, exhalation), (Dist, Dura, Exha)) =		distance >= Dist andalso duration <= Dura andalso exhalation <= Exha; fun matchingSafeHelper(_, _, nil) = false |matchingSafeHelper(safeMatcher, (distance, duration, exhalation), (Dist, Dura, Exha)::tail) =if (safeMatcher((distance, duration, exhalation), (Dist, Dura, Exha))) then		trueelse		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), tail);fun matchingSafe(safeMatcher, (distance, duration, exhalation)) =		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), SAFETY_TABLE);fun matchingDerivedSafe(distance, duration, exhalation) =    let        fun matchingDerivedSafeHelper(_, _, _, nil) = false          | matchingDerivedSafeHelper(dist, dur, exh, (Dist, Dura, Exha)::tail) =            if (matchingSafe(derivedSafeMatcher, (dist, dur, exh))) then                true            else                matchingDerivedSafeHelper(dist, dur, exh, tail)    in        matchingDerivedSafeHelper(distance, duration, exhalation, SAFETY_TABLE)    endfun matchingGivenSafe(distance, duration, exhalation) =    let        fun matchingGivenSafeHelper(_, _, _, nil) = false          | matchingGivenSafeHelper(dist, dur, exh, (Dist, Dura, Exha)::tail) =            if (matchingSafe(givenSafeMatcher, (dist, dur, exh))) then                true            else                matchingGivenSafeHelper(dist, dur, exh, tail)    in        matchingGivenSafeHelper(distance, duration, exhalation, SAFETY_TABLE)    endfun curryableInterpolatedSafe distance duration exhalation =     if(interpolatedSafe(distance, duration, exhalation)) then    		true    else    		falsefun curriedOnceInterpolatedSafe duration exhalation =     if (curryableInterpolatedSafe MEDIUM_DISTANCE duration exhalation) then    		true    else    		false;fun curriedTwiceInterpolatedSafe exhalation =     if (curriedOnceInterpolatedSafe MEDIUM_DURATION exhalation) then    		true    else    		false;    		fun matchingSafeHelper(_, _, nil) = false |matchingSafeHelper(safeMatcher, (distance, duration, exhalation), (Dist, Dura, Exha)::tail) =if (safeMatcher((distance, duration, exhalation), (Dist, Dura, Exha))) then		trueelse		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), tail);fun curryableMatchingSafe safeMatcher (distance, duration, exhalation) =		matchingSafeHelper(safeMatcher, (distance, duration, exhalation), SAFETY_TABLE);		fun curriedMatchingDerivedSafe (distance, duration, exhalation) =		curryableMatchingSafe derivedSafeMatcher (distance, duration, exhalation);		fun curriedMatchingGivenSafe (distance, duration, exhalation) =		curryableMatchingSafe givenSafeMatcher (distance, duration, exhalation);")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3214" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:00:01 EST 2023" docASTNodeCount="137" docActiveCodeLength="779" docExpressionCount="99" docLength="779" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6596208">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3208" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Tue Dec 05 16:59:57 EST 2023" starttimestamp="1701807005597" timestamp="6592211" />
  <Command __id="3209" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:59:57 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6592213" type="Run" />
  <Command __id="3210" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 16:59:58 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6592414" type="Run" />
  <Command __id="3212" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 16:59:58 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="6592658" />
  <Command __id="3215" _type="MoveCaretCommand" caretOffset="14" date="Tue Dec 05 17:00:01 EST 2023" docOffset="14" starttimestamp="1701807005597" timestamp="6596271" />
  <Command __id="3217" _type="MoveCaretCommand" caretOffset="422" date="Tue Dec 05 17:00:02 EST 2023" docOffset="680" starttimestamp="1701807005597" timestamp="6597371" />
  <Command __id="3230" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:00:18 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6613331" type="Debug" />
  <Command __id="3231" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:00:18 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6613331" type="Run" />
  <Command __id="3232" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:00:18 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6613331" type="Debug" />
  <Command __id="3233" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:00:18 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6613331" type="Run" />
  <Command __id="3234" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:00:19 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6613664" type="Run" />
  <Command __id="3256" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:00:32 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6626683" type="Run" />
  <Command __id="3259" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:00:37 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6631415" type="Run" />
  <Command __id="3260" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:00:37 EST 2023" starttimestamp="1701807005597" timestamp="6631416" />
  <Command __id="3262" _type="MoveCaretCommand" caretOffset="178" date="Tue Dec 05 17:00:37 EST 2023" docOffset="436" starttimestamp="1701807005597" timestamp="6631722" />
  <Command __id="3263" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 17:00:40 EST 2023" starttimestamp="1701807005597" timestamp="6634888" />
  <Command __id="3264" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:00:40 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6634892" type="Run" />
  <Command __id="3265" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepInto" date="Tue Dec 05 17:00:41 EST 2023" starttimestamp="1701807005597" timestamp="6635857" />
  <Command __id="3266" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:00:41 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6635859" type="Run" />
  <Command __id="3216" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:00:02 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6597317">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3241" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:00:24 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6619207">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3261" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:00:37 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6631676">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3270" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:00:44 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="6638642">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3281" _type="BreakPointCommand" date="Tue Dec 05 17:01:03 EST 2023" lineNumber="22" starttimestamp="1701807005597" timestamp="6657437" type="BreakPointAdded" />
  <Command __id="3283" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:01:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6663614" type="Run" />
  <Command __id="3284" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:01:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6663614" type="Run" />
  <Command __id="3285" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:01:09 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6663724" type="Run" />
  <Command __id="3286" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:01:09 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6663736" type="Run" />
  <Command __id="3287" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:01:09 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6663865" type="Run" />
  <Command __id="3288" _type="ShellCommand" date="Tue Dec 05 17:01:09 EST 2023" starttimestamp="1701807005597" timestamp="6664046" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3289" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:01:10 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6664659" type="Run" />
  <Command __id="3316" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:01:26 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6680445" type="Run" />
  <Command __id="3317" _type="ShellCommand" date="Tue Dec 05 17:01:29 EST 2023" starttimestamp="1701807005597" timestamp="6683693" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3318" _type="ShellCommand" date="Tue Dec 05 17:01:55 EST 2023" starttimestamp="1701807005597" timestamp="6710157" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3319" _type="MoveCaretCommand" caretOffset="812" date="Tue Dec 05 17:01:55 EST 2023" docOffset="1070" starttimestamp="1701807005597" timestamp="6710252" />
  <Command __id="3320" _type="MoveCaretCommand" caretOffset="812" date="Tue Dec 05 17:01:55 EST 2023" docOffset="1070" starttimestamp="1701807005597" timestamp="6710252" />
  <Command __id="3321" _type="MoveCaretCommand" caretOffset="706" date="Tue Dec 05 17:01:57 EST 2023" docOffset="964" starttimestamp="1701807005597" timestamp="6712037" />
  <Command __id="3322" _type="MoveCaretCommand" caretOffset="706" date="Tue Dec 05 17:01:57 EST 2023" docOffset="964" starttimestamp="1701807005597" timestamp="6712037" />
  <Command __id="3323" _type="MoveCaretCommand" caretOffset="711" date="Tue Dec 05 17:01:58 EST 2023" docOffset="969" starttimestamp="1701807005597" timestamp="6712797" />
  <Command __id="3324" _type="MoveCaretCommand" caretOffset="711" date="Tue Dec 05 17:01:58 EST 2023" docOffset="969" starttimestamp="1701807005597" timestamp="6712797" />
  <Command __id="3325" _type="MoveCaretCommand" caretOffset="748" date="Tue Dec 05 17:01:59 EST 2023" docOffset="1006" starttimestamp="1701807005597" timestamp="6713816" />
  <Command __id="3326" _type="MoveCaretCommand" caretOffset="748" date="Tue Dec 05 17:01:59 EST 2023" docOffset="1006" starttimestamp="1701807005597" timestamp="6713816" />
  <Command __id="3327" _type="MoveCaretCommand" caretOffset="742" date="Tue Dec 05 17:02:00 EST 2023" docOffset="1000" starttimestamp="1701807005597" timestamp="6714429" />
  <Command __id="3328" _type="MoveCaretCommand" caretOffset="742" date="Tue Dec 05 17:02:00 EST 2023" docOffset="1000" starttimestamp="1701807005597" timestamp="6714429" />
  <Command __id="3329" _type="MoveCaretCommand" caretOffset="680" date="Tue Dec 05 17:02:00 EST 2023" docOffset="938" starttimestamp="1701807005597" timestamp="6715274" />
  <Command __id="3330" _type="MoveCaretCommand" caretOffset="680" date="Tue Dec 05 17:02:00 EST 2023" docOffset="938" starttimestamp="1701807005597" timestamp="6715274" />
  <Command __id="3331" _type="MoveCaretCommand" caretOffset="294" date="Tue Dec 05 17:02:04 EST 2023" docOffset="552" starttimestamp="1701807005597" timestamp="6719037" />
  <Command __id="3332" _type="MoveCaretCommand" caretOffset="294" date="Tue Dec 05 17:02:04 EST 2023" docOffset="552" starttimestamp="1701807005597" timestamp="6719037" />
  <Command __id="3333" _type="MoveCaretCommand" caretOffset="303" date="Tue Dec 05 17:02:05 EST 2023" docOffset="561" starttimestamp="1701807005597" timestamp="6719582" />
  <Command __id="3334" _type="MoveCaretCommand" caretOffset="303" date="Tue Dec 05 17:02:05 EST 2023" docOffset="561" starttimestamp="1701807005597" timestamp="6719582" />
  <Command __id="3335" _type="MoveCaretCommand" caretOffset="294" date="Tue Dec 05 17:02:05 EST 2023" docOffset="552" starttimestamp="1701807005597" timestamp="6720070" />
  <Command __id="3336" _type="MoveCaretCommand" caretOffset="294" date="Tue Dec 05 17:02:05 EST 2023" docOffset="552" starttimestamp="1701807005597" timestamp="6720070" />
  <Command __id="3337" _type="MoveCaretCommand" caretOffset="304" date="Tue Dec 05 17:02:06 EST 2023" docOffset="562" starttimestamp="1701807005597" timestamp="6720495" />
  <Command __id="3338" _type="MoveCaretCommand" caretOffset="304" date="Tue Dec 05 17:02:06 EST 2023" docOffset="562" starttimestamp="1701807005597" timestamp="6720495" />
  <Command __id="3339" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Dec 05 17:02:07 EST 2023" starttimestamp="1701807005597" timestamp="6722018" />
  <Command __id="3340" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:02:07 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6722040" type="Debug" />
  <Command __id="3341" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:02:07 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6722040" type="Run" />
  <Command __id="3342" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:02:07 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6722040" type="Debug" />
  <Command __id="3343" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:02:07 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6722040" type="Run" />
  <Command __id="3274" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:00:57 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="6652245">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3276" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:00:58 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6653058">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3296" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:01:14 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6668430">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3313" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:01:18 EST 2023" docASTNodeCount="209" docActiveCodeLength="1199" docExpressionCount="141" docLength="1214" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6673257">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {        IdentifierAtom ids[] = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3344" _type="MoveCaretCommand" caretOffset="421" date="Tue Dec 05 17:02:08 EST 2023" docOffset="679" starttimestamp="1701807005597" timestamp="6723130" />
  <Command __id="3345" _type="MoveCaretCommand" caretOffset="421" date="Tue Dec 05 17:02:08 EST 2023" docOffset="679" starttimestamp="1701807005597" timestamp="6723130" />
  <Command __id="3346" _type="MoveCaretCommand" caretOffset="421" date="Tue Dec 05 17:02:09 EST 2023" docOffset="679" starttimestamp="1701807005597" timestamp="6723716" />
  <Command __id="3347" _type="MoveCaretCommand" caretOffset="421" date="Tue Dec 05 17:02:09 EST 2023" docOffset="679" starttimestamp="1701807005597" timestamp="6723716" />
  <Command __id="3348" _type="MoveCaretCommand" caretOffset="354" date="Tue Dec 05 17:02:10 EST 2023" docOffset="612" starttimestamp="1701807005597" timestamp="6724446" />
  <Command __id="3349" _type="MoveCaretCommand" caretOffset="354" date="Tue Dec 05 17:02:10 EST 2023" docOffset="612" starttimestamp="1701807005597" timestamp="6724446" />
  <DocumentChange __id="3350" _type="Insert" date="Tue Dec 05 17:02:10 EST 2023" docASTNodeCount="214" docActiveCodeLength="1215" docExpressionCount="144" docLength="1230" length="16" offset="612" repeat="13" starttimestamp="1701807005597" timestamp="6724992" timestamp2="6728317">
    <text><![CDATA[
		if(expr.getH)]]></text>
  </DocumentChange>
  <Command __id="3351" _type="InsertStringCommand" date="Tue Dec 05 17:02:10 EST 2023" starttimestamp="1701807005597" timestamp="6724997" timestamp2="6724997">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3352" _type="InsertStringCommand" date="Tue Dec 05 17:02:10 EST 2023" starttimestamp="1701807005597" timestamp="6724997" timestamp2="6724997">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3354" _type="InsertStringCommand" date="Tue Dec 05 17:02:10 EST 2023" starttimestamp="1701807005597" timestamp="6725353" timestamp2="6725353">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3355" _type="InsertStringCommand" date="Tue Dec 05 17:02:10 EST 2023" starttimestamp="1701807005597" timestamp="6725353" timestamp2="6725353">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3357" _type="InsertStringCommand" date="Tue Dec 05 17:02:11 EST 2023" starttimestamp="1701807005597" timestamp="6725426" timestamp2="6725426">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3358" _type="InsertStringCommand" date="Tue Dec 05 17:02:11 EST 2023" starttimestamp="1701807005597" timestamp="6725426" timestamp2="6725426">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3360" _type="InsertStringCommand" date="Tue Dec 05 17:02:11 EST 2023" starttimestamp="1701807005597" timestamp="6725540" timestamp2="6725540">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3361" _type="InsertStringCommand" date="Tue Dec 05 17:02:11 EST 2023" starttimestamp="1701807005597" timestamp="6725540" timestamp2="6725540">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3363" _type="InsertStringCommand" date="Tue Dec 05 17:02:12 EST 2023" starttimestamp="1701807005597" timestamp="6727331" timestamp2="6727331">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3364" _type="InsertStringCommand" date="Tue Dec 05 17:02:12 EST 2023" starttimestamp="1701807005597" timestamp="6727331" timestamp2="6727331">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3366" _type="InsertStringCommand" date="Tue Dec 05 17:02:13 EST 2023" starttimestamp="1701807005597" timestamp="6727532" timestamp2="6727532">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3367" _type="InsertStringCommand" date="Tue Dec 05 17:02:13 EST 2023" starttimestamp="1701807005597" timestamp="6727532" timestamp2="6727532">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3369" _type="InsertStringCommand" date="Tue Dec 05 17:02:13 EST 2023" starttimestamp="1701807005597" timestamp="6727616" timestamp2="6727616">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3370" _type="InsertStringCommand" date="Tue Dec 05 17:02:13 EST 2023" starttimestamp="1701807005597" timestamp="6727616" timestamp2="6727616">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3372" _type="InsertStringCommand" date="Tue Dec 05 17:02:13 EST 2023" starttimestamp="1701807005597" timestamp="6727709" timestamp2="6727709">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3373" _type="InsertStringCommand" date="Tue Dec 05 17:02:13 EST 2023" starttimestamp="1701807005597" timestamp="6727709" timestamp2="6727709">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3375" _type="InsertStringCommand" date="Tue Dec 05 17:02:13 EST 2023" starttimestamp="1701807005597" timestamp="6727811" timestamp2="6727811">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3376" _type="InsertStringCommand" date="Tue Dec 05 17:02:13 EST 2023" starttimestamp="1701807005597" timestamp="6727811" timestamp2="6727811">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3377" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:02:13 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="6727818" />
  <Command __id="3382" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:02:14 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="6728498" />
  <DocumentChange __id="3383" _type="Replace" date="Tue Dec 05 17:02:14 EST 2023" docASTNodeCount="214" docActiveCodeLength="1220" docExpressionCount="144" docLength="1235" endLine="21" insertionLength="9" int_docASTNodeCount="212" int_docActiveCodeLength="1211" int_docExpressionCount="142" int_docLength="1226" length="4" offset="623" startLine="21" starttimestamp="1701807005597" timestamp="6728500">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="3384" _type="InsertStringCommand" date="Tue Dec 05 17:02:14 EST 2023" starttimestamp="1701807005597" timestamp="6728509" timestamp2="6728509">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3385" _type="InsertStringCommand" date="Tue Dec 05 17:02:14 EST 2023" starttimestamp="1701807005597" timestamp="6728510" timestamp2="6728510">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="3386" _type="Insert" date="Tue Dec 05 17:02:15 EST 2023" docASTNodeCount="214" docActiveCodeLength="1223" docExpressionCount="144" docLength="1238" length="3" offset="632" repeat="3" starttimestamp="1701807005597" timestamp="6729416" timestamp2="6729942">
    <text><![CDATA[ is]]></text>
  </DocumentChange>
  <Command __id="3387" _type="InsertStringCommand" date="Tue Dec 05 17:02:15 EST 2023" starttimestamp="1701807005597" timestamp="6729417" timestamp2="6729417">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3388" _type="InsertStringCommand" date="Tue Dec 05 17:02:15 EST 2023" starttimestamp="1701807005597" timestamp="6729417" timestamp2="6729417">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3390" _type="InsertStringCommand" date="Tue Dec 05 17:02:15 EST 2023" starttimestamp="1701807005597" timestamp="6729762" timestamp2="6729762">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3391" _type="InsertStringCommand" date="Tue Dec 05 17:02:15 EST 2023" starttimestamp="1701807005597" timestamp="6729762" timestamp2="6729762">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3393" _type="InsertStringCommand" date="Tue Dec 05 17:02:15 EST 2023" starttimestamp="1701807005597" timestamp="6729942" timestamp2="6729942">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3394" _type="InsertStringCommand" date="Tue Dec 05 17:02:15 EST 2023" starttimestamp="1701807005597" timestamp="6729942" timestamp2="6729942">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="3395" _type="Delete" date="Tue Dec 05 17:02:15 EST 2023" docASTNodeCount="214" docActiveCodeLength="1222" docExpressionCount="144" docLength="1237" endLine="21" length="1" offset="634" startLine="21" starttimestamp="1701807005597" timestamp="6730297">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <Command __id="3396" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:02:15 EST 2023" starttimestamp="1701807005597" timestamp="6730300" />
  <Command __id="3397" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:02:15 EST 2023" starttimestamp="1701807005597" timestamp="6730300" />
  <DocumentChange __id="3398" _type="Insert" date="Tue Dec 05 17:02:16 EST 2023" docASTNodeCount="214" docActiveCodeLength="1228" docExpressionCount="144" docLength="1243" length="6" offset="634" repeat="6" starttimestamp="1701807005597" timestamp="6730449" timestamp2="6731577">
    <text><![CDATA[nstand]]></text>
  </DocumentChange>
  <Command __id="3399" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6730449" timestamp2="6730449">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3400" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6730449" timestamp2="6730449">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3402" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6730562" timestamp2="6730562">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3403" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6730562" timestamp2="6730562">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3405" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6730731" timestamp2="6730731">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3406" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6730731" timestamp2="6730731">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3408" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6730886" timestamp2="6730886">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3409" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6730887" timestamp2="6730887">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3411" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6731362" timestamp2="6731362">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3412" _type="InsertStringCommand" date="Tue Dec 05 17:02:16 EST 2023" starttimestamp="1701807005597" timestamp="6731362" timestamp2="6731362">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3414" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6731577" timestamp2="6731577">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3415" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6731577" timestamp2="6731577">
    <data><![CDATA[d]]></data>
  </Command>
  <DocumentChange __id="3416" _type="Delete" date="Tue Dec 05 17:02:17 EST 2023" docASTNodeCount="214" docActiveCodeLength="1227" docExpressionCount="144" docLength="1242" endLine="21" length="1" offset="639" startLine="21" starttimestamp="1701807005597" timestamp="6731947">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <Command __id="3417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6731949" />
  <Command __id="3418" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6731949" />
  <Command __id="3420" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6731974" timestamp2="6731974">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3421" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6731974" timestamp2="6731974">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3423" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6732135" timestamp2="6732135">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3424" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6732135" timestamp2="6732135">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3426" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6732258" timestamp2="6732258">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3427" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6732258" timestamp2="6732258">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3429" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6732342" timestamp2="6732342">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3430" _type="InsertStringCommand" date="Tue Dec 05 17:02:17 EST 2023" starttimestamp="1701807005597" timestamp="6732342" timestamp2="6732342">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3432" _type="InsertStringCommand" date="Tue Dec 05 17:02:18 EST 2023" starttimestamp="1701807005597" timestamp="6733282" timestamp2="6733282">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3433" _type="InsertStringCommand" date="Tue Dec 05 17:02:18 EST 2023" starttimestamp="1701807005597" timestamp="6733283" timestamp2="6733283">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3435" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6733490" timestamp2="6733490">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3436" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6733491" timestamp2="6733491">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3438" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6733798" timestamp2="6733798">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3439" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6733798" timestamp2="6733798">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3441" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6733960" timestamp2="6733960">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3442" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6733960" timestamp2="6733960">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3444" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6734103" timestamp2="6734103">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3445" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6734103" timestamp2="6734103">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3447" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6734354" timestamp2="6734354">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3448" _type="InsertStringCommand" date="Tue Dec 05 17:02:19 EST 2023" starttimestamp="1701807005597" timestamp="6734354" timestamp2="6734354">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3450" _type="InsertStringCommand" date="Tue Dec 05 17:02:20 EST 2023" starttimestamp="1701807005597" timestamp="6734448" timestamp2="6734448">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3451" _type="InsertStringCommand" date="Tue Dec 05 17:02:20 EST 2023" starttimestamp="1701807005597" timestamp="6734448" timestamp2="6734448">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3453" _type="InsertStringCommand" date="Tue Dec 05 17:02:20 EST 2023" starttimestamp="1701807005597" timestamp="6734522" timestamp2="6734522">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3454" _type="InsertStringCommand" date="Tue Dec 05 17:02:20 EST 2023" starttimestamp="1701807005597" timestamp="6734522" timestamp2="6734522">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3455" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:02:20 EST 2023" starttimestamp="1701807005597" timestamp="6734896" />
  <Command __id="3456" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:02:20 EST 2023" starttimestamp="1701807005597" timestamp="6734897" />
  <Command __id="3458" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6735499" timestamp2="6735499">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3459" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6735499" timestamp2="6735499">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3461" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6735651" timestamp2="6735651">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3462" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6735651" timestamp2="6735651">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3464" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6735943" timestamp2="6735943">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3465" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6735943" timestamp2="6735943">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3467" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736013" timestamp2="6736013">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3468" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736013" timestamp2="6736013">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3470" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736091" timestamp2="6736091">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3471" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736091" timestamp2="6736091">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3473" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736196" timestamp2="6736196">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3474" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736196" timestamp2="6736196">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3476" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736317" timestamp2="6736317">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3477" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736317" timestamp2="6736317">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3479" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736332" timestamp2="6736332">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3480" _type="InsertStringCommand" date="Tue Dec 05 17:02:21 EST 2023" starttimestamp="1701807005597" timestamp="6736332" timestamp2="6736332">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3482" _type="InsertStringCommand" date="Tue Dec 05 17:02:22 EST 2023" starttimestamp="1701807005597" timestamp="6736468" timestamp2="6736468">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3483" _type="InsertStringCommand" date="Tue Dec 05 17:02:22 EST 2023" starttimestamp="1701807005597" timestamp="6736468" timestamp2="6736468">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="3419" _type="Insert" date="Tue Dec 05 17:02:17 EST 2023" docASTNodeCount="217" docActiveCodeLength="1239" docExpressionCount="146" docLength="1254" length="12" offset="639" repeat="12" starttimestamp="1701807005597" timestamp="6731973" timestamp2="6734521">
    <text><![CDATA[ceof NilAtom]]></text>
  </DocumentChange>
  <DocumentChange __id="3457" _type="Insert" date="Tue Dec 05 17:02:21 EST 2023" docASTNodeCount="218" docActiveCodeLength="1256" docExpressionCount="146" docLength="1271" length="17" offset="652" repeat="9" starttimestamp="1701807005597" timestamp="6735497" timestamp2="6736466">
    <text><![CDATA[ {
			return 
		}]]></text>
  </DocumentChange>
  <Command __id="3484" _type="SelectTextCommand" caretOffset="519" date="Tue Dec 05 17:02:31 EST 2023" end="519" start="494" starttimestamp="1701807005597" timestamp="6745423" />
  <Command __id="3485" _type="SelectTextCommand" caretOffset="519" date="Tue Dec 05 17:02:31 EST 2023" end="519" start="494" starttimestamp="1701807005597" timestamp="6745424" />
  <Command __id="3486" _type="CopyCommand" date="Tue Dec 05 17:02:31 EST 2023" starttimestamp="1701807005597" timestamp="6745606" />
  <Command __id="3487" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:02:31 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="6746130" />
  <Command __id="3488" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:02:31 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="6746130" />
  <Command __id="3490" _type="PasteCommand" date="Tue Dec 05 17:02:31 EST 2023" starttimestamp="1701807005597" timestamp="6746308" />
  <Command __id="3492" _type="InsertStringCommand" date="Tue Dec 05 17:02:33 EST 2023" starttimestamp="1701807005597" timestamp="6747465" timestamp2="6747465">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3493" _type="InsertStringCommand" date="Tue Dec 05 17:02:33 EST 2023" starttimestamp="1701807005597" timestamp="6747465" timestamp2="6747465">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3494" _type="MoveCaretCommand" caretOffset="434" date="Tue Dec 05 17:02:38 EST 2023" docOffset="692" starttimestamp="1701807005597" timestamp="6752733" />
  <Command __id="3495" _type="MoveCaretCommand" caretOffset="434" date="Tue Dec 05 17:02:38 EST 2023" docOffset="692" starttimestamp="1701807005597" timestamp="6752733" />
  <Command __id="3497" _type="InsertStringCommand" date="Tue Dec 05 17:02:38 EST 2023" starttimestamp="1701807005597" timestamp="6752901" timestamp2="6752901">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3498" _type="InsertStringCommand" date="Tue Dec 05 17:02:38 EST 2023" starttimestamp="1701807005597" timestamp="6752901" timestamp2="6752901">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3499" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 17:02:39 EST 2023" docOffset="691" starttimestamp="1701807005597" timestamp="6754146" />
  <Command __id="3500" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 17:02:39 EST 2023" docOffset="691" starttimestamp="1701807005597" timestamp="6754146" />
  <Command __id="3501" _type="ShellCommand" date="Tue Dec 05 17:02:43 EST 2023" starttimestamp="1701807005597" timestamp="6757957" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3502" _type="ShellCommand" date="Tue Dec 05 17:02:44 EST 2023" starttimestamp="1701807005597" timestamp="6758826" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3503" _type="ShellCommand" date="Tue Dec 05 17:02:45 EST 2023" starttimestamp="1701807005597" timestamp="6759637" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="3489" _type="Insert" date="Tue Dec 05 17:02:31 EST 2023" docASTNodeCount="221" docActiveCodeLength="1283" docExpressionCount="149" docLength="1298" length="27" offset="665" repeat="2" starttimestamp="1701807005597" timestamp="6746304" timestamp2="6747461">
    <text><![CDATA[LambdaFactory.newInstance()]]></text>
  </DocumentChange>
  <DocumentChange __id="3496" _type="Insert" date="Tue Dec 05 17:02:38 EST 2023" docASTNodeCount="221" docActiveCodeLength="1284" docExpressionCount="149" docLength="1299" length="1" offset="692" starttimestamp="1701807005597" timestamp="6752898">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="3504" _type="ShellCommand" date="Tue Dec 05 17:02:52 EST 2023" starttimestamp="1701807005597" timestamp="6766741" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3505" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 17:02:53 EST 2023" docOffset="691" starttimestamp="1701807005597" timestamp="6767681" />
  <Command __id="3506" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 17:02:53 EST 2023" docOffset="691" starttimestamp="1701807005597" timestamp="6767682" />
  <DocumentChange __id="3507" _type="Insert" date="Tue Dec 05 17:02:54 EST 2023" docASTNodeCount="227" docActiveCodeLength="1297" docExpressionCount="153" docLength="1312" length="13" offset="691" repeat="12" starttimestamp="1701807005597" timestamp="6768964" timestamp2="6773809">
    <text><![CDATA[[], expr.getT]]></text>
  </DocumentChange>
  <Command __id="3508" _type="InsertStringCommand" date="Tue Dec 05 17:02:54 EST 2023" starttimestamp="1701807005597" timestamp="6768969" timestamp2="6768969">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="3509" _type="InsertStringCommand" date="Tue Dec 05 17:02:54 EST 2023" starttimestamp="1701807005597" timestamp="6768969" timestamp2="6768969">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="3510" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:02:55 EST 2023" starttimestamp="1701807005597" timestamp="6769439" />
  <Command __id="3511" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:02:55 EST 2023" starttimestamp="1701807005597" timestamp="6769439" />
  <Command __id="3513" _type="InsertStringCommand" date="Tue Dec 05 17:02:56 EST 2023" starttimestamp="1701807005597" timestamp="6770468" timestamp2="6770468">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3514" _type="InsertStringCommand" date="Tue Dec 05 17:02:56 EST 2023" starttimestamp="1701807005597" timestamp="6770468" timestamp2="6770468">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3516" _type="InsertStringCommand" date="Tue Dec 05 17:02:56 EST 2023" starttimestamp="1701807005597" timestamp="6770778" timestamp2="6770778">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3517" _type="InsertStringCommand" date="Tue Dec 05 17:02:56 EST 2023" starttimestamp="1701807005597" timestamp="6770778" timestamp2="6770778">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3519" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6772657" timestamp2="6772657">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3520" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6772657" timestamp2="6772657">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3522" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6772871" timestamp2="6772871">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3523" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6772871" timestamp2="6772871">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="3525" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6772994" timestamp2="6772994">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3526" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6772994" timestamp2="6772994">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3528" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6773087" timestamp2="6773087">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3529" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6773087" timestamp2="6773087">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3531" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6773179" timestamp2="6773179">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3532" _type="InsertStringCommand" date="Tue Dec 05 17:02:58 EST 2023" starttimestamp="1701807005597" timestamp="6773179" timestamp2="6773179">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3533" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:02:58 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="6773187" />
  <Command __id="3538" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:02:59 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="6774075" />
  <Command __id="3540" _type="InsertStringCommand" date="Tue Dec 05 17:02:59 EST 2023" starttimestamp="1701807005597" timestamp="6774086" timestamp2="6774086">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3541" _type="InsertStringCommand" date="Tue Dec 05 17:02:59 EST 2023" starttimestamp="1701807005597" timestamp="6774086" timestamp2="6774086">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3542" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 17:03:00 EST 2023" docOffset="709" starttimestamp="1701807005597" timestamp="6775143" />
  <Command __id="3543" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 17:03:00 EST 2023" docOffset="709" starttimestamp="1701807005597" timestamp="6775143" />
  <Command __id="3544" _type="MoveCaretCommand" caretOffset="510" date="Tue Dec 05 17:03:01 EST 2023" docOffset="768" starttimestamp="1701807005597" timestamp="6775742" />
  <Command __id="3545" _type="MoveCaretCommand" caretOffset="510" date="Tue Dec 05 17:03:01 EST 2023" docOffset="768" starttimestamp="1701807005597" timestamp="6775742" />
  <Command __id="3546" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 17:03:02 EST 2023" docOffset="691" starttimestamp="1701807005597" timestamp="6776650" />
  <Command __id="3547" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 17:03:02 EST 2023" docOffset="691" starttimestamp="1701807005597" timestamp="6776650" />
  <Command __id="3548" _type="MoveCaretCommand" caretOffset="354" date="Tue Dec 05 17:03:07 EST 2023" docOffset="612" starttimestamp="1701807005597" timestamp="6782163" />
  <Command __id="3549" _type="MoveCaretCommand" caretOffset="354" date="Tue Dec 05 17:03:07 EST 2023" docOffset="612" starttimestamp="1701807005597" timestamp="6782164" />
  <Command __id="3551" _type="InsertStringCommand" date="Tue Dec 05 17:03:08 EST 2023" starttimestamp="1701807005597" timestamp="6782667" timestamp2="6782667">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3552" _type="InsertStringCommand" date="Tue Dec 05 17:03:08 EST 2023" starttimestamp="1701807005597" timestamp="6782667" timestamp2="6782667">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="3539" _type="Replace" date="Tue Dec 05 17:02:59 EST 2023" docASTNodeCount="227" docActiveCodeLength="1302" docExpressionCount="153" docLength="1317" endLine="22" insertionLength="9" int_docASTNodeCount="227" int_docActiveCodeLength="1293" int_docExpressionCount="152" int_docLength="1308" length="4" offset="700" startLine="22" starttimestamp="1701807005597" timestamp="6774080">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3550" _type="Insert" date="Tue Dec 05 17:03:08 EST 2023" docASTNodeCount="227" docActiveCodeLength="1305" docExpressionCount="153" docLength="1320" length="3" offset="612" starttimestamp="1701807005597" timestamp="6782663">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3558" _type="Replace" date="Tue Dec 05 17:03:12 EST 2023" docASTNodeCount="232" docActiveCodeLength="1324" docExpressionCount="155" docLength="1339" endLine="21" insertionLength="21" int_docASTNodeCount="227" int_docActiveCodeLength="1303" int_docExpressionCount="153" int_docLength="1318" length="2" offset="613" startLine="21" starttimestamp="1701807005597" timestamp="6786426">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		IdentifierAtom ids[]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3560" _type="Insert" date="Tue Dec 05 17:03:12 EST 2023" docASTNodeCount="232" docActiveCodeLength="1325" docExpressionCount="155" docLength="1340" length="1" offset="634" starttimestamp="1701807005597" timestamp="6786744">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="3563" _type="Delete" date="Tue Dec 05 17:03:12 EST 2023" docASTNodeCount="232" docActiveCodeLength="1323" docExpressionCount="155" docLength="1338" endLine="21" length="2" offset="633" repeat="2" startLine="21" starttimestamp="1701807005597" timestamp="6787139" timestamp2="6787309">
    <text><![CDATA[[;]]></text>
  </DocumentChange>
  <Command __id="3553" _type="SelectTextCommand" caretOffset="469" date="Tue Dec 05 17:03:11 EST 2023" end="488" start="469" starttimestamp="1701807005597" timestamp="6785723" />
  <Command __id="3554" _type="SelectTextCommand" caretOffset="469" date="Tue Dec 05 17:03:11 EST 2023" end="488" start="469" starttimestamp="1701807005597" timestamp="6785723" />
  <Command __id="3555" _type="CopyCommand" date="Tue Dec 05 17:03:11 EST 2023" starttimestamp="1701807005597" timestamp="6785846" />
  <Command __id="3556" _type="MoveCaretCommand" caretOffset="357" date="Tue Dec 05 17:03:11 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="6786355" />
  <Command __id="3557" _type="MoveCaretCommand" caretOffset="357" date="Tue Dec 05 17:03:11 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="6786355" />
  <Command __id="3559" _type="PasteCommand" date="Tue Dec 05 17:03:12 EST 2023" starttimestamp="1701807005597" timestamp="6786429" />
  <Command __id="3561" _type="InsertStringCommand" date="Tue Dec 05 17:03:12 EST 2023" starttimestamp="1701807005597" timestamp="6786746" timestamp2="6786746">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3562" _type="InsertStringCommand" date="Tue Dec 05 17:03:12 EST 2023" starttimestamp="1701807005597" timestamp="6786746" timestamp2="6786746">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3564" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:12 EST 2023" starttimestamp="1701807005597" timestamp="6787141" />
  <Command __id="3565" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:12 EST 2023" starttimestamp="1701807005597" timestamp="6787141" />
  <Command __id="3567" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:12 EST 2023" starttimestamp="1701807005597" timestamp="6787311" />
  <Command __id="3568" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:12 EST 2023" starttimestamp="1701807005597" timestamp="6787311" />
  <Command __id="3570" _type="InsertStringCommand" date="Tue Dec 05 17:03:14 EST 2023" starttimestamp="1701807005597" timestamp="6788658" timestamp2="6788658">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="3571" _type="InsertStringCommand" date="Tue Dec 05 17:03:14 EST 2023" starttimestamp="1701807005597" timestamp="6788658" timestamp2="6788658">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="3572" _type="InsertStringCommand" date="Tue Dec 05 17:03:14 EST 2023" starttimestamp="1701807005597" timestamp="6788831" timestamp2="6788831">
    <data><![CDATA[]]]></data>
  </Command>
  <Command __id="3573" _type="InsertStringCommand" date="Tue Dec 05 17:03:14 EST 2023" starttimestamp="1701807005597" timestamp="6788831" timestamp2="6788831">
    <data><![CDATA[]]]></data>
  </Command>
  <Command __id="3574" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:03:14 EST 2023" starttimestamp="1701807005597" timestamp="6789206" />
  <Command __id="3575" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:03:14 EST 2023" starttimestamp="1701807005597" timestamp="6789206" />
  <Command __id="3576" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Dec 05 17:03:15 EST 2023" starttimestamp="1701807005597" timestamp="6789823" />
  <Command __id="3577" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue Dec 05 17:03:15 EST 2023" starttimestamp="1701807005597" timestamp="6789824" />
  <Command __id="3579" _type="InsertStringCommand" date="Tue Dec 05 17:03:16 EST 2023" starttimestamp="1701807005597" timestamp="6790426" timestamp2="6790426">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3580" _type="InsertStringCommand" date="Tue Dec 05 17:03:16 EST 2023" starttimestamp="1701807005597" timestamp="6790426" timestamp2="6790426">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3581" _type="MoveCaretCommand" caretOffset="459" date="Tue Dec 05 17:03:17 EST 2023" docOffset="717" starttimestamp="1701807005597" timestamp="6792225" />
  <Command __id="3582" _type="MoveCaretCommand" caretOffset="459" date="Tue Dec 05 17:03:17 EST 2023" docOffset="717" starttimestamp="1701807005597" timestamp="6792226" />
  <Command __id="3584" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792509" />
  <Command __id="3585" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792509" />
  <Command __id="3587" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792617" />
  <Command __id="3588" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792617" />
  <Command __id="3590" _type="InsertStringCommand" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792800" timestamp2="6792800">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3591" _type="InsertStringCommand" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792800" timestamp2="6792800">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3593" _type="InsertStringCommand" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792869" timestamp2="6792869">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3594" _type="InsertStringCommand" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792869" timestamp2="6792869">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3596" _type="InsertStringCommand" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792970" timestamp2="6792970">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3597" _type="InsertStringCommand" date="Tue Dec 05 17:03:18 EST 2023" starttimestamp="1701807005597" timestamp="6792970" timestamp2="6792970">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3598" _type="SelectTextCommand" caretOffset="500" date="Tue Dec 05 17:03:20 EST 2023" end="507" start="500" starttimestamp="1701807005597" timestamp="6794783" />
  <Command __id="3599" _type="SelectTextCommand" caretOffset="500" date="Tue Dec 05 17:03:20 EST 2023" end="507" start="500" starttimestamp="1701807005597" timestamp="6794784" />
  <Command __id="3600" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 17:03:20 EST 2023" docOffset="760" starttimestamp="1701807005597" timestamp="6795110" />
  <Command __id="3601" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 17:03:20 EST 2023" docOffset="760" starttimestamp="1701807005597" timestamp="6795110" />
  <Command __id="3602" _type="SelectTextCommand" caretOffset="491" date="Tue Dec 05 17:03:21 EST 2023" end="506" start="491" starttimestamp="1701807005597" timestamp="6796285" />
  <Command __id="3603" _type="SelectTextCommand" caretOffset="491" date="Tue Dec 05 17:03:21 EST 2023" end="506" start="491" starttimestamp="1701807005597" timestamp="6796286" />
  <Command __id="3605" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:22 EST 2023" starttimestamp="1701807005597" timestamp="6796550" />
  <Command __id="3606" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:22 EST 2023" starttimestamp="1701807005597" timestamp="6796550" />
  <Command __id="3607" _type="MoveCaretCommand" caretOffset="378" date="Tue Dec 05 17:03:22 EST 2023" docOffset="636" starttimestamp="1701807005597" timestamp="6797094" />
  <Command __id="3608" _type="MoveCaretCommand" caretOffset="378" date="Tue Dec 05 17:03:22 EST 2023" docOffset="636" starttimestamp="1701807005597" timestamp="6797094" />
  <Command __id="3609" _type="MoveCaretCommand" caretOffset="525" date="Tue Dec 05 17:03:23 EST 2023" docOffset="783" starttimestamp="1701807005597" timestamp="6797780" />
  <Command __id="3610" _type="MoveCaretCommand" caretOffset="525" date="Tue Dec 05 17:03:23 EST 2023" docOffset="783" starttimestamp="1701807005597" timestamp="6797780" />
  <Command __id="3611" _type="MoveCaretCommand" caretOffset="495" date="Tue Dec 05 17:03:24 EST 2023" docOffset="753" starttimestamp="1701807005597" timestamp="6799126" />
  <Command __id="3612" _type="MoveCaretCommand" caretOffset="495" date="Tue Dec 05 17:03:24 EST 2023" docOffset="753" starttimestamp="1701807005597" timestamp="6799127" />
  <Command __id="3614" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:24 EST 2023" starttimestamp="1701807005597" timestamp="6799390" />
  <Command __id="3615" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:24 EST 2023" starttimestamp="1701807005597" timestamp="6799390" />
  <Command __id="3617" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:25 EST 2023" starttimestamp="1701807005597" timestamp="6799492" />
  <Command __id="3618" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:25 EST 2023" starttimestamp="1701807005597" timestamp="6799492" />
  <Command __id="3620" _type="InsertStringCommand" date="Tue Dec 05 17:03:25 EST 2023" starttimestamp="1701807005597" timestamp="6800337" timestamp2="6800337">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3621" _type="InsertStringCommand" date="Tue Dec 05 17:03:25 EST 2023" starttimestamp="1701807005597" timestamp="6800337" timestamp2="6800337">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3622" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:03:26 EST 2023" starttimestamp="1701807005597" timestamp="6800902" />
  <Command __id="3623" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:03:26 EST 2023" starttimestamp="1701807005597" timestamp="6800902" />
  <Command __id="3625" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:26 EST 2023" starttimestamp="1701807005597" timestamp="6801078" />
  <Command __id="3626" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:03:26 EST 2023" starttimestamp="1701807005597" timestamp="6801078" />
  <Command __id="3627" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:03:27 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="6801723" />
  <Command __id="3628" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:03:27 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="6801723" />
  <Command __id="3659" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:03:40 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6815383" type="Run" />
  <Command __id="3660" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:03:40 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6815384" type="Run" />
  <Command __id="3661" _type="ShellCommand" date="Tue Dec 05 17:03:41 EST 2023" starttimestamp="1701807005597" timestamp="6815701" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3677" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:04:10 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6845264" type="Run" />
  <Command __id="3678" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:04:10 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6845264" type="Run" />
  <Command __id="3679" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:04:10 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6845374" type="Run" />
  <Command __id="3680" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:04:10 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6845387" type="Run" />
  <Command __id="3681" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:04:11 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6845530" type="Run" />
  <Command __id="3682" _type="ShellCommand" date="Tue Dec 05 17:04:11 EST 2023" starttimestamp="1701807005597" timestamp="6845722" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3683" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:04:11 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6846334" type="Run" />
  <DocumentChange __id="3569" _type="Insert" date="Tue Dec 05 17:03:14 EST 2023" docASTNodeCount="232" docActiveCodeLength="1326" docExpressionCount="155" docLength="1341" length="3" offset="633" repeat="2" starttimestamp="1701807005597" timestamp="6788656" timestamp2="6790424">
    <text><![CDATA[[];]]></text>
  </DocumentChange>
  <DocumentChange __id="3583" _type="Delete" date="Tue Dec 05 17:03:18 EST 2023" docASTNodeCount="229" docActiveCodeLength="1324" docExpressionCount="154" docLength="1339" endLine="23" length="2" offset="715" repeat="2" startLine="23" starttimestamp="1701807005597" timestamp="6792506" timestamp2="6792614">
    <text><![CDATA[[]]]></text>
  </DocumentChange>
  <DocumentChange __id="3589" _type="Insert" date="Tue Dec 05 17:03:18 EST 2023" docASTNodeCount="230" docActiveCodeLength="1327" docExpressionCount="155" docLength="1342" length="3" offset="715" repeat="3" starttimestamp="1701807005597" timestamp="6792799" timestamp2="6792968">
    <text><![CDATA[ids]]></text>
  </DocumentChange>
  <DocumentChange __id="3604" _type="Delete" date="Tue Dec 05 17:03:22 EST 2023" docASTNodeCount="231" docActiveCodeLength="1312" docExpressionCount="156" docLength="1327" endLine="25" length="15" offset="749" startLine="25" starttimestamp="1701807005597" timestamp="6796546">
    <text><![CDATA[IdentifierAtom ]]></text>
  </DocumentChange>
  <DocumentChange __id="3613" _type="Delete" date="Tue Dec 05 17:03:24 EST 2023" docASTNodeCount="228" docActiveCodeLength="1310" docExpressionCount="155" docLength="1325" endLine="25" length="2" offset="751" repeat="2" startLine="25" starttimestamp="1701807005597" timestamp="6799386" timestamp2="6799489">
    <text><![CDATA[s[]]></text>
  </DocumentChange>
  <DocumentChange __id="3619" _type="Insert" date="Tue Dec 05 17:03:25 EST 2023" docASTNodeCount="228" docActiveCodeLength="1311" docExpressionCount="155" docLength="1326" length="1" offset="751" starttimestamp="1701807005597" timestamp="6800335">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="3624" _type="Delete" date="Tue Dec 05 17:03:26 EST 2023" docASTNodeCount="228" docActiveCodeLength="1310" docExpressionCount="155" docLength="1325" endLine="25" length="1" offset="752" startLine="25" starttimestamp="1701807005597" timestamp="6801075">
    <text><![CDATA[]]]></text>
  </DocumentChange>
  <DocumentChange __id="3631" _type="Insert" date="Tue Dec 05 17:03:31 EST 2023" docASTNodeCount="229" docActiveCodeLength="1317" docExpressionCount="156" docLength="1332" length="7" offset="635" repeat="7" starttimestamp="1701807005597" timestamp="6805931" timestamp2="6806671">
    <text><![CDATA[ = null]]></text>
  </DocumentChange>
  <Command __id="3684" _type="ShellCommand" date="Tue Dec 05 17:04:31 EST 2023" starttimestamp="1701807005597" timestamp="6866285" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3686" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 17:04:41 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="6875971" />
  <Command __id="3687" _type="ShellCommand" date="Tue Dec 05 17:04:45 EST 2023" starttimestamp="1701807005597" timestamp="6879948" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3710" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:05:03 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6897998" type="Run" />
  <Command __id="3711" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:05:03 EST 2023" starttimestamp="1701807005597" timestamp="6897998" />
  <Command __id="3685" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:04:41 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6875886">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3715" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:05:07 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6901724" type="Run" />
  <Command __id="3717" _type="MoveCaretCommand" caretOffset="591" date="Tue Dec 05 17:05:20 EST 2023" docOffset="849" starttimestamp="1701807005597" timestamp="6914934" />
  <Command __id="3718" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Tue Dec 05 17:05:25 EST 2023" starttimestamp="1701807005597" timestamp="6920153" />
  <Command __id="3719" _type="BreakPointCommand" date="Tue Dec 05 17:05:25 EST 2023" lineNumber="16" starttimestamp="1701807005597" timestamp="6920154" type="BreakPointAdded" />
  <Command __id="3731" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:05:45 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="6939498" type="Run" />
  <Command __id="3732" _type="ShellCommand" date="Tue Dec 05 17:05:48 EST 2023" starttimestamp="1701807005597" timestamp="6942542" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3716" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:05:20 EST 2023" docASTNodeCount="229" docActiveCodeLength="1317" docExpressionCount="156" docLength="1332" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6914866">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {"), Diff(DELETE,"        "), Diff(INSERT,"		"), Diff(EQUAL,"IdentifierAtom ids[] ="), Diff(INSERT," null;		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, expr.getTail());		}        ids ="), Diff(EQUAL," extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[package index;

import java.util.ArrayList;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.NilAtom;
import main.lisp.evaluator.function.LambdaFactory;
import main.lisp.parser.terms.SExpression;

public class LambdaEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
		// return expr;
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		IdentifierAtom ids[] = null;
		if(expr.getHead() instanceof NilAtom) {
			return LambdaFactory.newInstance(ids, expr.getTail());
		}
        ids = extractIdentifiers(expr.getHead());
        return LambdaFactory.newInstance(ids, expr.getTail());
	}

    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {
        ArrayList<IdentifierAtom> ids = new ArrayList<>();
        while(!(expr instanceof NilAtom)) {
            ids.add((IdentifierAtom) expr.getHead());
            expr = expr.getTail();
        }
        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];
        for(IdentifierAtom id : ids) {
            idArray[ids.indexOf(id)] = id;
        }
        return idArray;
    }
}]]></snapshot>
  </Command>
  <Command __id="3722" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:05:27 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6922312">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3729" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:05:42 EST 2023" docASTNodeCount="229" docActiveCodeLength="1317" docExpressionCount="156" docLength="1332" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6936832">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		IdentifierAtom ids[] = null;		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, expr.getTail());		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3733" _type="ShellCommand" date="Tue Dec 05 17:05:51 EST 2023" starttimestamp="1701807005597" timestamp="6945740" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3734" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:06:02 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6957355">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3735" _type="MoveCaretCommand" caretOffset="228" date="Tue Dec 05 17:06:03 EST 2023" docOffset="462" starttimestamp="1701807005597" timestamp="6957420" />
  <Command __id="3737" _type="MoveCaretCommand" caretOffset="178" date="Tue Dec 05 17:06:10 EST 2023" docOffset="436" starttimestamp="1701807005597" timestamp="6964867" />
  <Command __id="3738" _type="MoveCaretCommand" caretOffset="489" date="Tue Dec 05 17:06:19 EST 2023" docOffset="747" starttimestamp="1701807005597" timestamp="6974290" />
  <Command __id="3739" _type="MoveCaretCommand" caretOffset="489" date="Tue Dec 05 17:06:19 EST 2023" docOffset="747" starttimestamp="1701807005597" timestamp="6974290" />
  <Command __id="3740" _type="ShellCommand" date="Tue Dec 05 17:06:22 EST 2023" starttimestamp="1701807005597" timestamp="6976568" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3741" _type="ShellCommand" date="Tue Dec 05 17:06:22 EST 2023" starttimestamp="1701807005597" timestamp="6977047" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3742" _type="ShellCommand" date="Tue Dec 05 17:06:23 EST 2023" starttimestamp="1701807005597" timestamp="6977639" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3743" _type="ShellCommand" date="Tue Dec 05 17:07:27 EST 2023" starttimestamp="1701807005597" timestamp="7041620" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3749" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:07:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7052760" type="Run" />
  <Command __id="3750" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:07:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7052760" type="Run" />
  <Command __id="3751" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:07:38 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7052870" type="Run" />
  <Command __id="3752" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:07:38 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7052882" type="Run" />
  <Command __id="3753" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:07:38 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7053025" type="Run" />
  <Command __id="3754" _type="ShellCommand" date="Tue Dec 05 17:07:38 EST 2023" starttimestamp="1701807005597" timestamp="7053209" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3755" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:07:39 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7053819" type="Run" />
  <Command __id="3780" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:07:59 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7074362" type="Run" />
  <Command __id="3781" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:08:04 EST 2023" starttimestamp="1701807005597" timestamp="7078709" />
  <Command __id="3782" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:08:04 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7078710" type="Run" />
  <Command __id="3783" _type="ExceptionCommand" date="Tue Dec 05 17:08:04 EST 2023" starttimestamp="1701807005597" timestamp="7078742" type="Exception">
    <exceptionString><![CDATA[java.lang.NullPointerException
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3785" _type="MoveCaretCommand" caretOffset="228" date="Tue Dec 05 17:08:04 EST 2023" docOffset="462" starttimestamp="1701807005597" timestamp="7079061" />
  <Command __id="3786" _type="MoveCaretCommand" caretOffset="477" date="Tue Dec 05 17:08:23 EST 2023" docOffset="711" starttimestamp="1701807005597" timestamp="7097724" />
  <Command __id="3787" _type="MoveCaretCommand" caretOffset="486" date="Tue Dec 05 17:08:24 EST 2023" docOffset="720" starttimestamp="1701807005597" timestamp="7099106" />
  <Command __id="3788" _type="ShellCommand" date="Tue Dec 05 17:08:36 EST 2023" starttimestamp="1701807005597" timestamp="7110631" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3789" _type="ShellCommand" date="Tue Dec 05 17:08:44 EST 2023" starttimestamp="1701807005597" timestamp="7118616" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3791" _type="MoveCaretCommand" caretOffset="178" date="Tue Dec 05 17:08:44 EST 2023" docOffset="436" starttimestamp="1701807005597" timestamp="7118747" />
  <Command __id="3792" _type="MoveCaretCommand" caretOffset="718" date="Tue Dec 05 17:08:56 EST 2023" docOffset="976" starttimestamp="1701807005597" timestamp="7131283" />
  <Command __id="3793" _type="MoveCaretCommand" caretOffset="718" date="Tue Dec 05 17:08:56 EST 2023" docOffset="976" starttimestamp="1701807005597" timestamp="7131284" />
  <Command __id="3794" _type="SelectTextCommand" caretOffset="719" date="Tue Dec 05 17:08:57 EST 2023" end="719" start="716" starttimestamp="1701807005597" timestamp="7131452" />
  <Command __id="3795" _type="SelectTextCommand" caretOffset="719" date="Tue Dec 05 17:08:57 EST 2023" end="719" start="716" starttimestamp="1701807005597" timestamp="7131452" />
  <Command __id="3796" _type="MoveCaretCommand" caretOffset="266" date="Tue Dec 05 17:09:10 EST 2023" docOffset="524" starttimestamp="1701807005597" timestamp="7144885" />
  <Command __id="3797" _type="MoveCaretCommand" caretOffset="266" date="Tue Dec 05 17:09:10 EST 2023" docOffset="524" starttimestamp="1701807005597" timestamp="7144885" />
  <Command __id="3798" _type="SelectTextCommand" caretOffset="251" date="Tue Dec 05 17:09:12 EST 2023" end="266" start="251" starttimestamp="1701807005597" timestamp="7146428" />
  <Command __id="3799" _type="SelectTextCommand" caretOffset="251" date="Tue Dec 05 17:09:12 EST 2023" end="266" start="251" starttimestamp="1701807005597" timestamp="7146428" />
  <Command __id="3801" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:09:12 EST 2023" starttimestamp="1701807005597" timestamp="7146737" />
  <Command __id="3802" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:09:12 EST 2023" starttimestamp="1701807005597" timestamp="7146737" />
  <Command __id="3804" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:09:12 EST 2023" starttimestamp="1701807005597" timestamp="7146974" />
  <Command __id="3805" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:09:12 EST 2023" starttimestamp="1701807005597" timestamp="7146974" />
  <Command __id="3807" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:09:12 EST 2023" starttimestamp="1701807005597" timestamp="7147178" />
  <Command __id="3808" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:09:12 EST 2023" starttimestamp="1701807005597" timestamp="7147178" />
  <Command __id="3810" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:09:13 EST 2023" starttimestamp="1701807005597" timestamp="7147496" />
  <Command __id="3811" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:09:13 EST 2023" starttimestamp="1701807005597" timestamp="7147496" />
  <Command __id="3812" _type="ShellCommand" date="Tue Dec 05 17:09:14 EST 2023" starttimestamp="1701807005597" timestamp="7149228" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3813" _type="ShellCommand" date="Tue Dec 05 17:09:28 EST 2023" starttimestamp="1701807005597" timestamp="7162996" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3814" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 17:09:42 EST 2023" starttimestamp="1701807005597" timestamp="7176408" />
  <Command __id="3815" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:09:42 EST 2023" starttimestamp="1701807005597" timestamp="7176510" />
  <Command __id="3816" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:09:42 EST 2023" starttimestamp="1701807005597" timestamp="7176519" />
  <Command __id="3817" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:09:42 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7176608" type="Run" />
  <Command __id="3818" _type="ShellCommand" date="Tue Dec 05 17:09:54 EST 2023" starttimestamp="1701807005597" timestamp="7189099" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3819" _type="BalloonCommand" date="Tue Dec 05 17:10:05 EST 2023" message="*******************************************
Worked 37 minutes(fixed)/60 minutes(context based) from
Tue Dec 05 16:10:05 EST 2023 to Tue Dec 05 17:09:54 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 2 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java
Number of insert: 345
Number of delete: 284
" starttimestamp="1701807005597" timestamp="7200045">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[345]]></insert>
    <startTime><![CDATA[1701810605651]]></startTime>
    <endTime><![CDATA[1701814194696]]></endTime>
    <workTime><![CDATA[37]]></workTime>
    <delete><![CDATA[284]]></delete>
  </Command>
  <Command __id="3820" _type="ShellCommand" date="Tue Dec 05 17:10:06 EST 2023" starttimestamp="1701807005597" timestamp="7200638" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3736" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:06:10 EST 2023" docASTNodeCount="229" docActiveCodeLength="1317" docExpressionCount="156" docLength="1332" projectName="Assignment5" starttimestamp="1701807005597" timestamp="6964790">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		IdentifierAtom ids[] = null;		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, expr.getTail());		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3761" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:07:44 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7058756">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3778" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:07:55 EST 2023" docASTNodeCount="229" docActiveCodeLength="1317" docExpressionCount="156" docLength="1332" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7069576">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		IdentifierAtom ids[] = null;		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, expr.getTail());		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3784" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:08:04 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7078997">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3790" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:08:44 EST 2023" docASTNodeCount="229" docActiveCodeLength="1317" docExpressionCount="156" docLength="1332" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7118691">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);		// return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		IdentifierAtom ids[] = null;		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, expr.getTail());		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="3800" _type="Delete" date="Tue Dec 05 17:09:12 EST 2023" docASTNodeCount="229" docActiveCodeLength="1314" docExpressionCount="156" docLength="1314" endLine="17" length="18" offset="506" repeat="4" startLine="16" starttimestamp="1701807005597" timestamp="7146727" timestamp2="7147491">
    <text><![CDATA[
		// return expr;]]></text>
  </DocumentChange>
  <Command __id="3821" _type="MoveCaretCommand" caretOffset="364" date="Tue Dec 05 17:10:16 EST 2023" docOffset="622" starttimestamp="1701807005597" timestamp="7210898" />
  <Command __id="3822" _type="MoveCaretCommand" caretOffset="364" date="Tue Dec 05 17:10:16 EST 2023" docOffset="622" starttimestamp="1701807005597" timestamp="7210898" />
  <Command __id="3823" _type="SelectTextCommand" caretOffset="366" date="Tue Dec 05 17:10:16 EST 2023" end="366" start="362" starttimestamp="1701807005597" timestamp="7211030" />
  <Command __id="3824" _type="SelectTextCommand" caretOffset="366" date="Tue Dec 05 17:10:16 EST 2023" end="366" start="362" starttimestamp="1701807005597" timestamp="7211030" />
  <DocumentChange __id="3825" _type="Replace" date="Tue Dec 05 17:10:18 EST 2023" docASTNodeCount="228" docActiveCodeLength="1311" docExpressionCount="155" docLength="1311" endLine="20" insertionLength="1" int_docASTNodeCount="228" int_docActiveCodeLength="1310" int_docExpressionCount="155" int_docLength="1310" length="4" offset="620" startLine="20" starttimestamp="1701807005597" timestamp="7212950">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[[]]></insertedText>
  </DocumentChange>
  <Command __id="3826" _type="InsertStringCommand" date="Tue Dec 05 17:10:18 EST 2023" starttimestamp="1701807005597" timestamp="7212955" timestamp2="7212955">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="3827" _type="InsertStringCommand" date="Tue Dec 05 17:10:18 EST 2023" starttimestamp="1701807005597" timestamp="7212955" timestamp2="7212955">
    <data><![CDATA[[]]></data>
  </Command>
  <DocumentChange __id="3828" _type="Insert" date="Tue Dec 05 17:10:19 EST 2023" docASTNodeCount="196" docActiveCodeLength="1313" docExpressionCount="129" docLength="1313" length="2" offset="621" starttimestamp="1701807005597" timestamp="7213813">
    <text><![CDATA['']]></text>
  </DocumentChange>
  <Command __id="3829" _type="InsertStringCommand" date="Tue Dec 05 17:10:19 EST 2023" starttimestamp="1701807005597" timestamp="7213816" timestamp2="7213816">
    <data><![CDATA[']]></data>
  </Command>
  <Command __id="3830" _type="InsertStringCommand" date="Tue Dec 05 17:10:19 EST 2023" starttimestamp="1701807005597" timestamp="7213816" timestamp2="7213816">
    <data><![CDATA[']]></data>
  </Command>
  <DocumentChange __id="3831" _type="Delete" date="Tue Dec 05 17:10:19 EST 2023" docASTNodeCount="228" docActiveCodeLength="1311" docExpressionCount="155" docLength="1311" endLine="20" length="2" offset="621" repeat="2" startLine="20" starttimestamp="1701807005597" timestamp="7214306" timestamp2="7214309">
    <text><![CDATA['']]></text>
  </DocumentChange>
  <Command __id="3833" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:10:19 EST 2023" starttimestamp="1701807005597" timestamp="7214310" />
  <Command __id="3834" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:10:19 EST 2023" starttimestamp="1701807005597" timestamp="7214310" />
  <DocumentChange __id="3835" _type="Insert" date="Tue Dec 05 17:10:20 EST 2023" docASTNodeCount="228" docActiveCodeLength="1312" docExpressionCount="155" docLength="1312" length="1" offset="621" starttimestamp="1701807005597" timestamp="7215206">
    <text><![CDATA[]]]></text>
  </DocumentChange>
  <Command __id="3836" _type="InsertStringCommand" date="Tue Dec 05 17:10:20 EST 2023" starttimestamp="1701807005597" timestamp="7215208" timestamp2="7215208">
    <data><![CDATA[]]]></data>
  </Command>
  <Command __id="3837" _type="InsertStringCommand" date="Tue Dec 05 17:10:20 EST 2023" starttimestamp="1701807005597" timestamp="7215208" timestamp2="7215208">
    <data><![CDATA[]]]></data>
  </Command>
  <Command __id="3838" _type="MoveCaretCommand" caretOffset="585" date="Tue Dec 05 17:10:21 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="7215757" />
  <Command __id="3839" _type="MoveCaretCommand" caretOffset="585" date="Tue Dec 05 17:10:21 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="7215757" />
  <Command __id="3840" _type="MoveCaretCommand" caretOffset="364" date="Tue Dec 05 17:10:22 EST 2023" docOffset="622" starttimestamp="1701807005597" timestamp="7216527" />
  <Command __id="3841" _type="MoveCaretCommand" caretOffset="364" date="Tue Dec 05 17:10:22 EST 2023" docOffset="622" starttimestamp="1701807005597" timestamp="7216527" />
  <DocumentChange __id="3842" _type="Delete" date="Tue Dec 05 17:10:22 EST 2023" docASTNodeCount="228" docActiveCodeLength="1310" docExpressionCount="155" docLength="1310" endLine="20" length="2" offset="620" repeat="2" startLine="20" starttimestamp="1701807005597" timestamp="7217118" timestamp2="7217247">
    <text><![CDATA[[]]]></text>
  </DocumentChange>
  <Command __id="3843" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:10:22 EST 2023" starttimestamp="1701807005597" timestamp="7217122" />
  <Command __id="3844" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:10:22 EST 2023" starttimestamp="1701807005597" timestamp="7217122" />
  <Command __id="3846" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:10:22 EST 2023" starttimestamp="1701807005597" timestamp="7217249" />
  <Command __id="3847" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:10:22 EST 2023" starttimestamp="1701807005597" timestamp="7217249" />
  <Command __id="3849" _type="InsertStringCommand" date="Tue Dec 05 17:10:23 EST 2023" starttimestamp="1701807005597" timestamp="7217414" timestamp2="7217414">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3850" _type="InsertStringCommand" date="Tue Dec 05 17:10:23 EST 2023" starttimestamp="1701807005597" timestamp="7217415" timestamp2="7217415">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="3852" _type="InsertStringCommand" date="Tue Dec 05 17:10:23 EST 2023" starttimestamp="1701807005597" timestamp="7218321" timestamp2="7218321">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="3853" _type="InsertStringCommand" date="Tue Dec 05 17:10:23 EST 2023" starttimestamp="1701807005597" timestamp="7218321" timestamp2="7218321">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="3854" _type="MoveCaretCommand" caretOffset="582" date="Tue Dec 05 17:10:24 EST 2023" docOffset="840" starttimestamp="1701807005597" timestamp="7218766" />
  <Command __id="3855" _type="MoveCaretCommand" caretOffset="582" date="Tue Dec 05 17:10:24 EST 2023" docOffset="840" starttimestamp="1701807005597" timestamp="7218767" />
  <Command __id="3856" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 17:10:24 EST 2023" starttimestamp="1701807005597" timestamp="7219320" />
  <Command __id="3857" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:10:25 EST 2023" starttimestamp="1701807005597" timestamp="7219419" />
  <Command __id="3858" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:10:25 EST 2023" starttimestamp="1701807005597" timestamp="7219427" />
  <Command __id="3859" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:10:25 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7219511" type="Run" />
  <Command __id="3860" _type="MoveCaretCommand" caretOffset="365" date="Tue Dec 05 17:10:28 EST 2023" docOffset="623" starttimestamp="1701807005597" timestamp="7222419" />
  <Command __id="3861" _type="MoveCaretCommand" caretOffset="365" date="Tue Dec 05 17:10:28 EST 2023" docOffset="623" starttimestamp="1701807005597" timestamp="7222419" />
  <Command __id="3862" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:10:28 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7222957" />
  <Command __id="3863" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:10:28 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7222957" />
  <Command __id="3864" _type="MoveCaretCommand" caretOffset="365" date="Tue Dec 05 17:10:29 EST 2023" docOffset="623" starttimestamp="1701807005597" timestamp="7223444" />
  <Command __id="3865" _type="MoveCaretCommand" caretOffset="365" date="Tue Dec 05 17:10:29 EST 2023" docOffset="623" starttimestamp="1701807005597" timestamp="7223444" />
  <Command __id="3866" _type="MoveCaretCommand" caretOffset="447" date="Tue Dec 05 17:10:29 EST 2023" docOffset="705" starttimestamp="1701807005597" timestamp="7223890" />
  <Command __id="3867" _type="MoveCaretCommand" caretOffset="447" date="Tue Dec 05 17:10:29 EST 2023" docOffset="705" starttimestamp="1701807005597" timestamp="7223890" />
  <Command __id="3868" _type="MoveCaretCommand" caretOffset="445" date="Tue Dec 05 17:10:29 EST 2023" docOffset="703" starttimestamp="1701807005597" timestamp="7224357" />
  <Command __id="3869" _type="MoveCaretCommand" caretOffset="445" date="Tue Dec 05 17:10:29 EST 2023" docOffset="703" starttimestamp="1701807005597" timestamp="7224357" />
  <Command __id="3870" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:10:30 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7224833" />
  <Command __id="3871" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:10:30 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7224833" />
  <Command __id="3872" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:10:30 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7225294" />
  <Command __id="3873" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:10:30 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7225294" />
  <Command __id="3874" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:10:31 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7225737" />
  <Command __id="3875" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:10:31 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7225737" />
  <Command __id="3876" _type="ShellCommand" date="Tue Dec 05 17:10:32 EST 2023" starttimestamp="1701807005597" timestamp="7226705" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3882" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:10:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7232310" type="Run" />
  <Command __id="3883" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:10:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7232311" type="Run" />
  <Command __id="3884" _type="ShellCommand" date="Tue Dec 05 17:10:38 EST 2023" starttimestamp="1701807005597" timestamp="7232624" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3885" _type="ConsoleOutput" date="Tue Dec 05 17:10:40 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7235348" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"7¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,¶¶Test execution time (ms):9¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3886" _type="ConsoleOutput" date="Tue Dec 05 17:10:40 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7235349" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3887" _type="ConsoleOutput" date="Tue Dec 05 17:10:40 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7235356" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3888" _type="ConsoleOutput" date="Tue Dec 05 17:10:40 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7235356" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3889" _type="ConsoleOutput" date="Tue Dec 05 17:10:40 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7235359" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="3890" _type="ExceptionCommand" date="Tue Dec 05 17:10:40 EST 2023" starttimestamp="1701807005597" timestamp="7235384" type="Exception">
    <exceptionString><![CDATA[java.lang.NullPointerException
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3891" _type="ConsoleOutput" date="Tue Dec 05 17:10:40 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7235387" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3892" _type="ConsoleOutput" date="Tue Dec 05 17:10:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7235440" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"566"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.LoadEvaluator.eval(LoadEvaluator"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"42"), Diff(INSERT,"50"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl"), Diff(INSERT,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(EQUAL,".java:"), Diff(INSERT,"1"), Diff(EQUAL,"2"), Diff(DELETE,"4"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"47"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"325"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.provideInput(AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"g.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Register"), Diff(INSERT,"g.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"10"), Diff(INSERT,"29"), Diff(EQUAL,"0)¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"133"), Diff(INSERT,"288"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvalu"), Diff(INSERT,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	"), Diff(EQUAL,"at"), Diff(INSERT," "), Diff(EQUAL,"or"), Diff(DELETE,"Registerer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"g.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"65"), Diff(INSERT,"268"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(EQUAL,"er.java:"), Diff(DELETE,"21"), Diff(INSERT,"363"), Diff(EQUAL,")¶	at grad"), Diff(DELETE,"ingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"er.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"31"), Diff(EQUAL,"7)¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.test(AGradableJUnitSuit"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"348"), Diff(EQUAL,")¶	at grader.basics."), Diff(DELETE,"testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"junit.AGradableJUnitSuite.open(AGradableJUnitSuit"), Diff(EQUAL,"e.java:1"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"1)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(Unified"), Diff(EQUAL,"Method.java:"), Diff(DELETE,"50"), Diff(INSERT,"219"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(EQUAL,".java:"), Diff(DELETE,"12"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"47"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:17"), Diff(INSERT,"01"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"32"), Diff(INSERT,"158"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(INSERT,"153"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"57"), Diff(INSERT,"1531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"290"), Diff(INSERT,"1406"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunn"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"7"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunn"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:"), Diff(DELETE,"288"), Diff(INSERT,"469"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"5"), Diff(INSERT,"27"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"68"), Diff(INSERT,"77"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"3"), Diff(INSERT,"6"), Diff(EQUAL,"63"), Diff(INSERT,"8"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTes"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponen"), Diff(EQUAL,"t.java:3"), Diff(DELETE,"17"), Diff(INSERT,"342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"5"), Diff(EQUAL,"2"), Diff(INSERT,"263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(EQUAL,"2"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:4"), Diff(DELETE,"5"), Diff(INSERT,"918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"4843"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3893" _type="ExceptionCommand" date="Tue Dec 05 17:10:41 EST 2023" starttimestamp="1701807005597" timestamp="7235446" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):40
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string LAMBDA

java.lang.NullPointerException
	at index.ArithmeticEvaluatorHelper.getDifference(ArithmeticEvaluatorHelper.java:31)
	at index.GreaterEqualEvaluator.eval(GreaterEqualEvaluator.java:15)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.AndEvaluator.evalHelper(AndEvaluator.java:20)
	at index.AndEvaluator.eval(AndEvaluator.java:13)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.CondEvaluator.evalHelper(CondEvaluator.java:21)
	at index.CondEvaluator.eval(CondEvaluator.java:13)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <DocumentChange __id="3848" _type="Insert" date="Tue Dec 05 17:10:23 EST 2023" docASTNodeCount="229" docActiveCodeLength="1312" docExpressionCount="156" docLength="1312" length="2" offset="620" repeat="2" starttimestamp="1701807005597" timestamp="7217412" timestamp2="7218318">
    <text><![CDATA[{}]]></text>
  </DocumentChange>
  <Command __id="3894" _type="ShellCommand" date="Tue Dec 05 17:11:20 EST 2023" starttimestamp="1701807005597" timestamp="7275246" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3895" _type="MoveCaretCommand" caretOffset="436" date="Tue Dec 05 17:11:20 EST 2023" docOffset="694" starttimestamp="1701807005597" timestamp="7275346" />
  <Command __id="3896" _type="MoveCaretCommand" caretOffset="436" date="Tue Dec 05 17:11:20 EST 2023" docOffset="694" starttimestamp="1701807005597" timestamp="7275346" />
  <Command __id="3897" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:11:23 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7278117">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="3898" _type="MoveCaretCommand" caretOffset="486" date="Tue Dec 05 17:11:23 EST 2023" docOffset="720" starttimestamp="1701807005597" timestamp="7278186" />
  <Command __id="3900" _type="MoveCaretCommand" caretOffset="436" date="Tue Dec 05 17:11:25 EST 2023" docOffset="694" starttimestamp="1701807005597" timestamp="7280063" />
  <Command __id="3901" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:29 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7284344" />
  <Command __id="3902" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:29 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7284345" />
  <Command __id="3903" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:11:30 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7285276" />
  <Command __id="3904" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:11:30 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7285276" />
  <Command __id="3905" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:31 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7285962" />
  <Command __id="3906" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:31 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7285962" />
  <Command __id="3907" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:11:32 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7286619" />
  <Command __id="3908" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:11:32 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7286619" />
  <Command __id="3909" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:32 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7287111" />
  <Command __id="3910" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:32 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7287111" />
  <Command __id="3911" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:11:33 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7287685" />
  <Command __id="3912" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:11:33 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7287685" />
  <Command __id="3913" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:33 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7288209" />
  <Command __id="3914" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:33 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7288209" />
  <Command __id="3915" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:11:34 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7288901" />
  <Command __id="3916" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:11:34 EST 2023" docOffset="665" starttimestamp="1701807005597" timestamp="7288901" />
  <Command __id="3917" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:35 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7289465" />
  <Command __id="3918" _type="MoveCaretCommand" caretOffset="469" date="Tue Dec 05 17:11:35 EST 2023" docOffset="727" starttimestamp="1701807005597" timestamp="7289465" />
  <Command __id="3919" _type="MoveCaretCommand" caretOffset="510" date="Tue Dec 05 17:11:57 EST 2023" docOffset="768" starttimestamp="1701807005597" timestamp="7312339" />
  <Command __id="3920" _type="MoveCaretCommand" caretOffset="510" date="Tue Dec 05 17:11:57 EST 2023" docOffset="768" starttimestamp="1701807005597" timestamp="7312339" />
  <Command __id="3921" _type="LocalChecksRawCommand" date="Tue Dec 05 17:11:57 EST 2023" starttimestamp="1701807005597" timestamp="7312344">
    <CSVRow><![CDATA[157,Tue Dec 05 17:10:41 EST 2023,46,3,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker3+ LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker+ LoadLambdaChecker2+ LoadLambdaChecker3+ LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispLambdaChecker2- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,77,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3922" _type="LocalChecksRawCommand" date="Tue Dec 05 17:11:57 EST 2023" starttimestamp="1701807005597" timestamp="7312344">
    <CSVRow><![CDATA[157,Tue Dec 05 17:10:41 EST 2023,46,3,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker3+ LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker+ LoadLambdaChecker2+ LoadLambdaChecker3+ LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispLambdaChecker2- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLispChecker PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,77,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="3923" _type="MoveCaretCommand" caretOffset="506" date="Tue Dec 05 17:11:58 EST 2023" docOffset="764" starttimestamp="1701807005597" timestamp="7312859" />
  <Command __id="3924" _type="MoveCaretCommand" caretOffset="506" date="Tue Dec 05 17:11:58 EST 2023" docOffset="764" starttimestamp="1701807005597" timestamp="7312859" />
  <Command __id="3931" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:12:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7323871" type="Run" />
  <Command __id="3932" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:12:09 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7323871" type="Run" />
  <Command __id="3933" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:12:09 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7323979" type="Run" />
  <Command __id="3934" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:12:09 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7323989" type="Run" />
  <Command __id="3935" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:12:09 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7324120" type="Run" />
  <Command __id="3936" _type="ShellCommand" date="Tue Dec 05 17:12:09 EST 2023" starttimestamp="1701807005597" timestamp="7324306" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3937" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:12:10 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7324917" type="Run" />
  <Command __id="3938" _type="ConsoleOutput" date="Tue Dec 05 17:12:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7328177" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)"), Diff(INSERT,"Test execution time (ms):1¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3939" _type="ConsoleOutput" date="Tue Dec 05 17:12:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7328181" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1¶Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3940" _type="ConsoleOutput" date="Tue Dec 05 17:12:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7328182" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3941" _type="ConsoleOutput" date="Tue Dec 05 17:12:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7328183" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):7¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="3942" _type="ShellCommand" date="Tue Dec 05 17:12:13 EST 2023" starttimestamp="1701807005597" timestamp="7328289" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3943" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:12:14 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7328631" type="Run" />
  <Command __id="3944" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:12:14 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7329106" type="Run" />
  <Command __id="3946" _type="MoveCaretCommand" caretOffset="228" date="Tue Dec 05 17:12:14 EST 2023" docOffset="462" starttimestamp="1701807005597" timestamp="7329283" />
  <Command __id="3995" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:12:44 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7359039" type="Run" />
  <Command __id="3996" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:12:44 EST 2023" starttimestamp="1701807005597" timestamp="7359039" />
  <Command __id="4008" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:13:06 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7380468" type="Run" />
  <Command __id="4020" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:13:21 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7395641" type="Run" />
  <Command __id="4021" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:13:21 EST 2023" starttimestamp="1701807005597" timestamp="7395641" />
  <Command __id="4022" _type="ExceptionCommand" date="Tue Dec 05 17:13:21 EST 2023" starttimestamp="1701807005597" timestamp="7395651" type="Exception">
    <exceptionString><![CDATA[java.lang.NullPointerException
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4023" _type="ConsoleOutput" date="Tue Dec 05 17:13:21 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7395676" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):67483
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string LAMBDA
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"7"), Diff(INSERT,"67483"), Diff(EQUAL,"¶Test Result:"), Diff(DELETE,"MainClassProvided,10"), Diff(INSERT,"LoadLispChecker,"), Diff(EQUAL,"0.0% complete,0.0,0.0,"), Diff(INSERT,"Expected strings:Tactual string LAMBDA"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4024" _type="ShellCommand" date="Tue Dec 05 17:13:24 EST 2023" starttimestamp="1701807005597" timestamp="7398504" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4025" _type="ShellCommand" date="Tue Dec 05 17:13:35 EST 2023" starttimestamp="1701807005597" timestamp="7410336" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4026" _type="ShellCommand" date="Tue Dec 05 17:13:36 EST 2023" starttimestamp="1701807005597" timestamp="7410838" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4032" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:13:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7418363" type="Run" />
  <Command __id="4033" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:13:43 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7418363" type="Run" />
  <Command __id="4034" _type="ShellCommand" date="Tue Dec 05 17:13:44 EST 2023" starttimestamp="1701807005597" timestamp="7418660" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4035" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421359" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"67483¶Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string LAMBDA"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4036" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421360" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4037" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421366" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4038" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421366" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4039" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421367" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4040" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421368" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4041" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421394" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):34
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):34"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4042" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421396" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):35
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4043" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421397" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:L"), Diff(DELETE,"oadLisp"), Diff(INSERT,"ispLambda"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):35¶")]]]></diff>
  </Command>
  <Command __id="4044" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421398" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4045" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421399" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4046" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421400" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4047" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421401" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4048" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421401" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4049" _type="ConsoleOutput" date="Tue Dec 05 17:13:46 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421402" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4050" _type="ConsoleOutput" date="Tue Dec 05 17:13:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421403" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4051" _type="ConsoleOutput" date="Tue Dec 05 17:13:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7421406" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,

Test execution time (ms):0
Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,¶¶Test execution time (ms):0¶Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4059" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:13:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7429224" type="Run" />
  <Command __id="4060" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:13:54 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7429224" type="Run" />
  <Command __id="4061" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:13:54 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7429332" type="Run" />
  <Command __id="4062" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:13:54 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7429344" type="Run" />
  <Command __id="4063" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:13:55 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7429482" type="Run" />
  <Command __id="4064" _type="ShellCommand" date="Tue Dec 05 17:13:55 EST 2023" starttimestamp="1701807005597" timestamp="7430207" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4068" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:00 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7434721" type="Run" />
  <Command __id="4069" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:14:00 EST 2023" starttimestamp="1701807005597" timestamp="7434721" />
  <Command __id="4070" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:00 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7435391" type="Run" />
  <Command __id="4071" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:14:00 EST 2023" starttimestamp="1701807005597" timestamp="7435391" />
  <Command __id="4072" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:01 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7436277" type="Run" />
  <Command __id="4073" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:14:01 EST 2023" starttimestamp="1701807005597" timestamp="7436277" />
  <Command __id="4074" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:02 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7437071" type="Run" />
  <Command __id="4075" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:14:02 EST 2023" starttimestamp="1701807005597" timestamp="7437071" />
  <Command __id="4076" _type="ConsoleOutput" date="Tue Dec 05 17:14:02 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7437107" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,¶¶Test execution time (ms):0¶Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4078" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:08 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7442672" type="Run" />
  <Command __id="4079" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:14:08 EST 2023" starttimestamp="1701807005597" timestamp="7442672" />
  <Command __id="4080" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:08 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7443273" type="Run" />
  <Command __id="4081" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:14:08 EST 2023" starttimestamp="1701807005597" timestamp="7443274" />
  <Command __id="4082" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:09 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7443847" type="Run" />
  <Command __id="4083" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:14:09 EST 2023" starttimestamp="1701807005597" timestamp="7443847" />
  <Command __id="4084" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:09 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7443960" type="Run" />
  <Command __id="4085" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:10 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7444676" type="Run" />
  <Command __id="4086" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:14:10 EST 2023" starttimestamp="1701807005597" timestamp="7444677" />
  <Command __id="4087" _type="ExceptionCommand" date="Tue Dec 05 17:14:10 EST 2023" starttimestamp="1701807005597" timestamp="7444680" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4088" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:10 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7444686" type="Debug" />
  <Command __id="4089" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:14:10 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7444687" type="Run" />
  <Command __id="4090" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:14:10 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7444687" type="Debug" />
  <Command __id="4091" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:14:10 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7444687" type="Run" />
  <Command __id="4094" _type="MoveCaretCommand" caretOffset="337" date="Tue Dec 05 17:14:16 EST 2023" docOffset="571" starttimestamp="1701807005597" timestamp="7450887" />
  <Command __id="4095" _type="SelectTextCommand" caretOffset="397" date="Tue Dec 05 17:14:38 EST 2023" end="397" start="380" starttimestamp="1701807005597" timestamp="7472516" />
  <Command __id="4096" _type="MoveCaretCommand" caretOffset="486" date="Tue Dec 05 17:14:38 EST 2023" docOffset="720" starttimestamp="1701807005597" timestamp="7472911" />
  <Command __id="4104" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:14:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7481071" type="Run" />
  <Command __id="4105" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:14:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7481071" type="Run" />
  <Command __id="4106" _type="ShellCommand" date="Tue Dec 05 17:14:49 EST 2023" starttimestamp="1701807005597" timestamp="7483452" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4107" _type="ShellCommand" date="Tue Dec 05 17:14:50 EST 2023" starttimestamp="1701807005597" timestamp="7485262" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4108" _type="ShellCommand" date="Tue Dec 05 17:14:50 EST 2023" starttimestamp="1701807005597" timestamp="7485384" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4109" _type="ShellCommand" date="Tue Dec 05 17:14:51 EST 2023" starttimestamp="1701807005597" timestamp="7486387" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4110" _type="ConsoleOutput" date="Tue Dec 05 17:14:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7488524" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="4123" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:15:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7500362" type="Run" />
  <Command __id="4124" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:15:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7500362" type="Run" />
  <Command __id="4125" _type="ShellCommand" date="Tue Dec 05 17:15:06 EST 2023" starttimestamp="1701807005597" timestamp="7500682" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4126" _type="ConsoleOutput" date="Tue Dec 05 17:15:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7502999" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="4127" _type="ConsoleOutput" date="Tue Dec 05 17:15:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7503000" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4128" _type="ConsoleOutput" date="Tue Dec 05 17:15:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7503006" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4129" _type="ConsoleOutput" date="Tue Dec 05 17:15:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7503006" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4130" _type="ConsoleOutput" date="Tue Dec 05 17:15:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7503009" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):6¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="4131" _type="ExceptionCommand" date="Tue Dec 05 17:15:08 EST 2023" starttimestamp="1701807005597" timestamp="7503028" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4132" _type="ConsoleOutput" date="Tue Dec 05 17:15:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7503031" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):6¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4133" _type="ConsoleOutput" date="Tue Dec 05 17:15:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7503038" type="ConsoleOutput">
    <outputString><![CDATA[	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶"), Diff(EQUAL,"	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶"), Diff(INSERT,""), Diff(EQUAL,"	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.A"), Diff(DELETE,"JUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext"), Diff(INSERT,"GradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method"), Diff(EQUAL,".java:5"), Diff(DELETE,"2"), Diff(INSERT,"66"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"1585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"45"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"231"), Diff(INSERT,"4488"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4134" _type="ExceptionCommand" date="Tue Dec 05 17:15:08 EST 2023" starttimestamp="1701807005597" timestamp="7503040" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):34
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42

java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4135" _type="ExceptionCommand" date="Tue Dec 05 17:15:08 EST 2023" starttimestamp="1701807005597" timestamp="7503041" type="Exception">
    <exceptionString><![CDATA[Test Result:LispLambdaChecker,0.0% complete,0.0,10.0,Expected strings:3actual string 

java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4136" _type="ConsoleOutput" date="Tue Dec 05 17:15:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7503041" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶"), Diff(EQUAL,"	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶"), Diff(DELETE,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶")]]]></diff>
  </Command>
  <Command __id="4137" _type="ConsoleOutput" date="Tue Dec 05 17:15:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7503054" type="ConsoleOutput">
    <outputString><![CDATA[	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:2"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunn"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticast"), Diff(EQUAL,"er.java:"), Diff(DELETE,"363"), Diff(INSERT,"277"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/java.awt.Component.processMouseEvent(Component"), Diff(EQUAL,".java:"), Diff(INSERT,"66"), Diff(EQUAL,"3"), Diff(DELETE,"4"), Diff(EQUAL,"8)¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite"), Diff(INSERT,"java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"191"), Diff(INSERT,"3342"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:6"), Diff(DELETE,"2"), Diff(INSERT,"400"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"226"), Diff(EQUAL,"3)¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod"), Diff(INSERT,"desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"270"), Diff(INSERT,"5011"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"1444"), Diff(INSERT,"2321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.BasicCommand.execute(BasicCommand"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"69"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"1906"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManag"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"1585"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"1531"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contain"), Diff(EQUAL,"er.java:"), Diff(DELETE,"1406"), Diff(INSERT,"2307"), Diff(EQUAL,")¶	at "), Diff(DELETE,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:"), Diff(DELETE,"469"), Diff(INSERT,"2772"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4138" _type="ExceptionCommand" date="Tue Dec 05 17:15:08 EST 2023" starttimestamp="1701807005597" timestamp="7503059" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)

Test execution time (ms):2
Test Result:LispLambdaChecker2,0.0% complete,0.0,10.0,Expected strings:1actual string 

java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4092" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:14:16 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="7450770">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4093" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:14:16 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7450837">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead().eval(environment));			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4139" _type="ShellCommand" date="Tue Dec 05 17:15:22 EST 2023" starttimestamp="1701807005597" timestamp="7516845" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4140" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:15:22 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7516853" type="Debug" />
  <Command __id="4141" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:15:22 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7516853" type="Run" />
  <Command __id="4142" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:15:22 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7516853" type="Debug" />
  <Command __id="4143" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:15:22 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7516853" type="Run" />
  <Command __id="4144" _type="LocalChecksRawCommand" date="Tue Dec 05 17:15:22 EST 2023" starttimestamp="1701807005597" timestamp="7516856">
    <CSVRow><![CDATA[159,Tue Dec 05 17:15:08 EST 2023,40,-10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispLambdaChecker2- LispLambdaChecker3- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker- LoadLambdaChecker2- LoadLambdaChecker3- LoadLispChecker- PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,79,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4145" _type="LocalChecksRawCommand" date="Tue Dec 05 17:15:22 EST 2023" starttimestamp="1701807005597" timestamp="7516856">
    <CSVRow><![CDATA[159,Tue Dec 05 17:15:08 EST 2023,40,-10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispLambdaChecker2- LispLambdaChecker3- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker- LoadLambdaChecker2- LoadLambdaChecker3- LoadLispChecker- PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,79,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4146" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:15:28 EST 2023" docASTNodeCount="164" docActiveCodeLength="985" docExpressionCount="122" docLength="985" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7523161">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead()"), Diff(DELETE,".eval(environment)"), Diff(EQUAL,");			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead());
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="4147" _type="MoveCaretCommand" caretOffset="379" date="Tue Dec 05 17:15:28 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="7523213" />
  <Command __id="4148" _type="MoveCaretCommand" caretOffset="379" date="Tue Dec 05 17:15:28 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="7523214" />
  <DocumentChange __id="4149" _type="Insert" date="Tue Dec 05 17:15:29 EST 2023" docASTNodeCount="166" docActiveCodeLength="988" docExpressionCount="124" docLength="988" length="3" offset="613" repeat="3" starttimestamp="1701807005597" timestamp="7524068" timestamp2="7524499">
    <text><![CDATA[.ev]]></text>
  </DocumentChange>
  <Command __id="4150" _type="InsertStringCommand" date="Tue Dec 05 17:15:29 EST 2023" starttimestamp="1701807005597" timestamp="7524070" timestamp2="7524070">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4151" _type="InsertStringCommand" date="Tue Dec 05 17:15:29 EST 2023" starttimestamp="1701807005597" timestamp="7524070" timestamp2="7524070">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4152" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:15:29 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="7524083" />
  <Command __id="4155" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:15:30 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="7524856" />
  <Command __id="4157" _type="InsertStringCommand" date="Tue Dec 05 17:15:30 EST 2023" starttimestamp="1701807005597" timestamp="7524892" timestamp2="7524892">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4158" _type="InsertStringCommand" date="Tue Dec 05 17:15:30 EST 2023" starttimestamp="1701807005597" timestamp="7524892" timestamp2="7524892">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4159" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:15:31 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="7525906" />
  <Command __id="4160" _type="MoveCaretCommand" caretOffset="399" date="Tue Dec 05 17:15:31 EST 2023" docOffset="633" starttimestamp="1701807005597" timestamp="7525924" />
  <Command __id="4161" _type="MoveCaretCommand" caretOffset="399" date="Tue Dec 05 17:15:31 EST 2023" docOffset="633" starttimestamp="1701807005597" timestamp="7525924" />
  <Command __id="4162" _type="BreakPointCommand" date="Tue Dec 05 17:15:34 EST 2023" lineNumber="14" starttimestamp="1701807005597" timestamp="7528665" type="BreakPointRemoved" />
  <Command __id="4163" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Tue Dec 05 17:15:34 EST 2023" starttimestamp="1701807005597" timestamp="7528684" />
  <Command __id="4164" _type="ShellCommand" date="Tue Dec 05 17:15:36 EST 2023" starttimestamp="1701807005597" timestamp="7531017" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4173" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:15:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7547517" type="Run" />
  <Command __id="4174" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:15:53 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7547517" type="Run" />
  <Command __id="4175" _type="ShellCommand" date="Tue Dec 05 17:15:53 EST 2023" starttimestamp="1701807005597" timestamp="7547835" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4176" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550307" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4177" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550309" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4178" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550313" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4179" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550313" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4180" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550314" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4181" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550314" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4182" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550340" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4183" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550341" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):34
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4184" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550342" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:L"), Diff(DELETE,"oadLisp"), Diff(INSERT,"ispLambda"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):34¶")]]]></diff>
  </Command>
  <Command __id="4185" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550343" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4186" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550344" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4187" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550345" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4188" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550346" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4189" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550347" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4190" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550348" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4191" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550349" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:LoadLambdaChecker"), Diff(INSERT,"2"), Diff(EQUAL,",100.0% complete,15.0,15.0,¶")]]]></diff>
  </Command>
  <Command __id="4192" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550350" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,¶")]]]></diff>
  </Command>
  <Command __id="4193" _type="ConsoleOutput" date="Tue Dec 05 17:15:55 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7550351" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4199" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:16:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7559539" type="Run" />
  <Command __id="4200" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:16:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7559539" type="Run" />
  <Command __id="4201" _type="LocalChecksRawCommand" date="Tue Dec 05 17:16:05 EST 2023" starttimestamp="1701807005597" timestamp="7559540">
    <CSVRow><![CDATA[160,Tue Dec 05 17:15:55 EST 2023,50,10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker+ LispLambdaChecker2+ LispLambdaChecker3+ LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker+ LoadLambdaChecker2+ LoadLambdaChecker3+ LoadLispChecker+ LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,80,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4202" _type="LocalChecksRawCommand" date="Tue Dec 05 17:16:05 EST 2023" starttimestamp="1701807005597" timestamp="7559540">
    <CSVRow><![CDATA[160,Tue Dec 05 17:15:55 EST 2023,50,10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker+ LispLambdaChecker2+ LispLambdaChecker3+ LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker+ LoadLambdaChecker2+ LoadLambdaChecker3+ LoadLispChecker+ LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,80,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4203" _type="ShellCommand" date="Tue Dec 05 17:16:06 EST 2023" starttimestamp="1701807005597" timestamp="7561249" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4204" _type="ShellCommand" date="Tue Dec 05 17:16:07 EST 2023" starttimestamp="1701807005597" timestamp="7562078" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4205" _type="PasteCommand" date="Tue Dec 05 17:16:08 EST 2023" starttimestamp="1701807005597" timestamp="7562415" />
  <Command __id="4206" _type="ConsoleOutput" date="Tue Dec 05 17:16:08 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7562683" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4207" _type="ConsoleInput" date="Tue Dec 05 17:16:10 EST 2023" starttimestamp="1701807005597" timestamp="7565281" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="4208" _type="ExceptionCommand" date="Tue Dec 05 17:16:10 EST 2023" starttimestamp="1701807005597" timestamp="7565289" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4209" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:16:10 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7565296" type="Debug" />
  <Command __id="4210" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:16:10 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7565296" type="Run" />
  <Command __id="4211" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:16:10 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7565296" type="Debug" />
  <Command __id="4212" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:16:10 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7565296" type="Run" />
  <Command __id="4223" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:16:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7577689" type="Run" />
  <Command __id="4224" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:16:23 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7577689" type="Run" />
  <Command __id="4225" _type="ShellCommand" date="Tue Dec 05 17:16:23 EST 2023" starttimestamp="1701807005597" timestamp="7578004" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="4156" _type="Replace" date="Tue Dec 05 17:15:30 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" endLine="15" insertionLength="17" int_docASTNodeCount="130" int_docActiveCodeLength="986" int_docExpressionCount="98" int_docLength="986" length="2" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="7524861">
    <deletedText><![CDATA[ev]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4215" _type="Delete" date="Tue Dec 05 17:16:17 EST 2023" docASTNodeCount="164" docActiveCodeLength="985" docExpressionCount="122" docLength="985" endLine="15" length="18" offset="613" startLine="15" starttimestamp="1701807005597" timestamp="7572202">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <Command __id="4236" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:16:28 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7582411" type="Debug" />
  <Command __id="4237" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:16:28 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7582411" type="Run" />
  <Command __id="4238" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:16:28 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7582411" type="Debug" />
  <Command __id="4239" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:16:28 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7582411" type="Run" />
  <Command __id="4240" _type="ShellCommand" date="Tue Dec 05 17:16:28 EST 2023" starttimestamp="1701807005597" timestamp="7582415" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="4241" _type="Insert" date="Tue Dec 05 17:16:32 EST 2023" docASTNodeCount="130" docActiveCodeLength="987" docExpressionCount="98" docLength="987" length="2" offset="613" repeat="2" starttimestamp="1701807005597" timestamp="7586722" timestamp2="7586746">
    <text><![CDATA[.,]]></text>
  </DocumentChange>
  <Command __id="4242" _type="InsertStringCommand" date="Tue Dec 05 17:16:32 EST 2023" starttimestamp="1701807005597" timestamp="7586725" timestamp2="7586725">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4243" _type="InsertStringCommand" date="Tue Dec 05 17:16:32 EST 2023" starttimestamp="1701807005597" timestamp="7586725" timestamp2="7586725">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4245" _type="InsertStringCommand" date="Tue Dec 05 17:16:32 EST 2023" starttimestamp="1701807005597" timestamp="7586747" timestamp2="7586747">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="4246" _type="InsertStringCommand" date="Tue Dec 05 17:16:32 EST 2023" starttimestamp="1701807005597" timestamp="7586747" timestamp2="7586747">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="4247" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:16:32 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="7586757" />
  <DocumentChange __id="4248" _type="Delete" date="Tue Dec 05 17:16:32 EST 2023" docASTNodeCount="130" docActiveCodeLength="986" docExpressionCount="98" docLength="986" endLine="15" length="1" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="7587292">
    <text><![CDATA[,]]></text>
  </DocumentChange>
  <DocumentChange __id="4249" _type="Insert" date="Tue Dec 05 17:16:33 EST 2023" docASTNodeCount="166" docActiveCodeLength="989" docExpressionCount="124" docLength="989" length="3" offset="614" repeat="3" starttimestamp="1701807005597" timestamp="7587487" timestamp2="7587737">
    <text><![CDATA[eva]]></text>
  </DocumentChange>
  <Command __id="4252" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:16:33 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="7587879" />
  <Command __id="4254" _type="LocalChecksRawCommand" date="Tue Dec 05 17:16:33 EST 2023" starttimestamp="1701807005597" timestamp="7587882">
    <CSVRow><![CDATA[161,Tue Dec 05 17:16:25 EST 2023,40,-10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispLambdaChecker2- LispLambdaChecker3- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker- LoadLambdaChecker2- LoadLambdaChecker3- LoadLispChecker- PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,81,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4255" _type="LocalChecksRawCommand" date="Tue Dec 05 17:16:33 EST 2023" starttimestamp="1701807005597" timestamp="7587882">
    <CSVRow><![CDATA[161,Tue Dec 05 17:16:25 EST 2023,40,-10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispLambdaChecker- LispLambdaChecker2- LispLambdaChecker3- LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval LoadLambdaChecker- LoadLambdaChecker2- LoadLambdaChecker3- LoadLispChecker- PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,81,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(0.0/10.0) LispLambdaChecker2-(0.0/10.0) LispLambdaChecker3-(0.0/10.0) LoadLambdaChecker-(0.0/15.0) LoadLambdaChecker2-(0.0/15.0) LoadLambdaChecker3-(0.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4256" _type="InsertStringCommand" date="Tue Dec 05 17:16:33 EST 2023" starttimestamp="1701807005597" timestamp="7587910" timestamp2="7587910">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4257" _type="InsertStringCommand" date="Tue Dec 05 17:16:33 EST 2023" starttimestamp="1701807005597" timestamp="7587910" timestamp2="7587910">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4258" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:16:34 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="7588986" />
  <Command __id="4259" _type="MoveCaretCommand" caretOffset="595" date="Tue Dec 05 17:16:34 EST 2023" docOffset="829" starttimestamp="1701807005597" timestamp="7589001" />
  <Command __id="4260" _type="MoveCaretCommand" caretOffset="595" date="Tue Dec 05 17:16:34 EST 2023" docOffset="829" starttimestamp="1701807005597" timestamp="7589001" />
  <Command __id="4261" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 17:16:34 EST 2023" starttimestamp="1701807005597" timestamp="7589283" />
  <Command __id="4262" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:16:34 EST 2023" starttimestamp="1701807005597" timestamp="7589380" />
  <Command __id="4263" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:16:34 EST 2023" starttimestamp="1701807005597" timestamp="7589388" />
  <Command __id="4266" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:16:44 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7598883" type="Run" />
  <Command __id="4267" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:16:44 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7598883" type="Run" />
  <Command __id="4268" _type="ShellCommand" date="Tue Dec 05 17:16:45 EST 2023" starttimestamp="1701807005597" timestamp="7599649" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4269" _type="ShellCommand" date="Tue Dec 05 17:16:46 EST 2023" starttimestamp="1701807005597" timestamp="7600796" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4270" _type="PasteCommand" date="Tue Dec 05 17:16:46 EST 2023" starttimestamp="1701807005597" timestamp="7601402" />
  <Command __id="4271" _type="ConsoleOutput" date="Tue Dec 05 17:16:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7601540" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4285" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:17:40 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7655050" type="Run" />
  <Command __id="4286" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:17:40 EST 2023" starttimestamp="1701807005597" timestamp="7655050" />
  <Command __id="4287" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:17:41 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7655715" type="Run" />
  <Command __id="4288" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:17:41 EST 2023" starttimestamp="1701807005597" timestamp="7655715" />
  <Command __id="4289" _type="ConsoleOutput" date="Tue Dec 05 17:17:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7655729" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="4292" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:17:51 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7665611" type="Run" />
  <Command __id="4296" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:18:11 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7686007" type="Run" />
  <Command __id="4303" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:18:54 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7728997" type="Run" />
  <Command __id="4308" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:19:11 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7746231" type="Run" />
  <DocumentChange __id="4253" _type="Replace" date="Tue Dec 05 17:16:33 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" endLine="15" insertionLength="17" int_docASTNodeCount="130" int_docActiveCodeLength="986" int_docExpressionCount="98" int_docLength="986" length="3" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="7587884">
    <deletedText><![CDATA[eva]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="4309" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:19:13 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="7748073" />
  <Command __id="4310" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:19:13 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="7748073" />
  <Command __id="4311" _type="MoveCaretCommand" caretOffset="374" date="Tue Dec 05 17:19:14 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="7748738" />
  <Command __id="4312" _type="MoveCaretCommand" caretOffset="374" date="Tue Dec 05 17:19:14 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="7748738" />
  <Command __id="4313" _type="MoveCaretCommand" caretOffset="382" date="Tue Dec 05 17:19:14 EST 2023" docOffset="616" starttimestamp="1701807005597" timestamp="7749311" />
  <Command __id="4314" _type="MoveCaretCommand" caretOffset="382" date="Tue Dec 05 17:19:14 EST 2023" docOffset="616" starttimestamp="1701807005597" timestamp="7749311" />
  <Command __id="4315" _type="MoveCaretCommand" caretOffset="375" date="Tue Dec 05 17:19:15 EST 2023" docOffset="609" starttimestamp="1701807005597" timestamp="7749778" />
  <Command __id="4316" _type="MoveCaretCommand" caretOffset="375" date="Tue Dec 05 17:19:15 EST 2023" docOffset="609" starttimestamp="1701807005597" timestamp="7749778" />
  <Command __id="4317" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:19:15 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="7750402" />
  <Command __id="4318" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:19:15 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="7750402" />
  <Command __id="4319" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:19:17 EST 2023" docASTNodeCount="229" docActiveCodeLength="1312" docExpressionCount="156" docLength="1312" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7751970">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		IdentifierAtom ids[] = {};		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, expr.getTail());		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4324" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:19:19 EST 2023" projectName="null" starttimestamp="1701807005597" timestamp="7754138">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4326" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:19:22 EST 2023" docASTNodeCount="229" docActiveCodeLength="1312" docExpressionCount="156" docLength="1312" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7756818">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		IdentifierAtom ids[] = {};		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, expr.getTail());		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4321" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:19:19 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7753830" type="Run" />
  <Command __id="4322" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:19:19 EST 2023" starttimestamp="1701807005597" timestamp="7753831" />
  <Command __id="4323" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:19:19 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7753961" type="Run" />
  <Command __id="4325" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 17:19:19 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="7754194" />
  <Command __id="4327" _type="MoveCaretCommand" caretOffset="470" date="Tue Dec 05 17:19:22 EST 2023" docOffset="728" starttimestamp="1701807005597" timestamp="7756877" />
  <Command __id="4329" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:19:27 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="7761563" />
  <Command __id="4330" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions/org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction" date="Tue Dec 05 17:19:36 EST 2023" starttimestamp="1701807005597" timestamp="7771306" />
  <Command __id="4331" _type="BreakPointCommand" date="Tue Dec 05 17:19:36 EST 2023" lineNumber="14" starttimestamp="1701807005597" timestamp="7771310" type="BreakPointAdded" />
  <Command __id="4344" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:19:46 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7780793" type="Run" />
  <Command __id="4345" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:19:46 EST 2023" starttimestamp="1701807005597" timestamp="7780793" />
  <Command __id="4346" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:19:46 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7781187" type="Run" />
  <Command __id="4347" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:19:46 EST 2023" starttimestamp="1701807005597" timestamp="7781187" />
  <Command __id="4348" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:19:47 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7781603" type="Run" />
  <Command __id="4349" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:19:47 EST 2023" starttimestamp="1701807005597" timestamp="7781603" />
  <Command __id="4350" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:19:47 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7782342" type="Run" />
  <Command __id="4351" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:19:47 EST 2023" starttimestamp="1701807005597" timestamp="7782342" />
  <Command __id="4353" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:19:53 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7788164" type="Run" />
  <Command __id="4354" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 17:19:59 EST 2023" starttimestamp="1701807005597" timestamp="7794217" />
  <Command __id="4355" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:19:59 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7794221" type="Run" />
  <Command __id="4358" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:20:04 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7799345" type="Run" />
  <Command __id="4359" _type="ShellCommand" date="Tue Dec 05 17:20:14 EST 2023" starttimestamp="1701807005597" timestamp="7808577" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4360" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:20:14 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7808704" type="Run" />
  <Command __id="4371" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:21:35 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7889891" type="Run" />
  <Command __id="4372" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.StepOver" date="Tue Dec 05 17:21:50 EST 2023" starttimestamp="1701807005597" timestamp="7905370" />
  <Command __id="4373" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:21:50 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7905373" type="Run" />
  <Command __id="4377" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:22:01 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7915990" type="Run" />
  <Command __id="4378" _type="ShellCommand" date="Tue Dec 05 17:22:03 EST 2023" starttimestamp="1701807005597" timestamp="7918012" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4379" _type="ShellCommand" date="Tue Dec 05 17:22:24 EST 2023" starttimestamp="1701807005597" timestamp="7939296" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4380" _type="MoveCaretCommand" caretOffset="312" date="Tue Dec 05 17:22:24 EST 2023" docOffset="546" starttimestamp="1701807005597" timestamp="7939371" />
  <Command __id="4381" _type="MoveCaretCommand" caretOffset="312" date="Tue Dec 05 17:22:24 EST 2023" docOffset="546" starttimestamp="1701807005597" timestamp="7939371" />
  <Command __id="4382" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Dec 05 17:22:26 EST 2023" starttimestamp="1701807005597" timestamp="7941210" />
  <Command __id="4383" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:22:26 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7941217" type="Debug" />
  <Command __id="4384" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:22:26 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7941217" type="Run" />
  <Command __id="4385" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:22:26 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7941217" type="Debug" />
  <Command __id="4386" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:22:26 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7941217" type="Run" />
  <Command __id="4328" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:19:27 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7761490">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)(expr.getHead()"), Diff(INSERT,".eval(environment)"), Diff(EQUAL,");			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)(expr.getHead().eval(environment));
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="4387" _type="MoveCaretCommand" caretOffset="379" date="Tue Dec 05 17:22:28 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="7942426" />
  <Command __id="4388" _type="MoveCaretCommand" caretOffset="379" date="Tue Dec 05 17:22:28 EST 2023" docOffset="613" starttimestamp="1701807005597" timestamp="7942427" />
  <DocumentChange __id="4389" _type="Insert" date="Tue Dec 05 17:22:31 EST 2023" docASTNodeCount="132" docActiveCodeLength="1004" docExpressionCount="99" docLength="1004" length="1" offset="613" starttimestamp="1701807005597" timestamp="7946134">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="4390" _type="InsertStringCommand" date="Tue Dec 05 17:22:31 EST 2023" starttimestamp="1701807005597" timestamp="7946136" timestamp2="7946136">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4391" _type="InsertStringCommand" date="Tue Dec 05 17:22:31 EST 2023" starttimestamp="1701807005597" timestamp="7946136" timestamp2="7946136">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4392" _type="MoveCaretCommand" caretOffset="399" date="Tue Dec 05 17:22:32 EST 2023" docOffset="633" starttimestamp="1701807005597" timestamp="7947123" />
  <Command __id="4393" _type="MoveCaretCommand" caretOffset="399" date="Tue Dec 05 17:22:32 EST 2023" docOffset="633" starttimestamp="1701807005597" timestamp="7947123" />
  <Command __id="4402" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:22:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7950977" type="Run" />
  <Command __id="4403" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:22:36 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7950977" type="Run" />
  <Command __id="4404" _type="ShellCommand" date="Tue Dec 05 17:22:38 EST 2023" starttimestamp="1701807005597" timestamp="7952583" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4405" _type="ShellCommand" date="Tue Dec 05 17:22:39 EST 2023" starttimestamp="1701807005597" timestamp="7953456" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4406" _type="PasteCommand" date="Tue Dec 05 17:22:39 EST 2023" starttimestamp="1701807005597" timestamp="7953738" />
  <Command __id="4407" _type="ConsoleOutput" date="Tue Dec 05 17:22:39 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7954037" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="4408" _type="ConsoleInput" date="Tue Dec 05 17:22:41 EST 2023" starttimestamp="1701807005597" timestamp="7956338" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="4409" _type="ExceptionCommand" date="Tue Dec 05 17:22:41 EST 2023" starttimestamp="1701807005597" timestamp="7956344" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4410" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:22:41 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7956353" type="Debug" />
  <Command __id="4411" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:22:41 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7956353" type="Run" />
  <Command __id="4412" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:22:41 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="7956353" type="Debug" />
  <Command __id="4413" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:22:41 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="7956353" type="Run" />
  <Command __id="4414" _type="ConsoleOutput" date="Tue Dec 05 17:22:41 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="7956354" type="ConsoleOutput">
    <outputString><![CDATA[	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="4394" _type="Delete" date="Tue Dec 05 17:22:32 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" endLine="15" length="1" offset="632" startLine="15" starttimestamp="1701807005597" timestamp="7947271">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="4415" _type="MoveCaretCommand" caretOffset="380" date="Tue Dec 05 17:22:57 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="7971420" />
  <Command __id="4416" _type="MoveCaretCommand" caretOffset="380" date="Tue Dec 05 17:22:57 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="7971421" />
  <DocumentChange __id="4417" _type="Insert" date="Tue Dec 05 17:23:09 EST 2023" docASTNodeCount="169" docActiveCodeLength="1010" docExpressionCount="128" docLength="1010" length="7" offset="614" repeat="2" starttimestamp="1701807005597" timestamp="7983734" timestamp2="7984509">
    <text><![CDATA[
					L]]></text>
  </DocumentChange>
  <Command __id="4418" _type="InsertStringCommand" date="Tue Dec 05 17:23:09 EST 2023" starttimestamp="1701807005597" timestamp="7983737" timestamp2="7983737">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4419" _type="InsertStringCommand" date="Tue Dec 05 17:23:09 EST 2023" starttimestamp="1701807005597" timestamp="7983738" timestamp2="7983738">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4421" _type="InsertStringCommand" date="Tue Dec 05 17:23:10 EST 2023" starttimestamp="1701807005597" timestamp="7984511" timestamp2="7984511">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4422" _type="InsertStringCommand" date="Tue Dec 05 17:23:10 EST 2023" starttimestamp="1701807005597" timestamp="7984511" timestamp2="7984511">
    <data><![CDATA[L]]></data>
  </Command>
  <DocumentChange __id="4423" _type="Delete" date="Tue Dec 05 17:23:10 EST 2023" docASTNodeCount="167" docActiveCodeLength="1007" docExpressionCount="125" docLength="1007" endLine="16" length="3" offset="618" repeat="3" startLine="16" starttimestamp="1701807005597" timestamp="7985071" timestamp2="7985799">
    <text><![CDATA[		L]]></text>
  </DocumentChange>
  <Command __id="4424" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:23:10 EST 2023" starttimestamp="1701807005597" timestamp="7985073" />
  <Command __id="4425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:23:10 EST 2023" starttimestamp="1701807005597" timestamp="7985073" />
  <Command __id="4427" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:23:10 EST 2023" starttimestamp="1701807005597" timestamp="7985356" />
  <Command __id="4428" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:23:10 EST 2023" starttimestamp="1701807005597" timestamp="7985356" />
  <Command __id="4430" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:23:11 EST 2023" starttimestamp="1701807005597" timestamp="7985802" />
  <Command __id="4431" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:23:11 EST 2023" starttimestamp="1701807005597" timestamp="7985802" />
  <Command __id="4433" _type="InsertStringCommand" date="Tue Dec 05 17:23:11 EST 2023" starttimestamp="1701807005597" timestamp="7986218" timestamp2="7986218">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4434" _type="InsertStringCommand" date="Tue Dec 05 17:23:11 EST 2023" starttimestamp="1701807005597" timestamp="7986218" timestamp2="7986218">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4436" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986432" timestamp2="7986432">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4437" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986432" timestamp2="7986432">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4439" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986519" timestamp2="7986519">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4440" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986519" timestamp2="7986519">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4442" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986623" timestamp2="7986623">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="4443" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986623" timestamp2="7986623">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="4445" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986757" timestamp2="7986757">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4446" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986757" timestamp2="7986757">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4448" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986860" timestamp2="7986860">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4449" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7986860" timestamp2="7986860">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4451" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7987099" timestamp2="7987099">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4452" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7987099" timestamp2="7987099">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4454" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7987270" timestamp2="7987270">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4455" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7987270" timestamp2="7987270">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4457" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7987392" timestamp2="7987392">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4458" _type="InsertStringCommand" date="Tue Dec 05 17:23:12 EST 2023" starttimestamp="1701807005597" timestamp="7987392" timestamp2="7987392">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4460" _type="InsertStringCommand" date="Tue Dec 05 17:23:13 EST 2023" starttimestamp="1701807005597" timestamp="7987434" timestamp2="7987434">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4461" _type="InsertStringCommand" date="Tue Dec 05 17:23:13 EST 2023" starttimestamp="1701807005597" timestamp="7987434" timestamp2="7987434">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4463" _type="InsertStringCommand" date="Tue Dec 05 17:23:13 EST 2023" starttimestamp="1701807005597" timestamp="7987556" timestamp2="7987556">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="4464" _type="InsertStringCommand" date="Tue Dec 05 17:23:13 EST 2023" starttimestamp="1701807005597" timestamp="7987556" timestamp2="7987556">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="4466" _type="InsertStringCommand" date="Tue Dec 05 17:23:13 EST 2023" starttimestamp="1701807005597" timestamp="7988238" timestamp2="7988238">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4467" _type="InsertStringCommand" date="Tue Dec 05 17:23:13 EST 2023" starttimestamp="1701807005597" timestamp="7988238" timestamp2="7988238">
    <data><![CDATA[d]]></data>
  </Command>
  <DocumentChange __id="4432" _type="Insert" date="Tue Dec 05 17:23:11 EST 2023" docASTNodeCount="173" docActiveCodeLength="1029" docExpressionCount="128" docLength="1029" length="22" offset="618" repeat="22" starttimestamp="1701807005597" timestamp="7986216" timestamp2="7989676">
    <text><![CDATA[Lmabda lambda = lambda]]></text>
  </DocumentChange>
  <Command __id="4469" _type="InsertStringCommand" date="Tue Dec 05 17:23:13 EST 2023" starttimestamp="1701807005597" timestamp="7988319" timestamp2="7988319">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4470" _type="InsertStringCommand" date="Tue Dec 05 17:23:13 EST 2023" starttimestamp="1701807005597" timestamp="7988319" timestamp2="7988319">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4472" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7988555" timestamp2="7988555">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4473" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7988555" timestamp2="7988555">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4475" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7988667" timestamp2="7988667">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="4476" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7988667" timestamp2="7988667">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="4478" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7988782" timestamp2="7988782">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4479" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7988782" timestamp2="7988782">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4481" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7989206" timestamp2="7989206">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4482" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7989206" timestamp2="7989206">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4484" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7989307" timestamp2="7989307">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4485" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7989307" timestamp2="7989307">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4487" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7989343" timestamp2="7989343">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4488" _type="InsertStringCommand" date="Tue Dec 05 17:23:14 EST 2023" starttimestamp="1701807005597" timestamp="7989343" timestamp2="7989343">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4490" _type="InsertStringCommand" date="Tue Dec 05 17:23:15 EST 2023" starttimestamp="1701807005597" timestamp="7989495" timestamp2="7989495">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="4491" _type="InsertStringCommand" date="Tue Dec 05 17:23:15 EST 2023" starttimestamp="1701807005597" timestamp="7989495" timestamp2="7989495">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="4493" _type="InsertStringCommand" date="Tue Dec 05 17:23:15 EST 2023" starttimestamp="1701807005597" timestamp="7989604" timestamp2="7989604">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4494" _type="InsertStringCommand" date="Tue Dec 05 17:23:15 EST 2023" starttimestamp="1701807005597" timestamp="7989605" timestamp2="7989605">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="4496" _type="InsertStringCommand" date="Tue Dec 05 17:23:15 EST 2023" starttimestamp="1701807005597" timestamp="7989678" timestamp2="7989678">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4497" _type="InsertStringCommand" date="Tue Dec 05 17:23:15 EST 2023" starttimestamp="1701807005597" timestamp="7989678" timestamp2="7989678">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4498" _type="MoveCaretCommand" caretOffset="621" date="Tue Dec 05 17:23:15 EST 2023" docOffset="855" starttimestamp="1701807005597" timestamp="7990257" />
  <Command __id="4499" _type="MoveCaretCommand" caretOffset="621" date="Tue Dec 05 17:23:15 EST 2023" docOffset="855" starttimestamp="1701807005597" timestamp="7990257" />
  <DocumentChange __id="4500" _type="Delete" date="Tue Dec 05 17:23:21 EST 2023" docASTNodeCount="167" docActiveCodeLength="1007" docExpressionCount="125" docLength="1007" endLine="16" length="22" offset="618" startLine="16" starttimestamp="1701807005597" timestamp="7995623">
    <text><![CDATA[Lmabda lambda = lambda]]></text>
  </DocumentChange>
  <Command __id="4501" _type="UndoCommand" date="Tue Dec 05 17:23:21 EST 2023" starttimestamp="1701807005597" timestamp="7995630" />
  <DocumentChange __id="4502" _type="Insert" date="Tue Dec 05 17:23:21 EST 2023" docASTNodeCount="169" docActiveCodeLength="1010" docExpressionCount="128" docLength="1010" length="3" offset="618" starttimestamp="1701807005597" timestamp="7995886">
    <text><![CDATA[		L]]></text>
  </DocumentChange>
  <Command __id="4503" _type="UndoCommand" date="Tue Dec 05 17:23:21 EST 2023" starttimestamp="1701807005597" timestamp="7995888" />
  <Command __id="4505" _type="UndoCommand" date="Tue Dec 05 17:23:21 EST 2023" starttimestamp="1701807005597" timestamp="7996073" />
  <Command __id="4506" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 17:23:22 EST 2023" docOffset="686" starttimestamp="1701807005597" timestamp="7996853" />
  <Command __id="4507" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 17:23:22 EST 2023" docOffset="686" starttimestamp="1701807005597" timestamp="7996853" />
  <Command __id="4508" _type="ShellCommand" date="Tue Dec 05 17:23:25 EST 2023" starttimestamp="1701807005597" timestamp="7999475" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4509" _type="ShellCommand" date="Tue Dec 05 17:23:26 EST 2023" starttimestamp="1701807005597" timestamp="8001245" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4510" _type="MoveCaretCommand" caretOffset="486" date="Tue Dec 05 17:23:26 EST 2023" docOffset="720" starttimestamp="1701807005597" timestamp="8001364" />
  <Command __id="4511" _type="MoveCaretCommand" caretOffset="486" date="Tue Dec 05 17:23:26 EST 2023" docOffset="720" starttimestamp="1701807005597" timestamp="8001364" />
  <Command __id="4512" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 17:23:27 EST 2023" docOffset="686" starttimestamp="1701807005597" timestamp="8002021" />
  <Command __id="4513" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 17:23:27 EST 2023" docOffset="686" starttimestamp="1701807005597" timestamp="8002021" />
  <Command __id="4514" _type="MoveCaretCommand" caretOffset="380" date="Tue Dec 05 17:23:33 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="8008020" />
  <Command __id="4515" _type="MoveCaretCommand" caretOffset="380" date="Tue Dec 05 17:23:33 EST 2023" docOffset="614" starttimestamp="1701807005597" timestamp="8008020" />
  <Command __id="4517" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:23:34 EST 2023" starttimestamp="1701807005597" timestamp="8008608" />
  <Command __id="4518" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:23:34 EST 2023" starttimestamp="1701807005597" timestamp="8008608" />
  <Command __id="4519" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 17:23:35 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="8009447" />
  <Command __id="4520" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 17:23:35 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="8009447" />
  <Command __id="4522" _type="InsertStringCommand" date="Tue Dec 05 17:23:35 EST 2023" starttimestamp="1701807005597" timestamp="8010023" timestamp2="8010023">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4523" _type="InsertStringCommand" date="Tue Dec 05 17:23:35 EST 2023" starttimestamp="1701807005597" timestamp="8010023" timestamp2="8010023">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="4524" _type="MoveCaretCommand" caretOffset="705" date="Tue Dec 05 17:23:36 EST 2023" docOffset="939" starttimestamp="1701807005597" timestamp="8010594" />
  <Command __id="4525" _type="MoveCaretCommand" caretOffset="705" date="Tue Dec 05 17:23:36 EST 2023" docOffset="939" starttimestamp="1701807005597" timestamp="8010594" />
  <Command __id="4526" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 17:23:36 EST 2023" starttimestamp="1701807005597" timestamp="8010747" />
  <Command __id="4527" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:23:36 EST 2023" starttimestamp="1701807005597" timestamp="8010844" />
  <Command __id="4528" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:23:36 EST 2023" starttimestamp="1701807005597" timestamp="8010850" />
  <Command __id="4529" _type="MoveCaretCommand" caretOffset="317" date="Tue Dec 05 17:23:46 EST 2023" docOffset="551" starttimestamp="1701807005597" timestamp="8021303" />
  <Command __id="4530" _type="MoveCaretCommand" caretOffset="317" date="Tue Dec 05 17:23:46 EST 2023" docOffset="551" starttimestamp="1701807005597" timestamp="8021303" />
  <Command __id="4531" _type="InsertStringCommand" date="Tue Dec 05 17:23:47 EST 2023" starttimestamp="1701807005597" timestamp="8021639" timestamp2="8021639">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4532" _type="InsertStringCommand" date="Tue Dec 05 17:23:47 EST 2023" starttimestamp="1701807005597" timestamp="8021639" timestamp2="8021639">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4533" _type="ShellCommand" date="Tue Dec 05 17:23:51 EST 2023" starttimestamp="1701807005597" timestamp="8025986" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4534" _type="ShellCommand" date="Tue Dec 05 17:23:59 EST 2023" starttimestamp="1701807005597" timestamp="8033589" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4535" _type="ShellCommand" date="Tue Dec 05 17:24:06 EST 2023" starttimestamp="1701807005597" timestamp="8041388" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4536" _type="ShellCommand" date="Tue Dec 05 17:24:08 EST 2023" starttimestamp="1701807005597" timestamp="8043064" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4537" _type="ShellCommand" date="Tue Dec 05 17:24:12 EST 2023" starttimestamp="1701807005597" timestamp="8047198" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4538" _type="ShellCommand" date="Tue Dec 05 17:24:17 EST 2023" starttimestamp="1701807005597" timestamp="8051523" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4539" _type="MoveCaretCommand" caretOffset="365" date="Tue Dec 05 17:24:18 EST 2023" docOffset="599" starttimestamp="1701807005597" timestamp="8052735" />
  <Command __id="4540" _type="MoveCaretCommand" caretOffset="365" date="Tue Dec 05 17:24:18 EST 2023" docOffset="599" starttimestamp="1701807005597" timestamp="8052735" />
  <Command __id="4542" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:24:18 EST 2023" starttimestamp="1701807005597" timestamp="8053305" />
  <Command __id="4543" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:24:18 EST 2023" starttimestamp="1701807005597" timestamp="8053305" />
  <Command __id="4544" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 17:24:19 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="8054321" />
  <Command __id="4545" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 17:24:19 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="8054321" />
  <Command __id="4547" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:24:20 EST 2023" starttimestamp="1701807005597" timestamp="8054447" />
  <Command __id="4548" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:24:20 EST 2023" starttimestamp="1701807005597" timestamp="8054447" />
  <Command __id="4549" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 17:24:20 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="8054842" />
  <Command __id="4550" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 17:24:20 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="8054843" />
  <Command __id="4551" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 17:24:20 EST 2023" starttimestamp="1701807005597" timestamp="8055006" />
  <Command __id="4552" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:24:20 EST 2023" starttimestamp="1701807005597" timestamp="8055155" />
  <Command __id="4553" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:24:20 EST 2023" starttimestamp="1701807005597" timestamp="8055164" />
  <Command __id="4554" _type="ShellCommand" date="Tue Dec 05 17:24:22 EST 2023" starttimestamp="1701807005597" timestamp="8057359" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4556" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:24:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8067108" type="Run" />
  <Command __id="4557" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:24:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8067108" type="Run" />
  <Command __id="4558" _type="ShellCommand" date="Tue Dec 05 17:24:33 EST 2023" starttimestamp="1701807005597" timestamp="8067420" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4559" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8069993" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.index.main(index.java:17)"), Diff(INSERT,"Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4560" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8069995" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4561" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070001" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFile"), Diff(INSERT,"execution time (ms):5¶Test Result:ClassRegistry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶"), Diff(DELETE,"¶")]]]></diff>
  </Command>
  <Command __id="4562" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070001" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"5¶Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4563" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070002" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):7"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4564" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070026" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):32
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):32"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4565" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070028" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,

Test execution time (ms):33
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LoadLispChecker,100.0% complete,0.0,0.0,¶¶"), Diff(EQUAL,"Test execution time (ms):3"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4566" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070029" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:L"), Diff(DELETE,"oadLisp"), Diff(INSERT,"ispLambda"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(DELETE,"¶Test execution time (ms):33¶")]]]></diff>
  </Command>
  <Command __id="4567" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070030" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4568" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070031" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4569" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070031" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4570" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070034" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,¶¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4571" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070035" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:L"), Diff(DELETE,"isp"), Diff(INSERT,"oad"), Diff(EQUAL,"LambdaChecker"), Diff(DELETE,"3"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,1"), Diff(DELETE,"0"), Diff(INSERT,"5"), Diff(EQUAL,".0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="4572" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070036" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4573" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070036" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4574" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070037" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4575" _type="ConsoleOutput" date="Tue Dec 05 17:24:35 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8070038" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4589" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:24:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8085259" type="Run" />
  <Command __id="4590" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:24:50 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8085259" type="Run" />
  <Command __id="4591" _type="PasteCommand" date="Tue Dec 05 17:24:51 EST 2023" starttimestamp="1701807005597" timestamp="8086340" />
  <Command __id="4592" _type="ConsoleOutput" date="Tue Dec 05 17:24:52 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8086692" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4593" _type="ConsoleInput" date="Tue Dec 05 17:24:54 EST 2023" starttimestamp="1701807005597" timestamp="8089279" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="4594" _type="ExceptionCommand" date="Tue Dec 05 17:24:54 EST 2023" starttimestamp="1701807005597" timestamp="8089284" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4595" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:24:54 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8089292" type="Debug" />
  <Command __id="4596" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:24:54 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8089292" type="Run" />
  <Command __id="4597" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:24:54 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8089292" type="Debug" />
  <Command __id="4598" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:24:54 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8089292" type="Run" />
  <Command __id="4599" _type="ShellCommand" date="Tue Dec 05 17:25:19 EST 2023" starttimestamp="1701807005597" timestamp="8114221" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4600" _type="ShellCommand" date="Tue Dec 05 17:25:24 EST 2023" starttimestamp="1701807005597" timestamp="8118601" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4601" _type="MoveCaretCommand" caretOffset="129" date="Tue Dec 05 17:25:36 EST 2023" docOffset="363" starttimestamp="1701807005597" timestamp="8130609" />
  <Command __id="4602" _type="MoveCaretCommand" caretOffset="129" date="Tue Dec 05 17:25:36 EST 2023" docOffset="363" starttimestamp="1701807005597" timestamp="8130609" />
  <Command __id="4603" _type="SelectTextCommand" caretOffset="144" date="Tue Dec 05 17:25:36 EST 2023" end="144" start="120" starttimestamp="1701807005597" timestamp="8130667" />
  <Command __id="4604" _type="SelectTextCommand" caretOffset="144" date="Tue Dec 05 17:25:36 EST 2023" end="144" start="120" starttimestamp="1701807005597" timestamp="8130667" />
  <Command __id="4605" _type="MoveCaretCommand" caretOffset="328" date="Tue Dec 05 17:25:37 EST 2023" docOffset="562" starttimestamp="1701807005597" timestamp="8131458" />
  <Command __id="4606" _type="MoveCaretCommand" caretOffset="328" date="Tue Dec 05 17:25:37 EST 2023" docOffset="562" starttimestamp="1701807005597" timestamp="8131458" />
  <Command __id="4607" _type="MoveCaretCommand" caretOffset="278" date="Tue Dec 05 17:25:37 EST 2023" docOffset="512" starttimestamp="1701807005597" timestamp="8132322" />
  <Command __id="4608" _type="MoveCaretCommand" caretOffset="278" date="Tue Dec 05 17:25:37 EST 2023" docOffset="512" starttimestamp="1701807005597" timestamp="8132322" />
  <Command __id="4609" _type="MoveCaretCommand" caretOffset="382" date="Tue Dec 05 17:25:38 EST 2023" docOffset="616" starttimestamp="1701807005597" timestamp="8132839" />
  <Command __id="4610" _type="MoveCaretCommand" caretOffset="382" date="Tue Dec 05 17:25:38 EST 2023" docOffset="616" starttimestamp="1701807005597" timestamp="8132839" />
  <Command __id="4611" _type="MoveCaretCommand" caretOffset="376" date="Tue Dec 05 17:25:38 EST 2023" docOffset="610" starttimestamp="1701807005597" timestamp="8133280" />
  <Command __id="4612" _type="MoveCaretCommand" caretOffset="376" date="Tue Dec 05 17:25:38 EST 2023" docOffset="610" starttimestamp="1701807005597" timestamp="8133280" />
  <Command __id="4613" _type="MoveCaretCommand" caretOffset="363" date="Tue Dec 05 17:25:39 EST 2023" docOffset="597" starttimestamp="1701807005597" timestamp="8134105" />
  <Command __id="4614" _type="MoveCaretCommand" caretOffset="363" date="Tue Dec 05 17:25:39 EST 2023" docOffset="597" starttimestamp="1701807005597" timestamp="8134106" />
  <Command __id="4615" _type="MoveCaretCommand" caretOffset="356" date="Tue Dec 05 17:25:40 EST 2023" docOffset="590" starttimestamp="1701807005597" timestamp="8134586" />
  <Command __id="4616" _type="MoveCaretCommand" caretOffset="356" date="Tue Dec 05 17:25:40 EST 2023" docOffset="590" starttimestamp="1701807005597" timestamp="8134587" />
  <Command __id="4617" _type="MoveCaretCommand" caretOffset="361" date="Tue Dec 05 17:25:40 EST 2023" docOffset="595" starttimestamp="1701807005597" timestamp="8135033" />
  <Command __id="4618" _type="MoveCaretCommand" caretOffset="361" date="Tue Dec 05 17:25:40 EST 2023" docOffset="595" starttimestamp="1701807005597" timestamp="8135033" />
  <Command __id="4619" _type="MoveCaretCommand" caretOffset="369" date="Tue Dec 05 17:25:41 EST 2023" docOffset="603" starttimestamp="1701807005597" timestamp="8135469" />
  <Command __id="4620" _type="MoveCaretCommand" caretOffset="369" date="Tue Dec 05 17:25:41 EST 2023" docOffset="603" starttimestamp="1701807005597" timestamp="8135469" />
  <DocumentChange __id="4504" _type="Delete" date="Tue Dec 05 17:23:21 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" endLine="16" length="7" offset="614" startLine="15" starttimestamp="1701807005597" timestamp="7996064">
    <text><![CDATA[
					L]]></text>
  </DocumentChange>
  <DocumentChange __id="4516" _type="Delete" date="Tue Dec 05 17:23:34 EST 2023" docASTNodeCount="167" docActiveCodeLength="1002" docExpressionCount="126" docLength="1002" endLine="15" length="1" offset="613" startLine="15" starttimestamp="1701807005597" timestamp="8008600">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="4521" _type="Insert" date="Tue Dec 05 17:23:35 EST 2023" docASTNodeCount="167" docActiveCodeLength="1003" docExpressionCount="125" docLength="1003" length="1" offset="631" starttimestamp="1701807005597" timestamp="8010018">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="4541" _type="Delete" date="Tue Dec 05 17:24:18 EST 2023" docASTNodeCount="132" docActiveCodeLength="1002" docExpressionCount="99" docLength="1002" endLine="15" length="1" offset="598" startLine="15" starttimestamp="1701807005597" timestamp="8053300">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="4546" _type="Delete" date="Tue Dec 05 17:24:20 EST 2023" docASTNodeCount="166" docActiveCodeLength="1001" docExpressionCount="124" docLength="1001" endLine="15" length="1" offset="630" startLine="15" starttimestamp="1701807005597" timestamp="8054443">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="4621" _type="ShellCommand" date="Tue Dec 05 17:25:42 EST 2023" starttimestamp="1701807005597" timestamp="8137144" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4622" _type="ShellCommand" date="Tue Dec 05 17:25:43 EST 2023" starttimestamp="1701807005597" timestamp="8137804" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4623" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:25:46 EST 2023" docASTNodeCount="229" docActiveCodeLength="1312" docExpressionCount="156" docLength="1312" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8141333">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		IdentifierAtom ids[] = {};		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, expr.getTail());		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4624" _type="MoveCaretCommand" caretOffset="470" date="Tue Dec 05 17:25:46 EST 2023" docOffset="728" starttimestamp="1701807005597" timestamp="8141392" />
  <Command __id="4626" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:25:51 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="8145538" />
  <Command __id="4627" _type="MoveCaretCommand" caretOffset="372" date="Tue Dec 05 17:25:54 EST 2023" docOffset="606" starttimestamp="1701807005597" timestamp="8149205" />
  <Command __id="4628" _type="MoveCaretCommand" caretOffset="372" date="Tue Dec 05 17:25:54 EST 2023" docOffset="606" starttimestamp="1701807005597" timestamp="8149205" />
  <Command __id="4629" _type="MoveCaretCommand" caretOffset="588" date="Tue Dec 05 17:26:09 EST 2023" docOffset="822" starttimestamp="1701807005597" timestamp="8164222" />
  <Command __id="4630" _type="MoveCaretCommand" caretOffset="588" date="Tue Dec 05 17:26:09 EST 2023" docOffset="822" starttimestamp="1701807005597" timestamp="8164222" />
  <Command __id="4631" _type="MoveCaretCommand" caretOffset="593" date="Tue Dec 05 17:26:10 EST 2023" docOffset="827" starttimestamp="1701807005597" timestamp="8164660" />
  <Command __id="4632" _type="MoveCaretCommand" caretOffset="593" date="Tue Dec 05 17:26:10 EST 2023" docOffset="827" starttimestamp="1701807005597" timestamp="8164660" />
  <Command __id="4633" _type="MoveCaretCommand" caretOffset="484" date="Tue Dec 05 17:26:10 EST 2023" docOffset="718" starttimestamp="1701807005597" timestamp="8165173" />
  <Command __id="4634" _type="MoveCaretCommand" caretOffset="484" date="Tue Dec 05 17:26:10 EST 2023" docOffset="718" starttimestamp="1701807005597" timestamp="8165173" />
  <Command __id="4635" _type="MoveCaretCommand" caretOffset="450" date="Tue Dec 05 17:26:11 EST 2023" docOffset="684" starttimestamp="1701807005597" timestamp="8165687" />
  <Command __id="4636" _type="MoveCaretCommand" caretOffset="450" date="Tue Dec 05 17:26:11 EST 2023" docOffset="684" starttimestamp="1701807005597" timestamp="8165687" />
  <Command __id="4637" _type="MoveCaretCommand" caretOffset="391" date="Tue Dec 05 17:26:11 EST 2023" docOffset="625" starttimestamp="1701807005597" timestamp="8166199" />
  <Command __id="4638" _type="MoveCaretCommand" caretOffset="391" date="Tue Dec 05 17:26:11 EST 2023" docOffset="625" starttimestamp="1701807005597" timestamp="8166199" />
  <Command __id="4639" _type="MoveCaretCommand" caretOffset="450" date="Tue Dec 05 17:26:12 EST 2023" docOffset="684" starttimestamp="1701807005597" timestamp="8166860" />
  <Command __id="4640" _type="MoveCaretCommand" caretOffset="450" date="Tue Dec 05 17:26:12 EST 2023" docOffset="684" starttimestamp="1701807005597" timestamp="8166860" />
  <Command __id="4625" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:25:51 EST 2023" docASTNodeCount="166" docActiveCodeLength="1001" docExpressionCount="124" docLength="1001" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8145470">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)"), Diff(DELETE,"("), Diff(EQUAL,"expr.getHead().eval(environment)"), Diff(DELETE,")"), Diff(EQUAL,";			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)expr.getHead().eval(environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="4641" _type="MoveCaretCommand" caretOffset="450" date="Tue Dec 05 17:26:15 EST 2023" docOffset="684" starttimestamp="1701807005597" timestamp="8169589" />
  <Command __id="4642" _type="MoveCaretCommand" caretOffset="450" date="Tue Dec 05 17:26:15 EST 2023" docOffset="684" starttimestamp="1701807005597" timestamp="8169590" />
  <Command __id="4644" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 17:26:31 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="8185763" />
  <Command __id="4645" _type="MoveCaretCommand" caretOffset="560" date="Tue Dec 05 17:26:36 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="8190515" />
  <Command __id="4646" _type="MoveCaretCommand" caretOffset="396" date="Tue Dec 05 17:26:41 EST 2023" docOffset="609" starttimestamp="1701807005597" timestamp="8196233" />
  <Command __id="4647" _type="MoveCaretCommand" caretOffset="402" date="Tue Dec 05 17:26:42 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="8196914" />
  <Command __id="4648" _type="MoveCaretCommand" caretOffset="410" date="Tue Dec 05 17:26:43 EST 2023" docOffset="623" starttimestamp="1701807005597" timestamp="8197446" />
  <Command __id="4649" _type="MoveCaretCommand" caretOffset="560" date="Tue Dec 05 17:26:51 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="8205997" />
  <Command __id="4650" _type="MoveCaretCommand" caretOffset="560" date="Tue Dec 05 17:26:51 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="8206245" />
  <Command __id="4651" _type="MoveCaretCommand" caretOffset="331" date="Tue Dec 05 17:26:55 EST 2023" docOffset="544" starttimestamp="1701807005597" timestamp="8209566" />
  <Command __id="4652" _type="MoveCaretCommand" caretOffset="417" date="Tue Dec 05 17:26:55 EST 2023" docOffset="630" starttimestamp="1701807005597" timestamp="8210067" />
  <Command __id="4653" _type="ShellCommand" date="Tue Dec 05 17:27:06 EST 2023" starttimestamp="1701807005597" timestamp="8221186" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4654" _type="ShellCommand" date="Tue Dec 05 17:27:09 EST 2023" starttimestamp="1701807005597" timestamp="8223484" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4655" _type="MoveCaretCommand" caretOffset="563" date="Tue Dec 05 17:27:10 EST 2023" docOffset="776" starttimestamp="1701807005597" timestamp="8224680" />
  <Command __id="4656" _type="MoveCaretCommand" caretOffset="560" date="Tue Dec 05 17:27:10 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="8225388" />
  <Command __id="4657" _type="ShellCommand" date="Tue Dec 05 17:27:13 EST 2023" starttimestamp="1701807005597" timestamp="8227935" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4658" _type="ShellCommand" date="Tue Dec 05 17:27:35 EST 2023" starttimestamp="1701807005597" timestamp="8249461" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4660" _type="MoveCaretCommand" caretOffset="450" date="Tue Dec 05 17:27:35 EST 2023" docOffset="684" starttimestamp="1701807005597" timestamp="8249626" />
  <Command __id="4661" _type="SelectTextCommand" caretOffset="396" date="Tue Dec 05 17:27:39 EST 2023" end="396" start="378" starttimestamp="1701807005597" timestamp="8254330" />
  <Command __id="4662" _type="SelectTextCommand" caretOffset="396" date="Tue Dec 05 17:27:39 EST 2023" end="396" start="378" starttimestamp="1701807005597" timestamp="8254331" />
  <Command __id="4663" _type="MoveCaretCommand" caretOffset="448" date="Tue Dec 05 17:27:41 EST 2023" docOffset="682" starttimestamp="1701807005597" timestamp="8255865" />
  <Command __id="4664" _type="MoveCaretCommand" caretOffset="448" date="Tue Dec 05 17:27:41 EST 2023" docOffset="682" starttimestamp="1701807005597" timestamp="8255865" />
  <Command __id="4669" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:27:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8262033" type="Run" />
  <Command __id="4670" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:27:47 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8262033" type="Run" />
  <Command __id="4671" _type="ShellCommand" date="Tue Dec 05 17:27:47 EST 2023" starttimestamp="1701807005597" timestamp="8262371" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4690" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:27:53 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8267842" type="Debug" />
  <Command __id="4691" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:27:53 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8267842" type="Run" />
  <Command __id="4692" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:27:53 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8267842" type="Debug" />
  <Command __id="4693" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:27:53 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8267842" type="Run" />
  <Command __id="4694" _type="ShellCommand" date="Tue Dec 05 17:27:53 EST 2023" starttimestamp="1701807005597" timestamp="8267845" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4695" _type="LocalChecksRawCommand" date="Tue Dec 05 17:27:53 EST 2023" starttimestamp="1701807005597" timestamp="8267847">
    <CSVRow><![CDATA[163,Tue Dec 05 17:27:50 EST 2023,50,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,83,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4696" _type="LocalChecksRawCommand" date="Tue Dec 05 17:27:53 EST 2023" starttimestamp="1701807005597" timestamp="8267847">
    <CSVRow><![CDATA[163,Tue Dec 05 17:27:50 EST 2023,50,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,83,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="4697" _type="SelectTextCommand" caretOffset="396" date="Tue Dec 05 17:27:56 EST 2023" end="396" start="378" starttimestamp="1701807005597" timestamp="8271295" />
  <Command __id="4698" _type="SelectTextCommand" caretOffset="396" date="Tue Dec 05 17:27:56 EST 2023" end="396" start="378" starttimestamp="1701807005597" timestamp="8271295" />
  <Command __id="4699" _type="MoveCaretCommand" caretOffset="396" date="Tue Dec 05 17:27:57 EST 2023" docOffset="630" starttimestamp="1701807005597" timestamp="8271584" />
  <Command __id="4700" _type="MoveCaretCommand" caretOffset="396" date="Tue Dec 05 17:27:57 EST 2023" docOffset="630" starttimestamp="1701807005597" timestamp="8271584" />
  <Command __id="4705" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:28:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8279977" type="Run" />
  <Command __id="4706" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:28:05 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8279977" type="Run" />
  <Command __id="4707" _type="PasteCommand" date="Tue Dec 05 17:28:06 EST 2023" starttimestamp="1701807005597" timestamp="8280640" />
  <Command __id="4708" _type="ConsoleOutput" date="Tue Dec 05 17:28:06 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8280901" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4709" _type="ConsoleInput" date="Tue Dec 05 17:28:09 EST 2023" starttimestamp="1701807005597" timestamp="8284342" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="4710" _type="ConsoleOutput" date="Tue Dec 05 17:28:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8284347" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4711" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:28:09 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8284351" type="Debug" />
  <Command __id="4712" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:28:09 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8284351" type="Run" />
  <Command __id="4713" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:28:09 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8284351" type="Debug" />
  <Command __id="4714" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:28:09 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8284351" type="Run" />
  <Command __id="4715" _type="ConsoleOutput" date="Tue Dec 05 17:28:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8284353" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.ClassCastException: class index.IdentifierA"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvalua"), Diff(EQUAL,"to"), Diff(DELETE,"m"), Diff(INSERT,"r"), Diff(EQUAL,"Impl"), Diff(DELETE," cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluato"), Diff(INSERT,".eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterControlle"), Diff(EQUAL,"r."), Diff(DELETE,"f"), Diff(INSERT,"r"), Diff(EQUAL,"un"), Diff(DELETE,"ction.Lambda are in unnamed module of loader 'app'"), Diff(INSERT,"(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4643" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:26:31 EST 2023" docASTNodeCount="137" docActiveCodeLength="779" docExpressionCount="99" docLength="779" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8185681">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4659" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:27:35 EST 2023" docASTNodeCount="166" docActiveCodeLength="1001" docExpressionCount="124" docLength="1001" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8249546">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)expr.getHead().eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4716" _type="MoveCaretCommand" caretOffset="484" date="Tue Dec 05 17:28:14 EST 2023" docOffset="718" starttimestamp="1701807005597" timestamp="8289385" />
  <Command __id="4717" _type="MoveCaretCommand" caretOffset="484" date="Tue Dec 05 17:28:14 EST 2023" docOffset="718" starttimestamp="1701807005597" timestamp="8289385" />
  <Command __id="4719" _type="MoveCaretCommand" caretOffset="560" date="Tue Dec 05 17:28:16 EST 2023" docOffset="773" starttimestamp="1701807005597" timestamp="8290758" />
  <Command __id="4720" _type="SelectTextCommand" caretOffset="427" date="Tue Dec 05 17:28:19 EST 2023" end="427" start="385" starttimestamp="1701807005597" timestamp="8294364" />
  <Command __id="4721" _type="MoveCaretCommand" caretOffset="427" date="Tue Dec 05 17:28:20 EST 2023" docOffset="640" starttimestamp="1701807005597" timestamp="8294581" />
  <Command __id="4722" _type="SelectTextCommand" caretOffset="409" date="Tue Dec 05 17:28:21 EST 2023" end="426" start="409" starttimestamp="1701807005597" timestamp="8296084" />
  <Command __id="4723" _type="MoveCaretCommand" caretOffset="563" date="Tue Dec 05 17:28:41 EST 2023" docOffset="776" starttimestamp="1701807005597" timestamp="8315854" />
  <Command __id="4724" _type="MoveCaretCommand" caretOffset="124" date="Tue Dec 05 17:28:46 EST 2023" docOffset="337" starttimestamp="1701807005597" timestamp="8320493" />
  <Command __id="4725" _type="MoveCaretCommand" caretOffset="145" date="Tue Dec 05 17:28:46 EST 2023" docOffset="358" starttimestamp="1701807005597" timestamp="8321036" />
  <Command __id="4726" _type="MoveCaretCommand" caretOffset="219" date="Tue Dec 05 17:28:47 EST 2023" docOffset="432" starttimestamp="1701807005597" timestamp="8321427" />
  <Command __id="4718" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:28:16 EST 2023" docASTNodeCount="137" docActiveCodeLength="779" docExpressionCount="99" docLength="779" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8290696">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4727" _type="MoveCaretCommand" caretOffset="55" date="Tue Dec 05 17:28:49 EST 2023" docOffset="55" starttimestamp="1701807005597" timestamp="8323905" />
  <Command __id="4728" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:29:11 EST 2023" docASTNodeCount="166" docActiveCodeLength="1001" docExpressionCount="124" docLength="1001" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8345548">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)expr.getHead().eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4729" _type="MoveCaretCommand" caretOffset="484" date="Tue Dec 05 17:29:11 EST 2023" docOffset="718" starttimestamp="1701807005597" timestamp="8345606" />
  <Command __id="4731" _type="MoveCaretCommand" caretOffset="55" date="Tue Dec 05 17:29:18 EST 2023" docOffset="55" starttimestamp="1701807005597" timestamp="8352795" />
  <Command __id="4732" _type="MoveCaretCommand" caretOffset="393" date="Tue Dec 05 17:29:31 EST 2023" docOffset="606" starttimestamp="1701807005597" timestamp="8366220" />
  <Command __id="4733" _type="SelectTextCommand" caretOffset="389" date="Tue Dec 05 17:29:34 EST 2023" end="394" start="389" starttimestamp="1701807005597" timestamp="8369272" />
  <Command __id="4734" _type="MoveCaretCommand" caretOffset="390" date="Tue Dec 05 17:29:35 EST 2023" docOffset="603" starttimestamp="1701807005597" timestamp="8369842" />
  <Command __id="4735" _type="SelectTextCommand" caretOffset="426" date="Tue Dec 05 17:29:38 EST 2023" end="426" start="394" starttimestamp="1701807005597" timestamp="8372489" />
  <Command __id="4736" _type="CopyCommand" date="Tue Dec 05 17:29:38 EST 2023" starttimestamp="1701807005597" timestamp="8372920" />
  <Command __id="4737" _type="MoveCaretCommand" caretOffset="492" date="Tue Dec 05 17:29:39 EST 2023" docOffset="705" starttimestamp="1701807005597" timestamp="8373556" />
  <Command __id="4738" _type="SelectTextCommand" caretOffset="497" date="Tue Dec 05 17:29:39 EST 2023" end="497" start="491" starttimestamp="1701807005597" timestamp="8373695" />
  <Command __id="4740" _type="PasteCommand" date="Tue Dec 05 17:29:39 EST 2023" starttimestamp="1701807005597" timestamp="8373966" />
  <Command __id="4741" _type="MoveCaretCommand" caretOffset="427" date="Tue Dec 05 17:29:40 EST 2023" docOffset="640" starttimestamp="1701807005597" timestamp="8374463" />
  <Command __id="4742" _type="InsertStringCommand" date="Tue Dec 05 17:29:40 EST 2023" starttimestamp="1701807005597" timestamp="8374955" timestamp2="8374955">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4744" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Dec 05 17:29:41 EST 2023" starttimestamp="1701807005597" timestamp="8375597" />
  <Command __id="4749" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:29:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8381222" type="Run" />
  <Command __id="4750" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:29:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8381222" type="Run" />
  <Command __id="4751" _type="PasteCommand" date="Tue Dec 05 17:29:47 EST 2023" starttimestamp="1701807005597" timestamp="8381825" />
  <Command __id="4752" _type="ConsoleOutput" date="Tue Dec 05 17:29:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8382036" type="ConsoleOutput">
    <outputString><![CDATA[EXPR.GETHEAD
NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"EXPR.GETHEAD¶NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4753" _type="ExceptionCommand" date="Tue Dec 05 17:29:47 EST 2023" starttimestamp="1701807005597" timestamp="8382037" type="Exception">
    <exceptionString><![CDATA[.EVAL
Exception in thread "main" java.lang.NullPointerException
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4754" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:29:47 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8382054" type="Debug" />
  <Command __id="4755" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:29:47 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8382054" type="Run" />
  <Command __id="4756" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:29:47 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8382054" type="Debug" />
  <Command __id="4757" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:29:47 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8382054" type="Run" />
  <Command __id="4760" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:29:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8385735" type="Run" />
  <Command __id="4761" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:29:51 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8385736" type="Run" />
  <Command __id="4762" _type="PasteCommand" date="Tue Dec 05 17:29:51 EST 2023" starttimestamp="1701807005597" timestamp="8386402" />
  <Command __id="4763" _type="ConsoleOutput" date="Tue Dec 05 17:29:52 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8386604" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"EXPR.GETHEAD¶NIL"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4764" _type="ConsoleInput" date="Tue Dec 05 17:29:54 EST 2023" starttimestamp="1701807005597" timestamp="8389198" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="4765" _type="ConsoleOutput" date="Tue Dec 05 17:29:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8389204" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4766" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:29:54 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8389208" type="Debug" />
  <Command __id="4767" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:29:54 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8389208" type="Run" />
  <Command __id="4768" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:29:54 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8389208" type="Debug" />
  <Command __id="4769" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:29:54 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8389208" type="Run" />
  <Command __id="4770" _type="ConsoleOutput" date="Tue Dec 05 17:29:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8389212" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.ClassCastException: class index.IdentifierA"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvalua"), Diff(EQUAL,"to"), Diff(DELETE,"m"), Diff(INSERT,"r"), Diff(EQUAL,"Impl"), Diff(DELETE," cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluato"), Diff(INSERT,".eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterControlle"), Diff(EQUAL,"r."), Diff(DELETE,"f"), Diff(INSERT,"r"), Diff(EQUAL,"un"), Diff(DELETE,"ction.Lambda are in unnamed module of loader 'app'"), Diff(INSERT,"(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="4771" _type="ShellCommand" date="Tue Dec 05 17:30:00 EST 2023" starttimestamp="1701807005597" timestamp="8395154" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4772" _type="ShellCommand" date="Tue Dec 05 17:30:15 EST 2023" starttimestamp="1701807005597" timestamp="8410165" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4774" _type="MoveCaretCommand" caretOffset="484" date="Tue Dec 05 17:30:15 EST 2023" docOffset="718" starttimestamp="1701807005597" timestamp="8410369" />
  <Command __id="4775" _type="ShellCommand" date="Tue Dec 05 17:30:53 EST 2023" starttimestamp="1701807005597" timestamp="8447703" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4776" _type="ShellCommand" date="Tue Dec 05 17:32:07 EST 2023" starttimestamp="1701807005597" timestamp="8522297" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4777" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 17:32:07 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="8522324" />
  <Command __id="4778" _type="MoveCaretCommand" caretOffset="397" date="Tue Dec 05 17:32:07 EST 2023" docOffset="631" starttimestamp="1701807005597" timestamp="8522324" />
  <Command __id="4730" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:29:18 EST 2023" docASTNodeCount="137" docActiveCodeLength="779" docExpressionCount="99" docLength="779" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8352726">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        Lambda lambda = (Lambda) expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(lambda, expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="4739" _type="Replace" date="Tue Dec 05 17:29:39 EST 2023" docASTNodeCount="142" docActiveCodeLength="805" docExpressionCount="104" docLength="805" endLine="19" insertionLength="32" int_docASTNodeCount="136" int_docActiveCodeLength="773" int_docExpressionCount="98" int_docLength="773" length="6" offset="704" startLine="19" starttimestamp="1701807005597" timestamp="8373960">
    <deletedText><![CDATA[lambda]]></deletedText>
    <insertedText><![CDATA[expr.getHead().eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4743" _type="Delete" date="Tue Dec 05 17:29:41 EST 2023" docASTNodeCount="128" docActiveCodeLength="738" docExpressionCount="94" docLength="738" endLine="19" length="67" offset="574" startLine="18" starttimestamp="1701807005597" timestamp="8375595">
    <text><![CDATA[        Lambda lambda = (Lambda) expr.getHead().eval(environment);
]]></text>
  </DocumentChange>
  <Command __id="4773" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:30:15 EST 2023" docASTNodeCount="166" docActiveCodeLength="1001" docExpressionCount="124" docLength="1001" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8410260">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)expr.getHead().eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="4781" _type="Insert" date="Tue Dec 05 17:32:11 EST 2023" docASTNodeCount="169" docActiveCodeLength="1007" docExpressionCount="126" docLength="1007" length="6" offset="512" repeat="3" starttimestamp="1701807005597" timestamp="8525432" timestamp2="8526579">
    <text><![CDATA[
			ex]]></text>
  </DocumentChange>
  <DocumentChange __id="4790" _type="Delete" date="Tue Dec 05 17:32:12 EST 2023" docASTNodeCount="166" docActiveCodeLength="1005" docExpressionCount="124" docLength="1005" endLine="14" length="2" offset="516" repeat="2" startLine="14" starttimestamp="1701807005597" timestamp="8527095" timestamp2="8527217">
    <text><![CDATA[ex]]></text>
  </DocumentChange>
  <Command __id="4779" _type="MoveCaretCommand" caretOffset="278" date="Tue Dec 05 17:32:10 EST 2023" docOffset="512" starttimestamp="1701807005597" timestamp="8525069" />
  <Command __id="4780" _type="MoveCaretCommand" caretOffset="278" date="Tue Dec 05 17:32:10 EST 2023" docOffset="512" starttimestamp="1701807005597" timestamp="8525070" />
  <Command __id="4782" _type="InsertStringCommand" date="Tue Dec 05 17:32:11 EST 2023" starttimestamp="1701807005597" timestamp="8525434" timestamp2="8525434">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4783" _type="InsertStringCommand" date="Tue Dec 05 17:32:11 EST 2023" starttimestamp="1701807005597" timestamp="8525434" timestamp2="8525434">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4785" _type="InsertStringCommand" date="Tue Dec 05 17:32:12 EST 2023" starttimestamp="1701807005597" timestamp="8526403" timestamp2="8526403">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4786" _type="InsertStringCommand" date="Tue Dec 05 17:32:12 EST 2023" starttimestamp="1701807005597" timestamp="8526403" timestamp2="8526403">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4788" _type="InsertStringCommand" date="Tue Dec 05 17:32:12 EST 2023" starttimestamp="1701807005597" timestamp="8526581" timestamp2="8526581">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4789" _type="InsertStringCommand" date="Tue Dec 05 17:32:12 EST 2023" starttimestamp="1701807005597" timestamp="8526581" timestamp2="8526581">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4791" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:12 EST 2023" starttimestamp="1701807005597" timestamp="8527096" />
  <Command __id="4792" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:12 EST 2023" starttimestamp="1701807005597" timestamp="8527096" />
  <Command __id="4794" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:12 EST 2023" starttimestamp="1701807005597" timestamp="8527218" />
  <Command __id="4795" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:12 EST 2023" starttimestamp="1701807005597" timestamp="8527218" />
  <Command __id="4797" _type="InsertStringCommand" date="Tue Dec 05 17:32:13 EST 2023" starttimestamp="1701807005597" timestamp="8528030" timestamp2="8528030">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4798" _type="InsertStringCommand" date="Tue Dec 05 17:32:13 EST 2023" starttimestamp="1701807005597" timestamp="8528030" timestamp2="8528030">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4800" _type="InsertStringCommand" date="Tue Dec 05 17:32:13 EST 2023" starttimestamp="1701807005597" timestamp="8528314" timestamp2="8528314">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4801" _type="InsertStringCommand" date="Tue Dec 05 17:32:13 EST 2023" starttimestamp="1701807005597" timestamp="8528314" timestamp2="8528314">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="4803" _type="InsertStringCommand" date="Tue Dec 05 17:32:14 EST 2023" starttimestamp="1701807005597" timestamp="8529338" timestamp2="8529338">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4804" _type="InsertStringCommand" date="Tue Dec 05 17:32:14 EST 2023" starttimestamp="1701807005597" timestamp="8529338" timestamp2="8529338">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4806" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529580" timestamp2="8529580">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4807" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529580" timestamp2="8529580">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4809" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529658" timestamp2="8529658">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4810" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529658" timestamp2="8529658">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4812" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529705" timestamp2="8529705">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4813" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529705" timestamp2="8529705">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4815" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529829" timestamp2="8529829">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4816" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529830" timestamp2="8529830">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4818" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529942" timestamp2="8529942">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4819" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8529942" timestamp2="8529942">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4821" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8530072" timestamp2="8530072">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4822" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8530072" timestamp2="8530072">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4824" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8530157" timestamp2="8530157">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4825" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8530157" timestamp2="8530157">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4827" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8530207" timestamp2="8530207">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4828" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8530207" timestamp2="8530207">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4830" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8530262" timestamp2="8530262">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4831" _type="InsertStringCommand" date="Tue Dec 05 17:32:15 EST 2023" starttimestamp="1701807005597" timestamp="8530262" timestamp2="8530262">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4833" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530404" timestamp2="8530404">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4834" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530404" timestamp2="8530404">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4836" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530747" timestamp2="8530747">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4837" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530747" timestamp2="8530747">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4839" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530778" timestamp2="8530778">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4840" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530778" timestamp2="8530778">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4842" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530857" timestamp2="8530857">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4843" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530857" timestamp2="8530857">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4845" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530925" timestamp2="8530925">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4846" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8530925" timestamp2="8530925">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4848" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8531050" timestamp2="8531050">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4849" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8531050" timestamp2="8531050">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4851" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8531143" timestamp2="8531143">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="4852" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8531143" timestamp2="8531143">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="4854" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8531225" timestamp2="8531225">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4855" _type="InsertStringCommand" date="Tue Dec 05 17:32:16 EST 2023" starttimestamp="1701807005597" timestamp="8531225" timestamp2="8531225">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="4857" _type="InsertStringCommand" date="Tue Dec 05 17:32:17 EST 2023" starttimestamp="1701807005597" timestamp="8532067" timestamp2="8532067">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4858" _type="InsertStringCommand" date="Tue Dec 05 17:32:17 EST 2023" starttimestamp="1701807005597" timestamp="8532067" timestamp2="8532067">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4860" _type="InsertStringCommand" date="Tue Dec 05 17:32:17 EST 2023" starttimestamp="1701807005597" timestamp="8532241" timestamp2="8532241">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4861" _type="InsertStringCommand" date="Tue Dec 05 17:32:17 EST 2023" starttimestamp="1701807005597" timestamp="8532241" timestamp2="8532241">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4863" _type="InsertStringCommand" date="Tue Dec 05 17:32:17 EST 2023" starttimestamp="1701807005597" timestamp="8532348" timestamp2="8532348">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4864" _type="InsertStringCommand" date="Tue Dec 05 17:32:17 EST 2023" starttimestamp="1701807005597" timestamp="8532348" timestamp2="8532348">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4866" _type="InsertStringCommand" date="Tue Dec 05 17:32:18 EST 2023" starttimestamp="1701807005597" timestamp="8532425" timestamp2="8532425">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4867" _type="InsertStringCommand" date="Tue Dec 05 17:32:18 EST 2023" starttimestamp="1701807005597" timestamp="8532425" timestamp2="8532425">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4869" _type="InsertStringCommand" date="Tue Dec 05 17:32:18 EST 2023" starttimestamp="1701807005597" timestamp="8532558" timestamp2="8532558">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4870" _type="InsertStringCommand" date="Tue Dec 05 17:32:18 EST 2023" starttimestamp="1701807005597" timestamp="8532558" timestamp2="8532558">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4871" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:32:18 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="8532562" />
  <Command __id="4876" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:32:18 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="8533315" />
  <Command __id="4878" _type="InsertStringCommand" date="Tue Dec 05 17:32:18 EST 2023" starttimestamp="1701807005597" timestamp="8533319" timestamp2="8533319">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4879" _type="InsertStringCommand" date="Tue Dec 05 17:32:18 EST 2023" starttimestamp="1701807005597" timestamp="8533319" timestamp2="8533319">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4881" _type="InsertStringCommand" date="Tue Dec 05 17:32:19 EST 2023" starttimestamp="1701807005597" timestamp="8533489" timestamp2="8533489">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="4882" _type="InsertStringCommand" date="Tue Dec 05 17:32:19 EST 2023" starttimestamp="1701807005597" timestamp="8533489" timestamp2="8533489">
    <data><![CDATA[;]]></data>
  </Command>
  <DocumentChange __id="4796" _type="Insert" date="Tue Dec 05 17:32:13 EST 2023" docASTNodeCount="174" docActiveCodeLength="1034" docExpressionCount="129" docLength="1034" length="29" offset="516" repeat="29" starttimestamp="1701807005597" timestamp="8528028" timestamp2="8533131">
    <text><![CDATA[SExpresssion temp = expr.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="4877" _type="Replace" date="Tue Dec 05 17:32:18 EST 2023" docASTNodeCount="174" docActiveCodeLength="1039" docExpressionCount="129" docLength="1039" endLine="14" insertionLength="9" int_docASTNodeCount="172" int_docActiveCodeLength="1030" int_docExpressionCount="129" int_docLength="1030" length="4" offset="541" startLine="14" starttimestamp="1701807005597" timestamp="8533317">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4880" _type="Insert" date="Tue Dec 05 17:32:19 EST 2023" docASTNodeCount="174" docActiveCodeLength="1040" docExpressionCount="129" docLength="1040" length="1" offset="550" starttimestamp="1701807005597" timestamp="8533487">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="4885" _type="Delete" date="Tue Dec 05 17:32:21 EST 2023" docASTNodeCount="174" docActiveCodeLength="1039" docExpressionCount="129" docLength="1039" endLine="14" length="1" offset="522" startLine="14" starttimestamp="1701807005597" timestamp="8536318">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="4890" _type="Insert" date="Tue Dec 05 17:32:23 EST 2023" docASTNodeCount="174" docActiveCodeLength="1043" docExpressionCount="129" docLength="1043" length="4" offset="550" starttimestamp="1701807005597" timestamp="8537449">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="4883" _type="MoveCaretCommand" caretOffset="289" date="Tue Dec 05 17:32:21 EST 2023" docOffset="523" starttimestamp="1701807005597" timestamp="8536163" />
  <Command __id="4884" _type="MoveCaretCommand" caretOffset="289" date="Tue Dec 05 17:32:21 EST 2023" docOffset="523" starttimestamp="1701807005597" timestamp="8536163" />
  <Command __id="4886" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:21 EST 2023" starttimestamp="1701807005597" timestamp="8536319" />
  <Command __id="4887" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:21 EST 2023" starttimestamp="1701807005597" timestamp="8536319" />
  <Command __id="4888" _type="MoveCaretCommand" caretOffset="316" date="Tue Dec 05 17:32:22 EST 2023" docOffset="550" starttimestamp="1701807005597" timestamp="8537102" />
  <Command __id="4889" _type="MoveCaretCommand" caretOffset="316" date="Tue Dec 05 17:32:22 EST 2023" docOffset="550" starttimestamp="1701807005597" timestamp="8537103" />
  <Command __id="4891" _type="InsertStringCommand" date="Tue Dec 05 17:32:23 EST 2023" starttimestamp="1701807005597" timestamp="8537451" timestamp2="8537451">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4892" _type="InsertStringCommand" date="Tue Dec 05 17:32:23 EST 2023" starttimestamp="1701807005597" timestamp="8537451" timestamp2="8537451">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4894" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:25 EST 2023" starttimestamp="1701807005597" timestamp="8539513" />
  <Command __id="4895" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:25 EST 2023" starttimestamp="1701807005597" timestamp="8539513" />
  <Command __id="4897" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:25 EST 2023" starttimestamp="1701807005597" timestamp="8539840" />
  <Command __id="4898" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:25 EST 2023" starttimestamp="1701807005597" timestamp="8539840" />
  <Command __id="4900" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:25 EST 2023" starttimestamp="1701807005597" timestamp="8539992" />
  <Command __id="4901" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:25 EST 2023" starttimestamp="1701807005597" timestamp="8539992" />
  <Command __id="4903" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:25 EST 2023" starttimestamp="1701807005597" timestamp="8540336" />
  <Command __id="4904" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:32:25 EST 2023" starttimestamp="1701807005597" timestamp="8540336" />
  <Command __id="4905" _type="MoveCaretCommand" caretOffset="477" date="Tue Dec 05 17:32:28 EST 2023" docOffset="711" starttimestamp="1701807005597" timestamp="8542642" />
  <Command __id="4906" _type="MoveCaretCommand" caretOffset="477" date="Tue Dec 05 17:32:28 EST 2023" docOffset="711" starttimestamp="1701807005597" timestamp="8542642" />
  <Command __id="4907" _type="MoveCaretCommand" caretOffset="402" date="Tue Dec 05 17:32:33 EST 2023" docOffset="636" starttimestamp="1701807005597" timestamp="8547451" />
  <Command __id="4908" _type="MoveCaretCommand" caretOffset="402" date="Tue Dec 05 17:32:33 EST 2023" docOffset="636" starttimestamp="1701807005597" timestamp="8547451" />
  <DocumentChange __id="4893" _type="Delete" date="Tue Dec 05 17:32:25 EST 2023" docASTNodeCount="174" docActiveCodeLength="1039" docExpressionCount="129" docLength="1039" endLine="15" length="4" offset="550" repeat="4" startLine="14" starttimestamp="1701807005597" timestamp="8539512" timestamp2="8540333">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="4909" _type="SelectTextCommand" caretOffset="416" date="Tue Dec 05 17:32:36 EST 2023" end="416" start="402" starttimestamp="1701807005597" timestamp="8551298" />
  <Command __id="4910" _type="SelectTextCommand" caretOffset="416" date="Tue Dec 05 17:32:36 EST 2023" end="416" start="402" starttimestamp="1701807005597" timestamp="8551298" />
  <DocumentChange __id="4911" _type="Replace" date="Tue Dec 05 17:32:39 EST 2023" docASTNodeCount="172" docActiveCodeLength="1026" docExpressionCount="127" docLength="1026" endLine="16" insertionLength="1" int_docASTNodeCount="170" int_docActiveCodeLength="1025" int_docExpressionCount="126" int_docLength="1025" length="14" offset="636" startLine="16" starttimestamp="1701807005597" timestamp="8553591">
    <deletedText><![CDATA[expr.getHead()]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="4912" _type="InsertStringCommand" date="Tue Dec 05 17:32:39 EST 2023" starttimestamp="1701807005597" timestamp="8553594" timestamp2="8553594">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4913" _type="InsertStringCommand" date="Tue Dec 05 17:32:39 EST 2023" starttimestamp="1701807005597" timestamp="8553594" timestamp2="8553594">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4915" _type="InsertStringCommand" date="Tue Dec 05 17:32:39 EST 2023" starttimestamp="1701807005597" timestamp="8553663" timestamp2="8553663">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4916" _type="InsertStringCommand" date="Tue Dec 05 17:32:39 EST 2023" starttimestamp="1701807005597" timestamp="8553663" timestamp2="8553663">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4918" _type="InsertStringCommand" date="Tue Dec 05 17:32:39 EST 2023" starttimestamp="1701807005597" timestamp="8553736" timestamp2="8553736">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4919" _type="InsertStringCommand" date="Tue Dec 05 17:32:39 EST 2023" starttimestamp="1701807005597" timestamp="8553736" timestamp2="8553736">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4921" _type="InsertStringCommand" date="Tue Dec 05 17:32:39 EST 2023" starttimestamp="1701807005597" timestamp="8553820" timestamp2="8553820">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4922" _type="InsertStringCommand" date="Tue Dec 05 17:32:39 EST 2023" starttimestamp="1701807005597" timestamp="8553820" timestamp2="8553820">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4923" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 17:32:39 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="8554397" />
  <Command __id="4924" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 17:32:39 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="8554397" />
  <Command __id="4925" _type="MoveCaretCommand" caretOffset="406" date="Tue Dec 05 17:32:41 EST 2023" docOffset="640" starttimestamp="1701807005597" timestamp="8555425" />
  <Command __id="4926" _type="MoveCaretCommand" caretOffset="406" date="Tue Dec 05 17:32:41 EST 2023" docOffset="640" starttimestamp="1701807005597" timestamp="8555425" />
  <Command __id="4930" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:32:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8561202" type="Run" />
  <Command __id="4931" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:32:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8561202" type="Run" />
  <Command __id="4932" _type="PasteCommand" date="Tue Dec 05 17:32:47 EST 2023" starttimestamp="1701807005597" timestamp="8561763" />
  <Command __id="4933" _type="ConsoleOutput" date="Tue Dec 05 17:32:47 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8562313" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:16)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:24)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4934" _type="ConsoleInput" date="Tue Dec 05 17:32:50 EST 2023" starttimestamp="1701807005597" timestamp="8564584" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="4935" _type="ExceptionCommand" date="Tue Dec 05 17:32:50 EST 2023" starttimestamp="1701807005597" timestamp="8564589" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4936" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:32:50 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8564593" type="Debug" />
  <Command __id="4937" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:32:50 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8564593" type="Run" />
  <Command __id="4938" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:32:50 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8564593" type="Debug" />
  <Command __id="4939" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:32:50 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8564593" type="Run" />
  <Command __id="4940" _type="MoveCaretCommand" caretOffset="272" date="Tue Dec 05 17:32:53 EST 2023" docOffset="506" starttimestamp="1701807005597" timestamp="8568382" />
  <Command __id="4941" _type="MoveCaretCommand" caretOffset="272" date="Tue Dec 05 17:32:53 EST 2023" docOffset="506" starttimestamp="1701807005597" timestamp="8568382" />
  <Command __id="4942" _type="MoveCaretCommand" caretOffset="403" date="Tue Dec 05 17:32:55 EST 2023" docOffset="637" starttimestamp="1701807005597" timestamp="8569599" />
  <Command __id="4943" _type="MoveCaretCommand" caretOffset="403" date="Tue Dec 05 17:32:55 EST 2023" docOffset="637" starttimestamp="1701807005597" timestamp="8569599" />
  <Command __id="4944" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:33:01 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="8575808" />
  <Command __id="4945" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:33:01 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="8575808" />
  <Command __id="4946" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:01 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8575936" />
  <Command __id="4947" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:01 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8575936" />
  <Command __id="4948" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:33:04 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="8579370" />
  <Command __id="4949" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:33:04 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="8579370" />
  <Command __id="4950" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:05 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8579504" />
  <Command __id="4951" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:05 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8579505" />
  <Command __id="4952" _type="MoveCaretCommand" caretOffset="405" date="Tue Dec 05 17:33:06 EST 2023" docOffset="639" starttimestamp="1701807005597" timestamp="8580665" />
  <Command __id="4953" _type="MoveCaretCommand" caretOffset="405" date="Tue Dec 05 17:33:06 EST 2023" docOffset="639" starttimestamp="1701807005597" timestamp="8580665" />
  <Command __id="4954" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:06 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8580821" />
  <Command __id="4955" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:06 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8580821" />
  <Command __id="4956" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:33:08 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="8582569" />
  <Command __id="4957" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:33:08 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="8582569" />
  <Command __id="4958" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:08 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8582703" />
  <Command __id="4959" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:08 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8582703" />
  <DocumentChange __id="4914" _type="Insert" date="Tue Dec 05 17:32:39 EST 2023" docASTNodeCount="172" docActiveCodeLength="1029" docExpressionCount="127" docLength="1029" length="3" offset="637" repeat="3" starttimestamp="1701807005597" timestamp="8553661" timestamp2="8553818">
    <text><![CDATA[emp]]></text>
  </DocumentChange>
  <Command __id="4960" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:33:10 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="8584549" />
  <Command __id="4961" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:33:10 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="8584550" />
  <Command __id="4962" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:10 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8584684" />
  <Command __id="4963" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:33:10 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="8584684" />
  <Command __id="4965" _type="MoveCaretCommand" caretOffset="470" date="Tue Dec 05 17:33:34 EST 2023" docOffset="728" starttimestamp="1701807005597" timestamp="8608821" />
  <Command __id="4966" _type="MoveCaretCommand" caretOffset="402" date="Tue Dec 05 17:34:52 EST 2023" docOffset="660" starttimestamp="1701807005597" timestamp="8686959" />
  <Command __id="4967" _type="MoveCaretCommand" caretOffset="402" date="Tue Dec 05 17:34:52 EST 2023" docOffset="660" starttimestamp="1701807005597" timestamp="8686959" />
  <Command __id="4968" _type="MoveCaretCommand" caretOffset="545" date="Tue Dec 05 17:34:53 EST 2023" docOffset="803" starttimestamp="1701807005597" timestamp="8688333" />
  <Command __id="4969" _type="MoveCaretCommand" caretOffset="545" date="Tue Dec 05 17:34:53 EST 2023" docOffset="803" starttimestamp="1701807005597" timestamp="8688333" />
  <Command __id="4970" _type="MoveCaretCommand" caretOffset="585" date="Tue Dec 05 17:34:54 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="8688792" />
  <Command __id="4971" _type="MoveCaretCommand" caretOffset="585" date="Tue Dec 05 17:34:54 EST 2023" docOffset="843" starttimestamp="1701807005597" timestamp="8688792" />
  <Command __id="4972" _type="MoveCaretCommand" caretOffset="288" date="Tue Dec 05 17:34:56 EST 2023" docOffset="546" starttimestamp="1701807005597" timestamp="8691252" />
  <Command __id="4973" _type="MoveCaretCommand" caretOffset="288" date="Tue Dec 05 17:34:56 EST 2023" docOffset="546" starttimestamp="1701807005597" timestamp="8691253" />
  <Command __id="4974" _type="SelectTextCommand" caretOffset="291" date="Tue Dec 05 17:34:56 EST 2023" end="291" start="281" starttimestamp="1701807005597" timestamp="8691402" />
  <Command __id="4975" _type="SelectTextCommand" caretOffset="291" date="Tue Dec 05 17:34:56 EST 2023" end="291" start="281" starttimestamp="1701807005597" timestamp="8691402" />
  <Command __id="4964" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:33:34 EST 2023" docASTNodeCount="229" docActiveCodeLength="1312" docExpressionCount="156" docLength="1312" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8608756">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		IdentifierAtom ids[] = {};		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, expr.getTail());		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, expr.getTail());	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="4976" _type="MoveCaretCommand" caretOffset="336" date="Tue Dec 05 17:35:03 EST 2023" docOffset="594" starttimestamp="1701807005597" timestamp="8698370" />
  <Command __id="4977" _type="MoveCaretCommand" caretOffset="336" date="Tue Dec 05 17:35:03 EST 2023" docOffset="594" starttimestamp="1701807005597" timestamp="8698370" />
  <DocumentChange __id="4978" _type="Insert" date="Tue Dec 05 17:35:06 EST 2023" docASTNodeCount="229" docActiveCodeLength="1326" docExpressionCount="156" docLength="1326" length="14" offset="594" repeat="12" starttimestamp="1701807005597" timestamp="8701146" timestamp2="8705376">
    <text><![CDATA[
		Sexpression]]></text>
  </DocumentChange>
  <Command __id="4979" _type="InsertStringCommand" date="Tue Dec 05 17:35:06 EST 2023" starttimestamp="1701807005597" timestamp="8701149" timestamp2="8701149">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4980" _type="InsertStringCommand" date="Tue Dec 05 17:35:06 EST 2023" starttimestamp="1701807005597" timestamp="8701149" timestamp2="8701149">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4982" _type="InsertStringCommand" date="Tue Dec 05 17:35:07 EST 2023" starttimestamp="1701807005597" timestamp="8701934" timestamp2="8701934">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4983" _type="InsertStringCommand" date="Tue Dec 05 17:35:07 EST 2023" starttimestamp="1701807005597" timestamp="8701934" timestamp2="8701934">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="4985" _type="InsertStringCommand" date="Tue Dec 05 17:35:07 EST 2023" starttimestamp="1701807005597" timestamp="8702242" timestamp2="8702242">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4986" _type="InsertStringCommand" date="Tue Dec 05 17:35:07 EST 2023" starttimestamp="1701807005597" timestamp="8702242" timestamp2="8702242">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4988" _type="InsertStringCommand" date="Tue Dec 05 17:35:08 EST 2023" starttimestamp="1701807005597" timestamp="8702606" timestamp2="8702606">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4989" _type="InsertStringCommand" date="Tue Dec 05 17:35:08 EST 2023" starttimestamp="1701807005597" timestamp="8702606" timestamp2="8702606">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="4991" _type="InsertStringCommand" date="Tue Dec 05 17:35:09 EST 2023" starttimestamp="1701807005597" timestamp="8704386" timestamp2="8704386">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4992" _type="InsertStringCommand" date="Tue Dec 05 17:35:09 EST 2023" starttimestamp="1701807005597" timestamp="8704386" timestamp2="8704386">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4994" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8704580" timestamp2="8704580">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4995" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8704580" timestamp2="8704580">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4997" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8704707" timestamp2="8704707">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4998" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8704707" timestamp2="8704707">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5000" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8704856" timestamp2="8704856">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5001" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8704856" timestamp2="8704856">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5003" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8705073" timestamp2="8705073">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5004" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8705073" timestamp2="8705073">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5006" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8705229" timestamp2="8705229">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5007" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8705229" timestamp2="8705229">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5009" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8705309" timestamp2="8705309">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5010" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8705310" timestamp2="8705310">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5012" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8705377" timestamp2="8705377">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5013" _type="InsertStringCommand" date="Tue Dec 05 17:35:10 EST 2023" starttimestamp="1701807005597" timestamp="8705377" timestamp2="8705377">
    <data><![CDATA[n]]></data>
  </Command>
  <DocumentChange __id="5014" _type="Delete" date="Tue Dec 05 17:35:11 EST 2023" docASTNodeCount="196" docActiveCodeLength="1316" docExpressionCount="129" docLength="1316" endLine="20" length="10" offset="598" repeat="10" startLine="20" starttimestamp="1701807005597" timestamp="8705826" timestamp2="8706911">
    <text><![CDATA[expression]]></text>
  </DocumentChange>
  <Command __id="5015" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8705828" />
  <Command __id="5016" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8705828" />
  <Command __id="5018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8705939" />
  <Command __id="5019" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8705939" />
  <Command __id="5021" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8706045" />
  <Command __id="5022" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8706045" />
  <Command __id="5024" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8706172" />
  <Command __id="5025" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8706172" />
  <Command __id="5027" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8706297" />
  <Command __id="5028" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:11 EST 2023" starttimestamp="1701807005597" timestamp="8706297" />
  <Command __id="5030" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706413" />
  <Command __id="5031" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706413" />
  <Command __id="5033" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706532" />
  <Command __id="5034" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706532" />
  <Command __id="5036" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706658" />
  <Command __id="5037" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706658" />
  <Command __id="5039" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706787" />
  <Command __id="5040" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706788" />
  <Command __id="5042" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706912" />
  <Command __id="5043" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8706913" />
  <Command __id="5045" _type="InsertStringCommand" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8707093" timestamp2="8707093">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5046" _type="InsertStringCommand" date="Tue Dec 05 17:35:12 EST 2023" starttimestamp="1701807005597" timestamp="8707094" timestamp2="8707094">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="5048" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8707664" timestamp2="8707664">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5049" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8707664" timestamp2="8707664">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5051" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8708128" timestamp2="8708128">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5052" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8708128" timestamp2="8708128">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5054" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8708220" timestamp2="8708220">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5055" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8708220" timestamp2="8708220">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5057" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8708270" timestamp2="8708270">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5058" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8708270" timestamp2="8708270">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5060" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8708384" timestamp2="8708384">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5061" _type="InsertStringCommand" date="Tue Dec 05 17:35:13 EST 2023" starttimestamp="1701807005597" timestamp="8708384" timestamp2="8708384">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5063" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708566" timestamp2="8708566">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5064" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708566" timestamp2="8708566">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5066" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708672" timestamp2="8708672">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5067" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708672" timestamp2="8708672">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5069" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708741" timestamp2="8708741">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5070" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708742" timestamp2="8708742">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5072" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708783" timestamp2="8708783">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5073" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708783" timestamp2="8708783">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5075" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708875" timestamp2="8708875">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5076" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708875" timestamp2="8708875">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5078" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708999" timestamp2="8708999">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="5079" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8708999" timestamp2="8708999">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="5081" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8709069" timestamp2="8709069">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5082" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8709069" timestamp2="8709069">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5084" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8709209" timestamp2="8709209">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5085" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8709209" timestamp2="8709209">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5087" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8709312" timestamp2="8709312">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="5088" _type="InsertStringCommand" date="Tue Dec 05 17:35:14 EST 2023" starttimestamp="1701807005597" timestamp="8709312" timestamp2="8709312">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="5090" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709436" timestamp2="8709436">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5091" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709436" timestamp2="8709436">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5093" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709501" timestamp2="8709501">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="5094" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709501" timestamp2="8709501">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="5096" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709515" timestamp2="8709515">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5097" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709515" timestamp2="8709515">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="5099" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709589" timestamp2="8709589">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5100" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709589" timestamp2="8709589">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5102" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709956" />
  <Command __id="5103" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8709956" />
  <Command __id="5105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8710041" />
  <Command __id="5106" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8710041" />
  <Command __id="5108" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8710300" timestamp2="8710300">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5109" _type="InsertStringCommand" date="Tue Dec 05 17:35:15 EST 2023" starttimestamp="1701807005597" timestamp="8710300" timestamp2="8710300">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5111" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8710498" timestamp2="8710498">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5112" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8710498" timestamp2="8710498">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5114" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8710747" timestamp2="8710747">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5115" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8710747" timestamp2="8710747">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5117" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8710861" timestamp2="8710861">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5118" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8710862" timestamp2="8710862">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5120" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8710956" timestamp2="8710956">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5121" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8710956" timestamp2="8710956">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5123" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8711075" timestamp2="8711075">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5124" _type="InsertStringCommand" date="Tue Dec 05 17:35:16 EST 2023" starttimestamp="1701807005597" timestamp="8711075" timestamp2="8711075">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5125" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:35:16 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="8711079" />
  <Command __id="5132" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:35:18 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="8713066" />
  <Command __id="5134" _type="InsertStringCommand" date="Tue Dec 05 17:35:18 EST 2023" starttimestamp="1701807005597" timestamp="8713072" timestamp2="8713072">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5135" _type="InsertStringCommand" date="Tue Dec 05 17:35:18 EST 2023" starttimestamp="1701807005597" timestamp="8713072" timestamp2="8713072">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5137" _type="InsertStringCommand" date="Tue Dec 05 17:35:18 EST 2023" starttimestamp="1701807005597" timestamp="8713231" timestamp2="8713231">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5138" _type="InsertStringCommand" date="Tue Dec 05 17:35:18 EST 2023" starttimestamp="1701807005597" timestamp="8713231" timestamp2="8713231">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5139" _type="MoveCaretCommand" caretOffset="353" date="Tue Dec 05 17:35:20 EST 2023" docOffset="611" starttimestamp="1701807005597" timestamp="8714741" />
  <Command __id="5140" _type="MoveCaretCommand" caretOffset="353" date="Tue Dec 05 17:35:20 EST 2023" docOffset="611" starttimestamp="1701807005597" timestamp="8714741" />
  <Command __id="5141" _type="SelectTextCommand" caretOffset="355" date="Tue Dec 05 17:35:20 EST 2023" end="355" start="351" starttimestamp="1701807005597" timestamp="8714867" />
  <Command __id="5142" _type="SelectTextCommand" caretOffset="355" date="Tue Dec 05 17:35:20 EST 2023" end="355" start="351" starttimestamp="1701807005597" timestamp="8714867" />
  <Command __id="5143" _type="CopyCommand" date="Tue Dec 05 17:35:20 EST 2023" starttimestamp="1701807005597" timestamp="8714957" />
  <Command __id="5144" _type="SelectTextCommand" caretOffset="617" date="Tue Dec 05 17:35:22 EST 2023" end="617" start="603" starttimestamp="1701807005597" timestamp="8717383" />
  <Command __id="5145" _type="SelectTextCommand" caretOffset="617" date="Tue Dec 05 17:35:22 EST 2023" end="617" start="603" starttimestamp="1701807005597" timestamp="8717384" />
  <Command __id="5147" _type="PasteCommand" date="Tue Dec 05 17:35:23 EST 2023" starttimestamp="1701807005597" timestamp="8717767" />
  <Command __id="5163" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:35:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8725548" type="Run" />
  <Command __id="5164" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:35:31 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8725549" type="Run" />
  <Command __id="5165" _type="ShellCommand" date="Tue Dec 05 17:35:32 EST 2023" starttimestamp="1701807005597" timestamp="8727011" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5166" _type="ShellCommand" date="Tue Dec 05 17:35:33 EST 2023" starttimestamp="1701807005597" timestamp="8727680" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5167" _type="PasteCommand" date="Tue Dec 05 17:35:33 EST 2023" starttimestamp="1701807005597" timestamp="8727943" />
  <Command __id="5168" _type="ConsoleOutput" date="Tue Dec 05 17:35:33 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8728216" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="5196" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:36:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8768629" type="Run" />
  <Command __id="5197" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:36:14 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8768629" type="Run" />
  <Command __id="5198" _type="PasteCommand" date="Tue Dec 05 17:36:14 EST 2023" starttimestamp="1701807005597" timestamp="8768973" />
  <Command __id="5199" _type="ConsoleOutput" date="Tue Dec 05 17:36:14 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8769193" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <DocumentChange __id="5044" _type="Insert" date="Tue Dec 05 17:35:12 EST 2023" docASTNodeCount="233" docActiveCodeLength="1335" docExpressionCount="159" docLength="1335" length="19" offset="598" repeat="19" starttimestamp="1701807005597" timestamp="8707092" timestamp2="8709587">
    <text><![CDATA[Expression body =- ]]></text>
  </DocumentChange>
  <DocumentChange __id="5101" _type="Delete" date="Tue Dec 05 17:35:15 EST 2023" docASTNodeCount="232" docActiveCodeLength="1333" docExpressionCount="158" docLength="1333" endLine="20" length="2" offset="615" repeat="2" startLine="20" starttimestamp="1701807005597" timestamp="8709954" timestamp2="8710040">
    <text><![CDATA[- ]]></text>
  </DocumentChange>
  <DocumentChange __id="5107" _type="Insert" date="Tue Dec 05 17:35:15 EST 2023" docASTNodeCount="237" docActiveCodeLength="1340" docExpressionCount="161" docLength="1340" length="7" offset="615" repeat="7" starttimestamp="1701807005597" timestamp="8710298" timestamp2="8711874">
    <text><![CDATA[ expr.G]]></text>
  </DocumentChange>
  <DocumentChange __id="5127" _type="Delete" date="Tue Dec 05 17:35:17 EST 2023" docASTNodeCount="234" docActiveCodeLength="1339" docExpressionCount="160" docLength="1339" endLine="20" length="1" offset="621" startLine="20" starttimestamp="1701807005597" timestamp="8712242">
    <text><![CDATA[G]]></text>
  </DocumentChange>
  <DocumentChange __id="5128" _type="Insert" date="Tue Dec 05 17:35:17 EST 2023" docASTNodeCount="237" docActiveCodeLength="1343" docExpressionCount="161" docLength="1343" length="4" offset="621" repeat="4" starttimestamp="1701807005597" timestamp="8712316" timestamp2="8712752">
    <text><![CDATA[getT]]></text>
  </DocumentChange>
  <DocumentChange __id="5133" _type="Replace" date="Tue Dec 05 17:35:18 EST 2023" docASTNodeCount="237" docActiveCodeLength="1348" docExpressionCount="161" docLength="1348" endLine="20" insertionLength="9" int_docASTNodeCount="234" int_docActiveCodeLength="1339" int_docExpressionCount="160" int_docLength="1339" length="4" offset="621" startLine="20" starttimestamp="1701807005597" timestamp="8713067">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5136" _type="Insert" date="Tue Dec 05 17:35:18 EST 2023" docASTNodeCount="237" docActiveCodeLength="1349" docExpressionCount="161" docLength="1349" length="1" offset="630" starttimestamp="1701807005597" timestamp="8713228">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="5146" _type="Replace" date="Tue Dec 05 17:35:23 EST 2023" docASTNodeCount="235" docActiveCodeLength="1339" docExpressionCount="159" docLength="1339" endLine="26" insertionLength="4" int_docASTNodeCount="235" int_docActiveCodeLength="1335" int_docExpressionCount="159" int_docLength="1335" length="14" offset="861" startLine="26" starttimestamp="1701807005597" timestamp="8717763">
    <deletedText><![CDATA[expr.getTail()]]></deletedText>
    <insertedText><![CDATA[body]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5150" _type="Replace" date="Tue Dec 05 17:35:25 EST 2023" docASTNodeCount="233" docActiveCodeLength="1329" docExpressionCount="157" docLength="1329" endLine="23" insertionLength="4" int_docASTNodeCount="233" int_docActiveCodeLength="1325" int_docExpressionCount="157" int_docLength="1325" length="14" offset="744" startLine="23" starttimestamp="1701807005597" timestamp="8719468">
    <deletedText><![CDATA[expr.getTail()]]></deletedText>
    <insertedText><![CDATA[body]]></insertedText>
  </DocumentChange>
  <Command __id="5200" _type="ConsoleInput" date="Tue Dec 05 17:36:17 EST 2023" starttimestamp="1701807005597" timestamp="8771971" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="5201" _type="ConsoleOutput" date="Tue Dec 05 17:36:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8771976" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Exception in thread "main" java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5202" _type="ConsoleOutput" date="Tue Dec 05 17:36:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="8771979" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.ClassCastException: class index.IdentifierA"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvalua"), Diff(EQUAL,"to"), Diff(DELETE,"m"), Diff(INSERT,"r"), Diff(EQUAL,"Impl"), Diff(DELETE," cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluato"), Diff(INSERT,".eval(BasicExpressionEvaluatorImpl.java:25)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterControlle"), Diff(EQUAL,"r."), Diff(DELETE,"f"), Diff(INSERT,"r"), Diff(EQUAL,"un"), Diff(DELETE,"ction.Lambda are in unnamed module of loader 'app'"), Diff(INSERT,"(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5203" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:36:17 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="8771980" type="Debug" />
  <Command __id="5204" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:36:17 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8771980" type="Run" />
  <Command __id="5205" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:36:17 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8771980" type="Run" />
  <Command __id="5207" _type="MoveCaretCommand" caretOffset="519" date="Tue Dec 05 17:36:29 EST 2023" docOffset="732" starttimestamp="1701807005597" timestamp="8784023" />
  <Command __id="5208" _type="MoveCaretCommand" caretOffset="493" date="Tue Dec 05 17:36:31 EST 2023" docOffset="706" starttimestamp="1701807005597" timestamp="8785941" />
  <Command __id="5209" _type="SelectTextCommand" caretOffset="500" date="Tue Dec 05 17:36:31 EST 2023" end="500" start="490" starttimestamp="1701807005597" timestamp="8786105" />
  <Command __id="5210" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 17:36:32 EST 2023" docOffset="715" starttimestamp="1701807005597" timestamp="8786606" />
  <Command __id="5211" _type="SelectTextCommand" caretOffset="505" date="Tue Dec 05 17:36:32 EST 2023" end="505" start="501" starttimestamp="1701807005597" timestamp="8786767" />
  <Command __id="5206" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:36:29 EST 2023" docASTNodeCount="128" docActiveCodeLength="738" docExpressionCount="94" docLength="738" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8783950">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {"), Diff(DELETE,"        Lambda lambda = (Lambda) expr.getHead().eval(environment);"), Diff(EQUAL,"        SExpression expression = ExpressionFactory.newInstance("), Diff(DELETE,"lambda"), Diff(INSERT,"expr.getHead().eval(environment)"), Diff(EQUAL,", expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;


public class FuncallEvaluator implements Evaluator{

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
    }
    public static SExpression evalHelper(SExpression expr, Environment environment) {
        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());
        return expression.eval(environment);
	}
}
]]></snapshot>
  </Command>
  <Command __id="5212" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 17:36:38 EST 2023" docOffset="710" starttimestamp="1701807005597" timestamp="8792808" />
  <Command __id="5213" _type="SelectTextCommand" caretOffset="500" date="Tue Dec 05 17:36:38 EST 2023" end="500" start="490" starttimestamp="1701807005597" timestamp="8792967" />
  <Command __id="5215" _type="SelectTextCommand" caretOffset="785" date="Tue Dec 05 17:37:11 EST 2023" end="785" start="672" starttimestamp="1701807005597" timestamp="8825985" />
  <Command __id="5214" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:37:11 EST 2023" docASTNodeCount="172" docActiveCodeLength="1029" docExpressionCount="127" docLength="1029" projectName="Assignment5" starttimestamp="1701807005597" timestamp="8825911">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			"), Diff(INSERT,"SExpression temp = expr.getHead();			"), Diff(EQUAL,"Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)"), Diff(DELETE,"expr.getHead()"), Diff(INSERT,"temp"), Diff(EQUAL,".eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			SExpression temp = expr.getHead();
			Environment childEnvironment = environment.newChild();
			Lambda lambda = (Lambda)temp.eval(environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="5216" _type="MoveCaretCommand" caretOffset="770" date="Tue Dec 05 17:38:03 EST 2023" docOffset="1004" starttimestamp="1701807005597" timestamp="8877634" />
  <Command __id="5217" _type="MoveCaretCommand" caretOffset="770" date="Tue Dec 05 17:38:03 EST 2023" docOffset="1004" starttimestamp="1701807005597" timestamp="8877634" />
  <DocumentChange __id="5218" _type="Insert" date="Tue Dec 05 17:38:04 EST 2023" docASTNodeCount="174" docActiveCodeLength="1033" docExpressionCount="129" docLength="1033" length="4" offset="1004" repeat="4" starttimestamp="1701807005597" timestamp="8878950" timestamp2="8880114">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <Command __id="5219" _type="InsertStringCommand" date="Tue Dec 05 17:38:04 EST 2023" starttimestamp="1701807005597" timestamp="8878952" timestamp2="8878952">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5220" _type="InsertStringCommand" date="Tue Dec 05 17:38:04 EST 2023" starttimestamp="1701807005597" timestamp="8878952" timestamp2="8878952">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5221" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:38:04 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="8878965" />
  <Command __id="5225" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:38:06 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="8880470" />
  <DocumentChange __id="5226" _type="Replace" date="Tue Dec 05 17:38:06 EST 2023" docASTNodeCount="174" docActiveCodeLength="1039" docExpressionCount="129" docLength="1039" endLine="24" insertionLength="9" int_docASTNodeCount="173" int_docActiveCodeLength="1030" int_docExpressionCount="128" int_docLength="1030" length="3" offset="1005" startLine="24" starttimestamp="1701807005597" timestamp="8880472">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="5227" _type="InsertStringCommand" date="Tue Dec 05 17:38:06 EST 2023" starttimestamp="1701807005597" timestamp="8880474" timestamp2="8880474">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5228" _type="InsertStringCommand" date="Tue Dec 05 17:38:06 EST 2023" starttimestamp="1701807005597" timestamp="8880474" timestamp2="8880474">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5229" _type="Insert" date="Tue Dec 05 17:38:06 EST 2023" docASTNodeCount="176" docActiveCodeLength="1041" docExpressionCount="131" docLength="1041" length="2" offset="1014" repeat="2" starttimestamp="1701807005597" timestamp="8880789" timestamp2="8881151">
    <text><![CDATA[.g]]></text>
  </DocumentChange>
  <DocumentChange __id="5234" _type="Delete" date="Tue Dec 05 17:38:08 EST 2023" docASTNodeCount="175" docActiveCodeLength="1040" docExpressionCount="130" docLength="1040" endLine="24" length="1" offset="1015" startLine="24" starttimestamp="1701807005597" timestamp="8883148">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <Command __id="5230" _type="InsertStringCommand" date="Tue Dec 05 17:38:06 EST 2023" starttimestamp="1701807005597" timestamp="8880792" timestamp2="8880792">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5231" _type="InsertStringCommand" date="Tue Dec 05 17:38:06 EST 2023" starttimestamp="1701807005597" timestamp="8880792" timestamp2="8880792">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5232" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:38:06 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="8880796" />
  <Command __id="5236" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:38:12 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="8886559" />
  <Command __id="5237" _type="MoveCaretCommand" caretOffset="662" date="Tue Dec 05 17:38:12 EST 2023" docOffset="896" starttimestamp="1701807005597" timestamp="8886566" />
  <Command __id="5238" _type="MoveCaretCommand" caretOffset="662" date="Tue Dec 05 17:38:12 EST 2023" docOffset="896" starttimestamp="1701807005597" timestamp="8886566" />
  <DocumentChange __id="5235" _type="Delete" date="Tue Dec 05 17:38:10 EST 2023" docASTNodeCount="174" docActiveCodeLength="1039" docExpressionCount="129" docLength="1039" endLine="24" length="1" offset="1014" startLine="24" starttimestamp="1701807005597" timestamp="8885285">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="5239" _type="MoveCaretCommand" caretOffset="780" date="Tue Dec 05 17:38:18 EST 2023" docOffset="1014" starttimestamp="1701807005597" timestamp="8892714" />
  <Command __id="5240" _type="MoveCaretCommand" caretOffset="780" date="Tue Dec 05 17:38:18 EST 2023" docOffset="1014" starttimestamp="1701807005597" timestamp="8892714" />
  <Command __id="5242" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8900861" />
  <Command __id="5243" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8900861" />
  <Command __id="5245" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8900982" />
  <Command __id="5246" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8900982" />
  <Command __id="5248" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8901111" />
  <Command __id="5249" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8901111" />
  <Command __id="5251" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8901241" />
  <Command __id="5252" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8901241" />
  <Command __id="5254" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8901359" />
  <Command __id="5255" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:26 EST 2023" starttimestamp="1701807005597" timestamp="8901359" />
  <Command __id="5257" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8901498" />
  <Command __id="5258" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8901498" />
  <Command __id="5260" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8901607" />
  <Command __id="5261" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8901607" />
  <Command __id="5263" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8901726" />
  <Command __id="5264" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8901726" />
  <Command __id="5266" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8901858" />
  <Command __id="5267" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8901858" />
  <Command __id="5269" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8902198" />
  <Command __id="5270" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:38:27 EST 2023" starttimestamp="1701807005597" timestamp="8902198" />
  <Command __id="5271" _type="MoveCaretCommand" caretOffset="764" date="Tue Dec 05 17:38:28 EST 2023" docOffset="998" starttimestamp="1701807005597" timestamp="8902976" />
  <Command __id="5272" _type="MoveCaretCommand" caretOffset="764" date="Tue Dec 05 17:38:28 EST 2023" docOffset="998" starttimestamp="1701807005597" timestamp="8902976" />
  <Command __id="5273" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 17:38:29 EST 2023" starttimestamp="1701807005597" timestamp="8904033" />
  <Command __id="5274" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:38:29 EST 2023" starttimestamp="1701807005597" timestamp="8904132" />
  <Command __id="5275" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:38:29 EST 2023" starttimestamp="1701807005597" timestamp="8904140" />
  <Command __id="5276" _type="MoveCaretCommand" caretOffset="678" date="Tue Dec 05 17:39:34 EST 2023" docOffset="912" starttimestamp="1701807005597" timestamp="8968672" />
  <Command __id="5277" _type="MoveCaretCommand" caretOffset="678" date="Tue Dec 05 17:39:34 EST 2023" docOffset="912" starttimestamp="1701807005597" timestamp="8968672" />
  <Command __id="5278" _type="MoveCaretCommand" caretOffset="180" date="Tue Dec 05 17:39:52 EST 2023" docOffset="414" starttimestamp="1701807005597" timestamp="8986971" />
  <Command __id="5279" _type="MoveCaretCommand" caretOffset="180" date="Tue Dec 05 17:39:52 EST 2023" docOffset="414" starttimestamp="1701807005597" timestamp="8986971" />
  <Command __id="5280" _type="SelectTextCommand" caretOffset="182" date="Tue Dec 05 17:39:52 EST 2023" end="182" start="178" starttimestamp="1701807005597" timestamp="8987074" />
  <Command __id="5281" _type="SelectTextCommand" caretOffset="182" date="Tue Dec 05 17:39:52 EST 2023" end="182" start="178" starttimestamp="1701807005597" timestamp="8987074" />
  <Command __id="5282" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:40:08 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="9002462" />
  <Command __id="5283" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:40:08 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="9002462" />
  <Command __id="5284" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:40:08 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="9002610" />
  <Command __id="5285" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:40:08 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="9002610" />
  <Command __id="5286" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:40:19 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="9013595" />
  <Command __id="5287" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:40:19 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="9013595" />
  <Command __id="5288" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:40:19 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="9013729" />
  <Command __id="5289" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:40:19 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="9013730" />
  <Command __id="5290" _type="MoveCaretCommand" caretOffset="408" date="Tue Dec 05 17:40:20 EST 2023" docOffset="642" starttimestamp="1701807005597" timestamp="9014538" />
  <Command __id="5291" _type="MoveCaretCommand" caretOffset="408" date="Tue Dec 05 17:40:20 EST 2023" docOffset="642" starttimestamp="1701807005597" timestamp="9014538" />
  <Command __id="5292" _type="MoveCaretCommand" caretOffset="266" date="Tue Dec 05 17:40:21 EST 2023" docOffset="500" starttimestamp="1701807005597" timestamp="9016273" />
  <Command __id="5293" _type="MoveCaretCommand" caretOffset="266" date="Tue Dec 05 17:40:21 EST 2023" docOffset="500" starttimestamp="1701807005597" timestamp="9016273" />
  <Command __id="5294" _type="MoveCaretCommand" caretOffset="266" date="Tue Dec 05 17:40:22 EST 2023" docOffset="500" starttimestamp="1701807005597" timestamp="9017018" />
  <Command __id="5295" _type="MoveCaretCommand" caretOffset="266" date="Tue Dec 05 17:40:22 EST 2023" docOffset="500" starttimestamp="1701807005597" timestamp="9017018" />
  <Command __id="5296" _type="SelectTextCommand" caretOffset="275" date="Tue Dec 05 17:40:22 EST 2023" end="275" start="261" starttimestamp="1701807005597" timestamp="9017159" />
  <Command __id="5297" _type="SelectTextCommand" caretOffset="275" date="Tue Dec 05 17:40:22 EST 2023" end="275" start="261" starttimestamp="1701807005597" timestamp="9017159" />
  <Command __id="5298" _type="MoveCaretCommand" caretOffset="409" date="Tue Dec 05 17:40:23 EST 2023" docOffset="643" starttimestamp="1701807005597" timestamp="9017846" />
  <Command __id="5299" _type="MoveCaretCommand" caretOffset="409" date="Tue Dec 05 17:40:23 EST 2023" docOffset="643" starttimestamp="1701807005597" timestamp="9017847" />
  <Command __id="5300" _type="SelectTextCommand" caretOffset="424" date="Tue Dec 05 17:40:25 EST 2023" end="424" start="407" starttimestamp="1701807005597" timestamp="9019728" />
  <Command __id="5301" _type="SelectTextCommand" caretOffset="424" date="Tue Dec 05 17:40:25 EST 2023" end="424" start="407" starttimestamp="1701807005597" timestamp="9019728" />
  <Command __id="5302" _type="MoveCaretCommand" caretOffset="424" date="Tue Dec 05 17:40:25 EST 2023" docOffset="658" starttimestamp="1701807005597" timestamp="9020350" />
  <Command __id="5303" _type="MoveCaretCommand" caretOffset="424" date="Tue Dec 05 17:40:25 EST 2023" docOffset="658" starttimestamp="1701807005597" timestamp="9020350" />
  <Command __id="5304" _type="MoveCaretCommand" caretOffset="512" date="Tue Dec 05 17:40:28 EST 2023" docOffset="746" starttimestamp="1701807005597" timestamp="9023379" />
  <Command __id="5305" _type="MoveCaretCommand" caretOffset="512" date="Tue Dec 05 17:40:28 EST 2023" docOffset="746" starttimestamp="1701807005597" timestamp="9023380" />
  <Command __id="5306" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:40:29 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="9023980" />
  <Command __id="5307" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 17:40:29 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="9023980" />
  <Command __id="5308" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:40:29 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="9024134" />
  <Command __id="5309" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:40:29 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="9024134" />
  <Command __id="5310" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 17:40:31 EST 2023" docOffset="685" starttimestamp="1701807005597" timestamp="9026382" />
  <Command __id="5311" _type="MoveCaretCommand" caretOffset="451" date="Tue Dec 05 17:40:31 EST 2023" docOffset="685" starttimestamp="1701807005597" timestamp="9026382" />
  <Command __id="5312" _type="MoveCaretCommand" caretOffset="403" date="Tue Dec 05 17:40:32 EST 2023" docOffset="637" starttimestamp="1701807005597" timestamp="9026904" />
  <Command __id="5313" _type="MoveCaretCommand" caretOffset="403" date="Tue Dec 05 17:40:32 EST 2023" docOffset="637" starttimestamp="1701807005597" timestamp="9026904" />
  <Command __id="5314" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:40:32 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="9027055" />
  <Command __id="5315" _type="SelectTextCommand" caretOffset="406" date="Tue Dec 05 17:40:32 EST 2023" end="406" start="402" starttimestamp="1701807005597" timestamp="9027055" />
  <DocumentChange __id="5241" _type="Delete" date="Tue Dec 05 17:38:26 EST 2023" docASTNodeCount="172" docActiveCodeLength="1029" docExpressionCount="127" docLength="1029" endLine="24" length="10" offset="1004" repeat="10" startLine="24" starttimestamp="1701807005597" timestamp="8900858" timestamp2="8902194">
    <text><![CDATA[.getHead()]]></text>
  </DocumentChange>
  <Command __id="5316" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 17:40:33 EST 2023" docOffset="686" starttimestamp="1701807005597" timestamp="9028180" />
  <Command __id="5317" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 17:40:33 EST 2023" docOffset="686" starttimestamp="1701807005597" timestamp="9028180" />
  <Command __id="5319" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 17:40:53 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="9047517" />
  <Command __id="5320" _type="SelectTextCommand" caretOffset="376" date="Tue Dec 05 17:41:21 EST 2023" end="451" start="376" starttimestamp="1701807005597" timestamp="9076373" />
  <Command __id="5322" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:41:22 EST 2023" starttimestamp="1701807005597" timestamp="9076689" />
  <Command __id="5324" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:41:22 EST 2023" starttimestamp="1701807005597" timestamp="9077088" />
  <Command __id="5356" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:41:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9090251" type="Run" />
  <Command __id="5357" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:41:35 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9090252" type="Run" />
  <Command __id="5358" _type="PasteCommand" date="Tue Dec 05 17:41:37 EST 2023" starttimestamp="1701807005597" timestamp="9091558" />
  <Command __id="5359" _type="ConsoleOutput" date="Tue Dec 05 17:41:37 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9092045" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5318" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:40:52 EST 2023" docASTNodeCount="107" docActiveCodeLength="650" docExpressionCount="70" docLength="650" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9047401">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.scanner.tokens.Token;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class IdentifierAtomImpl extends IdentifierAtom"), Diff(DELETE," implements SExpression"), Diff(EQUAL,"{    public IdentifierAtomImpl(String string) {        super(string);    }        public IdentifierAtomImpl(Token token) {        super(token);     }    @Override    public SExpression eval(Environment var1){        Optional<SExpression> retVal = var1.lookup(this);        if(retVal.isPresent()) {            return retVal.get();        }        return this;    }}")]]></diff>
    <snapshot><![CDATA[package index;

import java.util.Optional;

import main.lisp.scanner.tokens.Token;
import main.lisp.evaluator.Environment;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class IdentifierAtomImpl extends IdentifierAtom{

    public IdentifierAtomImpl(String string) {
        super(string);
    }
    
    public IdentifierAtomImpl(Token token) {
        super(token);
     }

    @Override
    public SExpression eval(Environment var1){
        Optional<SExpression> retVal = var1.lookup(this);
        if(retVal.isPresent()) {
            return retVal.get();
        }
        return this;
    }
}
]]></snapshot>
  </Command>
  <DocumentChange __id="5321" _type="Delete" date="Tue Dec 05 17:41:22 EST 2023" docASTNodeCount="98" docActiveCodeLength="574" docExpressionCount="64" docLength="574" endLine="24" length="76" offset="544" repeat="2" startLine="21" starttimestamp="1701807005597" timestamp="9076684" timestamp2="9077084">
    <text><![CDATA[
        if(retVal.isPresent()) {
            return retVal.get();
        }]]></text>
  </DocumentChange>
  <DocumentChange __id="5327" _type="Replace" date="Tue Dec 05 17:41:24 EST 2023" docASTNodeCount="98" docActiveCodeLength="571" docExpressionCount="64" docLength="571" endLine="22" insertionLength="1" int_docASTNodeCount="97" int_docActiveCodeLength="570" int_docExpressionCount="63" int_docLength="570" length="4" offset="560" startLine="22" starttimestamp="1701807005597" timestamp="9079062">
    <deletedText><![CDATA[this]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5329" _type="Insert" date="Tue Dec 05 17:41:24 EST 2023" docASTNodeCount="98" docActiveCodeLength="574" docExpressionCount="64" docLength="574" length="3" offset="561" repeat="3" starttimestamp="1701807005597" timestamp="9079120" timestamp2="9079590">
    <text><![CDATA[etv]]></text>
  </DocumentChange>
  <DocumentChange __id="5335" _type="Delete" date="Tue Dec 05 17:41:25 EST 2023" docASTNodeCount="98" docActiveCodeLength="573" docExpressionCount="64" docLength="573" endLine="22" length="1" offset="563" startLine="22" starttimestamp="1701807005597" timestamp="9080119">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <DocumentChange __id="5337" _type="Insert" date="Tue Dec 05 17:41:25 EST 2023" docASTNodeCount="100" docActiveCodeLength="580" docExpressionCount="66" docLength="580" length="7" offset="563" repeat="7" starttimestamp="1701807005597" timestamp="9080230" timestamp2="9081377">
    <text><![CDATA[Val.get]]></text>
  </DocumentChange>
  <DocumentChange __id="5350" _type="Replace" date="Tue Dec 05 17:41:27 EST 2023" docASTNodeCount="100" docActiveCodeLength="582" docExpressionCount="66" docLength="582" endLine="22" insertionLength="5" int_docASTNodeCount="100" int_docActiveCodeLength="577" int_docExpressionCount="65" int_docLength="577" length="3" offset="567" startLine="22" starttimestamp="1701807005597" timestamp="9081446">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[get()]]></insertedText>
  </DocumentChange>
  <Command __id="5360" _type="ConsoleInput" date="Tue Dec 05 17:41:40 EST 2023" starttimestamp="1701807005597" timestamp="9094879" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="5361" _type="ConsoleOutput" date="Tue Dec 05 17:41:40 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9094884" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.util.NoSuchElementException: No value present
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Exception in thread "main" java.util.NoSuchElementException: No value present"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5362" _type="ConsoleOutput" date="Tue Dec 05 17:41:40 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9094888" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.util.Optional.get(Optional.java:148)
	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.util.NoSuchElementException: No value present"), Diff(INSERT,"	at java.base/java.util.Optional.get(Optional.java:148)¶	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5363" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:41:40 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9094890" type="Debug" />
  <Command __id="5364" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:41:40 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9094890" type="Run" />
  <Command __id="5365" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:41:40 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9094890" type="Run" />
  <Command __id="5367" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 17:42:02 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="9116651" />
  <Command __id="5368" _type="ShellCommand" date="Tue Dec 05 17:42:29 EST 2023" starttimestamp="1701807005597" timestamp="9144044" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5369" _type="ShellCommand" date="Tue Dec 05 17:42:38 EST 2023" starttimestamp="1701807005597" timestamp="9152502" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5370" _type="MoveCaretCommand" caretOffset="559" date="Tue Dec 05 17:42:38 EST 2023" docOffset="795" starttimestamp="1701807005597" timestamp="9152592" />
  <Command __id="5366" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:42:02 EST 2023" docASTNodeCount="197" docActiveCodeLength="1082" docExpressionCount="125" docLength="1150" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9116571">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import java.util.Optional;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.environment.AbstractEnvironment;
import main.lisp.evaluator.function.Function;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class EnvironmentImpl extends AbstractEnvironment{

	public EnvironmentImpl() {
		super();
	}

	public EnvironmentImpl(Environment parent) {
		super(parent);
	}

	@Override
	public void assign(IdentifierAtom arg0, SExpression arg1) {
		put(arg0, arg1);
	}

	@Override
	public void assignFun(IdentifierAtom arg0, Function arg1) {
		
	}

	@Override
	public Environment copy() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Optional<SExpression> lookup(IdentifierAtom arg0) {
		Optional<SExpression> retVal = get(arg0);
		return (retVal == null && getParent() != null) ? getParent().lookup(arg0) : retVal;
	}

	@Override
	public Optional<Function> lookupFun(IdentifierAtom arg0) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public Environment newChild() {
		return new EnvironmentImpl(this);
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="5371" _type="InsertStringCommand" date="Tue Dec 05 17:42:39 EST 2023" starttimestamp="1701807005597" timestamp="9153678" timestamp2="9153678">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5373" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Dec 05 17:42:42 EST 2023" starttimestamp="1701807005597" timestamp="9156865" />
  <Command __id="5374" _type="MoveCaretCommand" caretOffset="563" date="Tue Dec 05 17:42:43 EST 2023" docOffset="799" starttimestamp="1701807005597" timestamp="9157916" />
  <Command __id="5376" _type="UndoCommand" date="Tue Dec 05 17:42:43 EST 2023" starttimestamp="1701807005597" timestamp="9158248" />
  <Command __id="5377" _type="SelectTextCommand" caretOffset="683" date="Tue Dec 05 17:42:46 EST 2023" end="683" start="608" starttimestamp="1701807005597" timestamp="9160582" />
  <Command __id="5379" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:42:46 EST 2023" starttimestamp="1701807005597" timestamp="9160872" />
  <Command __id="5381" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:42:46 EST 2023" starttimestamp="1701807005597" timestamp="9161125" />
  <Command __id="5383" _type="InsertStringCommand" date="Tue Dec 05 17:42:47 EST 2023" starttimestamp="1701807005597" timestamp="9162075" timestamp2="9162075">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5385" _type="InsertStringCommand" date="Tue Dec 05 17:42:47 EST 2023" starttimestamp="1701807005597" timestamp="9162159" timestamp2="9162159">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5387" _type="InsertStringCommand" date="Tue Dec 05 17:42:47 EST 2023" starttimestamp="1701807005597" timestamp="9162337" timestamp2="9162337">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5389" _type="InsertStringCommand" date="Tue Dec 05 17:42:48 EST 2023" starttimestamp="1701807005597" timestamp="9162827" timestamp2="9162827">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="5391" _type="InsertStringCommand" date="Tue Dec 05 17:42:48 EST 2023" starttimestamp="1701807005597" timestamp="9163047" timestamp2="9163047">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5393" _type="InsertStringCommand" date="Tue Dec 05 17:42:48 EST 2023" starttimestamp="1701807005597" timestamp="9163161" timestamp2="9163161">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5395" _type="InsertStringCommand" date="Tue Dec 05 17:42:48 EST 2023" starttimestamp="1701807005597" timestamp="9163311" timestamp2="9163311">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5396" _type="MoveCaretCommand" caretOffset="629" date="Tue Dec 05 17:42:49 EST 2023" docOffset="865" starttimestamp="1701807005597" timestamp="9164350" />
  <Command __id="5400" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:42:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9170109" type="Run" />
  <Command __id="5401" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:42:55 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9170109" type="Run" />
  <Command __id="5402" _type="PasteCommand" date="Tue Dec 05 17:42:56 EST 2023" starttimestamp="1701807005597" timestamp="9170823" />
  <Command __id="5403" _type="ConsoleOutput" date="Tue Dec 05 17:42:56 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9171187" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.util.Optional.get(Optional.java:148)¶	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="5372" _type="Delete" date="Tue Dec 05 17:42:42 EST 2023" docASTNodeCount="186" docActiveCodeLength="1038" docExpressionCount="119" docLength="1106" endLine="39" length="44" offset="790" startLine="38" starttimestamp="1701807005597" timestamp="9156859">
    <text><![CDATA[		Optional<SExpression> retVal = get(arg0);
]]></text>
  </DocumentChange>
  <DocumentChange __id="5375" _type="Insert" date="Tue Dec 05 17:42:43 EST 2023" docASTNodeCount="197" docActiveCodeLength="1082" docExpressionCount="125" docLength="1150" length="44" offset="790" starttimestamp="1701807005597" timestamp="9158244">
    <text><![CDATA[		Optional<SExpression> retVal = get(arg0);
]]></text>
  </DocumentChange>
  <DocumentChange __id="5378" _type="Delete" date="Tue Dec 05 17:42:46 EST 2023" docASTNodeCount="181" docActiveCodeLength="1006" docExpressionCount="109" docLength="1074" endLine="39" length="76" offset="843" repeat="2" startLine="39" starttimestamp="1701807005597" timestamp="9160867" timestamp2="9161123">
    <text><![CDATA[(retVal == null && getParent() != null) ? getParent().lookup(arg0) : retVal;]]></text>
  </DocumentChange>
  <DocumentChange __id="5382" _type="Insert" date="Tue Dec 05 17:42:47 EST 2023" docASTNodeCount="182" docActiveCodeLength="1013" docExpressionCount="110" docLength="1081" length="7" offset="843" repeat="7" starttimestamp="1701807005597" timestamp="9162074" timestamp2="9163309">
    <text><![CDATA[retVal;]]></text>
  </DocumentChange>
  <Command __id="5404" _type="ConsoleInput" date="Tue Dec 05 17:42:59 EST 2023" starttimestamp="1701807005597" timestamp="9173545" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="5405" _type="ConsoleOutput" date="Tue Dec 05 17:42:59 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9173552" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.util.NoSuchElementException: No value present
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Exception in thread "main" java.util.NoSuchElementException: No value present"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5406" _type="ConsoleOutput" date="Tue Dec 05 17:42:59 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9173553" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.util.Optional.get(Optional.java:148)
	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.util.NoSuchElementException: No value present"), Diff(INSERT,"	at java.base/java.util.Optional.get(Optional.java:148)¶	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5407" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:42:59 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9173557" type="Debug" />
  <Command __id="5408" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:42:59 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9173557" type="Run" />
  <Command __id="5409" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:42:59 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9173557" type="Run" />
  <Command __id="5410" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:43:13 EST 2023" docASTNodeCount="100" docActiveCodeLength="582" docExpressionCount="66" docLength="582" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9187769">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.scanner.tokens.Token;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class IdentifierAtomImpl extends IdentifierAtom{    public IdentifierAtomImpl(String string) {        super(string);    }        public IdentifierAtomImpl(Token token) {        super(token);     }    @Override    public SExpression eval(Environment var1){        Optional<SExpression> retVal = var1.lookup(this);        "), Diff(DELETE,"if(retVal.isPresent()) {            return retVal.get();        }        return this"), Diff(INSERT,"return retVal.get()"), Diff(EQUAL,";    }}")]]></diff>
    <snapshot><![CDATA[package index;

import java.util.Optional;

import main.lisp.scanner.tokens.Token;
import main.lisp.evaluator.Environment;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class IdentifierAtomImpl extends IdentifierAtom{

    public IdentifierAtomImpl(String string) {
        super(string);
    }
    
    public IdentifierAtomImpl(Token token) {
        super(token);
     }

    @Override
    public SExpression eval(Environment var1){
        Optional<SExpression> retVal = var1.lookup(this);
        return retVal.get();
    }
}
]]></snapshot>
  </Command>
  <Command __id="5411" _type="SelectTextCommand" caretOffset="404" date="Tue Dec 05 17:43:13 EST 2023" end="404" start="376" starttimestamp="1701807005597" timestamp="9187841" />
  <Command __id="5414" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:44:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9256319" type="Run" />
  <Command __id="5415" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:44:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9256319" type="Run" />
  <Command __id="5416" _type="ShellCommand" date="Tue Dec 05 17:44:22 EST 2023" starttimestamp="1701807005597" timestamp="9256666" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5436" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:44:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9264905" type="Run" />
  <Command __id="5437" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:44:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9264905" type="Run" />
  <Command __id="5438" _type="LocalChecksRawCommand" date="Tue Dec 05 17:44:30 EST 2023" starttimestamp="1701807005597" timestamp="9264907">
    <CSVRow><![CDATA[164,Tue Dec 05 17:44:24 EST 2023,50,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,84,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5439" _type="LocalChecksRawCommand" date="Tue Dec 05 17:44:30 EST 2023" starttimestamp="1701807005597" timestamp="9264907">
    <CSVRow><![CDATA[164,Tue Dec 05 17:44:24 EST 2023,50,0,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,84,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="5440" _type="ConsoleInput" date="Tue Dec 05 17:44:33 EST 2023" starttimestamp="1701807005597" timestamp="9267998" type="Exception">
    <outputString><![CDATA[(setq A 20)
]]></outputString>
  </Command>
  <Command __id="5441" _type="ConsoleOutput" date="Tue Dec 05 17:44:33 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9268007" type="ConsoleOutput">
    <outputString><![CDATA[20
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,¶¶Test execution time (ms):0¶Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"20"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5442" _type="ConsoleInput" date="Tue Dec 05 17:44:36 EST 2023" starttimestamp="1701807005597" timestamp="9270599" type="Exception">
    <outputString><![CDATA[A
]]></outputString>
  </Command>
  <Command __id="5443" _type="ConsoleOutput" date="Tue Dec 05 17:44:36 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9270603" type="ConsoleOutput">
    <outputString><![CDATA[20
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"20¶")]]]></diff>
  </Command>
  <Command __id="5444" _type="ShellCommand" date="Tue Dec 05 17:44:43 EST 2023" starttimestamp="1701807005597" timestamp="9278322" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5412" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:43:20 EST 2023" docASTNodeCount="182" docActiveCodeLength="1013" docExpressionCount="110" docLength="1081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9194703">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.evaluator.Environment;import main.lisp.evaluator.environment.AbstractEnvironment;import main.lisp.evaluator.function.Function;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class EnvironmentImpl extends AbstractEnvironment{	public EnvironmentImpl() {		super();	}	public EnvironmentImpl(Environment parent) {		super(parent);	}	@Override	public void assign(IdentifierAtom arg0, SExpression arg1) {		put(arg0, arg1);	}	@Override	public void assignFun(IdentifierAtom arg0, Function arg1) {			}	@Override	public Environment copy() {		// TODO Auto-generated method stub		return null;	}	@Override	public Optional<SExpression> lookup(IdentifierAtom arg0) {		Optional<SExpression> retVal = get(arg0);		return"), Diff(DELETE," (retVal == null && getParent() != null) ? getParent().lookup(arg0) :"), Diff(EQUAL," retVal;	}	@Override	public Optional<Function> lookupFun(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Environment newChild() {		return new EnvironmentImpl(this);	}	}")]]></diff>
    <snapshot><![CDATA[package index;

import java.util.Optional;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.environment.AbstractEnvironment;
import main.lisp.evaluator.function.Function;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class EnvironmentImpl extends AbstractEnvironment{

	public EnvironmentImpl() {
		super();
	}

	public EnvironmentImpl(Environment parent) {
		super(parent);
	}

	@Override
	public void assign(IdentifierAtom arg0, SExpression arg1) {
		put(arg0, arg1);
	}

	@Override
	public void assignFun(IdentifierAtom arg0, Function arg1) {
		
	}

	@Override
	public Environment copy() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Optional<SExpression> lookup(IdentifierAtom arg0) {
		Optional<SExpression> retVal = get(arg0);
		return retVal;
	}

	@Override
	public Optional<Function> lookupFun(IdentifierAtom arg0) {
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	@Override
	public Environment newChild() {
		return new EnvironmentImpl(this);
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="5450" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:44:54 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9288945" type="Debug" />
  <Command __id="5451" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:44:54 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9288945" type="Run" />
  <Command __id="5452" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:44:54 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9288945" type="Run" />
  <Command __id="5455" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:45:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9316090" type="Run" />
  <Command __id="5456" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:45:21 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9316090" type="Run" />
  <Command __id="5457" _type="PasteCommand" date="Tue Dec 05 17:45:22 EST 2023" starttimestamp="1701807005597" timestamp="9316475" />
  <Command __id="5458" _type="ConsoleOutput" date="Tue Dec 05 17:45:22 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9316705" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="5453" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:45:02 EST 2023" docASTNodeCount="172" docActiveCodeLength="1029" docExpressionCount="127" docLength="1029" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9296838">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)temp.eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5459" _type="ConsoleInput" date="Tue Dec 05 17:45:25 EST 2023" starttimestamp="1701807005597" timestamp="9319780" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="5460" _type="ConsoleOutput" date="Tue Dec 05 17:45:25 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9319784" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.util.NoSuchElementException: No value present
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Exception in thread "main" java.util.NoSuchElementException: No value present"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5461" _type="ConsoleOutput" date="Tue Dec 05 17:45:25 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9319786" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.util.Optional.get(Optional.java:148)
	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.util.NoSuchElementException: No value present"), Diff(INSERT,"	at java.base/java.util.Optional.get(Optional.java:148)¶	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5462" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:45:25 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9319790" type="Debug" />
  <Command __id="5463" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:45:25 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9319790" type="Run" />
  <Command __id="5464" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:45:25 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9319790" type="Run" />
  <Command __id="5465" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:45:42 EST 2023" docASTNodeCount="100" docActiveCodeLength="582" docExpressionCount="66" docLength="582" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9336622">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.scanner.tokens.Token;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class IdentifierAtomImpl extends IdentifierAtom{    public IdentifierAtomImpl(String string) {        super(string);    }        public IdentifierAtomImpl(Token token) {        super(token);     }    @Override    public SExpression eval(Environment var1){        Optional<SExpression> retVal = var1.lookup(this);        return retVal.get();    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5466" _type="SelectTextCommand" caretOffset="404" date="Tue Dec 05 17:45:42 EST 2023" end="404" start="376" starttimestamp="1701807005597" timestamp="9336687" />
  <Command __id="5468" _type="MoveCaretCommand" caretOffset="452" date="Tue Dec 05 17:46:21 EST 2023" docOffset="686" starttimestamp="1701807005597" timestamp="9375930" />
  <Command __id="5467" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:46:21 EST 2023" docASTNodeCount="172" docActiveCodeLength="1029" docExpressionCount="127" docLength="1029" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9375861">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)temp.eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5469" _type="MoveCaretCommand" caretOffset="398" date="Tue Dec 05 17:46:35 EST 2023" docOffset="632" starttimestamp="1701807005597" timestamp="9389484" />
  <Command __id="5470" _type="MoveCaretCommand" caretOffset="398" date="Tue Dec 05 17:46:35 EST 2023" docOffset="632" starttimestamp="1701807005597" timestamp="9389484" />
  <Command __id="5471" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:47:08 EST 2023" docASTNodeCount="233" docActiveCodeLength="1329" docExpressionCount="157" docLength="1329" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9422965">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		"), Diff(INSERT,"SExpression body = expr.getTail();		"), Diff(EQUAL,"IdentifierAtom ids[] = {};		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, "), Diff(DELETE,"expr.getTail()"), Diff(INSERT,"body"), Diff(EQUAL,");		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, "), Diff(DELETE,"expr.getTail()"), Diff(INSERT,"body"), Diff(EQUAL,");	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[package index;

import java.util.ArrayList;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.NilAtom;
import main.lisp.evaluator.function.LambdaFactory;
import main.lisp.parser.terms.SExpression;

public class LambdaEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		SExpression body = expr.getTail();
		IdentifierAtom ids[] = {};
		if(expr.getHead() instanceof NilAtom) {
			return LambdaFactory.newInstance(ids, body);
		}
        ids = extractIdentifiers(expr.getHead());
        return LambdaFactory.newInstance(ids, body);
	}

    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {
        ArrayList<IdentifierAtom> ids = new ArrayList<>();
        while(!(expr instanceof NilAtom)) {
            ids.add((IdentifierAtom) expr.getHead());
            expr = expr.getTail();
        }
        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];
        for(IdentifierAtom id : ids) {
            idArray[ids.indexOf(id)] = id;
        }
        return idArray;
    }
}]]></snapshot>
  </Command>
  <Command __id="5472" _type="MoveCaretCommand" caretOffset="444" date="Tue Dec 05 17:47:08 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="9423044" />
  <Command __id="5474" _type="MoveCaretCommand" caretOffset="398" date="Tue Dec 05 17:48:59 EST 2023" docOffset="632" starttimestamp="1701807005597" timestamp="9534332" />
  <Command __id="5475" _type="SelectTextCommand" caretOffset="424" date="Tue Dec 05 17:49:05 EST 2023" end="424" start="406" starttimestamp="1701807005597" timestamp="9540367" />
  <Command __id="5476" _type="SelectTextCommand" caretOffset="424" date="Tue Dec 05 17:49:05 EST 2023" end="424" start="406" starttimestamp="1701807005597" timestamp="9540367" />
  <Command __id="5477" _type="MoveCaretCommand" caretOffset="370" date="Tue Dec 05 17:49:07 EST 2023" docOffset="604" starttimestamp="1701807005597" timestamp="9541783" />
  <Command __id="5478" _type="MoveCaretCommand" caretOffset="370" date="Tue Dec 05 17:49:07 EST 2023" docOffset="604" starttimestamp="1701807005597" timestamp="9541783" />
  <Command __id="5479" _type="SelectTextCommand" caretOffset="371" date="Tue Dec 05 17:49:07 EST 2023" end="371" start="363" starttimestamp="1701807005597" timestamp="9541942" />
  <Command __id="5480" _type="SelectTextCommand" caretOffset="371" date="Tue Dec 05 17:49:07 EST 2023" end="371" start="363" starttimestamp="1701807005597" timestamp="9541942" />
  <Command __id="5481" _type="MoveCaretCommand" caretOffset="792" date="Tue Dec 05 17:49:08 EST 2023" docOffset="1026" starttimestamp="1701807005597" timestamp="9542549" />
  <Command __id="5482" _type="MoveCaretCommand" caretOffset="792" date="Tue Dec 05 17:49:08 EST 2023" docOffset="1026" starttimestamp="1701807005597" timestamp="9542549" />
  <Command __id="5483" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 17:49:21 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="9555967" />
  <Command __id="5484" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 17:49:21 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="9555967" />
  <Command __id="5485" _type="MoveCaretCommand" caretOffset="374" date="Tue Dec 05 17:49:21 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="9556391" />
  <Command __id="5486" _type="MoveCaretCommand" caretOffset="374" date="Tue Dec 05 17:49:21 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="9556391" />
  <Command __id="5488" _type="InsertStringCommand" date="Tue Dec 05 17:49:22 EST 2023" starttimestamp="1701807005597" timestamp="9556813" timestamp2="9556813">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5489" _type="InsertStringCommand" date="Tue Dec 05 17:49:22 EST 2023" starttimestamp="1701807005597" timestamp="9556813" timestamp2="9556813">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5491" _type="InsertStringCommand" date="Tue Dec 05 17:49:22 EST 2023" starttimestamp="1701807005597" timestamp="9557054" timestamp2="9557054">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5492" _type="InsertStringCommand" date="Tue Dec 05 17:49:22 EST 2023" starttimestamp="1701807005597" timestamp="9557054" timestamp2="9557054">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5494" _type="InsertStringCommand" date="Tue Dec 05 17:49:22 EST 2023" starttimestamp="1701807005597" timestamp="9557122" timestamp2="9557122">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5495" _type="InsertStringCommand" date="Tue Dec 05 17:49:22 EST 2023" starttimestamp="1701807005597" timestamp="9557122" timestamp2="9557122">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5497" _type="InsertStringCommand" date="Tue Dec 05 17:49:22 EST 2023" starttimestamp="1701807005597" timestamp="9557263" timestamp2="9557263">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5498" _type="InsertStringCommand" date="Tue Dec 05 17:49:22 EST 2023" starttimestamp="1701807005597" timestamp="9557263" timestamp2="9557263">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5501" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:23 EST 2023" starttimestamp="1701807005597" timestamp="9557561" />
  <Command __id="5502" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:23 EST 2023" starttimestamp="1701807005597" timestamp="9557561" />
  <Command __id="5504" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:23 EST 2023" starttimestamp="1701807005597" timestamp="9558127" />
  <Command __id="5505" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:23 EST 2023" starttimestamp="1701807005597" timestamp="9558127" />
  <Command __id="5507" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:23 EST 2023" starttimestamp="1701807005597" timestamp="9558280" />
  <Command __id="5508" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:23 EST 2023" starttimestamp="1701807005597" timestamp="9558280" />
  <Command __id="5510" _type="InsertStringCommand" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9558470" timestamp2="9558470">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5511" _type="InsertStringCommand" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9558470" timestamp2="9558470">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5513" _type="InsertStringCommand" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9558555" timestamp2="9558555">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5514" _type="InsertStringCommand" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9558555" timestamp2="9558555">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5516" _type="InsertStringCommand" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9558687" timestamp2="9558687">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5517" _type="InsertStringCommand" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9558687" timestamp2="9558687">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5473" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:48:59 EST 2023" docASTNodeCount="172" docActiveCodeLength="1029" docExpressionCount="127" docLength="1029" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9534259">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda = (Lambda)temp.eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="5487" _type="Insert" date="Tue Dec 05 17:49:22 EST 2023" docASTNodeCount="163" docActiveCodeLength="1037" docExpressionCount="125" docLength="1037" length="8" offset="608" repeat="4" starttimestamp="1701807005597" timestamp="9556811" timestamp2="9557262">
    <text><![CDATA[
			if()]]></text>
  </DocumentChange>
  <DocumentChange __id="5499" _type="Delete" date="Tue Dec 05 17:49:23 EST 2023" docASTNodeCount="172" docActiveCodeLength="1033" docExpressionCount="127" docLength="1033" endLine="16" length="4" offset="612" repeat="4" startLine="16" starttimestamp="1701807005597" timestamp="9557559" timestamp2="9558278">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <DocumentChange __id="5509" _type="Insert" date="Tue Dec 05 17:49:24 EST 2023" docASTNodeCount="163" docActiveCodeLength="1037" docExpressionCount="125" docLength="1037" length="4" offset="612" repeat="3" starttimestamp="1701807005597" timestamp="9558469" timestamp2="9558685">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <DocumentChange __id="5518" _type="Delete" date="Tue Dec 05 17:49:24 EST 2023" docASTNodeCount="172" docActiveCodeLength="1033" docExpressionCount="127" docLength="1033" endLine="16" length="4" offset="612" repeat="4" startLine="16" starttimestamp="1701807005597" timestamp="9558904" timestamp2="9559145">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <Command __id="5520" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9558908" />
  <Command __id="5521" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9558909" />
  <Command __id="5523" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9559035" />
  <Command __id="5524" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9559035" />
  <Command __id="5526" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9559147" />
  <Command __id="5527" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:24 EST 2023" starttimestamp="1701807005597" timestamp="9559147" />
  <DocumentChange __id="5528" _type="Insert" date="Tue Dec 05 17:49:27 EST 2023" docASTNodeCount="163" docActiveCodeLength="1037" docExpressionCount="125" docLength="1037" length="4" offset="612" repeat="3" starttimestamp="1701807005597" timestamp="9561639" timestamp2="9561815">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <Command __id="5529" _type="InsertStringCommand" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9561641" timestamp2="9561641">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5530" _type="InsertStringCommand" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9561641" timestamp2="9561641">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5532" _type="InsertStringCommand" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9561676" timestamp2="9561676">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5533" _type="InsertStringCommand" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9561676" timestamp2="9561676">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5535" _type="InsertStringCommand" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9561817" timestamp2="9561817">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5536" _type="InsertStringCommand" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9561817" timestamp2="9561817">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5539" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9562079" />
  <Command __id="5540" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9562079" />
  <Command __id="5542" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9562215" />
  <Command __id="5543" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9562215" />
  <Command __id="5545" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9562329" />
  <Command __id="5546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:49:27 EST 2023" starttimestamp="1701807005597" timestamp="9562329" />
  <DocumentChange __id="5537" _type="Delete" date="Tue Dec 05 17:49:27 EST 2023" docASTNodeCount="172" docActiveCodeLength="1033" docExpressionCount="127" docLength="1033" endLine="16" length="4" offset="612" repeat="4" startLine="16" starttimestamp="1701807005597" timestamp="9562076" timestamp2="9562324">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <Command __id="5547" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 17:49:30 EST 2023" starttimestamp="1701807005597" timestamp="9564855" />
  <Command __id="5548" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:49:30 EST 2023" starttimestamp="1701807005597" timestamp="9564955" />
  <Command __id="5549" _type="EclipseCommand" commandID="" date="Tue Dec 05 17:49:30 EST 2023" starttimestamp="1701807005597" timestamp="9564976" />
  <Command __id="5551" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 17:49:35 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="9570009" />
  <Command __id="5552" _type="ShellCommand" date="Tue Dec 05 17:50:33 EST 2023" starttimestamp="1701807005597" timestamp="9627986" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5550" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:49:35 EST 2023" docASTNodeCount="238" docActiveCodeLength="1445" docExpressionCount="184" docLength="1461" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9569900">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(expr.getTail().isAtom()) {
			expr = expr.getTail();
		}else {
			expr = expr.getTail().getHead();
		}
		return evalHelper(expr, environment);
//		return expr;
	}
	
	public static SExpression evalHelper(SExpression expr, Environment environment) {
		if(expr.isAtom()) {
			if((expr instanceof IdentifierAtom) && environment.lookup((IdentifierAtom)expr).isPresent()) {
				return environment.lookup((IdentifierAtom)expr).get();
			}
			return expr;
		}
		
		boolean isOperator = (!expr.getTail().getHead().isAtom()) && (BuiltinOperationManagerSingleton.get().getEvaluator(expr.getTail().getHead().getHead().toString()) != null);
		if(isOperator) {
			SExpression expression = ExpressionFactory.newInstance(expr.getHead(), evalHelper(expr.getTail().getHead(), environment));
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expression, environment);
		}else {
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
		
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="5553" _type="ShellCommand" date="Tue Dec 05 17:50:38 EST 2023" starttimestamp="1701807005597" timestamp="9632588" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5554" _type="SelectTextCommand" caretOffset="190" date="Tue Dec 05 17:50:39 EST 2023" end="352" start="190" starttimestamp="1701807005597" timestamp="9633534" />
  <DocumentChange __id="5555" _type="Replace" date="Tue Dec 05 17:50:42 EST 2023" docASTNodeCount="213" docActiveCodeLength="1300" docExpressionCount="164" docLength="1300" endLine="19" insertionLength="1" int_docASTNodeCount="211" int_docActiveCodeLength="1299" int_docExpressionCount="163" int_docLength="1299" length="162" offset="427" startLine="13" starttimestamp="1701807005597" timestamp="9637034">
    <deletedText><![CDATA[if(expr.getTail().isAtom()) {
			expr = expr.getTail();
		}else {
			expr = expr.getTail().getHead();
		}
		return evalHelper(expr, environment);
//		return expr;]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <Command __id="5556" _type="InsertStringCommand" date="Tue Dec 05 17:50:42 EST 2023" starttimestamp="1701807005597" timestamp="9637039" timestamp2="9637039">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="5557" _type="Insert" date="Tue Dec 05 17:50:42 EST 2023" docASTNodeCount="215" docActiveCodeLength="1308" docExpressionCount="166" docLength="1308" length="8" offset="428" repeat="8" starttimestamp="1701807005597" timestamp="9637221" timestamp2="9638762">
    <text><![CDATA[xpr.getT]]></text>
  </DocumentChange>
  <Command __id="5558" _type="InsertStringCommand" date="Tue Dec 05 17:50:42 EST 2023" starttimestamp="1701807005597" timestamp="9637222" timestamp2="9637222">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5560" _type="InsertStringCommand" date="Tue Dec 05 17:50:42 EST 2023" starttimestamp="1701807005597" timestamp="9637391" timestamp2="9637391">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5562" _type="InsertStringCommand" date="Tue Dec 05 17:50:43 EST 2023" starttimestamp="1701807005597" timestamp="9637498" timestamp2="9637498">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5564" _type="InsertStringCommand" date="Tue Dec 05 17:50:43 EST 2023" starttimestamp="1701807005597" timestamp="9637847" timestamp2="9637847">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5565" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:50:43 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="9637851" />
  <Command __id="5570" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:50:44 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="9639177" />
  <DocumentChange __id="5571" _type="Replace" date="Tue Dec 05 17:50:44 EST 2023" docASTNodeCount="215" docActiveCodeLength="1313" docExpressionCount="166" docLength="1313" endLine="13" insertionLength="9" int_docASTNodeCount="213" int_docActiveCodeLength="1304" int_docExpressionCount="164" int_docLength="1304" length="4" offset="432" startLine="13" starttimestamp="1701807005597" timestamp="9639181">
    <deletedText><![CDATA[getT]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <Command __id="5572" _type="InsertStringCommand" date="Tue Dec 05 17:50:44 EST 2023" starttimestamp="1701807005597" timestamp="9639183" timestamp2="9639183">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5573" _type="Insert" date="Tue Dec 05 17:50:45 EST 2023" docASTNodeCount="219" docActiveCodeLength="1318" docExpressionCount="170" docLength="1318" length="5" offset="441" repeat="5" starttimestamp="1701807005597" timestamp="9639449" timestamp2="9640341">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <Command __id="5574" _type="InsertStringCommand" date="Tue Dec 05 17:50:45 EST 2023" starttimestamp="1701807005597" timestamp="9639451" timestamp2="9639451">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5575" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:50:45 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="9639459" />
  <Command __id="5580" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:50:46 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="9640517" />
  <DocumentChange __id="5581" _type="Replace" date="Tue Dec 05 17:50:46 EST 2023" docASTNodeCount="217" docActiveCodeLength="1323" docExpressionCount="168" docLength="1323" endLine="13" insertionLength="9" int_docASTNodeCount="215" int_docActiveCodeLength="1314" int_docExpressionCount="166" int_docLength="1314" length="4" offset="442" startLine="13" starttimestamp="1701807005597" timestamp="9640518">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="5582" _type="InsertStringCommand" date="Tue Dec 05 17:50:46 EST 2023" starttimestamp="1701807005597" timestamp="9640520" timestamp2="9640520">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5583" _type="Insert" date="Tue Dec 05 17:50:47 EST 2023" docASTNodeCount="221" docActiveCodeLength="1325" docExpressionCount="172" docLength="1325" length="2" offset="451" repeat="2" starttimestamp="1701807005597" timestamp="9641428" timestamp2="9641576">
    <text><![CDATA[.e]]></text>
  </DocumentChange>
  <DocumentChange __id="5587" _type="Delete" date="Tue Dec 05 17:50:47 EST 2023" docASTNodeCount="217" docActiveCodeLength="1324" docExpressionCount="168" docLength="1324" endLine="13" length="1" offset="452" startLine="13" starttimestamp="1701807005597" timestamp="9641953">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="5588" _type="Insert" date="Tue Dec 05 17:50:47 EST 2023" docASTNodeCount="221" docActiveCodeLength="1327" docExpressionCount="172" docLength="1327" length="3" offset="452" repeat="3" starttimestamp="1701807005597" timestamp="9642003" timestamp2="9642202">
    <text><![CDATA[val]]></text>
  </DocumentChange>
  <DocumentChange __id="5591" _type="Delete" date="Tue Dec 05 17:50:48 EST 2023" docASTNodeCount="217" docActiveCodeLength="1324" docExpressionCount="168" docLength="1324" endLine="13" length="3" offset="452" repeat="3" startLine="13" starttimestamp="1701807005597" timestamp="9643305" timestamp2="9643558">
    <text><![CDATA[val]]></text>
  </DocumentChange>
  <DocumentChange __id="5594" _type="Insert" date="Tue Dec 05 17:50:49 EST 2023" docASTNodeCount="221" docActiveCodeLength="1326" docExpressionCount="172" docLength="1326" length="2" offset="452" repeat="2" starttimestamp="1701807005597" timestamp="9643751" timestamp2="9643902">
    <text><![CDATA[ev]]></text>
  </DocumentChange>
  <DocumentChange __id="5597" _type="Replace" date="Tue Dec 05 17:50:49 EST 2023" docASTNodeCount="220" docActiveCodeLength="1341" docExpressionCount="171" docLength="1341" endLine="13" insertionLength="17" int_docASTNodeCount="217" int_docActiveCodeLength="1324" int_docExpressionCount="168" int_docLength="1324" length="2" offset="452" startLine="13" starttimestamp="1701807005597" timestamp="9644270">
    <deletedText><![CDATA[ev]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5601" _type="Insert" date="Tue Dec 05 17:50:51 EST 2023" docASTNodeCount="224" docActiveCodeLength="1343" docExpressionCount="175" docLength="1343" length="2" offset="469" repeat="2" starttimestamp="1701807005597" timestamp="9646031" timestamp2="9647256">
    <text><![CDATA[.e]]></text>
  </DocumentChange>
  <DocumentChange __id="5606" _type="Replace" date="Tue Dec 05 17:50:53 EST 2023" docASTNodeCount="223" docActiveCodeLength="1361" docExpressionCount="174" docLength="1361" endLine="13" insertionLength="19" int_docASTNodeCount="220" int_docActiveCodeLength="1342" int_docExpressionCount="171" int_docLength="1342" length="1" offset="470" startLine="13" starttimestamp="1701807005597" timestamp="9647583">
    <deletedText><![CDATA[e]]></deletedText>
    <insertedText><![CDATA[equals(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5608" _type="Delete" date="Tue Dec 05 17:50:53 EST 2023" docASTNodeCount="224" docActiveCodeLength="1343" docExpressionCount="175" docLength="1343" endLine="13" length="18" offset="471" repeat="8" startLine="13" starttimestamp="1701807005597" timestamp="9648131" timestamp2="9649626">
    <text><![CDATA[quals(environment)]]></text>
  </DocumentChange>
  <Command __id="5584" _type="InsertStringCommand" date="Tue Dec 05 17:50:47 EST 2023" starttimestamp="1701807005597" timestamp="9641430" timestamp2="9641430">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5585" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:50:47 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="9641435" />
  <Command __id="5596" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:50:49 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="9644269" />
  <Command __id="5598" _type="InsertStringCommand" date="Tue Dec 05 17:50:49 EST 2023" starttimestamp="1701807005597" timestamp="9644283" timestamp2="9644283">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5599" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:50:50 EST 2023" starttimestamp="1701807005597" timestamp="9645191" />
  <Command __id="5600" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:50:50 EST 2023" starttimestamp="1701807005597" timestamp="9645402" />
  <Command __id="5602" _type="InsertStringCommand" date="Tue Dec 05 17:50:51 EST 2023" starttimestamp="1701807005597" timestamp="9646033" timestamp2="9646033">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5603" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:50:51 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="9646044" />
  <Command __id="5605" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:50:53 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="9647582" />
  <Command __id="5607" _type="InsertStringCommand" date="Tue Dec 05 17:50:53 EST 2023" starttimestamp="1701807005597" timestamp="9647596" timestamp2="9647596">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5609" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:53 EST 2023" starttimestamp="1701807005597" timestamp="9648133" />
  <Command __id="5611" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:53 EST 2023" starttimestamp="1701807005597" timestamp="9648263" />
  <Command __id="5613" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:53 EST 2023" starttimestamp="1701807005597" timestamp="9648378" />
  <Command __id="5615" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:54 EST 2023" starttimestamp="1701807005597" timestamp="9648508" />
  <Command __id="5617" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:54 EST 2023" starttimestamp="1701807005597" timestamp="9648642" />
  <Command __id="5619" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:54 EST 2023" starttimestamp="1701807005597" timestamp="9648779" />
  <Command __id="5621" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:54 EST 2023" starttimestamp="1701807005597" timestamp="9648916" />
  <Command __id="5622" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:50:54 EST 2023" starttimestamp="1701807005597" timestamp="9649373" />
  <Command __id="5624" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:55 EST 2023" starttimestamp="1701807005597" timestamp="9649628" />
  <Command __id="5626" _type="InsertStringCommand" date="Tue Dec 05 17:50:55 EST 2023" starttimestamp="1701807005597" timestamp="9650213" timestamp2="9650213">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5628" _type="InsertStringCommand" date="Tue Dec 05 17:50:55 EST 2023" starttimestamp="1701807005597" timestamp="9650289" timestamp2="9650289">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5630" _type="InsertStringCommand" date="Tue Dec 05 17:50:55 EST 2023" starttimestamp="1701807005597" timestamp="9650364" timestamp2="9650364">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5632" _type="InsertStringCommand" date="Tue Dec 05 17:50:56 EST 2023" starttimestamp="1701807005597" timestamp="9651076" timestamp2="9651076">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5634" _type="InsertStringCommand" date="Tue Dec 05 17:50:57 EST 2023" starttimestamp="1701807005597" timestamp="9652248" timestamp2="9652248">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5636" _type="InsertStringCommand" date="Tue Dec 05 17:50:57 EST 2023" starttimestamp="1701807005597" timestamp="9652351" timestamp2="9652351">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5638" _type="InsertStringCommand" date="Tue Dec 05 17:50:58 EST 2023" starttimestamp="1701807005597" timestamp="9652560" timestamp2="9652560">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="5640" _type="InsertStringCommand" date="Tue Dec 05 17:50:58 EST 2023" starttimestamp="1701807005597" timestamp="9652676" timestamp2="9652676">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5642" _type="InsertStringCommand" date="Tue Dec 05 17:50:58 EST 2023" starttimestamp="1701807005597" timestamp="9652789" timestamp2="9652789">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5644" _type="InsertStringCommand" date="Tue Dec 05 17:50:58 EST 2023" starttimestamp="1701807005597" timestamp="9652915" timestamp2="9652915">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5646" _type="InsertStringCommand" date="Tue Dec 05 17:50:58 EST 2023" starttimestamp="1701807005597" timestamp="9653028" timestamp2="9653028">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5648" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:59 EST 2023" starttimestamp="1701807005597" timestamp="9653881" />
  <Command __id="5650" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:59 EST 2023" starttimestamp="1701807005597" timestamp="9654004" />
  <Command __id="5652" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:50:59 EST 2023" starttimestamp="1701807005597" timestamp="9654129" />
  <Command __id="5654" _type="InsertStringCommand" date="Tue Dec 05 17:50:59 EST 2023" starttimestamp="1701807005597" timestamp="9654247" timestamp2="9654247">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5656" _type="InsertStringCommand" date="Tue Dec 05 17:50:59 EST 2023" starttimestamp="1701807005597" timestamp="9654389" timestamp2="9654389">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5658" _type="InsertStringCommand" date="Tue Dec 05 17:51:00 EST 2023" starttimestamp="1701807005597" timestamp="9654478" timestamp2="9654478">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5660" _type="InsertStringCommand" date="Tue Dec 05 17:51:00 EST 2023" starttimestamp="1701807005597" timestamp="9654642" timestamp2="9654642">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5662" _type="InsertStringCommand" date="Tue Dec 05 17:51:00 EST 2023" starttimestamp="1701807005597" timestamp="9654744" timestamp2="9654744">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5664" _type="InsertStringCommand" date="Tue Dec 05 17:51:00 EST 2023" starttimestamp="1701807005597" timestamp="9654820" timestamp2="9654820">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5666" _type="InsertStringCommand" date="Tue Dec 05 17:51:00 EST 2023" starttimestamp="1701807005597" timestamp="9654898" timestamp2="9654898">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5667" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:51:00 EST 2023" starttimestamp="1701807005597" timestamp="9655058" />
  <Command __id="5669" _type="InsertStringCommand" date="Tue Dec 05 17:51:00 EST 2023" starttimestamp="1701807005597" timestamp="9655364" timestamp2="9655364">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="5670" _type="MoveCaretCommand" caretOffset="190" date="Tue Dec 05 17:51:02 EST 2023" docOffset="427" starttimestamp="1701807005597" timestamp="9656627" />
  <Command __id="5672" _type="InsertStringCommand" date="Tue Dec 05 17:51:02 EST 2023" starttimestamp="1701807005597" timestamp="9657055" timestamp2="9657055">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5674" _type="InsertStringCommand" date="Tue Dec 05 17:51:02 EST 2023" starttimestamp="1701807005597" timestamp="9657145" timestamp2="9657145">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5676" _type="InsertStringCommand" date="Tue Dec 05 17:51:02 EST 2023" starttimestamp="1701807005597" timestamp="9657236" timestamp2="9657236">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5678" _type="InsertStringCommand" date="Tue Dec 05 17:51:02 EST 2023" starttimestamp="1701807005597" timestamp="9657319" timestamp2="9657319">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="5680" _type="InsertStringCommand" date="Tue Dec 05 17:51:03 EST 2023" starttimestamp="1701807005597" timestamp="9657436" timestamp2="9657436">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5682" _type="InsertStringCommand" date="Tue Dec 05 17:51:03 EST 2023" starttimestamp="1701807005597" timestamp="9657488" timestamp2="9657488">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5684" _type="InsertStringCommand" date="Tue Dec 05 17:51:03 EST 2023" starttimestamp="1701807005597" timestamp="9657592" timestamp2="9657592">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="5685" _type="MoveCaretCommand" caretOffset="346" date="Tue Dec 05 17:51:05 EST 2023" docOffset="583" starttimestamp="1701807005597" timestamp="9660229" />
  <Command __id="5686" _type="SelectTextCommand" caretOffset="728" date="Tue Dec 05 17:51:10 EST 2023" end="1127" start="728" starttimestamp="1701807005597" timestamp="9664993" />
  <Command __id="5687" _type="MoveCaretCommand" caretOffset="1122" date="Tue Dec 05 17:51:11 EST 2023" docOffset="1359" starttimestamp="1701807005597" timestamp="9665586" />
  <Command __id="5688" _type="SelectTextCommand" caretOffset="264" date="Tue Dec 05 17:51:12 EST 2023" end="1125" start="264" starttimestamp="1701807005597" timestamp="9667351" />
  <Command __id="5706" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue Dec 05 17:51:13 EST 2023" starttimestamp="1701807005597" timestamp="9667719" />
  <Command __id="5707" _type="MoveCaretCommand" caretOffset="277" date="Tue Dec 05 17:51:13 EST 2023" docOffset="514" starttimestamp="1701807005597" timestamp="9668206" />
  <Command __id="5708" _type="MoveCaretCommand" caretOffset="564" date="Tue Dec 05 17:51:14 EST 2023" docOffset="801" starttimestamp="1701807005597" timestamp="9668719" />
  <Command __id="5709" _type="MoveCaretCommand" caretOffset="1161" date="Tue Dec 05 17:51:16 EST 2023" docOffset="1398" starttimestamp="1701807005597" timestamp="9670588" />
  <Command __id="5711" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:51:16 EST 2023" starttimestamp="1701807005597" timestamp="9670894" />
  <Command __id="5713" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:51:16 EST 2023" starttimestamp="1701807005597" timestamp="9671072" />
  <DocumentChange __id="5625" _type="Insert" date="Tue Dec 05 17:50:55 EST 2023" docASTNodeCount="223" docActiveCodeLength="1355" docExpressionCount="174" docLength="1355" length="12" offset="471" repeat="11" starttimestamp="1701807005597" timestamp="9650211" timestamp2="9653027">
    <text><![CDATA[val(enviorn)]]></text>
  </DocumentChange>
  <DocumentChange __id="5647" _type="Delete" date="Tue Dec 05 17:50:59 EST 2023" docASTNodeCount="223" docActiveCodeLength="1352" docExpressionCount="174" docLength="1352" endLine="13" length="3" offset="479" repeat="3" startLine="13" starttimestamp="1701807005597" timestamp="9653880" timestamp2="9654128">
    <text><![CDATA[orn]]></text>
  </DocumentChange>
  <DocumentChange __id="5653" _type="Insert" date="Tue Dec 05 17:50:59 EST 2023" docASTNodeCount="223" docActiveCodeLength="1359" docExpressionCount="174" docLength="1359" length="7" offset="479" repeat="7" starttimestamp="1701807005597" timestamp="9654247" timestamp2="9654897">
    <text><![CDATA[ronment]]></text>
  </DocumentChange>
  <DocumentChange __id="5668" _type="Insert" date="Tue Dec 05 17:51:00 EST 2023" docASTNodeCount="223" docActiveCodeLength="1360" docExpressionCount="174" docLength="1360" length="1" offset="487" starttimestamp="1701807005597" timestamp="9655361">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="5671" _type="Insert" date="Tue Dec 05 17:51:02 EST 2023" docASTNodeCount="223" docActiveCodeLength="1367" docExpressionCount="174" docLength="1367" length="7" offset="427" repeat="7" starttimestamp="1701807005597" timestamp="9657053" timestamp2="9657590">
    <text><![CDATA[return ]]></text>
  </DocumentChange>
  <DocumentChange __id="5689" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="205" docActiveCodeLength="1285" docExpressionCount="164" docLength="1369" length="2" offset="501" starttimestamp="1701807005597" timestamp="9667690">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5690" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="186" docActiveCodeLength="1264" docExpressionCount="150" docLength="1371" length="2" offset="586" starttimestamp="1701807005597" timestamp="9667691">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5691" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="174" docActiveCodeLength="1167" docExpressionCount="142" docLength="1373" length="2" offset="610" starttimestamp="1701807005597" timestamp="9667692">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5692" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="174" docActiveCodeLength="1109" docExpressionCount="142" docLength="1375" length="2" offset="710" starttimestamp="1701807005597" timestamp="9667693">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5693" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="174" docActiveCodeLength="1105" docExpressionCount="142" docLength="1377" length="2" offset="771" starttimestamp="1701807005597" timestamp="9667693">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5694" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="174" docActiveCodeLength="1090" docExpressionCount="142" docLength="1379" length="2" offset="778" starttimestamp="1701807005597" timestamp="9667694">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5695" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="174" docActiveCodeLength="1087" docExpressionCount="142" docLength="1381" length="2" offset="796" starttimestamp="1701807005597" timestamp="9667694">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5696" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="174" docActiveCodeLength="1085" docExpressionCount="142" docLength="1383" length="2" offset="802" starttimestamp="1701807005597" timestamp="9667695">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5697" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="143" docActiveCodeLength="913" docExpressionCount="114" docLength="1385" length="2" offset="807" starttimestamp="1701807005597" timestamp="9667695">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5698" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="109" docActiveCodeLength="895" docExpressionCount="86" docLength="1387" length="2" offset="982" starttimestamp="1701807005597" timestamp="9667696">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5699" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="90" docActiveCodeLength="770" docExpressionCount="70" docLength="1389" length="2" offset="1003" starttimestamp="1701807005597" timestamp="9667697">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5700" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="90" docActiveCodeLength="651" docExpressionCount="70" docLength="1391" length="2" offset="1131" starttimestamp="1701807005597" timestamp="9667697">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5701" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="90" docActiveCodeLength="642" docExpressionCount="70" docLength="1393" length="2" offset="1253" starttimestamp="1701807005597" timestamp="9667698">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5702" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="90" docActiveCodeLength="529" docExpressionCount="70" docLength="1395" length="2" offset="1265" starttimestamp="1701807005597" timestamp="9667698">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5703" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="90" docActiveCodeLength="526" docExpressionCount="70" docLength="1397" length="2" offset="1381" starttimestamp="1701807005597" timestamp="9667698">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5704" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="90" docActiveCodeLength="524" docExpressionCount="70" docLength="1399" length="2" offset="1387" starttimestamp="1701807005597" timestamp="9667699">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5705" _type="Insert" date="Tue Dec 05 17:51:13 EST 2023" docASTNodeCount="90" docActiveCodeLength="522" docExpressionCount="70" docLength="1401" length="2" offset="1392" starttimestamp="1701807005597" timestamp="9667699">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="5710" _type="Delete" date="Tue Dec 05 17:51:16 EST 2023" docASTNodeCount="90" docActiveCodeLength="520" docExpressionCount="70" docLength="1399" endLine="33" length="2" offset="1396" repeat="2" startLine="32" starttimestamp="1701807005597" timestamp="9670893" timestamp2="9671071">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="5715" _type="Delete" date="Tue Dec 05 17:51:29 EST 2023" docASTNodeCount="90" docActiveCodeLength="501" docExpressionCount="70" docLength="501" endLine="32" length="898" offset="498" repeat="4" startLine="14" starttimestamp="1701807005597" timestamp="9683616" timestamp2="9684606">
    <text><![CDATA[
	
//	public static SExpression evalHelper(SExpression expr, Environment environment) {
//		if(expr.isAtom()) {
//			if((expr instanceof IdentifierAtom) && environment.lookup((IdentifierAtom)expr).isPresent()) {
//				return environment.lookup((IdentifierAtom)expr).get();
//			}
//			return expr;
//		}
//		
//		boolean isOperator = (!expr.getTail().getHead().isAtom()) && (BuiltinOperationManagerSingleton.get().getEvaluator(expr.getTail().getHead().getHead().toString()) != null);
//		if(isOperator) {
//			SExpression expression = ExpressionFactory.newInstance(expr.getHead(), evalHelper(expr.getTail().getHead(), environment));
//			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expression, environment);
//		}else {
//			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
//		}
//		
//	}]]></text>
  </DocumentChange>
  <Command __id="5735" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:51:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9692072" type="Run" />
  <Command __id="5736" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:51:37 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9692072" type="Run" />
  <Command __id="5738" _type="MoveCaretCommand" caretOffset="0" date="Tue Dec 05 17:51:42 EST 2023" docOffset="0" starttimestamp="1701807005597" timestamp="9696699" />
  <Command __id="5739" _type="PasteCommand" date="Tue Dec 05 17:51:56 EST 2023" starttimestamp="1701807005597" timestamp="9710490" />
  <Command __id="5740" _type="ConsoleOutput" date="Tue Dec 05 17:51:56 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9711241" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.util.Optional.get(Optional.java:148)¶	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:17)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:25)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5737" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:51:42 EST 2023" docASTNodeCount="67" docActiveCodeLength="372" docExpressionCount="47" docLength="372" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9696606">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/QuoteEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.SExpression;

public class QuoteEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(expr.getTail().isAtom()) {
			return expr.getTail();
		}
		return expr.getTail().getHead();
	}
}
]]></snapshot>
  </Command>
  <Command __id="5741" _type="ConsoleInput" date="Tue Dec 05 17:51:59 EST 2023" starttimestamp="1701807005597" timestamp="9713486" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="5742" _type="ExceptionCommand" date="Tue Dec 05 17:51:59 EST 2023" starttimestamp="1701807005597" timestamp="9713491" type="Exception">
    <exceptionString><![CDATA[java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.get(Optional.java:148)
	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:26)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5743" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:51:59 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9713494" type="Debug" />
  <Command __id="5744" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:51:59 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9713494" type="Run" />
  <Command __id="5745" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:51:59 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9713494" type="Debug" />
  <Command __id="5746" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:51:59 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9713494" type="Run" />
  <Command __id="5747" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:52:17 EST 2023" docASTNodeCount="90" docActiveCodeLength="501" docExpressionCount="70" docLength="501" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9732060">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;import main.lisp.evaluator.BuiltinOperationManagerSingleton;public class EvalEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		"), Diff(DELETE,"if(expr.getTail().isAtom()) {			expr = expr.getTail();		}else {			expr = expr.getTail().getHead();		}		return evalHelper(expr, environment);//		return expr;	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		if(expr.isAtom()) {			if((expr instanceof IdentifierAtom) && environment.lookup((IdentifierAtom)expr).isPresent()) {				return environment.lookup((IdentifierAtom)expr).get();			}			return expr;		}				boolean isOperator = (!expr.getTail().getHead().isAtom()) && (BuiltinOperationManagerSingleton.get().getEvaluator(expr.getTail().getHead().getHead().toString()) != null);		if(isOperator) {			SExpression expression = ExpressionFactory.newInstance(expr.getHead(), evalHelper(expr.getTail().getHead(), environment));			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expression, environment);		}else {			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}			}	"), Diff(INSERT,"return expr.getTail().getHead().eval(environment).eval(environment);	}"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;

public class EvalEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		return expr.getTail().getHead().eval(environment).eval(environment);
	}
}
]]></snapshot>
  </Command>
  <Command __id="5748" _type="MoveCaretCommand" caretOffset="179" date="Tue Dec 05 17:52:17 EST 2023" docOffset="416" starttimestamp="1701807005597" timestamp="9732122" />
  <Command __id="5749" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:52:18 EST 2023" docASTNodeCount="182" docActiveCodeLength="1013" docExpressionCount="110" docLength="1081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9733327">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.evaluator.Environment;import main.lisp.evaluator.environment.AbstractEnvironment;import main.lisp.evaluator.function.Function;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class EnvironmentImpl extends AbstractEnvironment{	public EnvironmentImpl() {		super();	}	public EnvironmentImpl(Environment parent) {		super(parent);	}	@Override	public void assign(IdentifierAtom arg0, SExpression arg1) {		put(arg0, arg1);	}	@Override	public void assignFun(IdentifierAtom arg0, Function arg1) {			}	@Override	public Environment copy() {		// TODO Auto-generated method stub		return null;	}	@Override	public Optional<SExpression> lookup(IdentifierAtom arg0) {		Optional<SExpression> retVal = get(arg0);		return retVal;	}	@Override	public Optional<Function> lookupFun(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Environment newChild() {		return new EnvironmentImpl(this);	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5750" _type="MoveCaretCommand" caretOffset="629" date="Tue Dec 05 17:52:18 EST 2023" docOffset="865" starttimestamp="1701807005597" timestamp="9733397" />
  <Command __id="5751" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:52:20 EST 2023" docASTNodeCount="128" docActiveCodeLength="738" docExpressionCount="94" docLength="738" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9734814">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="5752" _type="SelectTextCommand" caretOffset="500" date="Tue Dec 05 17:52:20 EST 2023" end="500" start="490" starttimestamp="1701807005597" timestamp="9734885" />
  <Command __id="5754" _type="MoveCaretCommand" caretOffset="378" date="Tue Dec 05 17:52:23 EST 2023" docOffset="612" starttimestamp="1701807005597" timestamp="9738223" />
  <Command __id="5755" _type="SelectTextCommand" caretOffset="428" date="Tue Dec 05 17:52:26 EST 2023" end="428" start="410" starttimestamp="1701807005597" timestamp="9741322" />
  <Command __id="5756" _type="SelectTextCommand" caretOffset="428" date="Tue Dec 05 17:52:26 EST 2023" end="428" start="410" starttimestamp="1701807005597" timestamp="9741322" />
  <Command __id="5758" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:52:27 EST 2023" starttimestamp="1701807005597" timestamp="9741585" />
  <Command __id="5759" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:52:27 EST 2023" starttimestamp="1701807005597" timestamp="9741585" />
  <Command __id="5763" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:52:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9746735" type="Run" />
  <Command __id="5764" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:52:32 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9746735" type="Run" />
  <Command __id="5765" _type="PasteCommand" date="Tue Dec 05 17:52:33 EST 2023" starttimestamp="1701807005597" timestamp="9747670" />
  <Command __id="5766" _type="ConsoleOutput" date="Tue Dec 05 17:52:33 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9748076" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="5773" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:52:41 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9755527" type="Run" />
  <Command __id="5774" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:52:41 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9755527" type="Run" />
  <Command __id="5775" _type="ShellCommand" date="Tue Dec 05 17:52:41 EST 2023" starttimestamp="1701807005597" timestamp="9755873" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5776" _type="ConsoleOutput" date="Tue Dec 05 17:52:43 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9758371" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="5777" _type="ConsoleOutput" date="Tue Dec 05 17:52:43 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9758372" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5778" _type="ConsoleOutput" date="Tue Dec 05 17:52:43 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9758379" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5779" _type="ConsoleOutput" date="Tue Dec 05 17:52:43 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9758380" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5780" _type="ConsoleOutput" date="Tue Dec 05 17:52:43 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9758380" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5781" _type="ConsoleOutput" date="Tue Dec 05 17:52:43 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9758381" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):8"), Diff(INSERT,"Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5782" _type="ExceptionCommand" date="Tue Dec 05 17:52:44 EST 2023" starttimestamp="1701807005597" timestamp="9758404" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5783" _type="ConsoleOutput" date="Tue Dec 05 17:52:44 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9758408" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at index.LoadEvaluator.eval(LoadEvaluator.java:42)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:26)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluator.java:42)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:26)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:45)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5784" _type="ConsoleOutput" date="Tue Dec 05 17:52:44 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9758486" type="ConsoleOutput">
    <outputString><![CDATA[	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at index.LoadEvaluator.eval(LoadEvaluato"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManage"), Diff(EQUAL,"r.java:"), Diff(DELETE,"42"), Diff(INSERT,"1906"), Diff(EQUAL,")¶	at "), Diff(DELETE,"index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:26)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"26"), Diff(INSERT,"1701"), Diff(EQUAL,")¶	at "), Diff(DELETE,"main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager"), Diff(EQUAL,".java:"), Diff(DELETE,"92"), Diff(INSERT,"1585"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:1"), Diff(DELETE,"00"), Diff(INSERT,"538"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:1"), Diff(DELETE,"33"), Diff(INSERT,"531"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegister"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(INSERT,"140"), Diff(EQUAL,"6"), Diff(DELETE,"5"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManag"), Diff(EQUAL,"er.java:"), Diff(DELETE,"2"), Diff(EQUAL,"1"), Diff(INSERT,"357"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionCheck"), Diff(INSERT,"bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapt"), Diff(EQUAL,"er.java:4"), Diff(DELETE,"7"), Diff(INSERT,"69"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:2"), Diff(DELETE,"31"), Diff(INSERT,"78"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase"), Diff(INSERT,"java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster"), Diff(EQUAL,".java:"), Diff(DELETE,"111"), Diff(INSERT,"277"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent"), Diff(EQUAL,".java:"), Diff(DELETE,"6"), Diff(INSERT,"334"), Diff(EQUAL,"2)¶	at java."), Diff(DELETE,"base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"desktop/java.awt.Component.processEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"6400"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.Container.processEvent(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"2263"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEventImpl(Component"), Diff(EQUAL,".java:50"), Diff(INSERT,"11"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Container"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"321"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:4"), Diff(DELETE,"7"), Diff(INSERT,"843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"325"), Diff(INSERT,"4918"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"57"), Diff(INSERT,"4556"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$3.run(ParentRun"), Diff(INSERT,"java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Contai"), Diff(EQUAL,"ner.java:"), Diff(DELETE,"290"), Diff(INSERT,"4488"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRun"), Diff(INSERT,"java.desktop/java.awt.Container.dispatchEventImpl(Contai"), Diff(EQUAL,"ner.java:"), Diff(INSERT,"230"), Diff(EQUAL,"7"), Diff(DELETE,"1"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Window.dispatchEventImpl(Window"), Diff(EQUAL,".java:2"), Diff(DELETE,"88"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.Component.dispatchEvent(Component"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"4843"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$2.evaluate(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"268"), Diff(INSERT,"772"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"363"), Diff(INSERT,"721"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest"), Diff(INSERT,"java.desktop/java.awt.EventQueue$4.run(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"317"), Diff(INSERT,"715"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.jun"), Diff(INSERT,"java.base/java.secur"), Diff(EQUAL,"it"), Diff(INSERT,"y"), Diff(EQUAL,".A"), Diff(DELETE,"JUnitT"), Diff(INSERT,"cc"), Diff(EQUAL,"es"), Diff(DELETE,"t"), Diff(INSERT,"s"), Diff(EQUAL,"Cont"), Diff(DELETE,"ext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment"), Diff(INSERT,"roller.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"62"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at "), Diff(DELETE,"gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker"), Diff(INSERT,"java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,"5)¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCas"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"231"), Diff(INSERT,"745"), Diff(EQUAL,")¶	at "), Diff(DELETE,"grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCas"), Diff(INSERT,"java.desktop/java.awt.EventQueue$5.run(EventQueu"), Diff(EQUAL,"e.java:"), Diff(DELETE,"111"), Diff(INSERT,"743"), Diff(EQUAL,")¶	at java.base/j"), Diff(DELETE,"dk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethod"), Diff(INSERT,"ava.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurity"), Diff(EQUAL,"Access"), Diff(DELETE,"or"), Diff(EQUAL,"Impl."), Diff(DELETE,"java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl"), Diff(INSERT,"doIntersectionPrivilege(ProtectionDomain"), Diff(EQUAL,".java:"), Diff(DELETE,"43"), Diff(INSERT,"85"), Diff(EQUAL,")¶	at java."), Diff(DELETE,"base/java.lang.reflect.Method.invoke(Method"), Diff(INSERT,"desktop/java.awt.EventQueue.dispatchEvent(EventQueue"), Diff(EQUAL,".java:"), Diff(DELETE,"566"), Diff(INSERT,"742"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"1"), Diff(EQUAL,"2"), Diff(INSERT,"03"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMetho"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThrea"), Diff(EQUAL,"d.java:1"), Diff(DELETE,"7"), Diff(INSERT,"24"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"78"), Diff(INSERT,"113"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"290"), Diff(INSERT,"109"), Diff(EQUAL,")¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner$1.schedule(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"7"), Diff(INSERT,"10"), Diff(EQUAL,"1)¶	at "), Diff(DELETE,"org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner"), Diff(INSERT,"java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread"), Diff(EQUAL,".java:"), Diff(DELETE,"58"), Diff(INSERT,"90"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="5785" _type="ExceptionCommand" date="Tue Dec 05 17:52:44 EST 2023" starttimestamp="1701807005597" timestamp="9758498" type="Exception">
    <exceptionString><![CDATA[
Test execution time (ms):39
Test Result:LoadLispChecker,0.0% complete,0.0,0.0,Expected strings:Tactual string 42

java.lang.ClassCastException: class index.BasicExpressionImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.BasicExpressionImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:18)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:231)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:317)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:348)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:191)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="5789" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:53:06 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9780929" type="Debug" />
  <Command __id="5790" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:53:06 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9780929" type="Run" />
  <Command __id="5791" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:53:06 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9780929" type="Debug" />
  <Command __id="5792" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 17:53:06 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9780929" type="Run" />
  <Command __id="5793" _type="MoveCaretCommand" caretOffset="191" date="Tue Dec 05 17:53:06 EST 2023" docOffset="425" starttimestamp="1701807005597" timestamp="9781146" />
  <Command __id="5794" _type="MoveCaretCommand" caretOffset="191" date="Tue Dec 05 17:53:06 EST 2023" docOffset="425" starttimestamp="1701807005597" timestamp="9781146" />
  <Command __id="5795" _type="MoveCaretCommand" caretOffset="444" date="Tue Dec 05 17:53:07 EST 2023" docOffset="678" starttimestamp="1701807005597" timestamp="9781876" />
  <Command __id="5796" _type="MoveCaretCommand" caretOffset="444" date="Tue Dec 05 17:53:07 EST 2023" docOffset="678" starttimestamp="1701807005597" timestamp="9781876" />
  <Command __id="5753" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:52:23 EST 2023" docASTNodeCount="172" docActiveCodeLength="1033" docExpressionCount="127" docLength="1033" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9738152">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			"), Diff(INSERT,"			"), Diff(EQUAL,"Lambda lambda = (Lambda)temp.eval(environment);			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			SExpression temp = expr.getHead();
			Environment childEnvironment = environment.newChild();
			
			Lambda lambda = (Lambda)temp.eval(environment);
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="5757" _type="Delete" date="Tue Dec 05 17:52:27 EST 2023" docASTNodeCount="169" docActiveCodeLength="1015" docExpressionCount="124" docLength="1015" endLine="17" length="18" offset="644" startLine="17" starttimestamp="1701807005597" timestamp="9741581">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="5799" _type="Insert" date="Tue Dec 05 17:53:10 EST 2023" docASTNodeCount="172" docActiveCodeLength="1033" docExpressionCount="127" docLength="1033" length="18" offset="644" starttimestamp="1701807005597" timestamp="9784574">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="5801" _type="Insert" date="Tue Dec 05 17:53:11 EST 2023" docASTNodeCount="163" docActiveCodeLength="1037" docExpressionCount="125" docLength="1037" length="4" offset="612" repeat="3" starttimestamp="1701807005597" timestamp="9785880" timestamp2="9786072">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <DocumentChange __id="5810" _type="Delete" date="Tue Dec 05 17:53:12 EST 2023" docASTNodeCount="172" docActiveCodeLength="1033" docExpressionCount="127" docLength="1033" endLine="16" length="4" offset="612" repeat="4" startLine="16" starttimestamp="1701807005597" timestamp="9787049" timestamp2="9787268">
    <text><![CDATA[if()]]></text>
  </DocumentChange>
  <Command __id="5797" _type="MoveCaretCommand" caretOffset="410" date="Tue Dec 05 17:53:09 EST 2023" docOffset="644" starttimestamp="1701807005597" timestamp="9784344" />
  <Command __id="5798" _type="MoveCaretCommand" caretOffset="410" date="Tue Dec 05 17:53:09 EST 2023" docOffset="644" starttimestamp="1701807005597" timestamp="9784345" />
  <Command __id="5800" _type="UndoCommand" date="Tue Dec 05 17:53:10 EST 2023" starttimestamp="1701807005597" timestamp="9784580" />
  <Command __id="5802" _type="InsertStringCommand" date="Tue Dec 05 17:53:11 EST 2023" starttimestamp="1701807005597" timestamp="9785881" timestamp2="9785881">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5803" _type="InsertStringCommand" date="Tue Dec 05 17:53:11 EST 2023" starttimestamp="1701807005597" timestamp="9785881" timestamp2="9785881">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5805" _type="InsertStringCommand" date="Tue Dec 05 17:53:11 EST 2023" starttimestamp="1701807005597" timestamp="9785960" timestamp2="9785960">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5806" _type="InsertStringCommand" date="Tue Dec 05 17:53:11 EST 2023" starttimestamp="1701807005597" timestamp="9785960" timestamp2="9785960">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5808" _type="InsertStringCommand" date="Tue Dec 05 17:53:11 EST 2023" starttimestamp="1701807005597" timestamp="9786074" timestamp2="9786074">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5809" _type="InsertStringCommand" date="Tue Dec 05 17:53:11 EST 2023" starttimestamp="1701807005597" timestamp="9786074" timestamp2="9786074">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5812" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:12 EST 2023" starttimestamp="1701807005597" timestamp="9787053" />
  <Command __id="5813" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:12 EST 2023" starttimestamp="1701807005597" timestamp="9787053" />
  <Command __id="5815" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:12 EST 2023" starttimestamp="1701807005597" timestamp="9787161" />
  <Command __id="5816" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:12 EST 2023" starttimestamp="1701807005597" timestamp="9787161" />
  <Command __id="5818" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:12 EST 2023" starttimestamp="1701807005597" timestamp="9787269" />
  <Command __id="5819" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:12 EST 2023" starttimestamp="1701807005597" timestamp="9787269" />
  <Command __id="5821" _type="InsertStringCommand" date="Tue Dec 05 17:53:14 EST 2023" starttimestamp="1701807005597" timestamp="9789107" timestamp2="9789107">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5822" _type="InsertStringCommand" date="Tue Dec 05 17:53:14 EST 2023" starttimestamp="1701807005597" timestamp="9789107" timestamp2="9789107">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="5824" _type="InsertStringCommand" date="Tue Dec 05 17:53:14 EST 2023" starttimestamp="1701807005597" timestamp="9789177" timestamp2="9789177">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5825" _type="InsertStringCommand" date="Tue Dec 05 17:53:14 EST 2023" starttimestamp="1701807005597" timestamp="9789177" timestamp2="9789177">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5827" _type="InsertStringCommand" date="Tue Dec 05 17:53:14 EST 2023" starttimestamp="1701807005597" timestamp="9789286" timestamp2="9789286">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5828" _type="InsertStringCommand" date="Tue Dec 05 17:53:14 EST 2023" starttimestamp="1701807005597" timestamp="9789286" timestamp2="9789286">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5830" _type="InsertStringCommand" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791007" timestamp2="9791007">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5831" _type="InsertStringCommand" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791007" timestamp2="9791007">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5833" _type="InsertStringCommand" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791069" timestamp2="9791069">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5834" _type="InsertStringCommand" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791069" timestamp2="9791069">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5836" _type="InsertStringCommand" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791121" timestamp2="9791121">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5837" _type="InsertStringCommand" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791121" timestamp2="9791121">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5839" _type="InsertStringCommand" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791173" timestamp2="9791173">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5840" _type="InsertStringCommand" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791173" timestamp2="9791173">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5842" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791378" />
  <Command __id="5843" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:16 EST 2023" starttimestamp="1701807005597" timestamp="9791378" />
  <Command __id="5845" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791484" />
  <Command __id="5846" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791484" />
  <Command __id="5848" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791607" />
  <Command __id="5849" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791607" />
  <Command __id="5851" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791751" />
  <Command __id="5852" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791751" />
  <Command __id="5854" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791887" timestamp2="9791887">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5855" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791887" timestamp2="9791887">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5857" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791930" timestamp2="9791930">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5858" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791930" timestamp2="9791930">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5860" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791987" timestamp2="9791987">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5861" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9791987" timestamp2="9791987">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5863" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9792060" timestamp2="9792060">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5864" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9792060" timestamp2="9792060">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5866" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9792273" timestamp2="9792273">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5867" _type="InsertStringCommand" date="Tue Dec 05 17:53:17 EST 2023" starttimestamp="1701807005597" timestamp="9792273" timestamp2="9792273">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5869" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:18 EST 2023" starttimestamp="1701807005597" timestamp="9792663" />
  <DocumentChange __id="5820" _type="Insert" date="Tue Dec 05 17:53:14 EST 2023" docASTNodeCount="176" docActiveCodeLength="1041" docExpressionCount="131" docLength="1041" length="8" offset="612" repeat="7" starttimestamp="1701807005597" timestamp="9789106" timestamp2="9791173">
    <text><![CDATA[if(temp)]]></text>
  </DocumentChange>
  <DocumentChange __id="5841" _type="Delete" date="Tue Dec 05 17:53:16 EST 2023" docASTNodeCount="163" docActiveCodeLength="1037" docExpressionCount="125" docLength="1037" endLine="16" length="4" offset="615" repeat="4" startLine="16" starttimestamp="1701807005597" timestamp="9791377" timestamp2="9791750">
    <text><![CDATA[temp]]></text>
  </DocumentChange>
  <DocumentChange __id="5853" _type="Insert" date="Tue Dec 05 17:53:17 EST 2023" docASTNodeCount="176" docActiveCodeLength="1042" docExpressionCount="131" docLength="1042" length="5" offset="615" repeat="5" starttimestamp="1701807005597" timestamp="9791886" timestamp2="9792272">
    <text><![CDATA[templ]]></text>
  </DocumentChange>
  <DocumentChange __id="5868" _type="Delete" date="Tue Dec 05 17:53:18 EST 2023" docASTNodeCount="176" docActiveCodeLength="1041" docExpressionCount="131" docLength="1041" endLine="16" length="1" offset="619" startLine="16" starttimestamp="1701807005597" timestamp="9792661">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="5870" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:18 EST 2023" starttimestamp="1701807005597" timestamp="9792663" />
  <DocumentChange __id="5871" _type="Insert" date="Tue Dec 05 17:53:18 EST 2023" docASTNodeCount="178" docActiveCodeLength="1045" docExpressionCount="133" docLength="1045" length="4" offset="619" repeat="4" starttimestamp="1701807005597" timestamp="9792869" timestamp2="9794126">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <Command __id="5872" _type="InsertStringCommand" date="Tue Dec 05 17:53:18 EST 2023" starttimestamp="1701807005597" timestamp="9792869" timestamp2="9792869">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5873" _type="InsertStringCommand" date="Tue Dec 05 17:53:18 EST 2023" starttimestamp="1701807005597" timestamp="9792869" timestamp2="9792869">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5874" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:53:18 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="9792874" />
  <Command __id="5878" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:53:19 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="9794352" />
  <DocumentChange __id="5879" _type="Replace" date="Tue Dec 05 17:53:19 EST 2023" docASTNodeCount="178" docActiveCodeLength="1052" docExpressionCount="133" docLength="1052" endLine="16" insertionLength="10" int_docASTNodeCount="176" int_docActiveCodeLength="1042" int_docExpressionCount="131" int_docLength="1042" length="3" offset="620" startLine="16" starttimestamp="1701807005597" timestamp="9794353">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getClass()]]></insertedText>
  </DocumentChange>
  <Command __id="5880" _type="InsertStringCommand" date="Tue Dec 05 17:53:19 EST 2023" starttimestamp="1701807005597" timestamp="9794356" timestamp2="9794356">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5881" _type="InsertStringCommand" date="Tue Dec 05 17:53:19 EST 2023" starttimestamp="1701807005597" timestamp="9794356" timestamp2="9794356">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5882" _type="Insert" date="Tue Dec 05 17:53:23 EST 2023" docASTNodeCount="180" docActiveCodeLength="1054" docExpressionCount="135" docLength="1054" length="2" offset="630" repeat="2" starttimestamp="1701807005597" timestamp="9797945" timestamp2="9798570">
    <text><![CDATA[.e]]></text>
  </DocumentChange>
  <Command __id="5883" _type="InsertStringCommand" date="Tue Dec 05 17:53:23 EST 2023" starttimestamp="1701807005597" timestamp="9797945" timestamp2="9797945">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5884" _type="InsertStringCommand" date="Tue Dec 05 17:53:23 EST 2023" starttimestamp="1701807005597" timestamp="9797945" timestamp2="9797945">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5885" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:53:23 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="9797953" />
  <Command __id="5887" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:53:24 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="9799083" />
  <DocumentChange __id="5888" _type="Replace" date="Tue Dec 05 17:53:24 EST 2023" docASTNodeCount="181" docActiveCodeLength="1077" docExpressionCount="136" docLength="1077" endLine="16" insertionLength="24" int_docASTNodeCount="178" int_docActiveCodeLength="1053" int_docExpressionCount="133" int_docLength="1053" length="1" offset="631" startLine="16" starttimestamp="1701807005597" timestamp="9799085">
    <deletedText><![CDATA[e]]></deletedText>
    <insertedText><![CDATA[equals(childEnvironment)]]></insertedText>
  </DocumentChange>
  <Command __id="5889" _type="InsertStringCommand" date="Tue Dec 05 17:53:24 EST 2023" starttimestamp="1701807005597" timestamp="9799102" timestamp2="9799102">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5890" _type="InsertStringCommand" date="Tue Dec 05 17:53:24 EST 2023" starttimestamp="1701807005597" timestamp="9799102" timestamp2="9799102">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5891" _type="Replace" date="Tue Dec 05 17:53:25 EST 2023" docASTNodeCount="181" docActiveCodeLength="1062" docExpressionCount="136" docLength="1062" endLine="16" insertionLength="1" int_docASTNodeCount="180" int_docActiveCodeLength="1061" int_docExpressionCount="135" int_docLength="1061" length="16" offset="638" startLine="16" starttimestamp="1701807005597" timestamp="9800112">
    <deletedText><![CDATA[childEnvironment]]></deletedText>
    <insertedText><![CDATA[L]]></insertedText>
  </DocumentChange>
  <Command __id="5892" _type="InsertStringCommand" date="Tue Dec 05 17:53:25 EST 2023" starttimestamp="1701807005597" timestamp="9800115" timestamp2="9800115">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5893" _type="InsertStringCommand" date="Tue Dec 05 17:53:25 EST 2023" starttimestamp="1701807005597" timestamp="9800115" timestamp2="9800115">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5895" _type="InsertStringCommand" date="Tue Dec 05 17:53:25 EST 2023" starttimestamp="1701807005597" timestamp="9800312" timestamp2="9800312">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5896" _type="InsertStringCommand" date="Tue Dec 05 17:53:25 EST 2023" starttimestamp="1701807005597" timestamp="9800312" timestamp2="9800312">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5898" _type="InsertStringCommand" date="Tue Dec 05 17:53:25 EST 2023" starttimestamp="1701807005597" timestamp="9800361" timestamp2="9800361">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5899" _type="InsertStringCommand" date="Tue Dec 05 17:53:25 EST 2023" starttimestamp="1701807005597" timestamp="9800361" timestamp2="9800361">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5901" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9800496" timestamp2="9800496">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="5902" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9800496" timestamp2="9800496">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="5904" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9800675" timestamp2="9800675">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5905" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9800675" timestamp2="9800675">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5907" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9800803" timestamp2="9800803">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5908" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9800803" timestamp2="9800803">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5910" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9800951" timestamp2="9800951">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5911" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9800951" timestamp2="9800951">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5912" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:53:26 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="9800955" />
  <Command __id="5913" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:53:26 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="9800971" />
  <Command __id="5915" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9801220" timestamp2="9801220">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5916" _type="InsertStringCommand" date="Tue Dec 05 17:53:26 EST 2023" starttimestamp="1701807005597" timestamp="9801220" timestamp2="9801220">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5918" _type="InsertStringCommand" date="Tue Dec 05 17:53:27 EST 2023" starttimestamp="1701807005597" timestamp="9801730" timestamp2="9801730">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5919" _type="InsertStringCommand" date="Tue Dec 05 17:53:27 EST 2023" starttimestamp="1701807005597" timestamp="9801730" timestamp2="9801730">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5921" _type="InsertStringCommand" date="Tue Dec 05 17:53:27 EST 2023" starttimestamp="1701807005597" timestamp="9801822" timestamp2="9801822">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5922" _type="InsertStringCommand" date="Tue Dec 05 17:53:27 EST 2023" starttimestamp="1701807005597" timestamp="9801822" timestamp2="9801822">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5924" _type="InsertStringCommand" date="Tue Dec 05 17:53:27 EST 2023" starttimestamp="1701807005597" timestamp="9801888" timestamp2="9801888">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5925" _type="InsertStringCommand" date="Tue Dec 05 17:53:27 EST 2023" starttimestamp="1701807005597" timestamp="9801888" timestamp2="9801888">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5927" _type="InsertStringCommand" date="Tue Dec 05 17:53:27 EST 2023" starttimestamp="1701807005597" timestamp="9802043" timestamp2="9802043">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5928" _type="InsertStringCommand" date="Tue Dec 05 17:53:27 EST 2023" starttimestamp="1701807005597" timestamp="9802043" timestamp2="9802043">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5929" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:53:28 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="9802842" />
  <Command __id="5930" _type="MoveCaretCommand" caretOffset="418" date="Tue Dec 05 17:53:28 EST 2023" docOffset="652" starttimestamp="1701807005597" timestamp="9802927" />
  <Command __id="5931" _type="MoveCaretCommand" caretOffset="418" date="Tue Dec 05 17:53:28 EST 2023" docOffset="652" starttimestamp="1701807005597" timestamp="9802927" />
  <Command __id="5933" _type="InsertStringCommand" date="Tue Dec 05 17:53:29 EST 2023" starttimestamp="1701807005597" timestamp="9803869" timestamp2="9803869">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="5934" _type="InsertStringCommand" date="Tue Dec 05 17:53:29 EST 2023" starttimestamp="1701807005597" timestamp="9803869" timestamp2="9803869">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="5936" _type="InsertStringCommand" date="Tue Dec 05 17:53:29 EST 2023" starttimestamp="1701807005597" timestamp="9804051" timestamp2="9804051">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5937" _type="InsertStringCommand" date="Tue Dec 05 17:53:29 EST 2023" starttimestamp="1701807005597" timestamp="9804051" timestamp2="9804051">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5894" _type="Insert" date="Tue Dec 05 17:53:25 EST 2023" docASTNodeCount="183" docActiveCodeLength="1073" docExpressionCount="137" docLength="1073" length="11" offset="639" repeat="11" starttimestamp="1701807005597" timestamp="9800312" timestamp2="9802043">
    <text><![CDATA[mabda.class]]></text>
  </DocumentChange>
  <DocumentChange __id="5932" _type="Insert" date="Tue Dec 05 17:53:29 EST 2023" docASTNodeCount="182" docActiveCodeLength="1085" docExpressionCount="134" docLength="1085" length="12" offset="652" repeat="2" starttimestamp="1701807005597" timestamp="9803868" timestamp2="9804050">
    <text><![CDATA[ {
				
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="5940" _type="Insert" date="Tue Dec 05 17:53:31 EST 2023" docASTNodeCount="184" docActiveCodeLength="1086" docExpressionCount="136" docLength="1086" length="1" offset="641" starttimestamp="1701807005597" timestamp="9806314">
    <text><![CDATA[]]]></text>
  </DocumentChange>
  <DocumentChange __id="5943" _type="Delete" date="Tue Dec 05 17:53:32 EST 2023" docASTNodeCount="182" docActiveCodeLength="1083" docExpressionCount="134" docLength="1083" endLine="16" length="3" offset="639" repeat="3" startLine="16" starttimestamp="1701807005597" timestamp="9806446" timestamp2="9806978">
    <text><![CDATA[ma]]]></text>
  </DocumentChange>
  <DocumentChange __id="5952" _type="Insert" date="Tue Dec 05 17:53:32 EST 2023" docASTNodeCount="182" docActiveCodeLength="1085" docExpressionCount="134" docLength="1085" length="2" offset="639" repeat="2" starttimestamp="1701807005597" timestamp="9807122" timestamp2="9807194">
    <text><![CDATA[am]]></text>
  </DocumentChange>
  <Command __id="5938" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:53:31 EST 2023" docOffset="641" starttimestamp="1701807005597" timestamp="9806101" />
  <Command __id="5939" _type="MoveCaretCommand" caretOffset="407" date="Tue Dec 05 17:53:31 EST 2023" docOffset="641" starttimestamp="1701807005597" timestamp="9806101" />
  <Command __id="5941" _type="InsertStringCommand" date="Tue Dec 05 17:53:31 EST 2023" starttimestamp="1701807005597" timestamp="9806315" timestamp2="9806315">
    <data><![CDATA[]]]></data>
  </Command>
  <Command __id="5942" _type="InsertStringCommand" date="Tue Dec 05 17:53:31 EST 2023" starttimestamp="1701807005597" timestamp="9806315" timestamp2="9806315">
    <data><![CDATA[]]]></data>
  </Command>
  <Command __id="5944" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9806447" />
  <Command __id="5945" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9806447" />
  <Command __id="5947" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9806684" />
  <Command __id="5948" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9806684" />
  <Command __id="5950" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9806980" />
  <Command __id="5951" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9806980" />
  <Command __id="5953" _type="InsertStringCommand" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9807126" timestamp2="9807126">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5954" _type="InsertStringCommand" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9807126" timestamp2="9807126">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5956" _type="InsertStringCommand" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9807196" timestamp2="9807196">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5957" _type="InsertStringCommand" date="Tue Dec 05 17:53:32 EST 2023" starttimestamp="1701807005597" timestamp="9807196" timestamp2="9807196">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5958" _type="MoveCaretCommand" caretOffset="398" date="Tue Dec 05 17:53:33 EST 2023" docOffset="632" starttimestamp="1701807005597" timestamp="9808105" />
  <Command __id="5959" _type="MoveCaretCommand" caretOffset="398" date="Tue Dec 05 17:53:33 EST 2023" docOffset="632" starttimestamp="1701807005597" timestamp="9808105" />
  <Command __id="5960" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 17:53:34 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="9808659" />
  <Command __id="5961" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 17:53:34 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="9808659" />
  <Command __id="5962" _type="MoveCaretCommand" caretOffset="382" date="Tue Dec 05 17:53:35 EST 2023" docOffset="616" starttimestamp="1701807005597" timestamp="9809484" />
  <Command __id="5963" _type="MoveCaretCommand" caretOffset="382" date="Tue Dec 05 17:53:35 EST 2023" docOffset="616" starttimestamp="1701807005597" timestamp="9809484" />
  <Command __id="5964" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:53:35 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="9809984" />
  <Command __id="5965" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:53:35 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="9809984" />
  <Command __id="5967" _type="InsertStringCommand" date="Tue Dec 05 17:53:37 EST 2023" starttimestamp="1701807005597" timestamp="9811468" timestamp2="9811468">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5968" _type="InsertStringCommand" date="Tue Dec 05 17:53:37 EST 2023" starttimestamp="1701807005597" timestamp="9811468" timestamp2="9811468">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="5969" _type="MoveCaretCommand" caretOffset="418" date="Tue Dec 05 17:53:37 EST 2023" docOffset="652" starttimestamp="1701807005597" timestamp="9812350" />
  <Command __id="5970" _type="MoveCaretCommand" caretOffset="418" date="Tue Dec 05 17:53:37 EST 2023" docOffset="652" starttimestamp="1701807005597" timestamp="9812352" />
  <Command __id="5972" _type="InsertStringCommand" date="Tue Dec 05 17:53:38 EST 2023" starttimestamp="1701807005597" timestamp="9812848" timestamp2="9812848">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="5973" _type="InsertStringCommand" date="Tue Dec 05 17:53:38 EST 2023" starttimestamp="1701807005597" timestamp="9812848" timestamp2="9812848">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="5974" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:53:39 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="9813832" />
  <Command __id="5975" _type="MoveCaretCommand" caretOffset="381" date="Tue Dec 05 17:53:39 EST 2023" docOffset="615" starttimestamp="1701807005597" timestamp="9813832" />
  <Command __id="5977" _type="InsertStringCommand" date="Tue Dec 05 17:53:39 EST 2023" starttimestamp="1701807005597" timestamp="9814032" timestamp2="9814032">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="5978" _type="InsertStringCommand" date="Tue Dec 05 17:53:39 EST 2023" starttimestamp="1701807005597" timestamp="9814032" timestamp2="9814032">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="5979" _type="MoveCaretCommand" caretOffset="445" date="Tue Dec 05 17:53:40 EST 2023" docOffset="679" starttimestamp="1701807005597" timestamp="9814484" />
  <Command __id="5980" _type="MoveCaretCommand" caretOffset="445" date="Tue Dec 05 17:53:40 EST 2023" docOffset="679" starttimestamp="1701807005597" timestamp="9814484" />
  <Command __id="5981" _type="InsertStringCommand" date="Tue Dec 05 17:53:42 EST 2023" starttimestamp="1701807005597" timestamp="9817151" timestamp2="9817151">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5982" _type="InsertStringCommand" date="Tue Dec 05 17:53:42 EST 2023" starttimestamp="1701807005597" timestamp="9817151" timestamp2="9817151">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5983" _type="MoveCaretCommand" caretOffset="454" date="Tue Dec 05 17:53:44 EST 2023" docOffset="688" starttimestamp="1701807005597" timestamp="9818593" />
  <Command __id="5984" _type="MoveCaretCommand" caretOffset="454" date="Tue Dec 05 17:53:44 EST 2023" docOffset="688" starttimestamp="1701807005597" timestamp="9818593" />
  <Command __id="5985" _type="SelectTextCommand" caretOffset="437" date="Tue Dec 05 17:53:46 EST 2023" end="484" start="437" starttimestamp="1701807005597" timestamp="9820569" />
  <Command __id="5986" _type="SelectTextCommand" caretOffset="437" date="Tue Dec 05 17:53:46 EST 2023" end="484" start="437" starttimestamp="1701807005597" timestamp="9820569" />
  <Command __id="5988" _type="CutCommand" date="Tue Dec 05 17:53:46 EST 2023" starttimestamp="1701807005597" timestamp="9820931" />
  <Command __id="5989" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 17:53:46 EST 2023" docOffset="667" starttimestamp="1701807005597" timestamp="9821247" />
  <Command __id="5990" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 17:53:46 EST 2023" docOffset="667" starttimestamp="1701807005597" timestamp="9821247" />
  <Command __id="5992" _type="PasteCommand" date="Tue Dec 05 17:53:46 EST 2023" starttimestamp="1701807005597" timestamp="9821391" />
  <Command __id="5994" _type="UndoCommand" date="Tue Dec 05 17:53:47 EST 2023" starttimestamp="1701807005597" timestamp="9821830" />
  <Command __id="5995" _type="MoveCaretCommand" caretOffset="428" date="Tue Dec 05 17:53:47 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="9822090" />
  <Command __id="5996" _type="MoveCaretCommand" caretOffset="428" date="Tue Dec 05 17:53:47 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="9822090" />
  <Command __id="5998" _type="PasteCommand" date="Tue Dec 05 17:53:47 EST 2023" starttimestamp="1701807005597" timestamp="9822154" />
  <Command __id="5999" _type="MoveCaretCommand" caretOffset="480" date="Tue Dec 05 17:53:48 EST 2023" docOffset="714" starttimestamp="1701807005597" timestamp="9822736" />
  <Command __id="6000" _type="MoveCaretCommand" caretOffset="480" date="Tue Dec 05 17:53:48 EST 2023" docOffset="714" starttimestamp="1701807005597" timestamp="9822736" />
  <Command __id="6002" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9823468" timestamp2="9823468">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6003" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9823468" timestamp2="9823468">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6005" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9823523" timestamp2="9823523">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6006" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9823523" timestamp2="9823523">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6008" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9823630" timestamp2="9823630">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6009" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9823630" timestamp2="9823630">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6011" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9823728" timestamp2="9823728">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6012" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9823728" timestamp2="9823728">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6014" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9824005" timestamp2="9824005">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6015" _type="InsertStringCommand" date="Tue Dec 05 17:53:49 EST 2023" starttimestamp="1701807005597" timestamp="9824006" timestamp2="9824006">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="6017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:50 EST 2023" starttimestamp="1701807005597" timestamp="9824494" />
  <Command __id="6018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:50 EST 2023" starttimestamp="1701807005597" timestamp="9824494" />
  <DocumentChange __id="5966" _type="Insert" date="Tue Dec 05 17:53:37 EST 2023" docASTNodeCount="184" docActiveCodeLength="1086" docExpressionCount="135" docLength="1086" length="1" offset="615" starttimestamp="1701807005597" timestamp="9811466">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="5971" _type="Insert" date="Tue Dec 05 17:53:38 EST 2023" docASTNodeCount="183" docActiveCodeLength="1087" docExpressionCount="135" docLength="1087" length="1" offset="652" starttimestamp="1701807005597" timestamp="9812845">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="5976" _type="Insert" date="Tue Dec 05 17:53:39 EST 2023" docASTNodeCount="184" docActiveCodeLength="1088" docExpressionCount="136" docLength="1088" length="1" offset="615" starttimestamp="1701807005597" timestamp="9814029">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <DocumentChange __id="5987" _type="Delete" date="Tue Dec 05 17:53:46 EST 2023" docASTNodeCount="172" docActiveCodeLength="1041" docExpressionCount="128" docLength="1041" endLine="19" length="47" offset="671" startLine="19" starttimestamp="1701807005597" timestamp="9820926">
    <text><![CDATA[Lambda lambda = (Lambda)temp.eval(environment);]]></text>
  </DocumentChange>
  <DocumentChange __id="5991" _type="Insert" date="Tue Dec 05 17:53:46 EST 2023" docASTNodeCount="184" docActiveCodeLength="1088" docExpressionCount="136" docLength="1088" length="47" offset="667" starttimestamp="1701807005597" timestamp="9821389">
    <text><![CDATA[Lambda lambda = (Lambda)temp.eval(environment);]]></text>
  </DocumentChange>
  <DocumentChange __id="5993" _type="Delete" date="Tue Dec 05 17:53:47 EST 2023" docASTNodeCount="172" docActiveCodeLength="1041" docExpressionCount="128" docLength="1041" endLine="18" length="47" offset="667" startLine="18" starttimestamp="1701807005597" timestamp="9821826">
    <text><![CDATA[Lambda lambda = (Lambda)temp.eval(environment);]]></text>
  </DocumentChange>
  <DocumentChange __id="5997" _type="Replace" date="Tue Dec 05 17:53:47 EST 2023" docASTNodeCount="184" docActiveCodeLength="1088" docExpressionCount="136" docLength="1088" endLine="17" insertionLength="51" int_docASTNodeCount="172" int_docActiveCodeLength="1037" int_docExpressionCount="128" int_docLength="1037" length="4" offset="658" startLine="17" starttimestamp="1701807005597" timestamp="9822152">
    <deletedText><![CDATA[				]]></deletedText>
    <insertedText><![CDATA[				Lambda lambda = (Lambda)temp.eval(environment);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6001" _type="Insert" date="Tue Dec 05 17:53:49 EST 2023" docASTNodeCount="128" docActiveCodeLength="1093" docExpressionCount="94" docLength="1093" length="5" offset="714" repeat="5" starttimestamp="1701807005597" timestamp="9823466" timestamp2="9824004">
    <text><![CDATA[elseP]]></text>
  </DocumentChange>
  <DocumentChange __id="6016" _type="Delete" date="Tue Dec 05 17:53:50 EST 2023" docASTNodeCount="156" docActiveCodeLength="1092" docExpressionCount="116" docLength="1092" endLine="18" length="1" offset="718" startLine="18" starttimestamp="1701807005597" timestamp="9824493">
    <text><![CDATA[P]]></text>
  </DocumentChange>
  <DocumentChange __id="6019" _type="Insert" date="Tue Dec 05 17:53:50 EST 2023" docASTNodeCount="117" docActiveCodeLength="1106" docExpressionCount="85" docLength="1106" length="14" offset="718" repeat="4" starttimestamp="1701807005597" timestamp="9824822" timestamp2="9826727">
    <text><![CDATA[ {
				Lm
			}]]></text>
  </DocumentChange>
  <Command __id="6020" _type="InsertStringCommand" date="Tue Dec 05 17:53:50 EST 2023" starttimestamp="1701807005597" timestamp="9824823" timestamp2="9824823">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="6021" _type="InsertStringCommand" date="Tue Dec 05 17:53:50 EST 2023" starttimestamp="1701807005597" timestamp="9824823" timestamp2="9824823">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="6023" _type="InsertStringCommand" date="Tue Dec 05 17:53:50 EST 2023" starttimestamp="1701807005597" timestamp="9825154" timestamp2="9825154">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6024" _type="InsertStringCommand" date="Tue Dec 05 17:53:50 EST 2023" starttimestamp="1701807005597" timestamp="9825154" timestamp2="9825154">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6026" _type="InsertStringCommand" date="Tue Dec 05 17:53:52 EST 2023" starttimestamp="1701807005597" timestamp="9826514" timestamp2="9826514">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="6027" _type="InsertStringCommand" date="Tue Dec 05 17:53:52 EST 2023" starttimestamp="1701807005597" timestamp="9826514" timestamp2="9826514">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="6029" _type="InsertStringCommand" date="Tue Dec 05 17:53:52 EST 2023" starttimestamp="1701807005597" timestamp="9826728" timestamp2="9826728">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6030" _type="InsertStringCommand" date="Tue Dec 05 17:53:52 EST 2023" starttimestamp="1701807005597" timestamp="9826728" timestamp2="9826728">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6032" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:52 EST 2023" starttimestamp="1701807005597" timestamp="9827367" />
  <Command __id="6033" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:52 EST 2023" starttimestamp="1701807005597" timestamp="9827367" />
  <Command __id="6035" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:53 EST 2023" starttimestamp="1701807005597" timestamp="9827487" />
  <Command __id="6036" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:53 EST 2023" starttimestamp="1701807005597" timestamp="9827487" />
  <Command __id="6037" _type="MoveCaretCommand" caretOffset="374" date="Tue Dec 05 17:53:54 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="9828518" />
  <Command __id="6038" _type="MoveCaretCommand" caretOffset="374" date="Tue Dec 05 17:53:54 EST 2023" docOffset="608" starttimestamp="1701807005597" timestamp="9828519" />
  <Command __id="6040" _type="InsertStringCommand" date="Tue Dec 05 17:53:54 EST 2023" starttimestamp="1701807005597" timestamp="9828712" timestamp2="9828712">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6041" _type="InsertStringCommand" date="Tue Dec 05 17:53:54 EST 2023" starttimestamp="1701807005597" timestamp="9828712" timestamp2="9828712">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6043" _type="InsertStringCommand" date="Tue Dec 05 17:53:54 EST 2023" starttimestamp="1701807005597" timestamp="9829028" timestamp2="9829028">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="6044" _type="InsertStringCommand" date="Tue Dec 05 17:53:54 EST 2023" starttimestamp="1701807005597" timestamp="9829028" timestamp2="9829028">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="6046" _type="InsertStringCommand" date="Tue Dec 05 17:53:55 EST 2023" starttimestamp="1701807005597" timestamp="9829605" timestamp2="9829605">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6047" _type="InsertStringCommand" date="Tue Dec 05 17:53:55 EST 2023" starttimestamp="1701807005597" timestamp="9829605" timestamp2="9829605">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6049" _type="InsertStringCommand" date="Tue Dec 05 17:53:55 EST 2023" starttimestamp="1701807005597" timestamp="9829724" timestamp2="9829724">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6050" _type="InsertStringCommand" date="Tue Dec 05 17:53:55 EST 2023" starttimestamp="1701807005597" timestamp="9829724" timestamp2="9829724">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6052" _type="InsertStringCommand" date="Tue Dec 05 17:53:55 EST 2023" starttimestamp="1701807005597" timestamp="9829807" timestamp2="9829807">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6053" _type="InsertStringCommand" date="Tue Dec 05 17:53:55 EST 2023" starttimestamp="1701807005597" timestamp="9829807" timestamp2="9829807">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6055" _type="InsertStringCommand" date="Tue Dec 05 17:53:55 EST 2023" starttimestamp="1701807005597" timestamp="9830040" timestamp2="9830040">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6056" _type="InsertStringCommand" date="Tue Dec 05 17:53:55 EST 2023" starttimestamp="1701807005597" timestamp="9830040" timestamp2="9830040">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6058" _type="InsertStringCommand" date="Tue Dec 05 17:53:56 EST 2023" starttimestamp="1701807005597" timestamp="9830581" timestamp2="9830581">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6059" _type="InsertStringCommand" date="Tue Dec 05 17:53:56 EST 2023" starttimestamp="1701807005597" timestamp="9830581" timestamp2="9830581">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6061" _type="InsertStringCommand" date="Tue Dec 05 17:53:56 EST 2023" starttimestamp="1701807005597" timestamp="9830904" timestamp2="9830904">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6062" _type="InsertStringCommand" date="Tue Dec 05 17:53:56 EST 2023" starttimestamp="1701807005597" timestamp="9830904" timestamp2="9830904">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6064" _type="InsertStringCommand" date="Tue Dec 05 17:53:56 EST 2023" starttimestamp="1701807005597" timestamp="9831069" timestamp2="9831069">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6065" _type="InsertStringCommand" date="Tue Dec 05 17:53:56 EST 2023" starttimestamp="1701807005597" timestamp="9831069" timestamp2="9831069">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6067" _type="InsertStringCommand" date="Tue Dec 05 17:53:56 EST 2023" starttimestamp="1701807005597" timestamp="9831222" timestamp2="9831222">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6068" _type="InsertStringCommand" date="Tue Dec 05 17:53:56 EST 2023" starttimestamp="1701807005597" timestamp="9831222" timestamp2="9831222">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6070" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9831742" timestamp2="9831742">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6071" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9831742" timestamp2="9831742">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6073" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9831884" timestamp2="9831884">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6074" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9831884" timestamp2="9831884">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6076" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9832103" timestamp2="9832103">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6077" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9832103" timestamp2="9832103">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6079" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9832177" timestamp2="9832177">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6080" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9832177" timestamp2="9832177">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6082" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9832319" timestamp2="9832319">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6083" _type="InsertStringCommand" date="Tue Dec 05 17:53:57 EST 2023" starttimestamp="1701807005597" timestamp="9832319" timestamp2="9832319">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6084" _type="MoveCaretCommand" caretOffset="454" date="Tue Dec 05 17:53:59 EST 2023" docOffset="688" starttimestamp="1701807005597" timestamp="9833487" />
  <Command __id="6085" _type="MoveCaretCommand" caretOffset="454" date="Tue Dec 05 17:53:59 EST 2023" docOffset="688" starttimestamp="1701807005597" timestamp="9833488" />
  <Command __id="6086" _type="MoveCaretCommand" caretOffset="453" date="Tue Dec 05 17:53:59 EST 2023" docOffset="687" starttimestamp="1701807005597" timestamp="9834246" />
  <Command __id="6087" _type="MoveCaretCommand" caretOffset="453" date="Tue Dec 05 17:53:59 EST 2023" docOffset="687" starttimestamp="1701807005597" timestamp="9834247" />
  <Command __id="6089" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:59 EST 2023" starttimestamp="1701807005597" timestamp="9834354" />
  <Command __id="6090" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:53:59 EST 2023" starttimestamp="1701807005597" timestamp="9834354" />
  <Command __id="6092" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834485" />
  <Command __id="6093" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834485" />
  <Command __id="6095" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834588" />
  <Command __id="6096" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834588" />
  <Command __id="6098" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834731" />
  <Command __id="6099" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834731" />
  <Command __id="6101" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834843" />
  <Command __id="6102" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834843" />
  <Command __id="6104" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834973" />
  <Command __id="6105" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9834973" />
  <Command __id="6107" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9835125" />
  <Command __id="6108" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:00 EST 2023" starttimestamp="1701807005597" timestamp="9835126" />
  <Command __id="6109" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 17:54:01 EST 2023" docOffset="736" starttimestamp="1701807005597" timestamp="9835690" />
  <Command __id="6110" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 17:54:01 EST 2023" docOffset="736" starttimestamp="1701807005597" timestamp="9835690" />
  <Command __id="6112" _type="InsertStringCommand" date="Tue Dec 05 17:54:01 EST 2023" starttimestamp="1701807005597" timestamp="9835861" timestamp2="9835861">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6113" _type="InsertStringCommand" date="Tue Dec 05 17:54:01 EST 2023" starttimestamp="1701807005597" timestamp="9835861" timestamp2="9835861">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6115" _type="InsertStringCommand" date="Tue Dec 05 17:54:01 EST 2023" starttimestamp="1701807005597" timestamp="9835967" timestamp2="9835967">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6116" _type="InsertStringCommand" date="Tue Dec 05 17:54:01 EST 2023" starttimestamp="1701807005597" timestamp="9835968" timestamp2="9835968">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="6031" _type="Delete" date="Tue Dec 05 17:53:52 EST 2023" docASTNodeCount="185" docActiveCodeLength="1104" docExpressionCount="136" docLength="1104" endLine="19" length="2" offset="725" repeat="2" startLine="19" starttimestamp="1701807005597" timestamp="9827366" timestamp2="9827485">
    <text><![CDATA[Lm]]></text>
  </DocumentChange>
  <DocumentChange __id="6039" _type="Insert" date="Tue Dec 05 17:53:54 EST 2023" docASTNodeCount="190" docActiveCodeLength="1122" docExpressionCount="138" docLength="1122" length="18" offset="608" repeat="15" starttimestamp="1701807005597" timestamp="9828709" timestamp2="9832317">
    <text><![CDATA[
			Lambda lambda;]]></text>
  </DocumentChange>
  <DocumentChange __id="6088" _type="Delete" date="Tue Dec 05 17:53:59 EST 2023" docASTNodeCount="188" docActiveCodeLength="1115" docExpressionCount="138" docLength="1115" endLine="18" length="7" offset="680" repeat="7" startLine="18" starttimestamp="1701807005597" timestamp="9834352" timestamp2="9835124">
    <text><![CDATA[Lambda ]]></text>
  </DocumentChange>
  <DocumentChange __id="6111" _type="Insert" date="Tue Dec 05 17:54:01 EST 2023" docASTNodeCount="120" docActiveCodeLength="1119" docExpressionCount="87" docLength="1119" length="4" offset="736" repeat="4" starttimestamp="1701807005597" timestamp="9835860" timestamp2="9836587">
    <text><![CDATA[labm]]></text>
  </DocumentChange>
  <DocumentChange __id="6123" _type="Delete" date="Tue Dec 05 17:54:02 EST 2023" docASTNodeCount="120" docActiveCodeLength="1117" docExpressionCount="87" docLength="1117" endLine="20" length="2" offset="738" repeat="2" startLine="20" starttimestamp="1701807005597" timestamp="9836958" timestamp2="9837077">
    <text><![CDATA[bm]]></text>
  </DocumentChange>
  <DocumentChange __id="6129" _type="Insert" date="Tue Dec 05 17:54:02 EST 2023" docASTNodeCount="163" docActiveCodeLength="1124" docExpressionCount="121" docLength="1124" length="7" offset="738" repeat="7" starttimestamp="1701807005597" timestamp="9837203" timestamp2="9838005">
    <text><![CDATA[mbda = ]]></text>
  </DocumentChange>
  <Command __id="6118" _type="InsertStringCommand" date="Tue Dec 05 17:54:01 EST 2023" starttimestamp="1701807005597" timestamp="9836355" timestamp2="9836355">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6119" _type="InsertStringCommand" date="Tue Dec 05 17:54:01 EST 2023" starttimestamp="1701807005597" timestamp="9836355" timestamp2="9836355">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6121" _type="InsertStringCommand" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9836588" timestamp2="9836588">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6122" _type="InsertStringCommand" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9836588" timestamp2="9836588">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6124" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9836959" />
  <Command __id="6125" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9836959" />
  <Command __id="6127" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9837078" />
  <Command __id="6128" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9837078" />
  <Command __id="6130" _type="InsertStringCommand" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9837204" timestamp2="9837204">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6131" _type="InsertStringCommand" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9837204" timestamp2="9837204">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6133" _type="InsertStringCommand" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9837266" timestamp2="9837266">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6134" _type="InsertStringCommand" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9837266" timestamp2="9837266">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6136" _type="InsertStringCommand" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9837378" timestamp2="9837378">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6137" _type="InsertStringCommand" date="Tue Dec 05 17:54:02 EST 2023" starttimestamp="1701807005597" timestamp="9837378" timestamp2="9837378">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6139" _type="InsertStringCommand" date="Tue Dec 05 17:54:03 EST 2023" starttimestamp="1701807005597" timestamp="9837466" timestamp2="9837466">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6140" _type="InsertStringCommand" date="Tue Dec 05 17:54:03 EST 2023" starttimestamp="1701807005597" timestamp="9837466" timestamp2="9837466">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6142" _type="InsertStringCommand" date="Tue Dec 05 17:54:03 EST 2023" starttimestamp="1701807005597" timestamp="9837814" timestamp2="9837814">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6143" _type="InsertStringCommand" date="Tue Dec 05 17:54:03 EST 2023" starttimestamp="1701807005597" timestamp="9837815" timestamp2="9837815">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6145" _type="InsertStringCommand" date="Tue Dec 05 17:54:03 EST 2023" starttimestamp="1701807005597" timestamp="9837888" timestamp2="9837888">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="6146" _type="InsertStringCommand" date="Tue Dec 05 17:54:03 EST 2023" starttimestamp="1701807005597" timestamp="9837888" timestamp2="9837888">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="6148" _type="InsertStringCommand" date="Tue Dec 05 17:54:03 EST 2023" starttimestamp="1701807005597" timestamp="9838006" timestamp2="9838006">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6149" _type="InsertStringCommand" date="Tue Dec 05 17:54:03 EST 2023" starttimestamp="1701807005597" timestamp="9838006" timestamp2="9838006">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6151" _type="InsertStringCommand" date="Tue Dec 05 17:54:05 EST 2023" starttimestamp="1701807005597" timestamp="9840137" timestamp2="9840137">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6152" _type="InsertStringCommand" date="Tue Dec 05 17:54:05 EST 2023" starttimestamp="1701807005597" timestamp="9840137" timestamp2="9840137">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="6150" _type="Insert" date="Tue Dec 05 17:54:05 EST 2023" docASTNodeCount="185" docActiveCodeLength="1127" docExpressionCount="139" docLength="1127" length="3" offset="745" repeat="2" starttimestamp="1701807005597" timestamp="9840135" timestamp2="9840686">
    <text><![CDATA[(L)]]></text>
  </DocumentChange>
  <Command __id="6154" _type="InsertStringCommand" date="Tue Dec 05 17:54:06 EST 2023" starttimestamp="1701807005597" timestamp="9840687" timestamp2="9840687">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="6155" _type="InsertStringCommand" date="Tue Dec 05 17:54:06 EST 2023" starttimestamp="1701807005597" timestamp="9840687" timestamp2="9840687">
    <data><![CDATA[L]]></data>
  </Command>
  <DocumentChange __id="6156" _type="Delete" date="Tue Dec 05 17:54:07 EST 2023" docASTNodeCount="163" docActiveCodeLength="1124" docExpressionCount="121" docLength="1124" endLine="20" length="3" offset="745" repeat="3" startLine="20" starttimestamp="1701807005597" timestamp="9841786" timestamp2="9842814">
    <text><![CDATA[(L)]]></text>
  </DocumentChange>
  <Command __id="6157" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:07 EST 2023" starttimestamp="1701807005597" timestamp="9841788" />
  <Command __id="6158" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:07 EST 2023" starttimestamp="1701807005597" timestamp="9841788" />
  <Command __id="6161" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:08 EST 2023" starttimestamp="1701807005597" timestamp="9842815" />
  <Command __id="6162" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:08 EST 2023" starttimestamp="1701807005597" timestamp="9842815" />
  <DocumentChange __id="6163" _type="Insert" date="Tue Dec 05 17:54:09 EST 2023" docASTNodeCount="186" docActiveCodeLength="1133" docExpressionCount="140" docLength="1133" length="9" offset="745" repeat="9" starttimestamp="1701807005597" timestamp="9843414" timestamp2="9844471">
    <text><![CDATA[temp.eval]]></text>
  </DocumentChange>
  <Command __id="6164" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843416" timestamp2="9843416">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6165" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843416" timestamp2="9843416">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6167" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843488" timestamp2="9843488">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6168" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843488" timestamp2="9843488">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6170" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843569" timestamp2="9843569">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6171" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843569" timestamp2="9843569">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="6173" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843629" timestamp2="9843629">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6174" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843629" timestamp2="9843629">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6176" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843879" timestamp2="9843879">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6177" _type="InsertStringCommand" date="Tue Dec 05 17:54:09 EST 2023" starttimestamp="1701807005597" timestamp="9843879" timestamp2="9843879">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6178" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 17:54:09 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="9843883" />
  <Command __id="6183" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 17:54:10 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="9844907" />
  <DocumentChange __id="6184" _type="Replace" date="Tue Dec 05 17:54:10 EST 2023" docASTNodeCount="195" docActiveCodeLength="1152" docExpressionCount="144" docLength="1152" endLine="20" insertionLength="23" int_docASTNodeCount="165" int_docActiveCodeLength="1129" int_docExpressionCount="123" int_docLength="1129" length="4" offset="750" startLine="20" starttimestamp="1701807005597" timestamp="9844909">
    <deletedText><![CDATA[eval]]></deletedText>
    <insertedText><![CDATA[eval(childEnvironment);]]></insertedText>
  </DocumentChange>
  <Command __id="6185" _type="InsertStringCommand" date="Tue Dec 05 17:54:10 EST 2023" starttimestamp="1701807005597" timestamp="9844926" timestamp2="9844926">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6186" _type="InsertStringCommand" date="Tue Dec 05 17:54:10 EST 2023" starttimestamp="1701807005597" timestamp="9844926" timestamp2="9844926">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6188" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:10 EST 2023" starttimestamp="1701807005597" timestamp="9845147" />
  <Command __id="6189" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:10 EST 2023" starttimestamp="1701807005597" timestamp="9845148" />
  <Command __id="6191" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846453" />
  <Command __id="6192" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846453" />
  <Command __id="6194" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846549" />
  <Command __id="6195" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846549" />
  <Command __id="6197" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846663" />
  <Command __id="6198" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846663" />
  <Command __id="6200" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846781" />
  <Command __id="6201" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846781" />
  <Command __id="6203" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846923" />
  <Command __id="6204" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9846923" />
  <Command __id="6206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9847241" />
  <Command __id="6207" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:12 EST 2023" starttimestamp="1701807005597" timestamp="9847241" />
  <Command __id="6208" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:54:13 EST 2023" starttimestamp="1701807005597" timestamp="9847771" />
  <Command __id="6209" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue Dec 05 17:54:13 EST 2023" starttimestamp="1701807005597" timestamp="9847771" />
  <Command __id="6211" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:13 EST 2023" starttimestamp="1701807005597" timestamp="9847876" />
  <Command __id="6212" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 17:54:13 EST 2023" starttimestamp="1701807005597" timestamp="9847876" />
  <Command __id="6244" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:54:25 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9860368" type="Run" />
  <Command __id="6245" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:54:25 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9860368" type="Run" />
  <Command __id="6246" _type="PasteCommand" date="Tue Dec 05 17:54:26 EST 2023" starttimestamp="1701807005597" timestamp="9861093" />
  <Command __id="6247" _type="ShellCommand" date="Tue Dec 05 17:54:28 EST 2023" starttimestamp="1701807005597" timestamp="9863183" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6248" _type="ShellCommand" date="Tue Dec 05 17:54:29 EST 2023" starttimestamp="1701807005597" timestamp="9863890" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6249" _type="PasteCommand" date="Tue Dec 05 17:54:29 EST 2023" starttimestamp="1701807005597" timestamp="9864137" />
  <Command __id="6250" _type="ConsoleOutput" date="Tue Dec 05 17:54:30 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9864456" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)¶	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)¶	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6251" _type="ConsoleInput" date="Tue Dec 05 17:54:33 EST 2023" starttimestamp="1701807005597" timestamp="9868385" type="Exception">
    <outputString><![CDATA[(Lambda)(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="6252" _type="ConsoleOutput" date="Tue Dec 05 17:54:33 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9868389" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.util.NoSuchElementException: No value present
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Exception in thread "main" java.util.NoSuchElementException: No value present"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6253" _type="ConsoleOutput" date="Tue Dec 05 17:54:33 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9868391" type="ConsoleOutput">
    <outputString><![CDATA[	at java.base/java.util.Optional.get(Optional.java:148)
	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:19)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.util.NoSuchElementException: No value present"), Diff(INSERT,"	at java.base/java.util.Optional.get(Optional.java:148)¶	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:19)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6254" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:54:33 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9868396" type="Debug" />
  <Command __id="6255" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:54:33 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9868396" type="Run" />
  <Command __id="6256" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:54:33 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="9868396" type="Debug" />
  <Command __id="6257" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:54:33 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9868396" type="Run" />
  <Command __id="6258" _type="ShellCommand" date="Tue Dec 05 17:54:57 EST 2023" starttimestamp="1701807005597" timestamp="9892012" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6259" _type="ShellCommand" date="Tue Dec 05 17:55:03 EST 2023" starttimestamp="1701807005597" timestamp="9898081" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6260" _type="ShellCommand" date="Tue Dec 05 17:55:04 EST 2023" starttimestamp="1701807005597" timestamp="9898883" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="6187" _type="Delete" date="Tue Dec 05 17:54:10 EST 2023" docASTNodeCount="192" docActiveCodeLength="1129" docExpressionCount="141" docLength="1129" endLine="20" length="23" offset="749" repeat="8" startLine="20" starttimestamp="1701807005597" timestamp="9845145" timestamp2="9847875">
    <text><![CDATA[.eval(childEnvironment)]]></text>
  </DocumentChange>
  <DocumentChange __id="6218" _type="Insert" date="Tue Dec 05 17:54:16 EST 2023" docASTNodeCount="195" docActiveCodeLength="1137" docExpressionCount="143" docLength="1137" length="8" offset="745" starttimestamp="1701807005597" timestamp="9851203">
    <text><![CDATA[(Lambda)]]></text>
  </DocumentChange>
  <DocumentChange __id="6227" _type="Delete" date="Tue Dec 05 17:54:18 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" endLine="22" length="4" offset="763" repeat="4" startLine="21" starttimestamp="1701807005597" timestamp="9853340" timestamp2="9854299">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="6261" _type="ShellCommand" date="Tue Dec 05 17:55:22 EST 2023" starttimestamp="1701807005597" timestamp="9916442" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6262" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:55:27 EST 2023" docASTNodeCount="182" docActiveCodeLength="1013" docExpressionCount="110" docLength="1081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9922398">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.evaluator.Environment;import main.lisp.evaluator.environment.AbstractEnvironment;import main.lisp.evaluator.function.Function;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class EnvironmentImpl extends AbstractEnvironment{	public EnvironmentImpl() {		super();	}	public EnvironmentImpl(Environment parent) {		super(parent);	}	@Override	public void assign(IdentifierAtom arg0, SExpression arg1) {		put(arg0, arg1);	}	@Override	public void assignFun(IdentifierAtom arg0, Function arg1) {			}	@Override	public Environment copy() {		// TODO Auto-generated method stub		return null;	}	@Override	public Optional<SExpression> lookup(IdentifierAtom arg0) {		Optional<SExpression> retVal = get(arg0);		return retVal;	}	@Override	public Optional<Function> lookupFun(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Environment newChild() {		return new EnvironmentImpl(this);	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6263" _type="MoveCaretCommand" caretOffset="629" date="Tue Dec 05 17:55:28 EST 2023" docOffset="865" starttimestamp="1701807005597" timestamp="9922489" />
  <Command __id="6264" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:56:17 EST 2023" docASTNodeCount="128" docActiveCodeLength="738" docExpressionCount="94" docLength="738" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9971468">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6265" _type="SelectTextCommand" caretOffset="500" date="Tue Dec 05 17:56:17 EST 2023" end="500" start="490" starttimestamp="1701807005597" timestamp="9971564" />
  <Command __id="6266" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:56:20 EST 2023" docASTNodeCount="233" docActiveCodeLength="1329" docExpressionCount="157" docLength="1329" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9975206">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		SExpression body = expr.getTail();		IdentifierAtom ids[] = {};		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, body);		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, body);	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6267" _type="MoveCaretCommand" caretOffset="444" date="Tue Dec 05 17:56:20 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="9975285" />
  <Command __id="6270" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:56:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9985120" type="Run" />
  <Command __id="6271" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:56:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9985120" type="Run" />
  <Command __id="6272" _type="PasteCommand" date="Tue Dec 05 17:56:31 EST 2023" starttimestamp="1701807005597" timestamp="9985733" />
  <Command __id="6273" _type="ConsoleOutput" date="Tue Dec 05 17:56:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9986171" type="ConsoleOutput">
    <outputString><![CDATA[42
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.util.Optional.get(Optional.java:148)¶	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:19)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"42"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6274" _type="ShellCommand" date="Tue Dec 05 17:56:35 EST 2023" starttimestamp="1701807005597" timestamp="9989642" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6275" _type="ShellCommand" date="Tue Dec 05 17:56:35 EST 2023" starttimestamp="1701807005597" timestamp="9990207" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6276" _type="ShellCommand" date="Tue Dec 05 17:56:36 EST 2023" starttimestamp="1701807005597" timestamp="9991015" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6277" _type="ShellCommand" date="Tue Dec 05 17:56:37 EST 2023" starttimestamp="1701807005597" timestamp="9991868" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6278" _type="ShellCommand" date="Tue Dec 05 17:56:38 EST 2023" starttimestamp="1701807005597" timestamp="9993022" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6279" _type="ShellCommand" date="Tue Dec 05 17:56:39 EST 2023" starttimestamp="1701807005597" timestamp="9993655" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6280" _type="PasteCommand" date="Tue Dec 05 17:56:39 EST 2023" starttimestamp="1701807005597" timestamp="9994313" />
  <Command __id="6281" _type="ConsoleOutput" date="Tue Dec 05 17:56:40 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="9994838" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"42"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6289" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:56:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10000720" type="Run" />
  <Command __id="6290" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 17:56:46 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10000720" type="Run" />
  <Command __id="6291" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:56:46 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10000830" type="Run" />
  <Command __id="6292" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:56:46 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10000844" type="Run" />
  <Command __id="6293" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:56:46 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10000999" type="Run" />
  <Command __id="6296" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:56:52 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10006700" type="Run" />
  <Command __id="6297" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:56:52 EST 2023" starttimestamp="1701807005597" timestamp="10006700" />
  <Command __id="6298" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:56:52 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10007328" type="Run" />
  <Command __id="6299" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:56:52 EST 2023" starttimestamp="1701807005597" timestamp="10007328" />
  <Command __id="6300" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:56:53 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10007722" type="Run" />
  <Command __id="6301" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:56:53 EST 2023" starttimestamp="1701807005597" timestamp="10007722" />
  <Command __id="6302" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:56:54 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10008463" type="Run" />
  <Command __id="6303" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 17:56:54 EST 2023" starttimestamp="1701807005597" timestamp="10008463" />
  <Command __id="6304" _type="ConsoleOutput" date="Tue Dec 05 17:56:54 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="10008488" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at java.base/java.util.Optional.get(Optional.java:148)¶	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)¶	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)¶	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:19)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:20)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6306" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:57:03 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10017705" type="Run" />
  <Command __id="6318" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 17:57:40 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10055199" type="Run" />
  <Command __id="6319" _type="ShellCommand" date="Tue Dec 05 18:01:33 EST 2023" starttimestamp="1701807005597" timestamp="10287710" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6320" _type="CopyCommand" date="Tue Dec 05 18:01:34 EST 2023" starttimestamp="1701807005597" timestamp="10289317" />
  <Command __id="6321" _type="ShellCommand" date="Tue Dec 05 18:01:36 EST 2023" starttimestamp="1701807005597" timestamp="10290724" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6322" _type="ShellCommand" date="Tue Dec 05 18:02:29 EST 2023" starttimestamp="1701807005597" timestamp="10344343" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6323" _type="CopyCommand" date="Tue Dec 05 18:02:32 EST 2023" starttimestamp="1701807005597" timestamp="10346461" />
  <Command __id="6324" _type="ShellCommand" date="Tue Dec 05 18:02:32 EST 2023" starttimestamp="1701807005597" timestamp="10346726" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6325" _type="ShellCommand" date="Tue Dec 05 18:02:47 EST 2023" starttimestamp="1701807005597" timestamp="10361767" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6326" _type="ShellCommand" date="Tue Dec 05 18:02:49 EST 2023" starttimestamp="1701807005597" timestamp="10363710" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6327" _type="ShellCommand" date="Tue Dec 05 18:02:57 EST 2023" starttimestamp="1701807005597" timestamp="10371574" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6328" _type="ShellCommand" date="Tue Dec 05 18:02:59 EST 2023" starttimestamp="1701807005597" timestamp="10373622" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6329" _type="ShellCommand" date="Tue Dec 05 18:03:27 EST 2023" starttimestamp="1701807005597" timestamp="10401751" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6330" _type="ShellCommand" date="Tue Dec 05 18:03:28 EST 2023" starttimestamp="1701807005597" timestamp="10403342" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6331" _type="ShellCommand" date="Tue Dec 05 18:03:30 EST 2023" starttimestamp="1701807005597" timestamp="10404921" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6332" _type="ShellCommand" date="Tue Dec 05 18:03:31 EST 2023" starttimestamp="1701807005597" timestamp="10405685" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6333" _type="ShellCommand" date="Tue Dec 05 18:03:54 EST 2023" starttimestamp="1701807005597" timestamp="10428559" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6334" _type="ShellCommand" date="Tue Dec 05 18:04:00 EST 2023" starttimestamp="1701807005597" timestamp="10434924" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6335" _type="ShellCommand" date="Tue Dec 05 18:04:57 EST 2023" starttimestamp="1701807005597" timestamp="10492189" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6336" _type="ShellCommand" date="Tue Dec 05 18:05:00 EST 2023" starttimestamp="1701807005597" timestamp="10494756" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6268" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 17:56:23 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" projectName="Assignment5" starttimestamp="1701807005597" timestamp="9978105">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			"), Diff(DELETE,"			Lambda lambda = (Lambda)temp.eval(environment);"), Diff(INSERT,"Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}"), Diff(EQUAL,"			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			SExpression temp = expr.getHead();
			Environment childEnvironment = environment.newChild();
			Lambda lambda;
			if(!(temp.getClass().equals(Lambda.class))) {
				lambda = (Lambda)temp.eval(environment);
			}else {
				lambda = (Lambda)temp;
			}
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="6337" _type="ShellCommand" date="Tue Dec 05 18:06:50 EST 2023" starttimestamp="1701807005597" timestamp="10605061" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6339" _type="SelectTextCommand" caretOffset="500" date="Tue Dec 05 18:06:53 EST 2023" end="500" start="490" starttimestamp="1701807005597" timestamp="10608188" />
  <Command __id="6340" _type="ShellCommand" date="Tue Dec 05 18:06:55 EST 2023" starttimestamp="1701807005597" timestamp="10609421" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6341" _type="ShellCommand" date="Tue Dec 05 18:06:55 EST 2023" starttimestamp="1701807005597" timestamp="10610135" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6342" _type="ShellCommand" date="Tue Dec 05 18:06:57 EST 2023" starttimestamp="1701807005597" timestamp="10611758" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6343" _type="ShellCommand" date="Tue Dec 05 18:07:02 EST 2023" starttimestamp="1701807005597" timestamp="10616966" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6344" _type="ShellCommand" date="Tue Dec 05 18:07:03 EST 2023" starttimestamp="1701807005597" timestamp="10617775" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6345" _type="ShellCommand" date="Tue Dec 05 18:07:08 EST 2023" starttimestamp="1701807005597" timestamp="10623093" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6346" _type="ShellCommand" date="Tue Dec 05 18:07:10 EST 2023" starttimestamp="1701807005597" timestamp="10624435" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6347" _type="ShellCommand" date="Tue Dec 05 18:07:48 EST 2023" starttimestamp="1701807005597" timestamp="10662859" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6348" _type="MoveCaretCommand" caretOffset="525" date="Tue Dec 05 18:07:48 EST 2023" docOffset="738" starttimestamp="1701807005597" timestamp="10662948" />
  <Command __id="6349" _type="MoveCaretCommand" caretOffset="522" date="Tue Dec 05 18:07:49 EST 2023" docOffset="735" starttimestamp="1701807005597" timestamp="10663488" />
  <Command __id="6350" _type="MoveCaretCommand" caretOffset="519" date="Tue Dec 05 18:07:49 EST 2023" docOffset="732" starttimestamp="1701807005597" timestamp="10663991" />
  <Command __id="6351" _type="MoveCaretCommand" caretOffset="522" date="Tue Dec 05 18:07:50 EST 2023" docOffset="735" starttimestamp="1701807005597" timestamp="10665160" />
  <Command __id="6352" _type="MoveCaretCommand" caretOffset="519" date="Tue Dec 05 18:07:51 EST 2023" docOffset="732" starttimestamp="1701807005597" timestamp="10665669" />
  <Command __id="6353" _type="MoveCaretCommand" caretOffset="360" date="Tue Dec 05 18:07:52 EST 2023" docOffset="573" starttimestamp="1701807005597" timestamp="10666478" />
  <Command __id="6338" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:06:53 EST 2023" docASTNodeCount="128" docActiveCodeLength="738" docExpressionCount="94" docLength="738" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10608087">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6354" _type="MoveCaretCommand" caretOffset="522" date="Tue Dec 05 18:07:55 EST 2023" docOffset="735" starttimestamp="1701807005597" timestamp="10670008" />
  <Command __id="6355" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:08:14 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10688410">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6356" _type="MoveCaretCommand" caretOffset="228" date="Tue Dec 05 18:08:14 EST 2023" docOffset="462" starttimestamp="1701807005597" timestamp="10688483" />
  <Command __id="6358" _type="MoveCaretCommand" caretOffset="522" date="Tue Dec 05 18:08:24 EST 2023" docOffset="735" starttimestamp="1701807005597" timestamp="10698737" />
  <Command __id="6359" _type="MoveCaretCommand" caretOffset="519" date="Tue Dec 05 18:08:27 EST 2023" docOffset="732" starttimestamp="1701807005597" timestamp="10701819" />
  <Command __id="6360" _type="SelectTextCommand" caretOffset="437" date="Tue Dec 05 18:08:35 EST 2023" end="437" start="424" starttimestamp="1701807005597" timestamp="10709909" />
  <Command __id="6361" _type="MoveCaretCommand" caretOffset="437" date="Tue Dec 05 18:08:35 EST 2023" docOffset="650" starttimestamp="1701807005597" timestamp="10710152" />
  <Command __id="6357" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:08:24 EST 2023" docASTNodeCount="128" docActiveCodeLength="738" docExpressionCount="94" docLength="738" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10698673">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6362" _type="SelectTextCommand" caretOffset="424" date="Tue Dec 05 18:08:37 EST 2023" end="438" start="424" starttimestamp="1701807005597" timestamp="10711680" />
  <Command __id="6363" _type="MoveCaretCommand" caretOffset="424" date="Tue Dec 05 18:08:37 EST 2023" docOffset="637" starttimestamp="1701807005597" timestamp="10711869" />
  <Command __id="6364" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:08:39 EST 2023" docASTNodeCount="100" docActiveCodeLength="582" docExpressionCount="66" docLength="582" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10713420">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.scanner.tokens.Token;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class IdentifierAtomImpl extends IdentifierAtom{    public IdentifierAtomImpl(String string) {        super(string);    }        public IdentifierAtomImpl(Token token) {        super(token);     }    @Override    public SExpression eval(Environment var1){        Optional<SExpression> retVal = var1.lookup(this);        return retVal.get();    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6365" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 18:08:39 EST 2023" docOffset="573" starttimestamp="1701807005597" timestamp="10713510" />
  <Command __id="6366" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:08:39 EST 2023" docASTNodeCount="128" docActiveCodeLength="738" docExpressionCount="94" docLength="738" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10714170">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6367" _type="MoveCaretCommand" caretOffset="424" date="Tue Dec 05 18:08:39 EST 2023" docOffset="637" starttimestamp="1701807005597" timestamp="10714243" />
  <Command __id="6369" _type="MoveCaretCommand" caretOffset="228" date="Tue Dec 05 18:08:44 EST 2023" docOffset="462" starttimestamp="1701807005597" timestamp="10718508" />
  <Command __id="6370" _type="MoveCaretCommand" caretOffset="227" date="Tue Dec 05 18:08:48 EST 2023" docOffset="461" starttimestamp="1701807005597" timestamp="10723260" />
  <Command __id="6371" _type="MoveCaretCommand" caretOffset="227" date="Tue Dec 05 18:08:48 EST 2023" docOffset="461" starttimestamp="1701807005597" timestamp="10723261" />
  <Command __id="6372" _type="MoveCaretCommand" caretOffset="896" date="Tue Dec 05 18:08:49 EST 2023" docOffset="1130" starttimestamp="1701807005597" timestamp="10724207" />
  <Command __id="6373" _type="MoveCaretCommand" caretOffset="896" date="Tue Dec 05 18:08:49 EST 2023" docOffset="1130" starttimestamp="1701807005597" timestamp="10724207" />
  <Command __id="6368" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:08:44 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10718426">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6374" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Dec 05 18:08:53 EST 2023" starttimestamp="1701807005597" timestamp="10727884" />
  <Command __id="6375" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:08:53 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10727894" type="Debug" />
  <Command __id="6376" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:08:53 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10727894" type="Run" />
  <Command __id="6377" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:08:53 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10727894" type="Debug" />
  <Command __id="6378" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:08:53 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10727894" type="Run" />
  <Command __id="6380" _type="InsertStringCommand" date="Tue Dec 05 18:08:55 EST 2023" starttimestamp="1701807005597" timestamp="10730065" timestamp2="10730065">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6381" _type="InsertStringCommand" date="Tue Dec 05 18:08:55 EST 2023" starttimestamp="1701807005597" timestamp="10730065" timestamp2="10730065">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6383" _type="InsertStringCommand" date="Tue Dec 05 18:08:57 EST 2023" starttimestamp="1701807005597" timestamp="10731740" timestamp2="10731740">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6384" _type="InsertStringCommand" date="Tue Dec 05 18:08:57 EST 2023" starttimestamp="1701807005597" timestamp="10731740" timestamp2="10731740">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6385" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 18:08:58 EST 2023" starttimestamp="1701807005597" timestamp="10733275" />
  <Command __id="6386" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:08:58 EST 2023" starttimestamp="1701807005597" timestamp="10733385" />
  <Command __id="6387" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:08:58 EST 2023" starttimestamp="1701807005597" timestamp="10733399" />
  <DocumentChange __id="6379" _type="Insert" date="Tue Dec 05 18:08:55 EST 2023" docASTNodeCount="195" docActiveCodeLength="1137" docExpressionCount="143" docLength="1137" length="4" offset="1130" repeat="2" starttimestamp="1701807005597" timestamp="10730063" timestamp2="10731738">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <Command __id="6388" _type="MoveCaretCommand" caretOffset="900" date="Tue Dec 05 18:09:00 EST 2023" docOffset="1134" starttimestamp="1701807005597" timestamp="10734680" />
  <Command __id="6389" _type="MoveCaretCommand" caretOffset="900" date="Tue Dec 05 18:09:00 EST 2023" docOffset="1134" starttimestamp="1701807005597" timestamp="10734680" />
  <Command __id="6390" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:09:08 EST 2023" docASTNodeCount="128" docActiveCodeLength="738" docExpressionCount="94" docLength="738" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10742473">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6391" _type="MoveCaretCommand" caretOffset="424" date="Tue Dec 05 18:09:08 EST 2023" docOffset="637" starttimestamp="1701807005597" timestamp="10742541" />
  <Command __id="6392" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:09:09 EST 2023" docASTNodeCount="195" docActiveCodeLength="1137" docExpressionCount="143" docLength="1137" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10744192">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}"), Diff(INSERT,"		"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			SExpression temp = expr.getHead();
			Environment childEnvironment = environment.newChild();
			Lambda lambda;
			if(!(temp.getClass().equals(Lambda.class))) {
				lambda = (Lambda)temp.eval(environment);
			}else {
				lambda = (Lambda)temp;
			}
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
	
	
}
]]></snapshot>
  </Command>
  <Command __id="6393" _type="MoveCaretCommand" caretOffset="900" date="Tue Dec 05 18:09:09 EST 2023" docOffset="1134" starttimestamp="1701807005597" timestamp="10744272" />
  <Command __id="6395" _type="MoveCaretCommand" caretOffset="424" date="Tue Dec 05 18:09:16 EST 2023" docOffset="637" starttimestamp="1701807005597" timestamp="10750850" />
  <Command __id="6396" _type="MoveCaretCommand" caretOffset="439" date="Tue Dec 05 18:09:48 EST 2023" docOffset="652" starttimestamp="1701807005597" timestamp="10783130" />
  <Command __id="6397" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:09:55 EST 2023" docOffset="710" starttimestamp="1701807005597" timestamp="10790283" />
  <Command __id="6398" _type="SelectTextCommand" caretOffset="518" date="Tue Dec 05 18:10:00 EST 2023" end="518" start="500" starttimestamp="1701807005597" timestamp="10794692" />
  <Command __id="6399" _type="BalloonCommand" date="Tue Dec 05 18:10:05 EST 2023" message="*******************************************
Worked 48 minutes(fixed)/60 minutes(context based) from
Tue Dec 05 17:10:05 EST 2023 to Tue Dec 05 18:10:00 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 6 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EvalEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java
Number of insert: 490
Number of delete: 1458
" starttimestamp="1701807005597" timestamp="10800045">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[490]]></insert>
    <startTime><![CDATA[1701814205642]]></startTime>
    <endTime><![CDATA[1701817800289]]></endTime>
    <workTime><![CDATA[48]]></workTime>
    <delete><![CDATA[1458]]></delete>
  </Command>
  <Command __id="6400" _type="MoveCaretCommand" caretOffset="524" date="Tue Dec 05 18:10:06 EST 2023" docOffset="737" starttimestamp="1701807005597" timestamp="10800855" />
  <Command __id="6394" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:09:16 EST 2023" docASTNodeCount="128" docActiveCodeLength="738" docExpressionCount="94" docLength="738" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10750760">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6401" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:10:07 EST 2023" docOffset="633" starttimestamp="1701807005597" timestamp="10801975" />
  <Command __id="6402" _type="MoveCaretCommand" caretOffset="360" date="Tue Dec 05 18:10:08 EST 2023" docOffset="573" starttimestamp="1701807005597" timestamp="10802867" />
  <Command __id="6404" _type="InsertStringCommand" date="Tue Dec 05 18:10:11 EST 2023" starttimestamp="1701807005597" timestamp="10805412" timestamp2="10805412">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6405" _type="SelectTextCommand" caretOffset="524" date="Tue Dec 05 18:10:17 EST 2023" end="524" start="506" starttimestamp="1701807005597" timestamp="10811480" />
  <Command __id="6406" _type="MoveCaretCommand" caretOffset="325" date="Tue Dec 05 18:10:17 EST 2023" docOffset="538" starttimestamp="1701807005597" timestamp="10811991" />
  <Command __id="6407" _type="MoveCaretCommand" caretOffset="366" date="Tue Dec 05 18:10:18 EST 2023" docOffset="579" starttimestamp="1701807005597" timestamp="10812474" />
  <Command __id="6408" _type="SelectTextCommand" caretOffset="462" date="Tue Dec 05 18:10:22 EST 2023" end="462" start="430" starttimestamp="1701807005597" timestamp="10817206" />
  <DocumentChange __id="6403" _type="Insert" date="Tue Dec 05 18:10:11 EST 2023" docASTNodeCount="128" docActiveCodeLength="744" docExpressionCount="94" docLength="744" length="6" offset="573" starttimestamp="1701807005597" timestamp="10805410">
    <text><![CDATA[
    	]]></text>
  </DocumentChange>
  <Command __id="6409" _type="MoveCaretCommand" caretOffset="366" date="Tue Dec 05 18:10:24 EST 2023" docOffset="579" starttimestamp="1701807005597" timestamp="10818984" />
  <DocumentChange __id="6410" _type="Insert" date="Tue Dec 05 18:10:26 EST 2023" docASTNodeCount="131" docActiveCodeLength="746" docExpressionCount="96" docLength="746" length="2" offset="579" repeat="2" starttimestamp="1701807005597" timestamp="10820963" timestamp2="10821360">
    <text><![CDATA[Se]]></text>
  </DocumentChange>
  <Command __id="6411" _type="InsertStringCommand" date="Tue Dec 05 18:10:26 EST 2023" starttimestamp="1701807005597" timestamp="10820964" timestamp2="10820964">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6413" _type="InsertStringCommand" date="Tue Dec 05 18:10:26 EST 2023" starttimestamp="1701807005597" timestamp="10821362" timestamp2="10821362">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="6414" _type="Delete" date="Tue Dec 05 18:10:27 EST 2023" docASTNodeCount="131" docActiveCodeLength="745" docExpressionCount="96" docLength="745" endLine="18" length="1" offset="580" startLine="18" starttimestamp="1701807005597" timestamp="10821819">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="6415" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:10:27 EST 2023" starttimestamp="1701807005597" timestamp="10821820" />
  <DocumentChange __id="6416" _type="Insert" date="Tue Dec 05 18:10:27 EST 2023" docASTNodeCount="137" docActiveCodeLength="774" docExpressionCount="100" docLength="774" length="29" offset="580" repeat="17" starttimestamp="1701807005597" timestamp="10821925" timestamp2="10826118">
    <text><![CDATA[Expression tt = (funcall f 1)]]></text>
  </DocumentChange>
  <Command __id="6417" _type="InsertStringCommand" date="Tue Dec 05 18:10:27 EST 2023" starttimestamp="1701807005597" timestamp="10821928" timestamp2="10821928">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6419" _type="InsertStringCommand" date="Tue Dec 05 18:10:27 EST 2023" starttimestamp="1701807005597" timestamp="10822271" timestamp2="10822271">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6421" _type="InsertStringCommand" date="Tue Dec 05 18:10:28 EST 2023" starttimestamp="1701807005597" timestamp="10822521" timestamp2="10822521">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6423" _type="InsertStringCommand" date="Tue Dec 05 18:10:28 EST 2023" starttimestamp="1701807005597" timestamp="10822606" timestamp2="10822606">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6425" _type="InsertStringCommand" date="Tue Dec 05 18:10:28 EST 2023" starttimestamp="1701807005597" timestamp="10822641" timestamp2="10822641">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6427" _type="InsertStringCommand" date="Tue Dec 05 18:10:28 EST 2023" starttimestamp="1701807005597" timestamp="10822764" timestamp2="10822764">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6429" _type="InsertStringCommand" date="Tue Dec 05 18:10:28 EST 2023" starttimestamp="1701807005597" timestamp="10822941" timestamp2="10822941">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6431" _type="InsertStringCommand" date="Tue Dec 05 18:10:28 EST 2023" starttimestamp="1701807005597" timestamp="10823044" timestamp2="10823044">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6433" _type="InsertStringCommand" date="Tue Dec 05 18:10:28 EST 2023" starttimestamp="1701807005597" timestamp="10823116" timestamp2="10823116">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6435" _type="InsertStringCommand" date="Tue Dec 05 18:10:28 EST 2023" starttimestamp="1701807005597" timestamp="10823185" timestamp2="10823185">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6437" _type="InsertStringCommand" date="Tue Dec 05 18:10:28 EST 2023" starttimestamp="1701807005597" timestamp="10823339" timestamp2="10823339">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6439" _type="InsertStringCommand" date="Tue Dec 05 18:10:29 EST 2023" starttimestamp="1701807005597" timestamp="10824275" timestamp2="10824275">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6441" _type="InsertStringCommand" date="Tue Dec 05 18:10:30 EST 2023" starttimestamp="1701807005597" timestamp="10824445" timestamp2="10824445">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6443" _type="InsertStringCommand" date="Tue Dec 05 18:10:30 EST 2023" starttimestamp="1701807005597" timestamp="10824635" timestamp2="10824635">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6445" _type="InsertStringCommand" date="Tue Dec 05 18:10:30 EST 2023" starttimestamp="1701807005597" timestamp="10824692" timestamp2="10824692">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="6447" _type="InsertStringCommand" date="Tue Dec 05 18:10:30 EST 2023" starttimestamp="1701807005597" timestamp="10824797" timestamp2="10824797">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6449" _type="PasteCommand" date="Tue Dec 05 18:10:31 EST 2023" starttimestamp="1701807005597" timestamp="10826120" />
  <Command __id="6451" _type="UndoCommand" date="Tue Dec 05 18:10:32 EST 2023" starttimestamp="1701807005597" timestamp="10826605" />
  <DocumentChange __id="6450" _type="Delete" date="Tue Dec 05 18:10:32 EST 2023" docASTNodeCount="132" docActiveCodeLength="761" docExpressionCount="97" docLength="761" endLine="18" length="13" offset="596" startLine="18" starttimestamp="1701807005597" timestamp="10826602">
    <text><![CDATA[(funcall f 1)]]></text>
  </DocumentChange>
  <Command __id="6452" _type="SelectTextCommand" caretOffset="479" date="Tue Dec 05 18:10:34 EST 2023" end="479" start="447" starttimestamp="1701807005597" timestamp="10828407" />
  <Command __id="6453" _type="CopyCommand" date="Tue Dec 05 18:10:34 EST 2023" starttimestamp="1701807005597" timestamp="10828517" />
  <Command __id="6454" _type="MoveCaretCommand" caretOffset="383" date="Tue Dec 05 18:10:34 EST 2023" docOffset="596" starttimestamp="1701807005597" timestamp="10829292" />
  <Command __id="6456" _type="PasteCommand" date="Tue Dec 05 18:10:35 EST 2023" starttimestamp="1701807005597" timestamp="10830074" />
  <Command __id="6458" _type="InsertStringCommand" date="Tue Dec 05 18:10:37 EST 2023" starttimestamp="1701807005597" timestamp="10831782" timestamp2="10831782">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="6459" _type="MoveCaretCommand" caretOffset="495" date="Tue Dec 05 18:10:41 EST 2023" docOffset="708" starttimestamp="1701807005597" timestamp="10835493" />
  <DocumentChange __id="6455" _type="Insert" date="Tue Dec 05 18:10:35 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" length="33" offset="596" repeat="2" starttimestamp="1701807005597" timestamp="10830072" timestamp2="10831781">
    <text><![CDATA[expr.getHead().eval(environment);]]></text>
  </DocumentChange>
  <Command __id="6460" _type="SelectTextCommand" caretOffset="574" date="Tue Dec 05 18:11:02 EST 2023" end="574" start="546" starttimestamp="1701807005597" timestamp="10856865" />
  <DocumentChange __id="6461" _type="Replace" date="Tue Dec 05 18:11:04 EST 2023" docASTNodeCount="136" docActiveCodeLength="767" docExpressionCount="99" docLength="767" endLine="20" insertionLength="1" int_docASTNodeCount="135" int_docActiveCodeLength="766" int_docExpressionCount="98" int_docLength="766" length="28" offset="759" startLine="20" starttimestamp="1701807005597" timestamp="10858896">
    <deletedText><![CDATA[expression.eval(environment)]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="6462" _type="InsertStringCommand" date="Tue Dec 05 18:11:04 EST 2023" starttimestamp="1701807005597" timestamp="10858900" timestamp2="10858900">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="6463" _type="Insert" date="Tue Dec 05 18:11:04 EST 2023" docASTNodeCount="138" docActiveCodeLength="770" docExpressionCount="101" docLength="770" length="3" offset="760" repeat="3" starttimestamp="1701807005597" timestamp="10859048" timestamp2="10860365">
    <text><![CDATA[t.e]]></text>
  </DocumentChange>
  <Command __id="6464" _type="InsertStringCommand" date="Tue Dec 05 18:11:04 EST 2023" starttimestamp="1701807005597" timestamp="10859049" timestamp2="10859049">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6466" _type="InsertStringCommand" date="Tue Dec 05 18:11:04 EST 2023" starttimestamp="1701807005597" timestamp="10859244" timestamp2="10859244">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6467" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 18:11:04 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="10859248" />
  <Command __id="6469" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 18:11:06 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="10860436" />
  <Command __id="6471" _type="InsertStringCommand" date="Tue Dec 05 18:11:06 EST 2023" starttimestamp="1701807005597" timestamp="10860452" timestamp2="10860452">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6472" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 18:11:07 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="10861403" />
  <Command __id="6473" _type="MoveCaretCommand" caretOffset="573" date="Tue Dec 05 18:11:07 EST 2023" docOffset="786" starttimestamp="1701807005597" timestamp="10861412" />
  <Command __id="6474" _type="MoveCaretCommand" caretOffset="567" date="Tue Dec 05 18:11:07 EST 2023" docOffset="780" starttimestamp="1701807005597" timestamp="10862352" />
  <Command __id="6475" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 18:11:08 EST 2023" starttimestamp="1701807005597" timestamp="10862725" />
  <Command __id="6476" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:11:08 EST 2023" starttimestamp="1701807005597" timestamp="10862823" />
  <Command __id="6477" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:11:08 EST 2023" starttimestamp="1701807005597" timestamp="10862831" />
  <Command __id="6478" _type="MoveCaretCommand" caretOffset="567" date="Tue Dec 05 18:11:13 EST 2023" docOffset="780" starttimestamp="1701807005597" timestamp="10867672" />
  <Command __id="6486" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:11:25 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10879657" type="Run" />
  <Command __id="6487" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:11:25 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10879657" type="Run" />
  <Command __id="6488" _type="PasteCommand" date="Tue Dec 05 18:11:25 EST 2023" starttimestamp="1701807005597" timestamp="10880203" />
  <Command __id="6489" _type="ShellCommand" date="Tue Dec 05 18:11:30 EST 2023" starttimestamp="1701807005597" timestamp="10885026" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6490" _type="ShellCommand" date="Tue Dec 05 18:11:31 EST 2023" starttimestamp="1701807005597" timestamp="10885751" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6491" _type="PasteCommand" date="Tue Dec 05 18:11:31 EST 2023" starttimestamp="1701807005597" timestamp="10886067" />
  <Command __id="6492" _type="ConsoleOutput" date="Tue Dec 05 18:11:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="10886300" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="6493" _type="ConsoleInput" date="Tue Dec 05 18:11:34 EST 2023" starttimestamp="1701807005597" timestamp="10888778" type="Exception">
    <outputString><![CDATA[expr.getHead().eval(environment)(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="6494" _type="ExceptionCommand" date="Tue Dec 05 18:11:34 EST 2023" starttimestamp="1701807005597" timestamp="10888784" type="Exception">
    <exceptionString><![CDATA[java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.get(Optional.java:148)
	at index.IdentifierAtomImpl.eval(IdentifierAtomImpl.java:23)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6495" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:11:34 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10888789" type="Debug" />
  <Command __id="6496" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:11:34 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10888789" type="Run" />
  <Command __id="6497" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:11:34 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="10888789" type="Debug" />
  <Command __id="6498" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:11:34 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10888789" type="Run" />
  <DocumentChange __id="6470" _type="Replace" date="Tue Dec 05 18:11:06 EST 2023" docASTNodeCount="139" docActiveCodeLength="786" docExpressionCount="102" docLength="786" endLine="20" insertionLength="17" int_docASTNodeCount="138" int_docActiveCodeLength="769" int_docExpressionCount="100" int_docLength="769" length="1" offset="762" startLine="20" starttimestamp="1701807005597" timestamp="10860437">
    <deletedText><![CDATA[e]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6480" _type="Insert" date="Tue Dec 05 18:11:17 EST 2023" docASTNodeCount="122" docActiveCodeLength="673" docExpressionCount="88" docLength="788" length="2" offset="630" starttimestamp="1701807005597" timestamp="10871628">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="6499" _type="MoveCaretCommand" caretOffset="460" date="Tue Dec 05 18:11:38 EST 2023" docOffset="673" starttimestamp="1701807005597" timestamp="10893018" />
  <DocumentChange __id="6500" _type="Delete" date="Tue Dec 05 18:11:40 EST 2023" docASTNodeCount="139" docActiveCodeLength="786" docExpressionCount="102" docLength="786" endLine="19" length="2" offset="630" startLine="19" starttimestamp="1701807005597" timestamp="10894630">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="6501" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue Dec 05 18:11:40 EST 2023" starttimestamp="1701807005597" timestamp="10894642" />
  <Command __id="6502" _type="MoveCaretCommand" caretOffset="567" date="Tue Dec 05 18:11:40 EST 2023" docOffset="780" starttimestamp="1701807005597" timestamp="10895293" />
  <DocumentChange __id="6503" _type="Insert" date="Tue Dec 05 18:11:41 EST 2023" docASTNodeCount="122" docActiveCodeLength="673" docExpressionCount="88" docLength="788" length="2" offset="630" starttimestamp="1701807005597" timestamp="10895416">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="6504" _type="UndoCommand" date="Tue Dec 05 18:11:41 EST 2023" starttimestamp="1701807005597" timestamp="10895419" />
  <DocumentChange __id="6505" _type="Delete" date="Tue Dec 05 18:11:41 EST 2023" docASTNodeCount="139" docActiveCodeLength="786" docExpressionCount="102" docLength="786" endLine="19" length="2" offset="630" startLine="19" starttimestamp="1701807005597" timestamp="10895627">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="6506" _type="UndoCommand" date="Tue Dec 05 18:11:41 EST 2023" starttimestamp="1701807005597" timestamp="10895633" />
  <DocumentChange __id="6507" _type="Replace" date="Tue Dec 05 18:11:41 EST 2023" docASTNodeCount="138" docActiveCodeLength="770" docExpressionCount="101" docLength="770" endLine="20" insertionLength="1" int_docASTNodeCount="138" int_docActiveCodeLength="769" int_docExpressionCount="100" int_docLength="769" length="17" offset="762" startLine="20" starttimestamp="1701807005597" timestamp="10895978">
    <deletedText><![CDATA[eval(environment)]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <Command __id="6508" _type="UndoCommand" date="Tue Dec 05 18:11:41 EST 2023" starttimestamp="1701807005597" timestamp="10895982" />
  <DocumentChange __id="6509" _type="Delete" date="Tue Dec 05 18:11:41 EST 2023" docASTNodeCount="136" docActiveCodeLength="767" docExpressionCount="99" docLength="767" endLine="20" length="3" offset="760" startLine="20" starttimestamp="1701807005597" timestamp="10896379">
    <text><![CDATA[t.e]]></text>
  </DocumentChange>
  <Command __id="6510" _type="UndoCommand" date="Tue Dec 05 18:11:41 EST 2023" starttimestamp="1701807005597" timestamp="10896381" />
  <Command __id="6512" _type="UndoCommand" date="Tue Dec 05 18:11:42 EST 2023" starttimestamp="1701807005597" timestamp="10896711" />
  <DocumentChange __id="6511" _type="Replace" date="Tue Dec 05 18:11:42 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" endLine="20" insertionLength="28" int_docASTNodeCount="135" int_docActiveCodeLength="766" int_docExpressionCount="98" int_docLength="766" length="1" offset="759" startLine="20" starttimestamp="1701807005597" timestamp="10896708">
    <deletedText><![CDATA[t]]></deletedText>
    <insertedText><![CDATA[expression.eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="6513" _type="MoveCaretCommand" caretOffset="575" date="Tue Dec 05 18:11:43 EST 2023" docOffset="788" starttimestamp="1701807005597" timestamp="10897994" />
  <Command __id="6514" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:11:58 EST 2023" docASTNodeCount="195" docActiveCodeLength="1137" docExpressionCount="143" docLength="1137" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10912670">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}		}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6515" _type="MoveCaretCommand" caretOffset="900" date="Tue Dec 05 18:11:58 EST 2023" docOffset="1134" starttimestamp="1701807005597" timestamp="10912768" />
  <Command __id="6516" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:11:58 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10913341">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {"), Diff(INSERT,"    	SExpression tt = expr.getHead().eval(environment);"), Diff(EQUAL,"        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.ExpressionFactory;
import main.lisp.parser.terms.NilAtom;
import main.lisp.parser.terms.SExpression;


public class FuncallEvaluator implements Evaluator{

    @Override
    public SExpression eval(SExpression expr, Environment environment) {
        expr = expr.getTail();
		return evalHelper(expr, environment);
    }
    public static SExpression evalHelper(SExpression expr, Environment environment) {
    	SExpression tt = expr.getHead().eval(environment);
        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());
        return expression.eval(environment);
	}
}
]]></snapshot>
  </Command>
  <Command __id="6517" _type="MoveCaretCommand" caretOffset="575" date="Tue Dec 05 18:11:59 EST 2023" docOffset="788" starttimestamp="1701807005597" timestamp="10913412" />
  <Command __id="6518" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:11:59 EST 2023" docASTNodeCount="195" docActiveCodeLength="1137" docExpressionCount="143" docLength="1137" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10914377">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}		}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6519" _type="MoveCaretCommand" caretOffset="900" date="Tue Dec 05 18:12:00 EST 2023" docOffset="1134" starttimestamp="1701807005597" timestamp="10914474" />
  <Command __id="6521" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920573" timestamp2="10920573">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6522" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920573" timestamp2="10920573">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6524" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920634" timestamp2="10920634">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6525" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920634" timestamp2="10920634">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="6527" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920735" timestamp2="10920735">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6528" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920735" timestamp2="10920735">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="6530" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920824" timestamp2="10920824">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6531" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920824" timestamp2="10920824">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6533" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920869" timestamp2="10920869">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6534" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920869" timestamp2="10920869">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6536" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920947" timestamp2="10920947">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6537" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10920947" timestamp2="10920947">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6539" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10921037" timestamp2="10921037">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6540" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10921037" timestamp2="10921037">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6542" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10921331" timestamp2="10921331">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6543" _type="InsertStringCommand" date="Tue Dec 05 18:12:06 EST 2023" starttimestamp="1701807005597" timestamp="10921331" timestamp2="10921331">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6545" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921455" timestamp2="10921455">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6546" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921455" timestamp2="10921455">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6548" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921517" timestamp2="10921517">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6549" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921517" timestamp2="10921517">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6551" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921620" timestamp2="10921620">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6552" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921620" timestamp2="10921620">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="6554" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921711" timestamp2="10921711">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6555" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921711" timestamp2="10921711">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6557" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921825" timestamp2="10921825">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6558" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921825" timestamp2="10921825">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6560" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921915" timestamp2="10921915">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6561" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10921915" timestamp2="10921915">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6563" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10922038" timestamp2="10922038">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6564" _type="InsertStringCommand" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10922039" timestamp2="10922039">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10922347" />
  <Command __id="6567" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:07 EST 2023" starttimestamp="1701807005597" timestamp="10922347" />
  <Command __id="6569" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922444" />
  <Command __id="6570" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922444" />
  <Command __id="6572" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922550" />
  <Command __id="6573" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922550" />
  <Command __id="6575" _type="InsertStringCommand" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922667" timestamp2="10922667">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6576" _type="InsertStringCommand" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922667" timestamp2="10922667">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="6578" _type="InsertStringCommand" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922767" timestamp2="10922767">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6579" _type="InsertStringCommand" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922767" timestamp2="10922767">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6581" _type="InsertStringCommand" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922896" timestamp2="10922896">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6582" _type="InsertStringCommand" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10922896" timestamp2="10922896">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="6584" _type="InsertStringCommand" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10923348" timestamp2="10923348">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6585" _type="InsertStringCommand" date="Tue Dec 05 18:12:08 EST 2023" starttimestamp="1701807005597" timestamp="10923348" timestamp2="10923348">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="6587" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10923710" timestamp2="10923710">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6588" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10923710" timestamp2="10923710">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6590" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10923911" timestamp2="10923911">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6591" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10923911" timestamp2="10923911">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6593" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10923986" timestamp2="10923986">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6594" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10923987" timestamp2="10923987">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6596" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10924033" timestamp2="10924033">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6597" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10924033" timestamp2="10924033">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6599" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10924142" timestamp2="10924142">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6600" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10924142" timestamp2="10924142">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6602" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10924312" timestamp2="10924312">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6603" _type="InsertStringCommand" date="Tue Dec 05 18:12:09 EST 2023" starttimestamp="1701807005597" timestamp="10924312" timestamp2="10924312">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6605" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10924407" timestamp2="10924407">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6606" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10924407" timestamp2="10924407">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="6608" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10924483" timestamp2="10924483">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6609" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10924483" timestamp2="10924483">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="6611" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10924513" timestamp2="10924513">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6612" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10924513" timestamp2="10924513">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="6614" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10924635" timestamp2="10924635">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6615" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10924635" timestamp2="10924635">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="6617" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10925389" timestamp2="10925389">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6618" _type="InsertStringCommand" date="Tue Dec 05 18:12:10 EST 2023" starttimestamp="1701807005597" timestamp="10925389" timestamp2="10925389">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6620" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10925558" timestamp2="10925558">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="6621" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10925559" timestamp2="10925559">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="6623" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10925605" timestamp2="10925605">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6624" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10925605" timestamp2="10925605">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="6626" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10925723" timestamp2="10925723">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6627" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10925723" timestamp2="10925723">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6629" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10926036" timestamp2="10926036">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="6630" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10926036" timestamp2="10926036">
    <data><![CDATA[H]]></data>
  </Command>
  <Command __id="6632" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10926182" timestamp2="10926182">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6633" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10926182" timestamp2="10926182">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6635" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10926290" timestamp2="10926290">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6636" _type="InsertStringCommand" date="Tue Dec 05 18:12:11 EST 2023" starttimestamp="1701807005597" timestamp="10926290" timestamp2="10926290">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6638" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:12 EST 2023" starttimestamp="1701807005597" timestamp="10926630" />
  <Command __id="6639" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:12 EST 2023" starttimestamp="1701807005597" timestamp="10926630" />
  <Command __id="6641" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:12 EST 2023" starttimestamp="1701807005597" timestamp="10926746" />
  <Command __id="6642" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:12 EST 2023" starttimestamp="1701807005597" timestamp="10926746" />
  <Command __id="6644" _type="InsertStringCommand" date="Tue Dec 05 18:12:12 EST 2023" starttimestamp="1701807005597" timestamp="10926821" timestamp2="10926821">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6645" _type="InsertStringCommand" date="Tue Dec 05 18:12:12 EST 2023" starttimestamp="1701807005597" timestamp="10926821" timestamp2="10926821">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6647" _type="InsertStringCommand" date="Tue Dec 05 18:12:12 EST 2023" starttimestamp="1701807005597" timestamp="10926996" timestamp2="10926996">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6648" _type="InsertStringCommand" date="Tue Dec 05 18:12:12 EST 2023" starttimestamp="1701807005597" timestamp="10926996" timestamp2="10926996">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="6650" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10927662" timestamp2="10927662">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6651" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10927662" timestamp2="10927662">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="6653" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10927767" timestamp2="10927767">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6654" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10927768" timestamp2="10927768">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="6656" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10927930" timestamp2="10927930">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6657" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10927930" timestamp2="10927930">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6659" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10928026" timestamp2="10928026">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6660" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10928026" timestamp2="10928026">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6662" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10928216" timestamp2="10928216">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6663" _type="InsertStringCommand" date="Tue Dec 05 18:12:13 EST 2023" starttimestamp="1701807005597" timestamp="10928216" timestamp2="10928216">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6666" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10928641" />
  <Command __id="6667" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10928642" />
  <Command __id="6669" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10928756" />
  <Command __id="6670" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10928756" />
  <Command __id="6672" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10928873" />
  <Command __id="6673" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10928873" />
  <Command __id="6675" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10929218" />
  <Command __id="6676" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10929218" />
  <Command __id="6678" _type="InsertStringCommand" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10929320" timestamp2="10929320">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6679" _type="InsertStringCommand" date="Tue Dec 05 18:12:14 EST 2023" starttimestamp="1701807005597" timestamp="10929320" timestamp2="10929320">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="6681" _type="InsertStringCommand" date="Tue Dec 05 18:12:15 EST 2023" starttimestamp="1701807005597" timestamp="10929408" timestamp2="10929408">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6682" _type="InsertStringCommand" date="Tue Dec 05 18:12:15 EST 2023" starttimestamp="1701807005597" timestamp="10929408" timestamp2="10929408">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="6684" _type="InsertStringCommand" date="Tue Dec 05 18:12:15 EST 2023" starttimestamp="1701807005597" timestamp="10929529" timestamp2="10929529">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="6685" _type="InsertStringCommand" date="Tue Dec 05 18:12:15 EST 2023" starttimestamp="1701807005597" timestamp="10929529" timestamp2="10929529">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="6520" _type="Insert" date="Tue Dec 05 18:12:06 EST 2023" docASTNodeCount="201" docActiveCodeLength="1152" docExpressionCount="145" docLength="1152" length="15" offset="1134" repeat="15" starttimestamp="1701807005597" timestamp="10920572" timestamp2="10922036">
    <text><![CDATA[public stati c ]]></text>
  </DocumentChange>
  <DocumentChange __id="6565" _type="Delete" date="Tue Dec 05 18:12:07 EST 2023" docASTNodeCount="195" docActiveCodeLength="1149" docExpressionCount="143" docLength="1149" endLine="33" length="3" offset="1146" repeat="3" startLine="33" starttimestamp="1701807005597" timestamp="10922346" timestamp2="10922549">
    <text><![CDATA[ c ]]></text>
  </DocumentChange>
  <DocumentChange __id="6574" _type="Insert" date="Tue Dec 05 18:12:08 EST 2023" docASTNodeCount="202" docActiveCodeLength="1170" docExpressionCount="145" docLength="1170" length="21" offset="1146" repeat="21" starttimestamp="1701807005597" timestamp="10922664" timestamp2="10926287">
    <text><![CDATA[c SExpression evalHle]]></text>
  </DocumentChange>
  <DocumentChange __id="6637" _type="Delete" date="Tue Dec 05 18:12:12 EST 2023" docASTNodeCount="202" docActiveCodeLength="1168" docExpressionCount="145" docLength="1168" endLine="33" length="2" offset="1165" repeat="2" startLine="33" starttimestamp="1701807005597" timestamp="10926628" timestamp2="10926745">
    <text><![CDATA[le]]></text>
  </DocumentChange>
  <DocumentChange __id="6643" _type="Insert" date="Tue Dec 05 18:12:12 EST 2023" docASTNodeCount="202" docActiveCodeLength="1176" docExpressionCount="145" docLength="1176" length="8" offset="1165" repeat="7" starttimestamp="1701807005597" timestamp="10926820" timestamp2="10928215">
    <text><![CDATA[elpder()]]></text>
  </DocumentChange>
  <DocumentChange __id="6664" _type="Delete" date="Tue Dec 05 18:12:14 EST 2023" docASTNodeCount="202" docActiveCodeLength="1171" docExpressionCount="145" docLength="1171" endLine="33" length="5" offset="1168" repeat="5" startLine="33" starttimestamp="1701807005597" timestamp="10928638" timestamp2="10929216">
    <text><![CDATA[der()]]></text>
  </DocumentChange>
  <DocumentChange __id="6677" _type="Insert" date="Tue Dec 05 18:12:14 EST 2023" docASTNodeCount="202" docActiveCodeLength="1175" docExpressionCount="145" docLength="1175" length="4" offset="1168" repeat="3" starttimestamp="1701807005597" timestamp="10929318" timestamp2="10929527">
    <text><![CDATA[er()]]></text>
  </DocumentChange>
  <Command __id="6686" _type="MoveCaretCommand" caretOffset="938" date="Tue Dec 05 18:12:23 EST 2023" docOffset="1172" starttimestamp="1701807005597" timestamp="10937599" />
  <Command __id="6687" _type="MoveCaretCommand" caretOffset="938" date="Tue Dec 05 18:12:23 EST 2023" docOffset="1172" starttimestamp="1701807005597" timestamp="10937600" />
  <Command __id="6688" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:12:30 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10944956">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {    	SExpression tt = expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6689" _type="MoveCaretCommand" caretOffset="575" date="Tue Dec 05 18:12:30 EST 2023" docOffset="788" starttimestamp="1701807005597" timestamp="10945043" />
  <Command __id="6690" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:12:33 EST 2023" docASTNodeCount="202" docActiveCodeLength="1175" docExpressionCount="145" docLength="1175" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10948123">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}		"), Diff(INSERT,"public static SExpression evalHelper()"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			SExpression temp = expr.getHead();
			Environment childEnvironment = environment.newChild();
			Lambda lambda;
			if(!(temp.getClass().equals(Lambda.class))) {
				lambda = (Lambda)temp.eval(environment);
			}else {
				lambda = (Lambda)temp;
			}
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
	
	public static SExpression evalHelper()
}
]]></snapshot>
  </Command>
  <Command __id="6691" _type="MoveCaretCommand" caretOffset="938" date="Tue Dec 05 18:12:33 EST 2023" docOffset="1172" starttimestamp="1701807005597" timestamp="10948208" />
  <Command __id="6693" _type="MoveCaretCommand" caretOffset="575" date="Tue Dec 05 18:13:13 EST 2023" docOffset="788" starttimestamp="1701807005597" timestamp="10987785" />
  <Command __id="6692" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:13:13 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" projectName="Assignment5" starttimestamp="1701807005597" timestamp="10987710">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {    	SExpression tt = expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6694" _type="MoveCaretCommand" caretOffset="564" date="Tue Dec 05 18:13:18 EST 2023" docOffset="777" starttimestamp="1701807005597" timestamp="10993195" />
  <Command __id="6695" _type="MoveCaretCommand" caretOffset="559" date="Tue Dec 05 18:13:19 EST 2023" docOffset="772" starttimestamp="1701807005597" timestamp="10993893" />
  <Command __id="6697" _type="MoveCaretCommand" caretOffset="938" date="Tue Dec 05 18:13:34 EST 2023" docOffset="1172" starttimestamp="1701807005597" timestamp="11008909" />
  <Command __id="6698" _type="MoveCaretCommand" caretOffset="940" date="Tue Dec 05 18:13:36 EST 2023" docOffset="1174" starttimestamp="1701807005597" timestamp="11010755" />
  <Command __id="6699" _type="MoveCaretCommand" caretOffset="940" date="Tue Dec 05 18:13:36 EST 2023" docOffset="1174" starttimestamp="1701807005597" timestamp="11010755" />
  <Command __id="6700" _type="InsertStringCommand" date="Tue Dec 05 18:13:37 EST 2023" starttimestamp="1701807005597" timestamp="11011605" timestamp2="11011605">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6701" _type="InsertStringCommand" date="Tue Dec 05 18:13:37 EST 2023" starttimestamp="1701807005597" timestamp="11011605" timestamp2="11011605">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="6703" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Dec 05 18:13:37 EST 2023" starttimestamp="1701807005597" timestamp="11012354" />
  <Command __id="6704" _type="MoveCaretCommand" caretOffset="898" date="Tue Dec 05 18:13:38 EST 2023" docOffset="1132" starttimestamp="1701807005597" timestamp="11012862" />
  <Command __id="6705" _type="MoveCaretCommand" caretOffset="898" date="Tue Dec 05 18:13:38 EST 2023" docOffset="1132" starttimestamp="1701807005597" timestamp="11012862" />
  <Command __id="6707" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue Dec 05 18:13:38 EST 2023" starttimestamp="1701807005597" timestamp="11013004" />
  <Command __id="6708" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 18:13:38 EST 2023" starttimestamp="1701807005597" timestamp="11013400" />
  <Command __id="6709" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:13:39 EST 2023" starttimestamp="1701807005597" timestamp="11013498" />
  <Command __id="6710" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:13:39 EST 2023" starttimestamp="1701807005597" timestamp="11013510" />
  <Command __id="6712" _type="MoveCaretCommand" caretOffset="575" date="Tue Dec 05 18:13:40 EST 2023" docOffset="788" starttimestamp="1701807005597" timestamp="11014619" />
  <Command __id="6713" _type="SelectTextCommand" caretOffset="512" date="Tue Dec 05 18:14:02 EST 2023" end="512" start="494" starttimestamp="1701807005597" timestamp="11037289" />
  <Command __id="6715" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:14:03 EST 2023" starttimestamp="1701807005597" timestamp="11038191" />
  <Command __id="6716" _type="MoveCaretCommand" caretOffset="563" date="Tue Dec 05 18:14:04 EST 2023" docOffset="776" starttimestamp="1701807005597" timestamp="11038767" />
  <Command __id="6717" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 18:14:04 EST 2023" starttimestamp="1701807005597" timestamp="11038957" />
  <Command __id="6718" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:14:04 EST 2023" starttimestamp="1701807005597" timestamp="11039059" />
  <Command __id="6719" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:14:04 EST 2023" starttimestamp="1701807005597" timestamp="11039066" />
  <Command __id="6721" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:14:20 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11054412" type="Run" />
  <Command __id="6722" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:14:20 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11054412" type="Run" />
  <Command __id="6723" _type="ShellCommand" date="Tue Dec 05 18:14:20 EST 2023" starttimestamp="1701807005597" timestamp="11055047" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="6724" _type="ShellCommand" date="Tue Dec 05 18:14:21 EST 2023" starttimestamp="1701807005597" timestamp="11055876" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6726" _type="PasteCommand" date="Tue Dec 05 18:14:21 EST 2023" starttimestamp="1701807005597" timestamp="11056104" />
  <Command __id="6728" _type="InsertStringCommand" date="Tue Dec 05 18:14:21 EST 2023" starttimestamp="1701807005597" timestamp="11056315" timestamp2="11056315">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6730" _type="UndoCommand" date="Tue Dec 05 18:14:22 EST 2023" starttimestamp="1701807005597" timestamp="11057116" />
  <Command __id="6732" _type="UndoCommand" date="Tue Dec 05 18:14:23 EST 2023" starttimestamp="1701807005597" timestamp="11057505" />
  <Command __id="6733" _type="PasteCommand" date="Tue Dec 05 18:14:24 EST 2023" starttimestamp="1701807005597" timestamp="11058987" />
  <Command __id="6734" _type="ConsoleOutput" date="Tue Dec 05 18:14:24 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11059377" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="6735" _type="ConsoleInput" date="Tue Dec 05 18:14:27 EST 2023" starttimestamp="1701807005597" timestamp="11061613" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="6736" _type="ConsoleOutput" date="Tue Dec 05 18:14:27 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11061617" type="ConsoleOutput">
    <outputString><![CDATA[Exception in thread "main" java.lang.NullPointerException
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"LAMBDA (X) X"), Diff(INSERT,"Exception in thread "main" java.lang.NullPointerException"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6737" _type="ConsoleOutput" date="Tue Dec 05 18:14:27 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11061620" type="ConsoleOutput">
    <outputString><![CDATA[	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Exception in thread "main" java.lang.NullPointerException"), Diff(INSERT,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6738" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:14:27 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11061622" type="Debug" />
  <Command __id="6739" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:14:27 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11061622" type="Run" />
  <Command __id="6740" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:14:27 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11061622" type="Debug" />
  <Command __id="6741" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:14:27 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11061622" type="Run" />
  <Command __id="6742" _type="MoveCaretCommand" caretOffset="557" date="Tue Dec 05 18:14:29 EST 2023" docOffset="770" starttimestamp="1701807005597" timestamp="11064357" />
  <Command __id="6744" _type="UndoCommand" date="Tue Dec 05 18:14:30 EST 2023" starttimestamp="1701807005597" timestamp="11064623" />
  <Command __id="6745" _type="MoveCaretCommand" caretOffset="578" date="Tue Dec 05 18:14:30 EST 2023" docOffset="791" starttimestamp="1701807005597" timestamp="11065337" />
  <Command __id="6696" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:13:34 EST 2023" docASTNodeCount="202" docActiveCodeLength="1175" docExpressionCount="145" docLength="1175" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11008835">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}		public static SExpression evalHelper()}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="6702" _type="Delete" date="Tue Dec 05 18:13:37 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" endLine="34" length="42" offset="1131" repeat="2" startLine="32" starttimestamp="1701807005597" timestamp="11012353" timestamp2="11013003">
    <text><![CDATA[	
	public static SExpression evalHelper()
]]></text>
  </DocumentChange>
  <Command __id="6711" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:13:40 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11014508">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {    	SExpression tt = expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <DocumentChange __id="6714" _type="Delete" date="Tue Dec 05 18:14:03 EST 2023" docASTNodeCount="136" docActiveCodeLength="776" docExpressionCount="99" docLength="776" endLine="19" length="18" offset="707" startLine="19" starttimestamp="1701807005597" timestamp="11038188">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="6725" _type="Insert" date="Tue Dec 05 18:14:21 EST 2023" docASTNodeCount="147" docActiveCodeLength="810" docExpressionCount="108" docLength="810" length="34" offset="707" repeat="2" starttimestamp="1701807005597" timestamp="11056101" timestamp2="11056312">
    <text><![CDATA[(setq f (lambda (x) x))
        		]]></text>
  </DocumentChange>
  <DocumentChange __id="6729" _type="Delete" date="Tue Dec 05 18:14:22 EST 2023" docASTNodeCount="136" docActiveCodeLength="776" docExpressionCount="99" docLength="776" endLine="20" length="34" offset="707" repeat="2" startLine="19" starttimestamp="1701807005597" timestamp="11057106" timestamp2="11057499">
    <text><![CDATA[(setq f (lambda (x) x))
        		]]></text>
  </DocumentChange>
  <DocumentChange __id="6743" _type="Insert" date="Tue Dec 05 18:14:30 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" length="18" offset="707" starttimestamp="1701807005597" timestamp="11064621">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <Command __id="6746" _type="SelectTextCommand" caretOffset="556" date="Tue Dec 05 18:14:34 EST 2023" end="574" start="556" starttimestamp="1701807005597" timestamp="11068913" />
  <Command __id="6752" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:14:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11072890" type="Run" />
  <Command __id="6753" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:14:38 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11072890" type="Run" />
  <Command __id="6754" _type="PasteCommand" date="Tue Dec 05 18:14:39 EST 2023" starttimestamp="1701807005597" timestamp="11073567" />
  <Command __id="6755" _type="ConsoleOutput" date="Tue Dec 05 18:14:39 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11074194" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)¶	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)¶	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)¶	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)¶	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)¶	at main.Main.main(Main.java:31)¶	at index.index.main(index.java:17)"), Diff(INSERT,"LAMBDA (X) X"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6756" _type="ConsoleInput" date="Tue Dec 05 18:14:42 EST 2023" starttimestamp="1701807005597" timestamp="11076406" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="6757" _type="ConsoleOutput" date="Tue Dec 05 18:14:42 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11076411" type="ConsoleOutput">
    <outputString><![CDATA[(LAMBDA (X) X 1)
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"("), Diff(EQUAL,"LAMBDA (X) X"), Diff(INSERT," 1)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="6758" _type="MoveCaretCommand" caretOffset="556" date="Tue Dec 05 18:14:44 EST 2023" docOffset="769" starttimestamp="1701807005597" timestamp="11078488" />
  <Command __id="6760" _type="InsertStringCommand" date="Tue Dec 05 18:14:44 EST 2023" starttimestamp="1701807005597" timestamp="11078723" timestamp2="11078723">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="6762" _type="InsertStringCommand" date="Tue Dec 05 18:14:44 EST 2023" starttimestamp="1701807005597" timestamp="11078741" timestamp2="11078741">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6763" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 18:14:44 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="11078756" />
  <Command __id="6766" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 18:14:45 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="11079454" />
  <Command __id="6768" _type="InsertStringCommand" date="Tue Dec 05 18:14:45 EST 2023" starttimestamp="1701807005597" timestamp="11079457" timestamp2="11079457">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6769" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 18:14:45 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="11079463" />
  <Command __id="6772" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 18:14:46 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="11081121" />
  <Command __id="6774" _type="InsertStringCommand" date="Tue Dec 05 18:14:46 EST 2023" starttimestamp="1701807005597" timestamp="11081141" timestamp2="11081141">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6775" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 18:14:47 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="11081901" />
  <Command __id="6776" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 18:14:49 EST 2023" starttimestamp="1701807005597" timestamp="11083852" />
  <Command __id="6777" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:14:49 EST 2023" starttimestamp="1701807005597" timestamp="11083953" />
  <Command __id="6778" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:14:49 EST 2023" starttimestamp="1701807005597" timestamp="11083961" />
  <Command __id="6779" _type="SelectTextCommand" caretOffset="512" date="Tue Dec 05 18:15:01 EST 2023" end="512" start="494" starttimestamp="1701807005597" timestamp="11096222" />
  <Command __id="6780" _type="MoveCaretCommand" caretOffset="274" date="Tue Dec 05 18:15:02 EST 2023" docOffset="487" starttimestamp="1701807005597" timestamp="11096773" />
  <Command __id="6781" _type="SelectTextCommand" caretOffset="494" date="Tue Dec 05 18:15:04 EST 2023" end="512" start="494" starttimestamp="1701807005597" timestamp="11098701" />
  <DocumentChange __id="6747" _type="Delete" date="Tue Dec 05 18:14:36 EST 2023" docASTNodeCount="136" docActiveCodeLength="776" docExpressionCount="99" docLength="776" endLine="20" length="18" offset="769" startLine="20" starttimestamp="1701807005597" timestamp="11070449">
    <text><![CDATA[.eval(environment)]]></text>
  </DocumentChange>
  <DocumentChange __id="6759" _type="Insert" date="Tue Dec 05 18:14:44 EST 2023" docASTNodeCount="135" docActiveCodeLength="778" docExpressionCount="98" docLength="778" length="2" offset="769" repeat="2" starttimestamp="1701807005597" timestamp="11078721" timestamp2="11078740">
    <text><![CDATA[,.]]></text>
  </DocumentChange>
  <DocumentChange __id="6764" _type="Delete" date="Tue Dec 05 18:14:44 EST 2023" docASTNodeCount="136" docActiveCodeLength="776" docExpressionCount="99" docLength="776" endLine="20" length="2" offset="769" repeat="2" startLine="20" starttimestamp="1701807005597" timestamp="11079132" timestamp2="11079257">
    <text><![CDATA[,.]]></text>
  </DocumentChange>
  <DocumentChange __id="6767" _type="Replace" date="Tue Dec 05 18:14:45 EST 2023" docASTNodeCount="138" docActiveCodeLength="777" docExpressionCount="100" docLength="777" endLine="20" insertionLength="11" int_docASTNodeCount="135" int_docActiveCodeLength="766" int_docExpressionCount="98" int_docLength="766" length="10" offset="759" startLine="20" starttimestamp="1701807005597" timestamp="11079455">
    <deletedText><![CDATA[expression]]></deletedText>
    <insertedText><![CDATA[expression.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6770" _type="Insert" date="Tue Dec 05 18:14:45 EST 2023" docASTNodeCount="138" docActiveCodeLength="779" docExpressionCount="101" docLength="779" length="2" offset="770" repeat="2" starttimestamp="1701807005597" timestamp="11079769" timestamp2="11080589">
    <text><![CDATA[ev]]></text>
  </DocumentChange>
  <DocumentChange __id="6773" _type="Replace" date="Tue Dec 05 18:14:46 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" endLine="20" insertionLength="17" int_docASTNodeCount="138" int_docActiveCodeLength="777" int_docExpressionCount="100" int_docLength="777" length="2" offset="770" startLine="20" starttimestamp="1701807005597" timestamp="11081123">
    <deletedText><![CDATA[ev]]></deletedText>
    <insertedText><![CDATA[eval(environment)]]></insertedText>
  </DocumentChange>
  <Command __id="6782" _type="MoveCaretCommand" caretOffset="345" date="Tue Dec 05 18:15:05 EST 2023" docOffset="558" starttimestamp="1701807005597" timestamp="11099914" />
  <Command __id="6784" _type="MoveCaretCommand" caretOffset="897" date="Tue Dec 05 18:15:07 EST 2023" docOffset="1131" starttimestamp="1701807005597" timestamp="11102080" />
  <Command __id="6785" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:15:11 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11105513" />
  <Command __id="6786" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:15:11 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11105513" />
  <Command __id="6787" _type="MoveCaretCommand" caretOffset="471" date="Tue Dec 05 18:15:11 EST 2023" docOffset="705" starttimestamp="1701807005597" timestamp="11106347" />
  <Command __id="6788" _type="MoveCaretCommand" caretOffset="471" date="Tue Dec 05 18:15:11 EST 2023" docOffset="705" starttimestamp="1701807005597" timestamp="11106347" />
  <Command __id="6789" _type="MoveCaretCommand" caretOffset="428" date="Tue Dec 05 18:15:12 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="11106858" />
  <Command __id="6790" _type="MoveCaretCommand" caretOffset="428" date="Tue Dec 05 18:15:12 EST 2023" docOffset="662" starttimestamp="1701807005597" timestamp="11106858" />
  <Command __id="6783" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:15:07 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11102012">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}"), Diff(DELETE,"		public static SExpression evalHelper()"), Diff(EQUAL,"}")]]></diff>
    <snapshot><![CDATA[package index;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{

	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		if(!(expr.getHead() instanceof IdentifierAtom)){
			SExpression temp = expr.getHead();
			Environment childEnvironment = environment.newChild();
			Lambda lambda;
			if(!(temp.getClass().equals(Lambda.class))) {
				lambda = (Lambda)temp.eval(environment);
			}else {
				lambda = (Lambda)temp;
			}
			IdentifierAtom[] ids = lambda.getArgumentNames();
			for (IdentifierAtom id : ids){
				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));
				expr = expr.getTail();
			}
			return lambda.eval(childEnvironment);
		}else{
			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="6791" _type="MoveCaretCommand" caretOffset="422" date="Tue Dec 05 18:15:13 EST 2023" docOffset="656" starttimestamp="1701807005597" timestamp="11108124" />
  <Command __id="6792" _type="MoveCaretCommand" caretOffset="422" date="Tue Dec 05 18:15:13 EST 2023" docOffset="656" starttimestamp="1701807005597" timestamp="11108124" />
  <Command __id="6793" _type="MoveCaretCommand" caretOffset="427" date="Tue Dec 05 18:15:14 EST 2023" docOffset="661" starttimestamp="1701807005597" timestamp="11108597" />
  <Command __id="6794" _type="MoveCaretCommand" caretOffset="427" date="Tue Dec 05 18:15:14 EST 2023" docOffset="661" starttimestamp="1701807005597" timestamp="11108597" />
  <Command __id="6795" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 18:15:14 EST 2023" docOffset="667" starttimestamp="1701807005597" timestamp="11109164" />
  <Command __id="6796" _type="MoveCaretCommand" caretOffset="433" date="Tue Dec 05 18:15:14 EST 2023" docOffset="667" starttimestamp="1701807005597" timestamp="11109164" />
  <Command __id="6797" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 18:15:15 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="11109738" />
  <Command __id="6798" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 18:15:15 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="11109738" />
  <Command __id="6799" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:15:16 EST 2023" docOffset="654" starttimestamp="1701807005597" timestamp="11110416" />
  <Command __id="6800" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:15:16 EST 2023" docOffset="654" starttimestamp="1701807005597" timestamp="11110416" />
  <Command __id="6801" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:15:16 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11110873" />
  <Command __id="6802" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:15:16 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11110873" />
  <Command __id="6803" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:15:16 EST 2023" docOffset="654" starttimestamp="1701807005597" timestamp="11111318" />
  <Command __id="6804" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:15:16 EST 2023" docOffset="654" starttimestamp="1701807005597" timestamp="11111318" />
  <Command __id="6805" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:15:17 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11111839" />
  <Command __id="6806" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:15:17 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11111839" />
  <Command __id="6807" _type="MoveCaretCommand" caretOffset="465" date="Tue Dec 05 18:15:17 EST 2023" docOffset="699" starttimestamp="1701807005597" timestamp="11112292" />
  <Command __id="6808" _type="MoveCaretCommand" caretOffset="465" date="Tue Dec 05 18:15:17 EST 2023" docOffset="699" starttimestamp="1701807005597" timestamp="11112292" />
  <Command __id="6809" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:15:18 EST 2023" docOffset="654" starttimestamp="1701807005597" timestamp="11112704" />
  <Command __id="6810" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:15:18 EST 2023" docOffset="654" starttimestamp="1701807005597" timestamp="11112704" />
  <Command __id="6811" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 18:15:18 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="11113203" />
  <Command __id="6812" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 18:15:18 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="11113203" />
  <Command __id="6814" _type="MoveCaretCommand" caretOffset="629" date="Tue Dec 05 18:15:26 EST 2023" docOffset="865" starttimestamp="1701807005597" timestamp="11121262" />
  <Command __id="6815" _type="MoveCaretCommand" caretOffset="753" date="Tue Dec 05 18:15:28 EST 2023" docOffset="989" starttimestamp="1701807005597" timestamp="11122610" />
  <Command __id="6816" _type="MoveCaretCommand" caretOffset="618" date="Tue Dec 05 18:15:28 EST 2023" docOffset="854" starttimestamp="1701807005597" timestamp="11123188" />
  <Command __id="6813" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:15:26 EST 2023" docASTNodeCount="182" docActiveCodeLength="1013" docExpressionCount="110" docLength="1081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11121187">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.evaluator.Environment;import main.lisp.evaluator.environment.AbstractEnvironment;import main.lisp.evaluator.function.Function;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class EnvironmentImpl extends AbstractEnvironment{	public EnvironmentImpl() {		super();	}	public EnvironmentImpl(Environment parent) {		super(parent);	}	@Override	public void assign(IdentifierAtom arg0, SExpression arg1) {		put(arg0, arg1);	}	@Override	public void assignFun(IdentifierAtom arg0, Function arg1) {			}	@Override	public Environment copy() {		// TODO Auto-generated method stub		return null;	}	@Override	public Optional<SExpression> lookup(IdentifierAtom arg0) {		Optional<SExpression> retVal = get(arg0);		return retVal;	}	@Override	public Optional<Function> lookupFun(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Environment newChild() {		return new EnvironmentImpl(this);	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6817" _type="MoveCaretCommand" caretOffset="617" date="Tue Dec 05 18:15:29 EST 2023" docOffset="853" starttimestamp="1701807005597" timestamp="11124230" />
  <Command __id="6818" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 18:15:30 EST 2023" docOffset="850" starttimestamp="1701807005597" timestamp="11124831" />
  <Command __id="6819" _type="MoveCaretCommand" caretOffset="610" date="Tue Dec 05 18:15:31 EST 2023" docOffset="846" starttimestamp="1701807005597" timestamp="11125682" />
  <Command __id="6820" _type="MoveCaretCommand" caretOffset="614" date="Tue Dec 05 18:15:31 EST 2023" docOffset="850" starttimestamp="1701807005597" timestamp="11126226" />
  <DocumentChange __id="6821" _type="Delete" date="Tue Dec 05 18:15:35 EST 2023" docASTNodeCount="181" docActiveCodeLength="1006" docExpressionCount="109" docLength="1074" endLine="39" length="7" offset="843" startLine="39" starttimestamp="1701807005597" timestamp="11129977">
    <text><![CDATA[retVal;]]></text>
  </DocumentChange>
  <Command __id="6822" _type="UndoCommand" date="Tue Dec 05 18:15:35 EST 2023" starttimestamp="1701807005597" timestamp="11129982" />
  <DocumentChange __id="6823" _type="Insert" date="Tue Dec 05 18:15:35 EST 2023" docASTNodeCount="197" docActiveCodeLength="1082" docExpressionCount="125" docLength="1150" length="76" offset="843" repeat="2" starttimestamp="1701807005597" timestamp="11130335" timestamp2="11130630">
    <text><![CDATA[(retVal == null && getParent() != null) ? getParent().lookup(arg0) : retVal;]]></text>
  </DocumentChange>
  <Command __id="6824" _type="UndoCommand" date="Tue Dec 05 18:15:35 EST 2023" starttimestamp="1701807005597" timestamp="11130337" />
  <Command __id="6826" _type="UndoCommand" date="Tue Dec 05 18:15:36 EST 2023" starttimestamp="1701807005597" timestamp="11130631" />
  <DocumentChange __id="6827" _type="Delete" date="Tue Dec 05 18:15:37 EST 2023" docASTNodeCount="181" docActiveCodeLength="1006" docExpressionCount="109" docLength="1074" endLine="39" length="76" offset="843" repeat="2" startLine="39" starttimestamp="1701807005597" timestamp="11132016" timestamp2="11132353">
    <text><![CDATA[(retVal == null && getParent() != null) ? getParent().lookup(arg0) : retVal;]]></text>
  </DocumentChange>
  <Command __id="6828" _type="RedoCommand" date="Tue Dec 05 18:15:37 EST 2023" starttimestamp="1701807005597" timestamp="11132019" />
  <Command __id="6830" _type="RedoCommand" date="Tue Dec 05 18:15:37 EST 2023" starttimestamp="1701807005597" timestamp="11132356" />
  <DocumentChange __id="6831" _type="Insert" date="Tue Dec 05 18:15:38 EST 2023" docASTNodeCount="182" docActiveCodeLength="1013" docExpressionCount="110" docLength="1081" length="7" offset="843" starttimestamp="1701807005597" timestamp="11132679">
    <text><![CDATA[retVal;]]></text>
  </DocumentChange>
  <Command __id="6832" _type="RedoCommand" date="Tue Dec 05 18:15:38 EST 2023" starttimestamp="1701807005597" timestamp="11132681" />
  <Command __id="6833" _type="MoveCaretCommand" caretOffset="493" date="Tue Dec 05 18:15:38 EST 2023" docOffset="729" starttimestamp="1701807005597" timestamp="11133354" />
  <Command __id="6834" _type="InsertStringCommand" date="Tue Dec 05 18:15:39 EST 2023" starttimestamp="1701807005597" timestamp="11133979" timestamp2="11133979">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="6835" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:15:40 EST 2023" docASTNodeCount="100" docActiveCodeLength="582" docExpressionCount="66" docLength="582" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11135319">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.scanner.tokens.Token;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class IdentifierAtomImpl extends IdentifierAtom{    public IdentifierAtomImpl(String string) {        super(string);    }        public IdentifierAtomImpl(Token token) {        super(token);     }    @Override    public SExpression eval(Environment var1){        Optional<SExpression> retVal = var1.lookup(this);        return retVal.get();    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6836" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 18:15:40 EST 2023" docOffset="573" starttimestamp="1701807005597" timestamp="11135393" />
  <Command __id="6837" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:15:41 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11136390">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {    	SExpression tt = expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6838" _type="MoveCaretCommand" caretOffset="345" date="Tue Dec 05 18:15:42 EST 2023" docOffset="558" starttimestamp="1701807005597" timestamp="11136455" />
  <Command __id="6839" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:15:42 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11137379">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6840" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 18:15:43 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="11137455" />
  <Command __id="6841" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:15:44 EST 2023" docASTNodeCount="233" docActiveCodeLength="1329" docExpressionCount="157" docLength="1329" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11139237">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.ArrayList;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.NilAtom;import main.lisp.evaluator.function.LambdaFactory;import main.lisp.parser.terms.SExpression;public class LambdaEvaluator implements Evaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);	}		public static SExpression evalHelper(SExpression expr, Environment environment) {		SExpression body = expr.getTail();		IdentifierAtom ids[] = {};		if(expr.getHead() instanceof NilAtom) {			return LambdaFactory.newInstance(ids, body);		}        ids = extractIdentifiers(expr.getHead());        return LambdaFactory.newInstance(ids, body);	}    private static IdentifierAtom[] extractIdentifiers(SExpression expr) {        ArrayList<IdentifierAtom> ids = new ArrayList<>();        while(!(expr instanceof NilAtom)) {            ids.add((IdentifierAtom) expr.getHead());            expr = expr.getTail();        }        IdentifierAtom[] idArray = new IdentifierAtom[ids.size()];        for(IdentifierAtom id : ids) {            idArray[ids.indexOf(id)] = id;        }        return idArray;    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6842" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:15:44 EST 2023" docOffset="755" starttimestamp="1701807005597" timestamp="11139306" />
  <Command __id="6844" _type="MoveCaretCommand" caretOffset="425" date="Tue Dec 05 18:15:47 EST 2023" docOffset="659" starttimestamp="1701807005597" timestamp="11141807" />
  <Command __id="6843" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:15:47 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11141739">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6845" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:15:49 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11144332" />
  <Command __id="6846" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:15:49 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11144332" />
  <Command __id="6847" _type="MoveCaretCommand" caretOffset="465" date="Tue Dec 05 18:15:50 EST 2023" docOffset="699" starttimestamp="1701807005597" timestamp="11144951" />
  <Command __id="6848" _type="MoveCaretCommand" caretOffset="465" date="Tue Dec 05 18:15:50 EST 2023" docOffset="699" starttimestamp="1701807005597" timestamp="11144951" />
  <Command __id="6849" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:15:57 EST 2023" docASTNodeCount="182" docActiveCodeLength="1013" docExpressionCount="110" docLength="1081" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11151763">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.evaluator.Environment;import main.lisp.evaluator.environment.AbstractEnvironment;import main.lisp.evaluator.function.Function;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class EnvironmentImpl extends AbstractEnvironment{	public EnvironmentImpl() {		super();	}	public EnvironmentImpl(Environment parent) {		super(parent);	}	@Override	public void assign(IdentifierAtom arg0, SExpression arg1) {		put(arg0, arg1);	}	@Override	public void assignFun(IdentifierAtom arg0, Function arg1) {			}	@Override	public Environment copy() {		// TODO Auto-generated method stub		return null;	}	@Override	public Optional<SExpression> lookup(IdentifierAtom arg0) {		Optional<SExpression> retVal = get(arg0);		return retVal;	}	@Override	public Optional<Function> lookupFun(IdentifierAtom arg0) {		// TODO Auto-generated method stub		return Optional.empty();	}	@Override	public Environment newChild() {		return new EnvironmentImpl(this);	}	}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6850" _type="MoveCaretCommand" caretOffset="493" date="Tue Dec 05 18:15:57 EST 2023" docOffset="729" starttimestamp="1701807005597" timestamp="11151862" />
  <Command __id="6851" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:16:04 EST 2023" docASTNodeCount="100" docActiveCodeLength="582" docExpressionCount="66" docLength="582" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11158716">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import java.util.Optional;import main.lisp.scanner.tokens.Token;import main.lisp.evaluator.Environment;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class IdentifierAtomImpl extends IdentifierAtom{    public IdentifierAtomImpl(String string) {        super(string);    }        public IdentifierAtomImpl(Token token) {        super(token);     }    @Override    public SExpression eval(Environment var1){        Optional<SExpression> retVal = var1.lookup(this);        return retVal.get();    }}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6852" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 18:16:04 EST 2023" docOffset="573" starttimestamp="1701807005597" timestamp="11158812" />
  <DocumentChange __id="6853" _type="Replace" date="Tue Dec 05 18:16:07 EST 2023" docASTNodeCount="100" docActiveCodeLength="580" docExpressionCount="66" docLength="580" endLine="22" insertionLength="3" int_docASTNodeCount="100" int_docActiveCodeLength="577" int_docExpressionCount="65" int_docLength="577" length="5" offset="567" startLine="22" starttimestamp="1701807005597" timestamp="11161979">
    <deletedText><![CDATA[get()]]></deletedText>
    <insertedText><![CDATA[get]]></insertedText>
  </DocumentChange>
  <Command __id="6854" _type="UndoCommand" date="Tue Dec 05 18:16:07 EST 2023" starttimestamp="1701807005597" timestamp="11161984" />
  <DocumentChange __id="6855" _type="Delete" date="Tue Dec 05 18:16:07 EST 2023" docASTNodeCount="98" docActiveCodeLength="573" docExpressionCount="64" docLength="573" endLine="22" length="7" offset="563" startLine="22" starttimestamp="1701807005597" timestamp="11162245">
    <text><![CDATA[Val.get]]></text>
  </DocumentChange>
  <Command __id="6856" _type="UndoCommand" date="Tue Dec 05 18:16:07 EST 2023" starttimestamp="1701807005597" timestamp="11162248" />
  <DocumentChange __id="6857" _type="Insert" date="Tue Dec 05 18:16:08 EST 2023" docASTNodeCount="98" docActiveCodeLength="574" docExpressionCount="64" docLength="574" length="1" offset="563" starttimestamp="1701807005597" timestamp="11162431">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <Command __id="6858" _type="UndoCommand" date="Tue Dec 05 18:16:08 EST 2023" starttimestamp="1701807005597" timestamp="11162432" />
  <DocumentChange __id="6859" _type="Delete" date="Tue Dec 05 18:16:08 EST 2023" docASTNodeCount="98" docActiveCodeLength="571" docExpressionCount="64" docLength="571" endLine="22" length="3" offset="561" startLine="22" starttimestamp="1701807005597" timestamp="11162684">
    <text><![CDATA[etv]]></text>
  </DocumentChange>
  <Command __id="6860" _type="UndoCommand" date="Tue Dec 05 18:16:08 EST 2023" starttimestamp="1701807005597" timestamp="11162687" />
  <DocumentChange __id="6861" _type="Replace" date="Tue Dec 05 18:16:08 EST 2023" docASTNodeCount="98" docActiveCodeLength="574" docExpressionCount="64" docLength="574" endLine="22" insertionLength="4" int_docASTNodeCount="97" int_docActiveCodeLength="570" int_docExpressionCount="63" int_docLength="570" length="1" offset="560" startLine="22" starttimestamp="1701807005597" timestamp="11162866">
    <deletedText><![CDATA[r]]></deletedText>
    <insertedText><![CDATA[this]]></insertedText>
  </DocumentChange>
  <Command __id="6862" _type="UndoCommand" date="Tue Dec 05 18:16:08 EST 2023" starttimestamp="1701807005597" timestamp="11162869" />
  <Command __id="6864" _type="UndoCommand" date="Tue Dec 05 18:16:08 EST 2023" starttimestamp="1701807005597" timestamp="11163174" />
  <Command __id="6866" _type="UndoCommand" date="Tue Dec 05 18:16:09 EST 2023" starttimestamp="1701807005597" timestamp="11163508" />
  <Command __id="6873" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:16:16 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11170818" type="Run" />
  <Command __id="6874" _type="PasteCommand" date="Tue Dec 05 18:16:17 EST 2023" starttimestamp="1701807005597" timestamp="11171703" />
  <Command __id="6875" _type="ConsoleOutput" date="Tue Dec 05 18:16:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11172154" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"("), Diff(EQUAL,"LAMBDA (X) X"), Diff(DELETE," 1)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="6863" _type="Insert" date="Tue Dec 05 18:16:08 EST 2023" docASTNodeCount="107" docActiveCodeLength="650" docExpressionCount="70" docLength="650" length="76" offset="544" repeat="2" starttimestamp="1701807005597" timestamp="11163173" timestamp2="11163506">
    <text><![CDATA[
        if(retVal.isPresent()) {
            return retVal.get();
        }]]></text>
  </DocumentChange>
  <Command __id="6876" _type="ConsoleInput" date="Tue Dec 05 18:16:20 EST 2023" starttimestamp="1701807005597" timestamp="11174720" type="Exception">
    <outputString><![CDATA[(setq f (lambda (x) x))(funcall f 1)
]]></outputString>
  </Command>
  <Command __id="6877" _type="ExceptionCommand" date="Tue Dec 05 18:16:20 EST 2023" starttimestamp="1701807005597" timestamp="11174724" type="Exception">
    <exceptionString><![CDATA[java.lang.ClassCastException: class index.IdentifierAtomImpl cannot be cast to class main.lisp.evaluator.function.Lambda (index.IdentifierAtomImpl and main.lisp.evaluator.function.Lambda are in unnamed module of loader 'app')
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:19)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at index.FuncallEvaluator.evalHelper(FuncallEvaluator.java:21)
	at index.FuncallEvaluator.eval(FuncallEvaluator.java:16)
	at index.BasicExpressionEvaluatorImpl.eval(BasicExpressionEvaluatorImpl.java:30)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at index.index.main(index.java:17)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="6878" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:16:20 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11174729" type="Debug" />
  <Command __id="6879" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:16:20 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11174729" type="Run" />
  <Command __id="6880" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:16:20 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11174729" type="Debug" />
  <Command __id="6881" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:16:20 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11174729" type="Run" />
  <Command __id="6882" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:16:27 EST 2023" docASTNodeCount="139" docActiveCodeLength="794" docExpressionCount="102" docLength="794" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11181904">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.Environment;import main.lisp.evaluator.Evaluator;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.ExpressionFactory;import main.lisp.parser.terms.NilAtom;import main.lisp.parser.terms.SExpression;public class FuncallEvaluator implements Evaluator{    @Override    public SExpression eval(SExpression expr, Environment environment) {        expr = expr.getTail();		return evalHelper(expr, environment);    }    public static SExpression evalHelper(SExpression expr, Environment environment) {    	SExpression tt = expr.getHead().eval(environment);        SExpression expression = ExpressionFactory.newInstance(expr.getHead().eval(environment), expr.getTail());        return expression.eval(environment);	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6883" _type="MoveCaretCommand" caretOffset="345" date="Tue Dec 05 18:16:27 EST 2023" docOffset="558" starttimestamp="1701807005597" timestamp="11181968" />
  <Command __id="6885" _type="MoveCaretCommand" caretOffset="465" date="Tue Dec 05 18:16:30 EST 2023" docOffset="699" starttimestamp="1701807005597" timestamp="11184865" />
  <Command __id="6886" _type="MoveCaretCommand" caretOffset="529" date="Tue Dec 05 18:16:32 EST 2023" docOffset="763" starttimestamp="1701807005597" timestamp="11186493" />
  <Command __id="6887" _type="MoveCaretCommand" caretOffset="529" date="Tue Dec 05 18:16:32 EST 2023" docOffset="763" starttimestamp="1701807005597" timestamp="11186493" />
  <Command __id="6888" _type="MoveCaretCommand" caretOffset="524" date="Tue Dec 05 18:16:32 EST 2023" docOffset="758" starttimestamp="1701807005597" timestamp="11187001" />
  <Command __id="6889" _type="MoveCaretCommand" caretOffset="524" date="Tue Dec 05 18:16:32 EST 2023" docOffset="758" starttimestamp="1701807005597" timestamp="11187001" />
  <Command __id="6890" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:17:04 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11218582" />
  <Command __id="6891" _type="MoveCaretCommand" caretOffset="497" date="Tue Dec 05 18:17:04 EST 2023" docOffset="731" starttimestamp="1701807005597" timestamp="11218582" />
  <Command __id="6892" _type="SelectTextCommand" caretOffset="436" date="Tue Dec 05 18:17:10 EST 2023" end="436" start="424" starttimestamp="1701807005597" timestamp="11224465" />
  <Command __id="6893" _type="SelectTextCommand" caretOffset="436" date="Tue Dec 05 18:17:10 EST 2023" end="436" start="424" starttimestamp="1701807005597" timestamp="11224465" />
  <Command __id="6894" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 18:17:15 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="11229810" />
  <Command __id="6895" _type="MoveCaretCommand" caretOffset="404" date="Tue Dec 05 18:17:15 EST 2023" docOffset="638" starttimestamp="1701807005597" timestamp="11229811" />
  <Command __id="6898" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:17:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11244788" type="Run" />
  <Command __id="6899" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:17:30 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11244788" type="Run" />
  <Command __id="6900" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:17:30 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11244899" type="Run" />
  <Command __id="6901" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:17:30 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11244914" type="Run" />
  <Command __id="6902" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:17:30 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11245072" type="Run" />
  <Command __id="6903" _type="PasteCommand" date="Tue Dec 05 18:17:31 EST 2023" starttimestamp="1701807005597" timestamp="11245458" />
  <Command __id="6904" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:17:31 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11245746" type="Run" />
  <Command __id="6907" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:17:35 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11249422" type="Run" />
  <Command __id="6908" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Dec 05 18:17:45 EST 2023" starttimestamp="1701807005597" timestamp="11260148" />
  <Command __id="6909" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:17:45 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11260151" type="Debug" />
  <Command __id="6910" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:17:45 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11260151" type="Run" />
  <Command __id="6911" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:17:45 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11260151" type="Debug" />
  <Command __id="6912" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:17:45 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11260151" type="Run" />
  <Command __id="6913" _type="MoveCaretCommand" caretOffset="414" date="Tue Dec 05 18:17:47 EST 2023" docOffset="648" starttimestamp="1701807005597" timestamp="11262010" />
  <Command __id="6914" _type="MoveCaretCommand" caretOffset="414" date="Tue Dec 05 18:17:47 EST 2023" docOffset="648" starttimestamp="1701807005597" timestamp="11262010" />
  <Command __id="6915" _type="MoveCaretCommand" caretOffset="466" date="Tue Dec 05 18:17:49 EST 2023" docOffset="700" starttimestamp="1701807005597" timestamp="11264064" />
  <Command __id="6916" _type="MoveCaretCommand" caretOffset="466" date="Tue Dec 05 18:17:49 EST 2023" docOffset="700" starttimestamp="1701807005597" timestamp="11264064" />
  <Command __id="6917" _type="MoveCaretCommand" caretOffset="468" date="Tue Dec 05 18:17:50 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="11264611" />
  <Command __id="6918" _type="MoveCaretCommand" caretOffset="468" date="Tue Dec 05 18:17:50 EST 2023" docOffset="702" starttimestamp="1701807005597" timestamp="11264611" />
  <Command __id="6919" _type="MoveCaretCommand" caretOffset="314" date="Tue Dec 05 18:17:52 EST 2023" docOffset="548" starttimestamp="1701807005597" timestamp="11267010" />
  <Command __id="6920" _type="MoveCaretCommand" caretOffset="314" date="Tue Dec 05 18:17:52 EST 2023" docOffset="548" starttimestamp="1701807005597" timestamp="11267010" />
  <Command __id="6921" _type="MoveCaretCommand" caretOffset="315" date="Tue Dec 05 18:17:53 EST 2023" docOffset="549" starttimestamp="1701807005597" timestamp="11267552" />
  <Command __id="6922" _type="MoveCaretCommand" caretOffset="315" date="Tue Dec 05 18:17:53 EST 2023" docOffset="549" starttimestamp="1701807005597" timestamp="11267553" />
  <Command __id="6884" _type="DiffBasedFileOpenCommand" date="Tue Dec 05 18:16:30 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11184781">
    <filePath><![CDATA[/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java]]></filePath>
    <diff><![CDATA[Diff(EQUAL,"package index;import main.lisp.evaluator.BasicExpressionEvaluator;import main.lisp.evaluator.BuiltinOperationManagerSingleton;import main.lisp.evaluator.Environment;import main.lisp.evaluator.function.Lambda;import main.lisp.parser.terms.IdentifierAtom;import main.lisp.parser.terms.SExpression;public class BasicExpressionEvaluatorImpl extends BasicExpressionEvaluator{	@Override	public SExpression eval(SExpression expr, Environment environment) {		if(!(expr.getHead() instanceof IdentifierAtom)){			SExpression temp = expr.getHead();			Environment childEnvironment = environment.newChild();			Lambda lambda;			if(!(temp.getClass().equals(Lambda.class))) {				lambda = (Lambda)temp.eval(environment);			}else {				lambda = (Lambda)temp;			}			IdentifierAtom[] ids = lambda.getArgumentNames();			for (IdentifierAtom id : ids){				childEnvironment.assign(id, expr.getTail().getHead().eval(environment));				expr = expr.getTail();			}			return lambda.eval(childEnvironment);		}else{			return BuiltinOperationManagerSingleton.get().getEvaluator(expr.getHead().toString()).eval(expr, environment);		}	}}")]]></diff>
    <snapshot><![CDATA[null]]></snapshot>
  </Command>
  <Command __id="6923" _type="MoveCaretCommand" caretOffset="248" date="Tue Dec 05 18:17:54 EST 2023" docOffset="482" starttimestamp="1701807005597" timestamp="11268883" />
  <Command __id="6924" _type="MoveCaretCommand" caretOffset="248" date="Tue Dec 05 18:17:54 EST 2023" docOffset="482" starttimestamp="1701807005597" timestamp="11268883" />
  <Command __id="6925" _type="MoveCaretCommand" caretOffset="249" date="Tue Dec 05 18:17:54 EST 2023" docOffset="483" starttimestamp="1701807005597" timestamp="11269335" />
  <Command __id="6926" _type="MoveCaretCommand" caretOffset="249" date="Tue Dec 05 18:17:54 EST 2023" docOffset="483" starttimestamp="1701807005597" timestamp="11269335" />
  <DocumentChange __id="6927" _type="Insert" date="Tue Dec 05 18:18:02 EST 2023" docASTNodeCount="195" docActiveCodeLength="1134" docExpressionCount="143" docLength="1134" length="1" offset="483" starttimestamp="1701807005597" timestamp="11277074">
    <text><![CDATA[j]]></text>
  </DocumentChange>
  <Command __id="6928" _type="InsertStringCommand" date="Tue Dec 05 18:18:02 EST 2023" starttimestamp="1701807005597" timestamp="11277076" timestamp2="11277076">
    <data><![CDATA[j]]></data>
  </Command>
  <Command __id="6929" _type="InsertStringCommand" date="Tue Dec 05 18:18:02 EST 2023" starttimestamp="1701807005597" timestamp="11277076" timestamp2="11277076">
    <data><![CDATA[j]]></data>
  </Command>
  <DocumentChange __id="6930" _type="Delete" date="Tue Dec 05 18:18:03 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" endLine="13" length="1" offset="483" startLine="13" starttimestamp="1701807005597" timestamp="11277511">
    <text><![CDATA[j]]></text>
  </DocumentChange>
  <Command __id="6931" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:18:03 EST 2023" starttimestamp="1701807005597" timestamp="11277513" />
  <Command __id="6932" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue Dec 05 18:18:03 EST 2023" starttimestamp="1701807005597" timestamp="11277513" />
  <DocumentChange __id="6933" _type="Insert" date="Tue Dec 05 18:18:03 EST 2023" docASTNodeCount="197" docActiveCodeLength="1138" docExpressionCount="145" docLength="1138" length="5" offset="483" repeat="5" starttimestamp="1701807005597" timestamp="11277754" timestamp2="11279065">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <Command __id="6934" _type="InsertStringCommand" date="Tue Dec 05 18:18:03 EST 2023" starttimestamp="1701807005597" timestamp="11277757" timestamp2="11277757">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6935" _type="InsertStringCommand" date="Tue Dec 05 18:18:03 EST 2023" starttimestamp="1701807005597" timestamp="11277757" timestamp2="11277757">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="6936" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Tue Dec 05 18:18:03 EST 2023" start_end="START" starttimestamp="1701807005597" timestamp="11277761" />
  <Command __id="6941" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue Dec 05 18:18:05 EST 2023" start_end="END" starttimestamp="1701807005597" timestamp="11279607" />
  <Command __id="6943" _type="InsertStringCommand" date="Tue Dec 05 18:18:05 EST 2023" starttimestamp="1701807005597" timestamp="11279613" timestamp2="11279613">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6944" _type="InsertStringCommand" date="Tue Dec 05 18:18:05 EST 2023" starttimestamp="1701807005597" timestamp="11279613" timestamp2="11279613">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="6945" _type="MoveCaretCommand" caretOffset="442" date="Tue Dec 05 18:18:05 EST 2023" docOffset="676" starttimestamp="1701807005597" timestamp="11280319" />
  <Command __id="6946" _type="MoveCaretCommand" caretOffset="442" date="Tue Dec 05 18:18:05 EST 2023" docOffset="676" starttimestamp="1701807005597" timestamp="11280319" />
  <Command __id="6947" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue Dec 05 18:18:06 EST 2023" starttimestamp="1701807005597" timestamp="11280610" />
  <Command __id="6948" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:18:06 EST 2023" starttimestamp="1701807005597" timestamp="11280710" />
  <Command __id="6949" _type="EclipseCommand" commandID="" date="Tue Dec 05 18:18:06 EST 2023" starttimestamp="1701807005597" timestamp="11280718" />
  <Command __id="6950" _type="MoveCaretCommand" caretOffset="402" date="Tue Dec 05 18:18:06 EST 2023" docOffset="636" starttimestamp="1701807005597" timestamp="11281097" />
  <Command __id="6951" _type="MoveCaretCommand" caretOffset="402" date="Tue Dec 05 18:18:06 EST 2023" docOffset="636" starttimestamp="1701807005597" timestamp="11281097" />
  <Command __id="6952" _type="MoveCaretCommand" caretOffset="384" date="Tue Dec 05 18:18:07 EST 2023" docOffset="618" starttimestamp="1701807005597" timestamp="11281678" />
  <Command __id="6953" _type="MoveCaretCommand" caretOffset="384" date="Tue Dec 05 18:18:07 EST 2023" docOffset="618" starttimestamp="1701807005597" timestamp="11281679" />
  <Command __id="6954" _type="MoveCaretCommand" caretOffset="402" date="Tue Dec 05 18:18:07 EST 2023" docOffset="636" starttimestamp="1701807005597" timestamp="11282141" />
  <Command __id="6955" _type="MoveCaretCommand" caretOffset="402" date="Tue Dec 05 18:18:07 EST 2023" docOffset="636" starttimestamp="1701807005597" timestamp="11282141" />
  <Command __id="6956" _type="MoveCaretCommand" caretOffset="496" date="Tue Dec 05 18:18:08 EST 2023" docOffset="730" starttimestamp="1701807005597" timestamp="11282548" />
  <Command __id="6957" _type="MoveCaretCommand" caretOffset="496" date="Tue Dec 05 18:18:08 EST 2023" docOffset="730" starttimestamp="1701807005597" timestamp="11282548" />
  <Command __id="6958" _type="MoveCaretCommand" caretOffset="507" date="Tue Dec 05 18:18:08 EST 2023" docOffset="741" starttimestamp="1701807005597" timestamp="11283008" />
  <Command __id="6959" _type="MoveCaretCommand" caretOffset="507" date="Tue Dec 05 18:18:08 EST 2023" docOffset="741" starttimestamp="1701807005597" timestamp="11283008" />
  <Command __id="6973" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:18:27 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11302214" type="Run" />
  <Command __id="6974" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:18:27 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11302214" type="Run" />
  <Command __id="6975" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:27 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11302325" type="Run" />
  <Command __id="6976" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:27 EST 2023" kind="Run" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11302325" type="Run" />
  <Command __id="6977" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:27 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11302338" type="Run" />
  <Command __id="6978" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:28 EST 2023" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11302497" type="Run" />
  <Command __id="6981" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:31 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11306313" type="Run" />
  <Command __id="6982" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 18:18:31 EST 2023" starttimestamp="1701807005597" timestamp="11306314" />
  <Command __id="6983" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 18:18:32 EST 2023" starttimestamp="1701807005597" timestamp="11306709" />
  <Command __id="6984" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:32 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11306711" type="Run" />
  <Command __id="6985" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 18:18:33 EST 2023" starttimestamp="1701807005597" timestamp="11307452" />
  <Command __id="6986" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:33 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11307453" type="Run" />
  <Command __id="6987" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 18:18:33 EST 2023" starttimestamp="1701807005597" timestamp="11308024" />
  <Command __id="6988" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:33 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11308024" type="Run" />
  <Command __id="6989" _type="ConsoleOutput" date="Tue Dec 05 18:18:33 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11308051" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="6991" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:38 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11312718" type="Run" />
  <Command __id="6992" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Resume" date="Tue Dec 05 18:18:38 EST 2023" starttimestamp="1701807005597" timestamp="11312718" />
  <Command __id="6997" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:43 EST 2023" kind="StepInto" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11317423" type="Run" />
  <Command __id="6998" _type="MoveCaretCommand" caretOffset="506" date="Tue Dec 05 18:18:46 EST 2023" docOffset="740" starttimestamp="1701807005597" timestamp="11320645" />
  <Command __id="6999" _type="MoveCaretCommand" caretOffset="506" date="Tue Dec 05 18:18:46 EST 2023" docOffset="740" starttimestamp="1701807005597" timestamp="11320645" />
  <Command __id="7000" _type="MoveCaretCommand" caretOffset="424" date="Tue Dec 05 18:18:46 EST 2023" docOffset="658" starttimestamp="1701807005597" timestamp="11321391" />
  <Command __id="7001" _type="MoveCaretCommand" caretOffset="424" date="Tue Dec 05 18:18:46 EST 2023" docOffset="658" starttimestamp="1701807005597" timestamp="11321391" />
  <Command __id="7003" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11321680" timestamp2="11321680">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7004" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11321680" timestamp2="11321680">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="7006" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11321899" timestamp2="11321899">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7007" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11321899" timestamp2="11321899">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="7009" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11322109" timestamp2="11322109">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7010" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11322109" timestamp2="11322109">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="7012" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11322203" timestamp2="11322203">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7013" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11322203" timestamp2="11322203">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="7015" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11322295" timestamp2="11322295">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7016" _type="InsertStringCommand" date="Tue Dec 05 18:18:47 EST 2023" starttimestamp="1701807005597" timestamp="11322295" timestamp2="11322295">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="7017" _type="MoveCaretCommand" caretOffset="392" date="Tue Dec 05 18:18:48 EST 2023" docOffset="626" starttimestamp="1701807005597" timestamp="11322664" />
  <Command __id="7018" _type="MoveCaretCommand" caretOffset="392" date="Tue Dec 05 18:18:48 EST 2023" docOffset="626" starttimestamp="1701807005597" timestamp="11322664" />
  <Command __id="7019" _type="EclipseCommand" commandID="org.eclipse.debug.ui.commands.Terminate" date="Tue Dec 05 18:18:51 EST 2023" starttimestamp="1701807005597" timestamp="11325768" />
  <Command __id="7020" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:51 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11325774" type="Debug" />
  <Command __id="7021" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:18:51 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11325774" type="Run" />
  <Command __id="7022" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:18:51 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11325774" type="Debug" />
  <Command __id="7023" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:18:51 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11325774" type="Run" />
  <Command __id="7033" _type="ProgramExecutionEvent" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:19:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11335149" type="Run" />
  <Command __id="7034" _type="RunCommand" className="/Assignment5/src/index/index.java" date="Tue Dec 05 18:19:00 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11335149" type="Run" />
  <Command __id="7035" _type="PasteCommand" date="Tue Dec 05 18:19:06 EST 2023" starttimestamp="1701807005597" timestamp="11341281" />
  <Command __id="7036" _type="ConsoleOutput" date="Tue Dec 05 18:19:07 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11341765" type="ConsoleOutput">
    <outputString><![CDATA[LAMBDA (X) X
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"LAMBDA (X) X¶")]]]></diff>
  </Command>
  <Command __id="7043" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 18:19:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11357343" type="Run" />
  <Command __id="7044" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 18:19:22 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11357343" type="Run" />
  <Command __id="7045" _type="ShellCommand" date="Tue Dec 05 18:19:23 EST 2023" starttimestamp="1701807005597" timestamp="11357687" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7064" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:19:28 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11363276" type="Debug" />
  <Command __id="7065" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 18:19:28 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11363277" type="Run" />
  <Command __id="7066" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:19:28 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11363277" type="Debug" />
  <Command __id="7067" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 18:19:28 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11363277" type="Run" />
  <Command __id="7068" _type="ShellCommand" date="Tue Dec 05 18:19:28 EST 2023" starttimestamp="1701807005597" timestamp="11363277" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7069" _type="MoveCaretCommand" caretOffset="428" date="Tue Dec 05 18:19:30 EST 2023" docOffset="711" starttimestamp="1701807005597" timestamp="11364417" />
  <Command __id="7070" _type="MoveCaretCommand" caretOffset="428" date="Tue Dec 05 18:19:30 EST 2023" docOffset="711" starttimestamp="1701807005597" timestamp="11364418" />
  <Command __id="7071" _type="LocalChecksRawCommand" date="Tue Dec 05 18:19:30 EST 2023" starttimestamp="1701807005597" timestamp="11364422">
    <CSVRow><![CDATA[166,Tue Dec 05 18:19:26 EST 2023,50,10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker+ LispLambdaChecker2+ LispLambdaChecker3+ LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker+ LoadLambdaChecker2+ LoadLambdaChecker3+ LoadLispChecker+ LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,86,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7072" _type="LocalChecksRawCommand" date="Tue Dec 05 18:19:30 EST 2023" starttimestamp="1701807005597" timestamp="11364422">
    <CSVRow><![CDATA[166,Tue Dec 05 18:19:26 EST 2023,50,10,LispLambdaSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker+ LispLambdaChecker2+ LispLambdaChecker3+ LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker+ LoadLambdaChecker2+ LoadLambdaChecker3+ LoadLispChecker+ LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker DerivedSafeChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,86,0,true,LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,LispLambdaChecker-(10.0/10.0) LispLambdaChecker2-(10.0/10.0) LispLambdaChecker3-(10.0/10.0) LoadLambdaChecker-(15.0/15.0) LoadLambdaChecker2-(15.0/15.0) LoadLambdaChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7073" _type="MoveCaretCommand" caretOffset="428" date="Tue Dec 05 18:19:30 EST 2023" docOffset="711" starttimestamp="1701807005597" timestamp="11364923" />
  <Command __id="7074" _type="MoveCaretCommand" caretOffset="428" date="Tue Dec 05 18:19:30 EST 2023" docOffset="711" starttimestamp="1701807005597" timestamp="11364923" />
  <Command __id="7075" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:30 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11365071" />
  <Command __id="7076" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:30 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11365071" />
  <Command __id="7077" _type="MoveCaretCommand" caretOffset="432" date="Tue Dec 05 18:19:32 EST 2023" docOffset="715" starttimestamp="1701807005597" timestamp="11366740" />
  <Command __id="7078" _type="MoveCaretCommand" caretOffset="432" date="Tue Dec 05 18:19:32 EST 2023" docOffset="715" starttimestamp="1701807005597" timestamp="11366740" />
  <Command __id="7079" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:32 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11366874" />
  <Command __id="7080" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:32 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11366874" />
  <Command __id="7081" _type="MoveCaretCommand" caretOffset="438" date="Tue Dec 05 18:19:34 EST 2023" docOffset="721" starttimestamp="1701807005597" timestamp="11368506" />
  <Command __id="7082" _type="MoveCaretCommand" caretOffset="438" date="Tue Dec 05 18:19:34 EST 2023" docOffset="721" starttimestamp="1701807005597" timestamp="11368506" />
  <Command __id="7083" _type="SelectTextCommand" caretOffset="441" date="Tue Dec 05 18:19:34 EST 2023" end="441" start="436" starttimestamp="1701807005597" timestamp="11368623" />
  <Command __id="7084" _type="SelectTextCommand" caretOffset="441" date="Tue Dec 05 18:19:34 EST 2023" end="441" start="436" starttimestamp="1701807005597" timestamp="11368623" />
  <Command __id="7085" _type="MoveCaretCommand" caretOffset="431" date="Tue Dec 05 18:19:34 EST 2023" docOffset="714" starttimestamp="1701807005597" timestamp="11369091" />
  <Command __id="7086" _type="MoveCaretCommand" caretOffset="431" date="Tue Dec 05 18:19:34 EST 2023" docOffset="714" starttimestamp="1701807005597" timestamp="11369091" />
  <Command __id="7087" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:34 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11369241" />
  <Command __id="7088" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:34 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11369241" />
  <Command __id="7089" _type="MoveCaretCommand" caretOffset="475" date="Tue Dec 05 18:19:36 EST 2023" docOffset="758" starttimestamp="1701807005597" timestamp="11370514" />
  <Command __id="7090" _type="MoveCaretCommand" caretOffset="475" date="Tue Dec 05 18:19:36 EST 2023" docOffset="758" starttimestamp="1701807005597" timestamp="11370514" />
  <Command __id="7091" _type="MoveCaretCommand" caretOffset="432" date="Tue Dec 05 18:19:36 EST 2023" docOffset="715" starttimestamp="1701807005597" timestamp="11370987" />
  <Command __id="7092" _type="MoveCaretCommand" caretOffset="432" date="Tue Dec 05 18:19:36 EST 2023" docOffset="715" starttimestamp="1701807005597" timestamp="11370987" />
  <Command __id="7093" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:36 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11371153" />
  <Command __id="7094" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:36 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11371153" />
  <Command __id="7095" _type="MoveCaretCommand" caretOffset="392" date="Tue Dec 05 18:19:37 EST 2023" docOffset="675" starttimestamp="1701807005597" timestamp="11372134" />
  <Command __id="7096" _type="MoveCaretCommand" caretOffset="392" date="Tue Dec 05 18:19:37 EST 2023" docOffset="675" starttimestamp="1701807005597" timestamp="11372134" />
  <Command __id="7097" _type="MoveCaretCommand" caretOffset="429" date="Tue Dec 05 18:19:38 EST 2023" docOffset="712" starttimestamp="1701807005597" timestamp="11373059" />
  <Command __id="7098" _type="MoveCaretCommand" caretOffset="429" date="Tue Dec 05 18:19:38 EST 2023" docOffset="712" starttimestamp="1701807005597" timestamp="11373059" />
  <Command __id="7099" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:38 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11373199" />
  <Command __id="7100" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:19:38 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11373199" />
  <Command __id="7101" _type="MoveCaretCommand" caretOffset="422" date="Tue Dec 05 18:19:46 EST 2023" docOffset="705" starttimestamp="1701807005597" timestamp="11380762" />
  <Command __id="7102" _type="MoveCaretCommand" caretOffset="422" date="Tue Dec 05 18:19:46 EST 2023" docOffset="705" starttimestamp="1701807005597" timestamp="11380762" />
  <Command __id="7103" _type="SelectTextCommand" caretOffset="423" date="Tue Dec 05 18:19:46 EST 2023" end="423" start="417" starttimestamp="1701807005597" timestamp="11380896" />
  <Command __id="7104" _type="SelectTextCommand" caretOffset="423" date="Tue Dec 05 18:19:46 EST 2023" end="423" start="417" starttimestamp="1701807005597" timestamp="11380896" />
  <Command __id="7105" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:19:48 EST 2023" docOffset="703" starttimestamp="1701807005597" timestamp="11383394" />
  <Command __id="7106" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:19:48 EST 2023" docOffset="703" starttimestamp="1701807005597" timestamp="11383394" />
  <Command __id="7107" _type="SelectTextCommand" caretOffset="423" date="Tue Dec 05 18:19:49 EST 2023" end="423" start="417" starttimestamp="1701807005597" timestamp="11383554" />
  <Command __id="7108" _type="SelectTextCommand" caretOffset="423" date="Tue Dec 05 18:19:49 EST 2023" end="423" start="417" starttimestamp="1701807005597" timestamp="11383554" />
  <Command __id="7109" _type="MoveCaretCommand" caretOffset="392" date="Tue Dec 05 18:19:56 EST 2023" docOffset="675" starttimestamp="1701807005597" timestamp="11390891" />
  <Command __id="7110" _type="MoveCaretCommand" caretOffset="392" date="Tue Dec 05 18:19:56 EST 2023" docOffset="675" starttimestamp="1701807005597" timestamp="11390891" />
  <Command __id="7111" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:20:04 EST 2023" docOffset="703" starttimestamp="1701807005597" timestamp="11398877" />
  <Command __id="7112" _type="MoveCaretCommand" caretOffset="420" date="Tue Dec 05 18:20:04 EST 2023" docOffset="703" starttimestamp="1701807005597" timestamp="11398877" />
  <Command __id="7113" _type="SelectTextCommand" caretOffset="423" date="Tue Dec 05 18:20:04 EST 2023" end="423" start="417" starttimestamp="1701807005597" timestamp="11399024" />
  <Command __id="7114" _type="SelectTextCommand" caretOffset="423" date="Tue Dec 05 18:20:04 EST 2023" end="423" start="417" starttimestamp="1701807005597" timestamp="11399024" />
  <Command __id="7115" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 18:20:06 EST 2023" docOffset="785" starttimestamp="1701807005597" timestamp="11400627" />
  <Command __id="7116" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 18:20:06 EST 2023" docOffset="785" starttimestamp="1701807005597" timestamp="11400627" />
  <Command __id="7117" _type="MoveCaretCommand" caretOffset="423" date="Tue Dec 05 18:20:07 EST 2023" docOffset="706" starttimestamp="1701807005597" timestamp="11401516" />
  <Command __id="7118" _type="MoveCaretCommand" caretOffset="423" date="Tue Dec 05 18:20:07 EST 2023" docOffset="706" starttimestamp="1701807005597" timestamp="11401516" />
  <Command __id="7119" _type="MoveCaretCommand" caretOffset="429" date="Tue Dec 05 18:20:07 EST 2023" docOffset="712" starttimestamp="1701807005597" timestamp="11402032" />
  <Command __id="7120" _type="MoveCaretCommand" caretOffset="429" date="Tue Dec 05 18:20:07 EST 2023" docOffset="712" starttimestamp="1701807005597" timestamp="11402032" />
  <Command __id="7121" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:20:07 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11402239" />
  <Command __id="7122" _type="SelectTextCommand" caretOffset="435" date="Tue Dec 05 18:20:07 EST 2023" end="435" start="424" starttimestamp="1701807005597" timestamp="11402239" />
  <Command __id="7123" _type="MoveCaretCommand" caretOffset="446" date="Tue Dec 05 18:20:08 EST 2023" docOffset="729" starttimestamp="1701807005597" timestamp="11403133" />
  <Command __id="7124" _type="MoveCaretCommand" caretOffset="446" date="Tue Dec 05 18:20:08 EST 2023" docOffset="729" starttimestamp="1701807005597" timestamp="11403133" />
  <Command __id="7125" _type="MoveCaretCommand" caretOffset="446" date="Tue Dec 05 18:20:09 EST 2023" docOffset="729" starttimestamp="1701807005597" timestamp="11403580" />
  <Command __id="7126" _type="MoveCaretCommand" caretOffset="446" date="Tue Dec 05 18:20:09 EST 2023" docOffset="729" starttimestamp="1701807005597" timestamp="11403580" />
  <Command __id="7127" _type="ShellCommand" date="Tue Dec 05 18:20:11 EST 2023" starttimestamp="1701807005597" timestamp="11405821" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7128" _type="ShellCommand" date="Tue Dec 05 18:20:11 EST 2023" starttimestamp="1701807005597" timestamp="11405879" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7129" _type="ShellCommand" date="Tue Dec 05 18:20:11 EST 2023" starttimestamp="1701807005597" timestamp="11405892" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7130" _type="ShellCommand" date="Tue Dec 05 18:20:13 EST 2023" starttimestamp="1701807005597" timestamp="11407839" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7131" _type="MoveCaretCommand" caretOffset="587" date="Tue Dec 05 18:20:13 EST 2023" docOffset="870" starttimestamp="1701807005597" timestamp="11407863" />
  <Command __id="7132" _type="MoveCaretCommand" caretOffset="587" date="Tue Dec 05 18:20:13 EST 2023" docOffset="870" starttimestamp="1701807005597" timestamp="11407863" />
  <Command __id="7133" _type="ShellCommand" date="Tue Dec 05 18:20:14 EST 2023" starttimestamp="1701807005597" timestamp="11409290" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7134" _type="ShellCommand" date="Tue Dec 05 18:20:15 EST 2023" starttimestamp="1701807005597" timestamp="11410154" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7135" _type="ShellCommand" date="Tue Dec 05 18:20:15 EST 2023" starttimestamp="1701807005597" timestamp="11410165" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7136" _type="ShellCommand" date="Tue Dec 05 18:20:28 EST 2023" starttimestamp="1701807005597" timestamp="11422513" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7137" _type="MoveCaretCommand" caretOffset="529" date="Tue Dec 05 18:20:28 EST 2023" docOffset="812" starttimestamp="1701807005597" timestamp="11422555" />
  <Command __id="7138" _type="MoveCaretCommand" caretOffset="529" date="Tue Dec 05 18:20:28 EST 2023" docOffset="812" starttimestamp="1701807005597" timestamp="11422555" />
  <Command __id="7139" _type="MoveCaretCommand" caretOffset="534" date="Tue Dec 05 18:20:28 EST 2023" docOffset="817" starttimestamp="1701807005597" timestamp="11423065" />
  <Command __id="7140" _type="MoveCaretCommand" caretOffset="534" date="Tue Dec 05 18:20:28 EST 2023" docOffset="817" starttimestamp="1701807005597" timestamp="11423065" />
  <Command __id="7141" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 18:20:29 EST 2023" docOffset="785" starttimestamp="1701807005597" timestamp="11423575" />
  <Command __id="7142" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 18:20:29 EST 2023" docOffset="785" starttimestamp="1701807005597" timestamp="11423575" />
  <Command __id="7143" _type="MoveCaretCommand" caretOffset="446" date="Tue Dec 05 18:20:29 EST 2023" docOffset="729" starttimestamp="1701807005597" timestamp="11424307" />
  <Command __id="7144" _type="MoveCaretCommand" caretOffset="446" date="Tue Dec 05 18:20:29 EST 2023" docOffset="729" starttimestamp="1701807005597" timestamp="11424307" />
  <Command __id="7145" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 18:20:33 EST 2023" docOffset="785" starttimestamp="1701807005597" timestamp="11428128" />
  <Command __id="7146" _type="MoveCaretCommand" caretOffset="502" date="Tue Dec 05 18:20:33 EST 2023" docOffset="785" starttimestamp="1701807005597" timestamp="11428128" />
  <Command __id="7147" _type="ShellCommand" date="Tue Dec 05 18:20:39 EST 2023" starttimestamp="1701807005597" timestamp="11433440" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7149" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 18:21:01 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11456289" type="Run" />
  <Command __id="7150" _type="RunCommand" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 18:21:01 EST 2023" kind="Run" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11456289" type="Run" />
  <Command __id="7151" _type="ShellCommand" date="Tue Dec 05 18:21:02 EST 2023" starttimestamp="1701807005597" timestamp="11456614" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7152" _type="ConsoleOutput" date="Tue Dec 05 18:21:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11463719" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7153" _type="ConsoleOutput" date="Tue Dec 05 18:21:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11463722" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:TestLispFileProvided,100.0% complete,0.0,0.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7154" _type="ConsoleOutput" date="Tue Dec 05 18:21:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11463726" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):6
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:TestLispFileProvided,100.0% complete,0.0,0.0,¶"), Diff(INSERT,"execution time (ms):6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7155" _type="ConsoleOutput" date="Tue Dec 05 18:21:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11463727" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ClassRegistryProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):6"), Diff(INSERT,"Result:ClassRegistryProvided,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7156" _type="ConsoleOutput" date="Tue Dec 05 18:21:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11463730" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):8
Test Result:MainClassProvided,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):8¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"Main"), Diff(EQUAL,"Class"), Diff(DELETE,"Registry"), Diff(EQUAL,"Provided,100.0% complete,0.0,0.0,¶")]]]></diff>
  </Command>
  <Command __id="7157" _type="ConsoleOutput" date="Tue Dec 05 18:21:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11463762" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):41
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"8¶Test Result:MainClassProvided,100.0% complete,0.0,0.0,"), Diff(INSERT,"41"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7158" _type="ConsoleOutput" date="Tue Dec 05 18:21:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11463764" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLispChecker,100.0% complete,0.0,0.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):41"), Diff(INSERT,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7159" _type="ConsoleOutput" date="Tue Dec 05 18:21:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11463783" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):62
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLispChecker,100.0% complete,0.0,0.0,"), Diff(INSERT,"execution time (ms):62"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7160" _type="ConsoleOutput" date="Tue Dec 05 18:21:09 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11463786" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:DerivedSafeChecker,100.0% complete,30.0,30.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):62"), Diff(INSERT,"Result:DerivedSafeChecker,100.0% complete,30.0,30.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7161" _type="ConsoleOutput" date="Tue Dec 05 18:21:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11468249" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:BasicAndChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"DerivedSafe"), Diff(INSERT,"BasicAnd"), Diff(EQUAL,"Checker,100.0% complete,"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,"), Diff(DELETE,"3"), Diff(INSERT,"1"), Diff(EQUAL,"0.0,¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="7162" _type="ConsoleOutput" date="Tue Dec 05 18:21:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11468251" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:BasicOrChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:Basic"), Diff(DELETE,"And"), Diff(INSERT,"Or"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7163" _type="ConsoleOutput" date="Tue Dec 05 18:21:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11468252" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:NotChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test Result:"), Diff(DELETE,"BasicOr"), Diff(INSERT,"Not"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="7164" _type="ConsoleOutput" date="Tue Dec 05 18:21:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11468253" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:NotChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7165" _type="ConsoleOutput" date="Tue Dec 05 18:21:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11468254" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7166" _type="ConsoleOutput" date="Tue Dec 05 18:21:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11468255" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:VariableArgumentAndChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7167" _type="ConsoleOutput" date="Tue Dec 05 18:21:13 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11468256" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:VariableArgumentOrChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7168" _type="ConsoleOutput" date="Tue Dec 05 18:21:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11470174" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:LispLambdaChecker,100.0% complete,10.0,10.0,

Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:VariableArgumentOr"), Diff(INSERT,"execution time (ms):1¶Test Result:LispLambda"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="7169" _type="ConsoleOutput" date="Tue Dec 05 18:21:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11470176" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:LispLambdaChecker"), Diff(INSERT,"2"), Diff(EQUAL,",100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="7170" _type="ConsoleOutput" date="Tue Dec 05 18:21:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11470176" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7171" _type="ConsoleOutput" date="Tue Dec 05 18:21:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11470177" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispLambdaChecker3,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7172" _type="ConsoleOutput" date="Tue Dec 05 18:21:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11470178" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispLambdaChecker3,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7173" _type="ConsoleOutput" date="Tue Dec 05 18:21:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11470179" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7175" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:15 EST 2023" starttimestamp="1701807005597" timestamp="11470180">
    <CSVRow><![CDATA[167,Tue Dec 05 18:21:09 EST 2023,52,2,A6FuncallSocialDistanceSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker DerivedSafeChecker+ EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,0,true,DerivedSafeChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,DerivedSafeChecker-(30.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7176" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:15 EST 2023" starttimestamp="1701807005597" timestamp="11470180">
    <CSVRow><![CDATA[167,Tue Dec 05 18:21:09 EST 2023,52,2,A6FuncallSocialDistanceSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker DerivedSafeChecker+ EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,0,true,DerivedSafeChecker ,ClassRegistryProvided LoadLispChecker MainClassProvided TestLispFileProvided , ,DerivedSafeChecker-(30.0/30.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7177" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:15 EST 2023" starttimestamp="1701807005597" timestamp="11470180">
    <CSVRow><![CDATA[168,Tue Dec 05 18:21:13 EST 2023,52,0,LogicalSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,1,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker , ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(10.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7174" _type="ConsoleOutput" date="Tue Dec 05 18:21:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11470180" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadLambdaChecker,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7178" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:15 EST 2023" starttimestamp="1701807005597" timestamp="11470180">
    <CSVRow><![CDATA[168,Tue Dec 05 18:21:13 EST 2023,52,0,LogicalSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,1,true,BasicAndChecker BasicOrChecker NotChecker VariableArgumentAndChecker VariableArgumentOrChecker , ,VariableArgumentAndChecker VariableArgumentOrChecker ,BasicAndChecker-(10.0/10.0) BasicOrChecker-(10.0/10.0) NotChecker-(10.0/10.0) VariableArgumentAndChecker-(10.0/10.0) VariableArgumentOrChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7179" _type="ConsoleOutput" date="Tue Dec 05 18:21:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11470181" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadLambdaChecker2,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7180" _type="ConsoleOutput" date="Tue Dec 05 18:21:15 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11470184" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:LoadLambdaChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:LoadLambdaChecker"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,",100.0% complete,15.0,15.0,¶")]]]></diff>
  </Command>
  <Command __id="7181" _type="ConsoleOutput" date="Tue Dec 05 18:21:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11472144" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:GreaterChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶Test Result:"), Diff(DELETE,"LoadLambda"), Diff(INSERT,"Greater"), Diff(EQUAL,"Checker"), Diff(DELETE,"3"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,¶"), Diff(INSERT,"¶")]]]></diff>
  </Command>
  <Command __id="7182" _type="ConsoleOutput" date="Tue Dec 05 18:21:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11472146" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶Test Result:Greater"), Diff(INSERT,"OrEqual"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶¶")]]]></diff>
  </Command>
  <Command __id="7183" _type="ConsoleOutput" date="Tue Dec 05 18:21:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11472146" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test Result:GreaterOrEqualChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7184" _type="ConsoleOutput" date="Tue Dec 05 18:21:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11472148" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LessChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7185" _type="ConsoleOutput" date="Tue Dec 05 18:21:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11472148" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LessChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7186" _type="ConsoleOutput" date="Tue Dec 05 18:21:17 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11472150" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LessOrEqualChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LessOrEqualChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7187" _type="ConsoleOutput" date="Tue Dec 05 18:21:20 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11474679" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test Result:LispSetqChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:L"), Diff(DELETE,"essOrEqual"), Diff(INSERT,"ispSetq"), Diff(EQUAL,"Checker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="7188" _type="ConsoleOutput" date="Tue Dec 05 18:21:20 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11474680" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LispSetqChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶"), Diff(EQUAL,"Test Result:LispSetqChecker"), Diff(INSERT,"2"), Diff(EQUAL,",100.0% complete,10.0,10.0,¶"), Diff(DELETE,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="7189" _type="ConsoleOutput" date="Tue Dec 05 18:21:20 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11474681" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LispSetqChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7190" _type="ConsoleOutput" date="Tue Dec 05 18:21:20 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11474682" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadSetqChecker,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:LoadSetqChecker,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7191" _type="ConsoleOutput" date="Tue Dec 05 18:21:20 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11474682" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadSetqChecker,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7192" _type="ConsoleOutput" date="Tue Dec 05 18:21:20 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11474683" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadSetqChecker2,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadSetqChecker2,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7193" _type="ConsoleOutput" date="Tue Dec 05 18:21:20 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11474684" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:LoadSetqChecker2,100.0% complete,15.0,15.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7194" _type="ConsoleOutput" date="Tue Dec 05 18:21:20 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11474685" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:LoadSetqChecker3,100.0% complete,15.0,15.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:LoadSetqChecker3,100.0% complete,15.0,15.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7195" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478174" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test Result:CondChecker,100.0% complete,10.0,10.0,

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(DELETE,"LoadSetq"), Diff(INSERT,"Cond"), Diff(EQUAL,"Checker"), Diff(DELETE,"3"), Diff(EQUAL,",100.0% complete,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,1"), Diff(DELETE,"5"), Diff(INSERT,"0"), Diff(EQUAL,".0,¶"), Diff(INSERT,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="7196" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478175" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:A6ExtraCondChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test Result:"), Diff(INSERT,"A6Extra"), Diff(EQUAL,"CondChecker,100.0% complete,10.0,10.0,¶¶"), Diff(DELETE,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="7197" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478175" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:A6ExtraCondChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7198" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478177" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:QuoteChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:QuoteChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7199" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478178" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:QuoteChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7200" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478179" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EvalChecker,100.0% complete,10.0,10.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:EvalChecker,100.0% complete,10.0,10.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7201" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478180" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EvalChecker,100.0% complete,10.0,10.0,¶"), Diff(INSERT,"execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7202" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478181" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):0"), Diff(INSERT,"Result:ListChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7203" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478182" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7204" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478183" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:ListChecker2,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:ListChecker2,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7205" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478185" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:ListChecker2,100.0% complete,10.0,10.0,"), Diff(INSERT,"execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7206" _type="ConsoleOutput" date="Tue Dec 05 18:21:23 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11478188" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:CombinationChecker,100.0% complete,10.0,10.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1"), Diff(INSERT,"Result:CombinationChecker,100.0% complete,10.0,10.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7207" _type="ConsoleOutput" date="Tue Dec 05 18:21:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11486110" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (25)
 |- index (24)
  |~ OperationRegistererImpl.java (49)
  |~ CondEvaluator.java (34)
  |~ ClassRegistryImpl.java (157)
  |~ BasicExpressionEvaluatorImpl.java (34)
  |~ SetqEvaluator.java (22)
  |~ index.java (20)
  |~ LoadEvaluator.java (51)
  |~ LesserEqualEvaluator.java (19)
  |~ AndEvaluator.java (27)
  |~ ListEvaluator.java (25)
  |~ FuncallEvaluator.java (23)
  |~ OrEvaluator.java (30)
  |~ GreaterEvaluator.java (18)
  |~ GreaterEqualEvaluator.java (18)
  |~ ArithmeticEvaluatorHelper.java (58)
  |~ BasicExpressionImpl.java (57)
  |~ NotEvaluator.java (23)
  |~ EvalEvaluator.java (16)
  |~ LambdaEvaluator.java (42)
  |~ LesserEvaluator.java (21)
  |~ IdentifierAtomImpl.java (28)
  |~ RunF23A5Tests.java (28)
  |~ QuoteEvaluator.java (16)
  |~ EnvironmentImpl.java (54)

Attempting to match to the structure:
|- .* (19)
 |- [a-z]?.*[Ll]ogical.* (3)
  |~ AndEval.*.java (0)
  |~ OrEval.*.java (0)
  |~ NotEval.*.java (0)
 |- [a-z]?.*[Rr]elational.* (4)
  |~ G.*T.*Eval.*.java (0)
  |~ L.*T.*Eval.*.java (0)
  |~ G.*T.*E.*Eval.*.java (0)
  |~ L.*T.*E.*Eval.*.java (0)
 |- [a-z]?.*[Ee]xpression.* (5)
  |~ QuoteEval.*.java (0)
  |~ EvalEval.*.java (0)
  |~ CondEval.*.java (0)
  |~ LoadEval.*.java (0)
  |~ ListEval.*.java (0)
 |- [a-z]?.*[Ff]unctional.* (3)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test Result:CombinationChecker,100.0% complete,10.0,10.0,"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (25)¶ |- index (24)¶  |~ OperationRegistererImpl.java (49)¶  |~ CondEvaluator.java (34)¶  |~ ClassRegistryImpl.java (157)¶  |~ BasicExpressionEvaluatorImpl.java (34)¶  |~ SetqEvaluator.java (22)¶  |~ index.java (20)¶  |~ LoadEvaluator.java (51)¶  |~ LesserEqualEvaluator.java (19)¶  |~ AndEvaluator.java (27)¶  |~ ListEvaluator.java (25)¶  |~ FuncallEvaluator.java (23)¶  |~ OrEvaluator.java (30)¶  |~ GreaterEvaluator.java (18)¶  |~ GreaterEqualEvaluator.java (18)¶  |~ ArithmeticEvaluatorHelper.java (58)¶  |~ BasicExpressionImpl.java (57)¶  |~ NotEvaluator.java (23)¶  |~ EvalEvaluator.java (16)¶  |~ LambdaEvaluator.java (42)¶  |~ LesserEvaluator.java (21)¶  |~ IdentifierAtomImpl.java (28)¶  |~ RunF23A5Tests.java (28)¶  |~ QuoteEvaluator.java (16)¶  |~ EnvironmentImpl.java (54)¶¶Attempting to match to the structure:¶|- .* (19)¶ |- [a-z]?.*[Ll]ogical.* (3)¶  |~ AndEval.*.java (0)¶  |~ OrEval.*.java (0)¶  |~ NotEval.*.java (0)¶ |- [a-z]?.*[Rr]elational.* (4)¶  |~ G.*T.*Eval.*.java (0)¶  |~ L.*T.*Eval.*.java (0)¶  |~ G.*T.*E.*Eval.*.java (0)¶  |~ L.*T.*E.*Eval.*.java (0)¶ |- [a-z]?.*[Ee]xpression.* (5)¶  |~ QuoteEval.*.java (0)¶  |~ EvalEval.*.java (0)¶  |~ CondEval.*.java (0)¶  |~ LoadEval.*.java (0)¶  |~ ListEval.*.java (0)¶ |- [a-z]?.*[Ff]unctional.* (3)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7208" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:31 EST 2023" starttimestamp="1701807005597" timestamp="11486111">
    <CSVRow><![CDATA[170,Tue Dec 05 18:21:17 EST 2023,52,0,RelationalSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,3,true,GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker , , ,GreaterChecker-(10.0/10.0) GreaterOrEqualChecker-(10.0/10.0) LessChecker-(10.0/10.0) LessOrEqualChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7209" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:31 EST 2023" starttimestamp="1701807005597" timestamp="11486111">
    <CSVRow><![CDATA[170,Tue Dec 05 18:21:17 EST 2023,52,0,RelationalSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,3,true,GreaterChecker GreaterOrEqualChecker LessChecker LessOrEqualChecker , , ,GreaterChecker-(10.0/10.0) GreaterOrEqualChecker-(10.0/10.0) LessChecker-(10.0/10.0) LessOrEqualChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7210" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:31 EST 2023" starttimestamp="1701807005597" timestamp="11486111">
    <CSVRow><![CDATA[171,Tue Dec 05 18:21:20 EST 2023,52,0,LispSetqSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,4,true,LispSetqChecker LispSetqChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 , , ,LispSetqChecker-(10.0/10.0) LispSetqChecker2-(10.0/10.0) LoadSetqChecker-(15.0/15.0) LoadSetqChecker2-(15.0/15.0) LoadSetqChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7211" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:31 EST 2023" starttimestamp="1701807005597" timestamp="11486111">
    <CSVRow><![CDATA[171,Tue Dec 05 18:21:20 EST 2023,52,0,LispSetqSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CombinationChecker CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,4,true,LispSetqChecker LispSetqChecker2 LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 , , ,LispSetqChecker-(10.0/10.0) LispSetqChecker2-(10.0/10.0) LoadSetqChecker-(15.0/15.0) LoadSetqChecker2-(15.0/15.0) LoadSetqChecker3-(15.0/15.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7212" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:31 EST 2023" starttimestamp="1701807005597" timestamp="11486111">
    <CSVRow><![CDATA[172,Tue Dec 05 18:21:23 EST 2023,53,1,A6BasicOperationSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker+ CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,5,true,A6ExtraCondChecker CombinationChecker CondChecker EvalChecker ListChecker ListChecker2 QuoteChecker , ,A6ExtraCondChecker ,A6ExtraCondChecker-(10.0/10.0) CombinationChecker-(10.0/10.0) CondChecker-(10.0/10.0) EvalChecker-(10.0/10.0) ListChecker-(10.0/10.0) ListChecker2-(10.0/10.0) QuoteChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7213" _type="LocalChecksRawCommand" date="Tue Dec 05 18:21:31 EST 2023" starttimestamp="1701807005597" timestamp="11486111">
    <CSVRow><![CDATA[172,Tue Dec 05 18:21:23 EST 2023,53,1,A6BasicOperationSuite,A6ExtraCondChecker BasicAndChecker BasicOrChecker ClassRegistryProvided CombinationChecker+ CondChecker DerivedSafeChecker EnvironmentCallsGetParent EnvironmentCallsPut EvalChecker GreaterChecker GreaterOrEqualChecker IdentifierCallsEnvironmentLookup IdentifierCallsOptionalGet LessChecker LessOrEqualChecker LispLambdaChecker LispLambdaChecker2 LispLambdaChecker3 LispSetqChecker LispSetqChecker2 ListChecker ListChecker2 LoadLambdaChecker LoadLambdaChecker2 LoadLambdaChecker3 LoadLispChecker LoadSetqChecker LoadSetqChecker2 LoadSetqChecker3 MainClassProvided NotChecker QuoteChecker TestLispFileProvided VariableArgumentAndChecker VariableArgumentOrChecker , ,BasicLetTest CurryOnceChecker CurryTwiceChecker CurryTwoArgsChecker FuncallCallsExpressionFactory LambdaCallsLambdaFactory LetLambdaAndFunctionTest LispIsListChecker LispIsListChecker2 LispIsListChecker3 LispIsListChecker4 LispToStringChecker LispToStringChecker2 LispToStringChecker3 LispToStringChecker4 ListMToNCarCdrLazyEval ListMToNCarLazyEval ListMToNCarNormalEval ListMToNCdrLazyEval PlusGeneratorChecker ProjectStructureOrganizesEvaluators TimesGeneratorChecker ,A6CommonPropertiesInherited A6CommonSignaturesAreInherited A6Encapsulation A6NoHiddenFields A6NoStarImports A6NonPublicAccessModifiersMatched A6PackageDeclarations A6PublicMethodsOverride F21A6NoCheckstyleWarnings ,87,5,true,A6ExtraCondChecker CombinationChecker CondChecker EvalChecker ListChecker ListChecker2 QuoteChecker , ,A6ExtraCondChecker ,A6ExtraCondChecker-(10.0/10.0) CombinationChecker-(10.0/10.0) CondChecker-(10.0/10.0) EvalChecker-(10.0/10.0) ListChecker-(10.0/10.0) ListChecker2-(10.0/10.0) QuoteChecker-(10.0/10.0) , ,]]></CSVRow>
  </Command>
  <Command __id="7214" _type="ConsoleOutput" date="Tue Dec 05 18:21:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11486114" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):24
Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶"), Diff(DELETE,"Your project does not meet the required similarity percent of: 0.95 your similarity: 0.2631578947368421¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (25)¶ |- index (24)¶  |~ OperationRegistererImpl.java (49)¶  |~ CondEvaluator.java (34)¶  |~ ClassRegistryImpl.java (157)¶  |~ BasicExpressionEvaluatorImpl.java (34)¶  |~ SetqEvaluator.java (22)¶  |~ index.java (20)¶  |~ LoadEvaluator.java (51)¶  |~ LesserEqualEvaluator.java (19)¶  |~ AndEvaluator.java (27)¶  |~ ListEvaluator.java (25)¶  |~ FuncallEvaluator.java (23)¶  |~ OrEvaluator.java (30)¶  |~ GreaterEvaluator.java (18)¶  |~ GreaterEqualEvaluator.java (18)¶  |~ ArithmeticEvaluatorHelper.java (58)¶  |~ BasicExpressionImpl.java (57)¶  |~ NotEvaluator.java (23)¶  |~ EvalEvaluator.java (16)¶  |~ LambdaEvaluator.java (42)¶  |~ LesserEvaluator.java (21)¶  |~ IdentifierAtomImpl.java (28)¶  |~ RunF23A5Tests.java (28)¶  |~ QuoteEvaluator.java (16)¶  |~ EnvironmentImpl.java (54)¶¶Attempting to match to the structure:¶|- .* (19)¶ |- [a-z]?.*[Ll]ogical.* (3)¶  |~ AndEval.*.java (0)¶  |~ OrEval.*.java (0)¶  |~ NotEval.*.java (0)¶ |- [a-z]?.*[Rr]elational.* (4)¶  |~ G.*T.*Eval.*.java (0)¶  |~ L.*T.*Eval.*.java (0)¶  |~ G.*T.*E.*Eval.*.java (0)¶  |~ L.*T.*E.*Eval.*.java (0)¶ |- [a-z]?.*[Ee]xpression.* (5)¶  |~ QuoteEval.*.java (0)¶  |~ EvalEval.*.java (0)¶  |~ CondEval.*.java (0)¶  |~ LoadEval.*.java (0)¶  |~ ListEval.*.java (0)¶ |- [a-z]?.*[Ff]unctional.* (3)"), Diff(INSERT,"Test execution time (ms):24¶Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7215" _type="ConsoleOutput" date="Tue Dec 05 18:21:31 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11486119" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Tue Dec 05 18:21:31 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):24¶Test Result:ProjectStructureOrganizesEvaluators,0.0% complete,0.0,7.0,View console for more information¶"), Diff(INSERT,"Building symbol table and running first pass checks:Tue Dec 05 18:21:31 EST 2023"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7216" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11486819" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:38
Running second pass checks Tue Dec 05 18:21:32 EST 2023
Start O(n2) inter- and intra class method calls:Tue Dec 05 18:21:32 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:38¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(INSERT," Tue Dec 05 18:21:32 EST 2023¶Start O(n2) inter- and intra class method calls"), Diff(EQUAL,":Tue Dec 05 18:21:3"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EST 2023¶")]]]></diff>
  </Command>
  <Command __id="7217" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11486841" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Tue Dec 05 18:21:32 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:38¶Running second pass checks Tue Dec 05 18:21:32 EST 2023¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Tue Dec 05 18:21:32 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="7218" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487256" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Tue Dec 05 18:21:32 EST 2023
Generating checks:Tue Dec 05 18:21:32 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method call"), Diff(INSERT,"Finished second pass checks:Tue Dec 05 18:21:32 EST 2023¶Generating check"), Diff(EQUAL,"s:Tue Dec 05 18:21:32 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="7219" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487263" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating checks:Tue Dec 05 18:21:32 EST 2023
Generating externals:Tue Dec 05 18:21:32 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass"), Diff(INSERT,"Generating"), Diff(EQUAL," checks:Tue Dec 05 18:21:32 EST 2023¶Generating "), Diff(DELETE,"check"), Diff(INSERT,"external"), Diff(EQUAL,"s:Tue Dec 05 18:21:32 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="7220" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487299" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Tue Dec 05 18:21:32 EST 2023
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"Generating checks:Tue Dec 05 18:21:32 EST 2023¶"), Diff(EQUAL,"Generating externals:Tue Dec 05 18:21:32 EST 2023¶")]]]></diff>
  </Command>
  <Command __id="7221" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487325" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):1214
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Tue Dec 05 18:21:32 EST 2023"), Diff(INSERT,"¶Test execution time (ms):1214"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7222" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487327" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EnvironmentCallsGetParent,0.0% complete,0.0,2.0,index/EnvironmentImpl.java:1: No method in class index.EnvironmentImpl:[@NestedLexicalEnvironment] has not made expected call main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment. [MissingMethodCall]

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):1214"), Diff(INSERT,"Result:EnvironmentCallsGetParent,0.0% complete,0.0,2.0,index/EnvironmentImpl.java:1: No method in class index.EnvironmentImpl:[@NestedLexicalEnvironment] has not made expected call main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment. [MissingMethodCall]¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7223" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487348" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):23
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:EnvironmentCallsGetParent,0.0% complete,0.0,2.0,index/EnvironmentImpl.java:1: No method in class index.EnvironmentImpl:[@NestedLexicalEnvironment] has not made expected call main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment. [MissingMethodCall]¶"), Diff(INSERT,"execution time (ms):23"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7224" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487349" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:EnvironmentCallsPut,100.0% complete,2.0,2.0,

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):23"), Diff(INSERT,"Result:EnvironmentCallsPut,100.0% complete,2.0,2.0,¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7225" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487368" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):19
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"Result:EnvironmentCallsPut,100.0% complete,2.0,2.0,¶"), Diff(INSERT,"execution time (ms):19"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7226" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487370" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶"), Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):19"), Diff(INSERT,"Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7227" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487375" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:FuncallCallsExpressionFactory,0.0% complete,0.0,2.0,Checkstyle output does not match:.*INFO.*: .*BasicFuncallEvaluator(.*) main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?¶"), Diff(INSERT,"execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7228" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487375" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:IdentifierCallsEnvironmentLookup,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):5"), Diff(INSERT,"Result:IdentifierCallsEnvironmentLookup,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7229" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487380" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"Result:IdentifierCallsEnvironmentLookup,100.0% complete,2.0,2.0,"), Diff(INSERT,"execution time (ms):4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7230" _type="ConsoleOutput" date="Tue Dec 05 18:21:32 EST 2023" overflow="false" starttimestamp="1701807005597" timestamp="11487381" type="ConsoleOutput">
    <outputString><![CDATA[Test Result:IdentifierCallsOptionalGet,100.0% complete,2.0,2.0,
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test "), Diff(DELETE,"execution time (ms):4"), Diff(INSERT,"Result:IdentifierCallsOptionalGet,100.0% complete,2.0,2.0,"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="7471" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487401">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7472" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487402">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7473" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487402">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7474" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487402">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7475" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487402">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7476" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487402">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7477" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487402">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7478" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487402">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7479" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487402">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7480" _type="CheckStyleCommand" date="Tue Dec 05 18:21:32 EST 2023" starttimestamp="1701807005597" timestamp="11487402">
    <CSVRow><![CDATA[131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]]]></CSVRow>
  </Command>
  <Command __id="7481" _type="ShellCommand" date="Tue Dec 05 18:21:41 EST 2023" starttimestamp="1701807005597" timestamp="11496226" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7482" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:21:41 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11496233" type="Debug" />
  <Command __id="7483" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 18:21:41 EST 2023" kind="HitBreakPoint" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11496233" type="Run" />
  <Command __id="7484" _type="ProgramExecutionEvent" className="(Unknown)" date="Tue Dec 05 18:21:41 EST 2023" kind="Terminate" projectName="(Unknown)" starttimestamp="1701807005597" timestamp="11496233" type="Debug" />
  <Command __id="7485" _type="ProgramExecutionEvent" className="/Assignment5/src/index/RunF23A5Tests.java" date="Tue Dec 05 18:21:41 EST 2023" kind="Terminate" projectName="Assignment5" starttimestamp="1701807005597" timestamp="11496233" type="Run" />
  <Command __id="7486" _type="ShellCommand" date="Tue Dec 05 18:22:00 EST 2023" starttimestamp="1701807005597" timestamp="11514668" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7487" _type="BalloonCommand" date="Tue Dec 05 19:25:36 EST 2023" message="*******************************************
Worked 8 minutes(fixed)/11 minutes(context based) from
Tue Dec 05 18:10:05 EST 2023 to Tue Dec 05 18:22:00 EST 2023
Edited 1 Projects: 
	Assignment5
Edited 4 Files: 
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/FuncallEvaluator.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/EnvironmentImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/IdentifierAtomImpl.java
	/Users/shanw25/College/JuniorFall/COMP524/Assignment5/src/index/BasicExpressionEvaluatorImpl.java
Number of insert: 401
Number of delete: 244
" starttimestamp="1701807005597" timestamp="15330610">
    <fineGrainedWorkTime><![CDATA[11]]></fineGrainedWorkTime>
    <insert><![CDATA[401]]></insert>
    <startTime><![CDATA[1701817805642]]></startTime>
    <endTime><![CDATA[1701818520265]]></endTime>
    <workTime><![CDATA[8]]></workTime>
    <delete><![CDATA[244]]></delete>
  </Command>
  <Command __id="7488" _type="ShellCommand" date="Wed Dec 06 10:31:36 EST 2023" starttimestamp="1701807005597" timestamp="69690570" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7489" _type="ShellCommand" date="Wed Dec 06 10:31:37 EST 2023" starttimestamp="1701807005597" timestamp="69691624" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7490" _type="ShellCommand" date="Wed Dec 06 10:32:33 EST 2023" starttimestamp="1701807005597" timestamp="69747602" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7491" _type="ShellCommand" date="Wed Dec 06 10:32:33 EST 2023" starttimestamp="1701807005597" timestamp="69748182" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7488" _type="ShellCommand" date="Wed Dec 06 10:31:36 EST 2023" starttimestamp="1701807005597" timestamp="69690570" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7489" _type="ShellCommand" date="Wed Dec 06 10:31:37 EST 2023" starttimestamp="1701807005597" timestamp="69691624" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7490" _type="ShellCommand" date="Wed Dec 06 10:32:33 EST 2023" starttimestamp="1701807005597" timestamp="69747602" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7491" _type="ShellCommand" date="Wed Dec 06 10:32:33 EST 2023" starttimestamp="1701807005597" timestamp="69748182" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7492" _type="ShellCommand" date="Wed Dec 06 10:59:07 EST 2023" starttimestamp="1701807005597" timestamp="71342111" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="7493" _type="ShellCommand" date="Wed Dec 06 10:59:10 EST 2023" starttimestamp="1701807005597" timestamp="71344700" type="ECLIPSE_CLOSED" />
  <DocumentChange __id="6942" _type="Replace" date="Tue Dec 05 18:18:05 EST 2023" docASTNodeCount="197" docActiveCodeLength="1143" docExpressionCount="145" docLength="1143" endLine="13" insertionLength="9" int_docASTNodeCount="194" int_docActiveCodeLength="1134" int_docExpressionCount="143" int_docLength="1134" length="4" offset="484" startLine="13" starttimestamp="1701807005597" timestamp="11279608">
    <deletedText><![CDATA[getH]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6962" _type="Replace" date="Tue Dec 05 18:18:22 EST 2023" docASTNodeCount="197" docActiveCodeLength="1138" docExpressionCount="145" docLength="1138" endLine="13" insertionLength="4" int_docASTNodeCount="194" int_docActiveCodeLength="1134" int_docExpressionCount="143" int_docLength="1134" length="9" offset="484" startLine="13" starttimestamp="1701807005597" timestamp="11296914">
    <deletedText><![CDATA[getHead()]]></deletedText>
    <insertedText><![CDATA[getH]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="6964" _type="Delete" date="Tue Dec 05 18:18:22 EST 2023" docASTNodeCount="195" docActiveCodeLength="1133" docExpressionCount="143" docLength="1133" endLine="13" length="5" offset="483" startLine="13" starttimestamp="1701807005597" timestamp="11297239">
    <text><![CDATA[.getH]]></text>
  </DocumentChange>
  <DocumentChange __id="7002" _type="Insert" date="Tue Dec 05 18:18:47 EST 2023" docASTNodeCount="195" docActiveCodeLength="1138" docExpressionCount="143" docLength="1138" length="5" offset="658" repeat="5" starttimestamp="1701807005597" timestamp="11321678" timestamp2="11322292">
    <text><![CDATA[Basic]]></text>
  </DocumentChange>
  <DocumentChange __id="7026" _type="Insert" date="Tue Dec 05 18:18:54 EST 2023" docASTNodeCount="205" docActiveCodeLength="1187" docExpressionCount="152" docLength="1187" length="49" offset="169" repeat="2" starttimestamp="1701807005597" timestamp="11329102" timestamp2="11329102">
    <text><![CDATA[
import main.lisp.evaluator.function.BasicLambda;]]></text>
  </DocumentChange>
</Events>
