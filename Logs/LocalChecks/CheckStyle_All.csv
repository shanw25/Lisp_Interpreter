0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,missingSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,missingMethodCall,@CustomOperationRegisterer!registerAll:->void,No method,index.index:[@Main]
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:20:18 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:20:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:20:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:20:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:20:18 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:20:18 EST 2023,true,index/OperationRegistererImpl.java,missingSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,reader,reader
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Paths!get:java.net.URI->Path,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:20:18 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OperationRegistererImpl.java,missingSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:20:38 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:20:38 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:20:38 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:20:38 EST 2023,true,index/index.java,missingMethodCall,@CustomOperationRegisterer!registerAll:->void,No method,index.index:[@Main]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,reader,reader
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:20:38 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:20:38 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,missingSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:21:08 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:21:09 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:21:09 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:21:09 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:21:09 EST 2023,true,index/index.java,missingMethodCall,@CustomOperationRegisterer!registerAll:->void,No method,index.index:[@Main]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,reader,reader
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:21:09 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:21:09 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:22:25 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:22:25 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:22:25 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:22:25 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,reader,reader
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:22:25 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:22:25 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:28:15 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:28:16 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:28:16 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:28:16 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:28:16 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,reader,reader
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:28:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:28:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:28:16 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:29 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:30:30 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:30:30 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:30:30 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:30:30 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,reader,reader
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:30:30 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:30:30 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:34:17 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:34:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:34:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:34:18 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:34:18 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,reader,reader
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:34:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:34:18 EST 2023,true,index/QuoteEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:36:28 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:36:28 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:36:28 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:36:28 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:36:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:36:28 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:41:15 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:41:15 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:41:15 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:41:16 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:41:16 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:41:16 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:41:16 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:41:16 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:41:16 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:41:16 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:41:16 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:41:16 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:41:16 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:43:09 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
0,Tue Nov 21 16:43:10 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
0,Tue Nov 21 16:43:10 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
0,Tue Nov 21 16:43:10 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,tags,index.index,@Main
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,nameInDictionary,index.index,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,nameInDictionary,args,args
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:43:10 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
0,Tue Nov 21 16:43:10 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
0,Tue Nov 21 16:43:10 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:51:36 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 16:52:11 EST 2023,true,index/LoadEvaluator.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 16:52:11 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 16:56:50 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 16:56:51 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 16:56:51 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 16:56:51 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 16:56:51 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,charset,charset
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Paths!get:java.net.URI->Path,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
3,Tue Nov 21 16:56:51 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 16:56:51 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 16:56:51 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 16:59:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 16:59:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 16:59:29 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 16:59:29 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lineApple,line
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lineApple,apple
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,charset,charset
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Paths!get:java.net.URI->Path,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 16:59:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 16:59:29 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:00:21 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:00:21 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:00:21 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:00:21 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,charset,charset
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:21 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:00:21 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:22 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:22 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:00:22 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:00:22 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:00:39 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:00:39 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:00:39 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:00:39 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,charset,charset
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:00:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:00:39 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:01:02 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsDoNotOverride,[public  registerAll:->void]
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:01:03 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:01:03 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:01:03 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:01:03 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:01:03 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:01:03 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:07:23 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:07:23 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:07:23 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:07:23 EST 2023,true,index/index.java,missingMethodCall,@CustomOperationRegisterer!registerAll:->void,No method,index.index:[@Main]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:07:23 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:07:23 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:08:46 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:08:46 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:08:46 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:08:46 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:46 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:46 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:08:46 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:08:46 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:08:47 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:08:47 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:08:47 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:08:47 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,operation
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,nameInDictionary,operationRegistererImpl,impl
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,nameNotInDictionary,operationRegistererImpl,registerer
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:08:47 EST 2023,true,index/index.java,missingMethodCall,@CustomOperationRegisterer!registerAll:->void,No method,index.index:[@Main]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:08:47 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:08:47 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:09:41 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:09:42 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:09:42 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:09:42 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:09:42 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:09:42 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:09:42 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:09:42 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:09:42 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:09:42 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:09:42 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:18:57 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:18:58 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:18:58 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:18:58 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:18:58 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:18:58 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:18:58 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:18:58 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:18:58 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:18:58 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:18:58 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:31:19 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:31:19 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:31:19 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:31:19 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:31:19 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:31:19 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:31:19 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:31:19 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:31:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:31:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:31:19 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:05 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:35:05 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:35:05 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:35:05 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:35:05 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:35:06 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:35:06 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:35:06 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:35:06 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:35:06 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:35:06 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:35:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,No method,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,No method,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,No method,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:35:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:35:06 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:38:34 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:38:34 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:38:34 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:38:34 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:38:34 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:38:34 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:38:34 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:38:34 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/GreaterEqualEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:38:34 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:38:34 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:38:34 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:18 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:44:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:44:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:44:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:44:18 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:18 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:44:18 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:44:18 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:44:18 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:44:18 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:44:18 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:44:18 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:18 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:44:19 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:44:19 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
3,Tue Nov 21 17:45:33 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
3,Tue Nov 21 17:45:33 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
3,Tue Nov 21 17:45:33 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/index.java,tags,index.index,@Main
3,Tue Nov 21 17:45:33 EST 2023,true,index/index.java,nameInDictionary,index.index,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/index.java,nameInDictionary,args,args
3,Tue Nov 21 17:45:33 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
3,Tue Nov 21 17:45:33 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:45:33 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:45:33 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
3,Tue Nov 21 17:45:33 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
3,Tue Nov 21 17:45:33 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
3,Tue Nov 21 17:45:33 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,nestedIfDepth,2,1
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,missingSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,nestedIfDepth,2,1
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nestedIfDepth,2,1
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nestedIfDepth,3,1
19,Tue Nov 21 17:45:57 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nestedIfDepth,4,1
19,Tue Nov 21 17:45:57 EST 2023,true,index/index.java,nameInDictionary,index.index,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/index.java,nameInDictionary,args,args
19,Tue Nov 21 17:45:57 EST 2023,true,index/index.java,missingMethodCall,main.Main!main:String[]->void,No method,index.index:[@Main]
19,Tue Nov 21 17:45:57 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
19,Tue Nov 21 17:45:57 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
19,Tue Nov 21 17:45:57 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
19,Tue Nov 21 17:45:57 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:45:57 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
19,Tue Nov 21 17:45:57 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
19,Tue Nov 21 17:45:57 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
19,Tue Nov 21 17:45:57 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:57 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
19,Tue Nov 21 17:45:57 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
19,Tue Nov 21 17:45:57 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
19,Tue Nov 21 17:45:57 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
19,Tue Nov 21 17:45:58 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
19,Tue Nov 21 17:45:58 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
19,Tue Nov 21 17:45:58 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
19,Tue Nov 21 17:45:58 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
19,Tue Nov 21 17:45:58 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Paths!get:java.net.URI->Path,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:45:58 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:46:02 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
19,Tue Nov 21 17:47:19 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OperationRegistererImpl.java,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,tags,index.CondEvaluator,@CondEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
19,Tue Nov 21 17:47:20 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
19,Tue Nov 21 17:47:20 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
19,Tue Nov 21 17:47:20 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/index.java,tags,index.index,@Main
19,Tue Nov 21 17:47:20 EST 2023,true,index/index.java,nameInDictionary,index.index,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/index.java,nameInDictionary,args,args
19,Tue Nov 21 17:47:20 EST 2023,true,index/index.java,expectedSignature,main:String[]->.*,index.index:[@Main]
19,Tue Nov 21 17:47:20 EST 2023,true,index/index.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
19,Tue Nov 21 17:47:20 EST 2023,true,index/index.java,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
19,Tue Nov 21 17:47:20 EST 2023,true,index/index.java,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,tags,index.LoadEvaluator,@LoadEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,tags,index.LesserEqualEvaluator,@LTEEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,tags,index.AndEvaluator,@AndEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/AndEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,tags,index.ListEvaluator,@ListEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/ListEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,tags,index.OrEvaluator,@OrEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/OrEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,tags,index.GreaterEvaluator,@GTEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,tags,index.GreaterEqualEvaluator,@GTEEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/GreaterEqualEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
19,Tue Nov 21 17:47:20 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,tags,index.BasicExpressionImpl,@StringFormattingSExpression
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/BasicExpressionImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,tags,index.NotEvaluator,@NotEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/NotEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,tags,index.EvalEvaluator,@EvalEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/EvalEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,tags,index.LesserEvaluator,@LTEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/LesserEvaluator.java,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
19,Tue Nov 21 17:47:20 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,tags,index.QuoteEvaluator,@QuoteEvaluator
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
19,Tue Nov 21 17:47:20 EST 2023,true,index/QuoteEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
20,Sun Dec 03 14:24:18 EST 2023,true,index/RunF23A5Tests.java,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
20,Sun Dec 03 14:26:40 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
20,Sun Dec 03 14:26:41 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
20,Sun Dec 03 14:26:41 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
20,Sun Dec 03 14:26:41 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
20,Sun Dec 03 14:26:41 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
20,Sun Dec 03 14:26:41 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,bulkierThen,63.0,20.0,3.15
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
20,Sun Dec 03 14:26:41 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
20,Sun Dec 03 14:26:41 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
20,Sun Dec 03 14:26:41 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/index.java,nameInDictionary,index.index,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/index.java,nameInDictionary,args,args
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
20,Sun Dec 03 14:26:41 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/AndEvaluator.java,thenBranching,evalHelper
20,Sun Dec 03 14:26:41 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
20,Sun Dec 03 14:26:41 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
20,Sun Dec 03 14:26:41 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
20,Sun Dec 03 14:26:41 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
20,Sun Dec 03 14:26:41 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
20,Sun Dec 03 14:26:41 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
20,Sun Dec 03 14:26:41 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
20,Sun Dec 03 14:26:41 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
20,Sun Dec 03 14:26:41 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
20,Sun Dec 03 14:26:41 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
20,Sun Dec 03 14:26:41 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
20,Sun Dec 03 14:26:41 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:28 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
20,Mon Dec 04 12:47:29 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
20,Mon Dec 04 12:47:29 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
20,Mon Dec 04 12:47:29 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
20,Mon Dec 04 12:47:29 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
20,Mon Dec 04 12:47:29 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
20,Mon Dec 04 12:47:29 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
20,Mon Dec 04 12:47:29 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
20,Mon Dec 04 12:47:29 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
20,Mon Dec 04 12:47:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
20,Mon Dec 04 12:47:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
20,Mon Dec 04 12:47:29 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/index.java,nameInDictionary,index.index,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/index.java,nameInDictionary,args,args
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
20,Mon Dec 04 12:47:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
20,Mon Dec 04 12:47:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
20,Mon Dec 04 12:47:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
20,Mon Dec 04 12:47:29 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
20,Mon Dec 04 12:47:29 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
20,Mon Dec 04 12:47:29 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
20,Mon Dec 04 12:47:29 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
20,Mon Dec 04 12:47:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
20,Mon Dec 04 12:47:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
20,Mon Dec 04 12:47:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
20,Mon Dec 04 12:47:29 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
20,Mon Dec 04 12:47:29 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:47:29 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
20,Mon Dec 04 12:47:29 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
20,Mon Dec 04 12:47:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
20,Mon Dec 04 12:47:29 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:47:29 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
20,Mon Dec 04 12:47:29 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:47:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
20,Mon Dec 04 12:47:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
20,Mon Dec 04 12:47:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
20,Mon Dec 04 12:47:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
20,Mon Dec 04 12:47:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
20,Mon Dec 04 12:47:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
20,Mon Dec 04 12:47:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
20,Mon Dec 04 12:47:29 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
20,Mon Dec 04 12:48:12 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
20,Mon Dec 04 12:48:12 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
20,Mon Dec 04 12:48:12 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
20,Mon Dec 04 12:48:12 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
20,Mon Dec 04 12:48:12 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:12 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:12 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
20,Mon Dec 04 12:48:12 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
20,Mon Dec 04 12:48:12 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
20,Mon Dec 04 12:48:12 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
20,Mon Dec 04 12:48:12 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
20,Mon Dec 04 12:48:12 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
20,Mon Dec 04 12:48:12 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/index.java,nameInDictionary,index.index,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/index.java,nameInDictionary,args,args
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:12 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
20,Mon Dec 04 12:48:12 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
20,Mon Dec 04 12:48:12 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:12 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:48:12 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:12 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
20,Mon Dec 04 12:48:12 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:12 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
20,Mon Dec 04 12:48:12 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:12 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
20,Mon Dec 04 12:48:12 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
20,Mon Dec 04 12:48:13 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
20,Mon Dec 04 12:48:13 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
20,Mon Dec 04 12:48:13 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
20,Mon Dec 04 12:48:13 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
20,Mon Dec 04 12:48:13 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
20,Mon Dec 04 12:48:13 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
20,Mon Dec 04 12:48:13 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
20,Mon Dec 04 12:48:13 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:13 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
20,Mon Dec 04 12:48:13 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
20,Mon Dec 04 12:48:13 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
20,Mon Dec 04 12:48:13 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
20,Mon Dec 04 12:48:13 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:13 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:13 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
20,Mon Dec 04 12:48:13 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
20,Mon Dec 04 12:48:13 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:13 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:13 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:13 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
20,Mon Dec 04 12:48:13 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:13 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
20,Mon Dec 04 12:48:13 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:13 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:13 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
20,Mon Dec 04 12:48:13 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
20,Mon Dec 04 12:48:13 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:13 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
20,Mon Dec 04 12:48:13 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
20,Mon Dec 04 12:48:13 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:48:13 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
20,Mon Dec 04 12:48:13 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
20,Mon Dec 04 12:48:13 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:48:13 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:48:13 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
20,Mon Dec 04 12:48:13 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
20,Mon Dec 04 12:48:13 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
20,Mon Dec 04 12:48:13 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
20,Mon Dec 04 12:48:13 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
20,Mon Dec 04 12:48:13 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
20,Mon Dec 04 12:48:13 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
20,Mon Dec 04 12:48:13 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:05 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
20,Mon Dec 04 12:52:06 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
20,Mon Dec 04 12:52:06 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
20,Mon Dec 04 12:52:06 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
20,Mon Dec 04 12:52:06 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
20,Mon Dec 04 12:52:06 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
20,Mon Dec 04 12:52:06 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
20,Mon Dec 04 12:52:06 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
20,Mon Dec 04 12:52:06 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
20,Mon Dec 04 12:52:06 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
20,Mon Dec 04 12:52:06 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
20,Mon Dec 04 12:52:06 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/index.java,nameInDictionary,index.index,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/index.java,nameInDictionary,args,args
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
20,Mon Dec 04 12:52:06 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
20,Mon Dec 04 12:52:06 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
20,Mon Dec 04 12:52:06 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
20,Mon Dec 04 12:52:06 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
20,Mon Dec 04 12:52:06 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
20,Mon Dec 04 12:52:06 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
20,Mon Dec 04 12:52:06 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
20,Mon Dec 04 12:52:06 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
20,Mon Dec 04 12:52:06 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
20,Mon Dec 04 12:52:06 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
20,Mon Dec 04 12:52:06 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
20,Mon Dec 04 12:52:06 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
20,Mon Dec 04 12:52:06 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
20,Mon Dec 04 12:52:06 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
20,Mon Dec 04 12:52:06 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
20,Mon Dec 04 12:52:06 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
20,Mon Dec 04 12:52:06 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
20,Mon Dec 04 12:52:06 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
29,Mon Dec 04 13:55:50 EST 2023,true,index/EvalEvaluator.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
42,Mon Dec 04 14:42:00 EST 2023,true,index/EnvironmentImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
42,Mon Dec 04 14:42:00 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
42,Mon Dec 04 14:42:00 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
42,Mon Dec 04 14:42:00 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
42,Mon Dec 04 14:42:00 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
42,Mon Dec 04 14:42:00 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
42,Mon Dec 04 14:42:00 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
42,Mon Dec 04 14:42:00 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
42,Mon Dec 04 14:42:00 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
43,Mon Dec 04 14:54:37 EST 2023,false,fileName,nameInDictionary,fileName,file
43,Mon Dec 04 14:54:37 EST 2023,false,fileName,nameInDictionary,fileName,name
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,missingMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,missingMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,No method,index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,missingMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,missingMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.IntegerAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,lastEvaluated,nameInDictionary,lastEvaluated,evaluated
43,Mon Dec 04 14:54:37 EST 2023,false,lastEvaluated,nameInDictionary,lastEvaluated,last
43,Mon Dec 04 14:54:37 EST 2023,false,firstDec,nameInDictionary,firstDec,first
43,Mon Dec 04 14:54:37 EST 2023,false,firstDec,nameInDictionary,firstDec,dec
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsSExpressionDeep:->String,expectedMethodCall,toStringAsSExpressionDeep:->String,Method:toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsSExpressionDeep:->String,expectedMethodCall,toStringAsSExpressionDeep:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsSExpressionDeep:->String,expectedSignature,toStringAsSExpressionDeep:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,index.GreaterEvaluator,nameInDictionary,index.GreaterEvaluator,greater
43,Mon Dec 04 14:54:37 EST 2023,false,index.GreaterEvaluator,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.GreaterEvaluator,nameInDictionary,index.GreaterEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.GreaterEvaluator,tags,index.GreaterEvaluator,@GTEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!get:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.QuoteEvaluator:[@QuoteEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getHead:->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!getHead:->SExpression,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.CondEvaluator,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.CondEvaluator,nameInDictionary,index.CondEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.CondEvaluator,tags,index.CondEvaluator,@CondEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,firstInt,nameInDictionary,firstInt,int
43,Mon Dec 04 14:54:37 EST 2023,false,firstInt,nameInDictionary,firstInt,first
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,63.0,bulkierThen,63.0,20.0,3.15
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsSExpression:->String,expectedMethodCall,toStringAsSExpression:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsSExpression:->String,expectedMethodCall,toStringAsSExpression:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsSExpression:->String,expectedSignature,toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,expectedMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,Some method (registerBasic:->void),index.OperationRegistererImpl:[@CustomOperationRegisterer]
43,Mon Dec 04 14:54:37 EST 2023,false,2,nestedIfDepth,2,1
43,Mon Dec 04 14:54:37 EST 2023,false,isList:->boolean,expectedMethodCall,isList:->boolean,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,isList:->boolean,expectedMethodCall,isList:->boolean,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,isList:->boolean,expectedSignature,isList:->boolean,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,3,nestedIfDepth,3,1
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,4,nestedIfDepth,4,1
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getHead:->SExpression,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,difference,nameInDictionary,difference,difference
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.NotEvaluator:[@NotEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,missingMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,No method,index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,expectedMethodCall,main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,.*:.*;.*->boolean,missingSignature,.*:.*;.*->boolean,index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,.*:.*;.*->boolean,missingSignature,.*:.*;.*->boolean,index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,.*:.*;.*->boolean,missingSignature,.*:.*;.*->boolean,index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,.*:.*;.*->boolean,missingSignature,.*:.*;.*->boolean,index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,charset,nameNotInDictionary,charset,charset
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.BasicExpression,expectedSuperType,main.lisp.parser.terms.BasicExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,copy:->main.lisp.evaluator.Environment,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEvaluator[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEvaluator[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.GreaterEqualEvaluator[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.ListEvaluator[@ListEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.AndEvaluator[@AndEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.OrEvaluator[@OrEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.QuoteEvaluator[@QuoteEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.EvalEvaluator[@EvalEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.NotEvaluator[@NotEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.LoadEvaluator[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.LesserEqualEvaluator[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.Evaluator,expectedInterface,main.lisp.evaluator.Evaluator,index.CondEvaluator[@CondEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,[@NestedLexicalEnvironment,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,java.nio.file.Paths!get:java.net.URI->Path,expectedMethodCall,java.nio.file.Paths!get:java.net.URI->Path,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,java.nio.file.Paths!get:java.net.URI->Path,missingMethodCall,java.nio.file.Paths!get:java.net.URI->Path,No method,index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,processTimeOut,nameInDictionary,processTimeOut,time
43,Mon Dec 04 14:54:37 EST 2023,false,processTimeOut,nameInDictionary,processTimeOut,out
43,Mon Dec 04 14:54:37 EST 2023,false,processTimeOut,nameInDictionary,processTimeOut,process
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.AbstractSExpression,missingSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.AbstractSExpression,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.AndEvaluator:[@AndEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.NotEvaluator:[@NotEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.EvalEvaluator:[@EvalEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.OrEvaluator:[@OrEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,No method,index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,current,nameInDictionary,current,current
43,Mon Dec 04 14:54:37 EST 2023,false,main:String[]->.*,expectedSignature,main:String[]->.*,index.index:[@Main]
43,Mon Dec 04 14:54:37 EST 2023,false,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,index.BasicExpressionImpl,nameInDictionary,index.BasicExpressionImpl,expression
43,Mon Dec 04 14:54:37 EST 2023,false,index.BasicExpressionImpl,nameInDictionary,index.BasicExpressionImpl,basic
43,Mon Dec 04 14:54:37 EST 2023,false,index.BasicExpressionImpl,nameInDictionary,index.BasicExpressionImpl,impl
43,Mon Dec 04 14:54:37 EST 2023,false,index.BasicExpressionImpl,tags,index.BasicExpressionImpl,@StringFormattingSExpression
43,Mon Dec 04 14:54:37 EST 2023,false,index.BasicExpressionImpl,nameInDictionary,index.BasicExpressionImpl,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.LesserEvaluator,tags,index.LesserEvaluator,@LTEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,index.LesserEvaluator,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.LesserEvaluator,nameInDictionary,index.LesserEvaluator,lesser
43,Mon Dec 04 14:54:37 EST 2023,false,index.LesserEvaluator,nameInDictionary,index.LesserEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,newChild:->main.lisp.evaluator.Environment,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.QuoteEvaluator:[@QuoteEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.AndEvaluator:[@AndEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.ListEvaluator:[@ListEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.NotEvaluator:[@NotEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.OrEvaluator:[@OrEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.EvalEvaluator:[@EvalEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.CondEvaluator:[@CondEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,[],publicMethodsOverride,[]
43,Mon Dec 04 14:54:37 EST 2023,false,expression,nameInDictionary,expression,expression
43,Mon Dec 04 14:54:37 EST 2023,false,index.EnvironmentImpl,nameInDictionary,index.EnvironmentImpl,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.EnvironmentImpl,nameInDictionary,index.EnvironmentImpl,environment
43,Mon Dec 04 14:54:37 EST 2023,false,index.EnvironmentImpl,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
43,Mon Dec 04 14:54:37 EST 2023,false,index.EnvironmentImpl,nameInDictionary,index.EnvironmentImpl,impl
43,Mon Dec 04 14:54:37 EST 2023,false,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,registerAll:->void,expectedSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
43,Mon Dec 04 14:54:37 EST 2023,false,registerAll:->void,missingSignature,registerAll:->void,index.OperationRegistererImpl:[@CustomOperationRegisterer]
43,Mon Dec 04 14:54:37 EST 2023,false,comparator,nameNotInDictionary,comparator,comparator
43,Mon Dec 04 14:54:37 EST 2023,false,index.LoadEvaluator,tags,index.LoadEvaluator,@LoadEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,index.LoadEvaluator,nameInDictionary,index.LoadEvaluator,load
43,Mon Dec 04 14:54:37 EST 2023,false,index.LoadEvaluator,nameInDictionary,index.LoadEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.LoadEvaluator,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,java.nio.file.Files!readAllLines:java.nio.file.Path->List,expectedMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,java.nio.file.Files!readAllLines:java.nio.file.Path->List,missingMethodCall,java.nio.file.Files!readAllLines:java.nio.file.Path->List,No method,index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,expectedMethodCall,@GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator!.*:.*->boolean,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,operationRegistererImpl,nameNotInDictionary,operationRegistererImpl,registerer
43,Mon Dec 04 14:54:37 EST 2023,false,operationRegistererImpl,nameInDictionary,operationRegistererImpl,operation
43,Mon Dec 04 14:54:37 EST 2023,false,operationRegistererImpl,nameInDictionary,operationRegistererImpl,impl
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression,missingInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression,expectedInterface,main.lisp.parser.terms.SExpression,index.BasicExpressionImpl[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,maxTraces,nameInDictionary,maxTraces,max
43,Mon Dec 04 14:54:37 EST 2023,false,maxTraces,nameInDictionary,maxTraces,traces
43,Mon Dec 04 14:54:37 EST 2023,false,toString:->String,expectedMethodCall,toString:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toString:->String,expectedMethodCall,toString:->String,Some method (toStringAsSExpressionDeep:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toString:->String,expectedMethodCall,toString:->String,Method:toStringAsSExpression:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toString:->String,expectedSignature,toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,reader,nameInDictionary,reader,reader
43,Mon Dec 04 14:54:37 EST 2023,false,index.AndEvaluator,tags,index.AndEvaluator,@AndEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,index.AndEvaluator,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.AndEvaluator,nameInDictionary,index.AndEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.AndEvaluator,nameInDictionary,index.AndEvaluator,and
43,Mon Dec 04 14:54:37 EST 2023,false,index.RunF23A5Tests,nameInDictionary,index.RunF23A5Tests,a
43,Mon Dec 04 14:54:37 EST 2023,false,index.RunF23A5Tests,nameInDictionary,index.RunF23A5Tests,run
43,Mon Dec 04 14:54:37 EST 2023,false,index.RunF23A5Tests,nameInDictionary,index.RunF23A5Tests,tests
43,Mon Dec 04 14:54:37 EST 2023,false,index.RunF23A5Tests,nameInDictionary,index.RunF23A5Tests,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.NotEvaluator,nameInDictionary,index.NotEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.NotEvaluator,nameInDictionary,index.NotEvaluator,not
43,Mon Dec 04 14:54:37 EST 2023,false,index.NotEvaluator,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.NotEvaluator,tags,index.NotEvaluator,@NotEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,[@StringFormattingSExpression,expectedTypes,[@StringFormattingSExpression, @LTEEvaluator, @GTEEvaluator+@GTEvaluator+@LTEEvaluator+@LTEvaluator, @GTEEvaluator, @NotEvaluator, @ListEvaluator, @AndEvaluator, @LTEvaluator, @LoadEvaluator, @GTEvaluator, @Main, @CustomOperationRegisterer, @CondEvaluator, @EvalEvaluator, @QuoteEvaluator, @OrEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,retVal,nameInDictionary,retVal,ret
43,Mon Dec 04 14:54:37 EST 2023,false,retVal,nameInDictionary,retVal,val
43,Mon Dec 04 14:54:37 EST 2023,false,lineApple,nameInDictionary,lineApple,line
43,Mon Dec 04 14:54:37 EST 2023,false,lineApple,nameInDictionary,lineApple,apple
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsList:->String,expectedMethodCall,toStringAsList:->String,Some method (toString:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsList:->String,expectedMethodCall,toStringAsList:->String,Method:toString:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsList:->String,expectedSignature,toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,firstEvaled,nameInDictionary,firstEvaled,first
43,Mon Dec 04 14:54:37 EST 2023,false,firstEvaled,nameNotInDictionary,firstEvaled,evaled
43,Mon Dec 04 14:54:37 EST 2023,false,main.Main!main:String[]->void,expectedMethodCall,main.Main!main:String[]->void,Some method (main:String[]->void),index.index:[@Main]
43,Mon Dec 04 14:54:37 EST 2023,false,main.Main!main:String[]->void,missingMethodCall,main.Main!main:String[]->void,No method,index.index:[@Main]
43,Mon Dec 04 14:54:37 EST 2023,false,secondInt,nameInDictionary,secondInt,int
43,Mon Dec 04 14:54:37 EST 2023,false,secondInt,nameInDictionary,secondInt,second
43,Mon Dec 04 14:54:37 EST 2023,false,index.ListEvaluator,tags,index.ListEvaluator,@ListEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,index.ListEvaluator,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.ListEvaluator,nameInDictionary,index.ListEvaluator,list
43,Mon Dec 04 14:54:37 EST 2023,false,index.ListEvaluator,nameInDictionary,index.ListEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,secondDec,nameInDictionary,secondDec,dec
43,Mon Dec 04 14:54:37 EST 2023,false,secondDec,nameInDictionary,secondDec,second
43,Mon Dec 04 14:54:37 EST 2023,false,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,index.ArithmeticEvaluatorHelper,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
43,Mon Dec 04 14:54:37 EST 2023,false,index.ArithmeticEvaluatorHelper,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
43,Mon Dec 04 14:54:37 EST 2023,false,index.ArithmeticEvaluatorHelper,nameInDictionary,index.ArithmeticEvaluatorHelper,index
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,arg1,nameInDictionary,arg1,arg
43,Mon Dec 04 14:54:37 EST 2023,false,index.QuoteEvaluator,nameInDictionary,index.QuoteEvaluator,quote
43,Mon Dec 04 14:54:37 EST 2023,false,index.QuoteEvaluator,nameInDictionary,index.QuoteEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.QuoteEvaluator,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.QuoteEvaluator,tags,index.QuoteEvaluator,@QuoteEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,arg0,nameInDictionary,arg0,arg
43,Mon Dec 04 14:54:37 EST 2023,false,[public  isList:->boolean,publicMethodsDoNotOverride,[public  isList:->boolean, public  toStringAsSExpressionDeep:->String, public  toStringAsSExpression:->String, public  toStringAsList:->String, public  toString:->String, public  toStringAsListHelperPublic:->String]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,missingMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,No method,index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,missingMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,No method,index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,missingMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,missingMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.DecimalAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,[public  registerAll:->void],publicMethodsDoNotOverride,[public  registerAll:->void]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.BasicExpression!getTail:->SExpression,Some method (isList:->boolean),index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
43,Mon Dec 04 14:54:37 EST 2023,false,index.OrEvaluator,nameInDictionary,index.OrEvaluator,or
43,Mon Dec 04 14:54:37 EST 2023,false,index.OrEvaluator,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.OrEvaluator,nameInDictionary,index.OrEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.OrEvaluator,tags,index.OrEvaluator,@OrEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,missingMethodCall,main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluator:*->.*,No method,index.OperationRegistererImpl:[@CustomOperationRegisterer]
43,Mon Dec 04 14:54:37 EST 2023,false,maxPrintedTraces,nameInDictionary,maxPrintedTraces,printed
43,Mon Dec 04 14:54:37 EST 2023,false,maxPrintedTraces,nameInDictionary,maxPrintedTraces,traces
43,Mon Dec 04 14:54:37 EST 2023,false,maxPrintedTraces,nameInDictionary,maxPrintedTraces,max
43,Mon Dec 04 14:54:37 EST 2023,false,line,nameInDictionary,line,line
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.StringAtom!getValue:*->.*,missingMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,No method,index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.StringAtom!getValue:*->.*,expectedMethodCall,main.lisp.parser.terms.StringAtom!getValue:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsListHelperPublic:->String,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsListHelperPublic:->String,expectedMethodCall,toStringAsListHelperPublic:->String,Method:toStringAsList:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsListHelperPublic:->String,expectedSignature,toStringAsListHelperPublic:->String,index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,toStringAsListHelperPublic:->String,expectedMethodCall,toStringAsListHelperPublic:->String,Some method (toStringAsList:->String),index.BasicExpressionImpl:[@StringFormattingSExpression]
43,Mon Dec 04 14:54:37 EST 2023,false,OperationRegistererImpl,variableHasClassType,OperationRegistererImpl,operationRegistererImpl
43,Mon Dec 04 14:54:37 EST 2023,false,interpreterModel,nameInDictionary,interpreterModel,model
43,Mon Dec 04 14:54:37 EST 2023,false,interpreterModel,nameInDictionary,interpreterModel,interpreter
43,Mon Dec 04 14:54:37 EST 2023,false,index.EvalEvaluator,nameInDictionary,index.EvalEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.EvalEvaluator,tags,index.EvalEvaluator,@EvalEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,index.EvalEvaluator,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.LesserEqualEvaluator,nameInDictionary,index.LesserEqualEvaluator,equal
43,Mon Dec 04 14:54:37 EST 2023,false,index.LesserEqualEvaluator,nameInDictionary,index.LesserEqualEvaluator,lesser
43,Mon Dec 04 14:54:37 EST 2023,false,index.LesserEqualEvaluator,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.LesserEqualEvaluator,tags,index.LesserEqualEvaluator,@LTEEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,index.LesserEqualEvaluator,nameInDictionary,index.LesserEqualEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,Some method (main:String[]->void),index.index:[@Main]
43,Mon Dec 04 14:54:37 EST 2023,false,index.GreaterEqualEvaluator,nameInDictionary,index.GreaterEqualEvaluator,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.GreaterEqualEvaluator,nameInDictionary,index.GreaterEqualEvaluator,greater
43,Mon Dec 04 14:54:37 EST 2023,false,index.GreaterEqualEvaluator,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.GreaterEqualEvaluator,tags,index.GreaterEqualEvaluator,@GTEEvaluator
43,Mon Dec 04 14:54:37 EST 2023,false,index.GreaterEqualEvaluator,nameInDictionary,index.GreaterEqualEvaluator,equal
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,No method,index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,No method,index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,No method,index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.AndEvaluator:[@AndEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.CondEvaluator:[@CondEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.OrEvaluator:[@OrEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->double),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,missingMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,No method,index.LesserEqualEvaluator:[@LTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.NotEvaluator:[@NotEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.EvalEvaluator:[@EvalEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.GreaterEvaluator:[@GTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.GreaterEqualEvaluator:[@GTEEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->SExpression),index.LesserEvaluator:[@LTEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.SExpression!getTail:->SExpression,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.QuoteEvaluator:[@QuoteEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,expr,nameNotInDictionary,expr,expr
43,Mon Dec 04 14:54:37 EST 2023,false,lines,nameInDictionary,lines,lines
43,Mon Dec 04 14:54:37 EST 2023,false,113.0,bulkierThen,113.0,20.0,5.65
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.ListEvaluator:[@ListEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,expectedMethodCall,main.lisp.interpreter.InterpreterModelSingleton!newInput:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LoadEvaluator:[@LoadEvaluator]
43,Mon Dec 04 14:54:37 EST 2023,false,index.index,tags,index.index,@Main
43,Mon Dec 04 14:54:37 EST 2023,false,index.index,nameInDictionary,index.index,index
43,Mon Dec 04 14:54:37 EST 2023,false,main.lisp.evaluator.OperationRegisterer,expectedInterface,main.lisp.evaluator.OperationRegisterer,index.OperationRegistererImpl[@CustomOperationRegisterer]
43,Mon Dec 04 14:54:37 EST 2023,false,args,nameInDictionary,args,args
43,Mon Dec 04 14:54:37 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,class
43,Mon Dec 04 14:54:37 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,impl
43,Mon Dec 04 14:54:37 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,registry
43,Mon Dec 04 14:54:37 EST 2023,false,environment,nameInDictionary,environment,environment
43,Mon Dec 04 14:54:37 EST 2023,false,@CustomOperationRegisterer!registerAll:->void,expectedMethodCall,@CustomOperationRegisterer!registerAll:->void,Some method (main:String[]->void),index.index:[@Main]
43,Mon Dec 04 14:54:37 EST 2023,false,@CustomOperationRegisterer!registerAll:->void,missingMethodCall,@CustomOperationRegisterer!registerAll:->void,No method,index.index:[@Main]
43,Mon Dec 04 14:54:37 EST 2023,false,index.OperationRegistererImpl,nameNotInDictionary,index.OperationRegistererImpl,registerer
43,Mon Dec 04 14:54:37 EST 2023,false,index.OperationRegistererImpl,tags,index.OperationRegistererImpl,@CustomOperationRegisterer
43,Mon Dec 04 14:54:37 EST 2023,false,index.OperationRegistererImpl,nameInDictionary,index.OperationRegistererImpl,index
43,Mon Dec 04 14:54:37 EST 2023,false,index.OperationRegistererImpl,nameInDictionary,index.OperationRegistererImpl,operation
43,Mon Dec 04 14:54:37 EST 2023,false,index.OperationRegistererImpl,nameInDictionary,index.OperationRegistererImpl,impl
43,Mon Dec 04 14:54:37 EST 2023,false,secondEvaled,nameInDictionary,secondEvaled,second
43,Mon Dec 04 14:54:37 EST 2023,false,secondEvaled,nameNotInDictionary,secondEvaled,evaled
43,Mon Dec 04 14:54:37 EST 2023,false,evalHelper,thenBranching,evalHelper
75,Mon Dec 04 16:08:43 EST 2023,true,index/CondEvaluator.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
75,Mon Dec 04 16:08:43 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
75,Mon Dec 04 16:08:43 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
75,Mon Dec 04 16:08:43 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
75,Mon Dec 04 16:08:43 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
75,Mon Dec 04 16:08:43 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
75,Mon Dec 04 16:08:43 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
75,Mon Dec 04 16:08:43 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:14:11 EST 2023,true,index/ListEvaluator.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
77,Mon Dec 04 16:14:11 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
77,Mon Dec 04 16:14:11 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
77,Mon Dec 04 16:14:11 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:14:11 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:14:11 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
77,Mon Dec 04 16:32:29 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
77,Mon Dec 04 16:32:29 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
77,Mon Dec 04 16:32:29 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
77,Mon Dec 04 16:32:29 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
77,Mon Dec 04 16:32:29 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
77,Mon Dec 04 16:32:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
77,Mon Dec 04 16:32:29 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
77,Mon Dec 04 16:32:29 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
77,Mon Dec 04 16:32:29 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
77,Mon Dec 04 16:32:29 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
77,Mon Dec 04 16:32:29 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
77,Mon Dec 04 16:32:29 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
77,Mon Dec 04 16:32:29 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/index.java,nameInDictionary,index.index,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/index.java,nameInDictionary,args,args
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
77,Mon Dec 04 16:32:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
77,Mon Dec 04 16:32:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
77,Mon Dec 04 16:32:29 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
77,Mon Dec 04 16:32:29 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
77,Mon Dec 04 16:32:29 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
77,Mon Dec 04 16:32:29 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
77,Mon Dec 04 16:32:29 EST 2023,true,index/OrEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
77,Mon Dec 04 16:32:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
77,Mon Dec 04 16:32:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
77,Mon Dec 04 16:32:29 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
77,Mon Dec 04 16:32:29 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
77,Mon Dec 04 16:32:29 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,isOperator,is
77,Mon Dec 04 16:32:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,isOperator,operator
77,Mon Dec 04 16:32:29 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,expression,expression
77,Mon Dec 04 16:32:29 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
77,Mon Dec 04 16:32:29 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
77,Mon Dec 04 16:32:29 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
77,Mon Dec 04 16:32:29 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
77,Mon Dec 04 16:32:29 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
77,Mon Dec 04 16:32:29 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
78,Mon Dec 04 16:56:09 EST 2023,false,5.65,bulkierThen,113.0,20.0,5.65
78,Mon Dec 04 16:56:09 EST 2023,false,index/CondEvaluator.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
78,Mon Dec 04 16:56:09 EST 2023,false,index/CondEvaluator.java,thenBranching,evalHelper
78,Mon Dec 04 16:56:09 EST 2023,false,index/CondEvaluator.java,nestedIfDepth,2,1
78,Mon Dec 04 16:56:09 EST 2023,false,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
78,Mon Dec 04 16:56:09 EST 2023,false,index/CondEvaluator.java,nameInDictionary,environment,environment
78,Mon Dec 04 16:56:09 EST 2023,false,index/CondEvaluator.java,publicMethodsOverride,[]
78,Mon Dec 04 16:56:09 EST 2023,false,index/CondEvaluator.java,nameNotInDictionary,expr,expr
115,Mon Dec 04 17:25:33 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
119,Tue Dec 05 15:48:33 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,bulkierThen,126.0,17.0,7.411764705882353
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedBlockDepth,2,1
130,Tue Dec 05 16:42:43 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Tue Dec 05 16:43:43 EST 2023,false,fileName,nameInDictionary,fileName,file
131,Tue Dec 05 16:43:43 EST 2023,false,fileName,nameInDictionary,fileName,name
131,Tue Dec 05 16:43:43 EST 2023,false,lastEvaluated,nameInDictionary,lastEvaluated,evaluated
131,Tue Dec 05 16:43:43 EST 2023,false,lastEvaluated,nameInDictionary,lastEvaluated,last
131,Tue Dec 05 16:43:43 EST 2023,false,firstDec,nameInDictionary,firstDec,first
131,Tue Dec 05 16:43:43 EST 2023,false,firstDec,nameInDictionary,firstDec,dec
131,Tue Dec 05 16:43:43 EST 2023,false,isOperator,nameInDictionary,isOperator,is
131,Tue Dec 05 16:43:43 EST 2023,false,isOperator,nameInDictionary,isOperator,operator
131,Tue Dec 05 16:43:43 EST 2023,false,java.util.Optional!get:->Object,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Tue Dec 05 16:43:43 EST 2023,false,index.GreaterEvaluator,nameInDictionary,index.GreaterEvaluator,greater
131,Tue Dec 05 16:43:43 EST 2023,false,index.GreaterEvaluator,nameInDictionary,index.GreaterEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,index.CondEvaluator,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,firstInt,nameInDictionary,firstInt,int
131,Tue Dec 05 16:43:43 EST 2023,false,firstInt,nameInDictionary,firstInt,first
131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,difference,nameInDictionary,difference,difference
131,Tue Dec 05 16:43:43 EST 2023,false,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Tue Dec 05 16:43:43 EST 2023,false,copy:->main.lisp.evaluator.Environment,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,index.SetqEvaluator,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,index.SetqEvaluator,tags,index.SetqEvaluator,@SetqEvaluator
131,Tue Dec 05 16:43:43 EST 2023,false,index.SetqEvaluator,nameInDictionary,index.SetqEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,[@NestedLexicalEnvironment,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Tue Dec 05 16:43:43 EST 2023,false,processTimeOut,nameInDictionary,processTimeOut,time
131,Tue Dec 05 16:43:43 EST 2023,false,processTimeOut,nameInDictionary,processTimeOut,out
131,Tue Dec 05 16:43:43 EST 2023,false,processTimeOut,nameInDictionary,processTimeOut,process
131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.parser.terms.AbstractSExpression,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Tue Dec 05 16:43:43 EST 2023,false,index.LambdaEvaluator,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Tue Dec 05 16:43:43 EST 2023,false,current,nameInDictionary,current,current
131,Tue Dec 05 16:43:43 EST 2023,false,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,index.BasicExpressionImpl,nameInDictionary,index.BasicExpressionImpl,expression
131,Tue Dec 05 16:43:43 EST 2023,false,index.BasicExpressionImpl,nameInDictionary,index.BasicExpressionImpl,basic
131,Tue Dec 05 16:43:43 EST 2023,false,index.BasicExpressionImpl,nameInDictionary,index.BasicExpressionImpl,impl
131,Tue Dec 05 16:43:43 EST 2023,false,index.BasicExpressionImpl,nameInDictionary,index.BasicExpressionImpl,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.LesserEvaluator,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,index.LesserEvaluator,nameInDictionary,index.LesserEvaluator,lesser
131,Tue Dec 05 16:43:43 EST 2023,false,index.LesserEvaluator,nameInDictionary,index.LesserEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,newChild:->main.lisp.evaluator.Environment,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,expression,nameInDictionary,expression,expression
131,Tue Dec 05 16:43:43 EST 2023,false,index.EnvironmentImpl,nameInDictionary,index.EnvironmentImpl,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.EnvironmentImpl,nameInDictionary,index.EnvironmentImpl,environment
131,Tue Dec 05 16:43:43 EST 2023,false,index.EnvironmentImpl,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Tue Dec 05 16:43:43 EST 2023,false,index.EnvironmentImpl,nameInDictionary,index.EnvironmentImpl,impl
131,Tue Dec 05 16:43:43 EST 2023,false,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,e2,minimumLettersInNameCheck,e2,e,2
131,Tue Dec 05 16:43:43 EST 2023,false,e2,nameNotInDictionary,e2,e
131,Tue Dec 05 16:43:43 EST 2023,false,comparator,nameNotInDictionary,comparator,comparator
131,Tue Dec 05 16:43:43 EST 2023,false,index.LoadEvaluator,nameInDictionary,index.LoadEvaluator,load
131,Tue Dec 05 16:43:43 EST 2023,false,index.LoadEvaluator,nameInDictionary,index.LoadEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.LoadEvaluator,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,maxTraces,nameInDictionary,maxTraces,max
131,Tue Dec 05 16:43:43 EST 2023,false,maxTraces,nameInDictionary,maxTraces,traces
131,Tue Dec 05 16:43:43 EST 2023,false,index.AndEvaluator,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,index.AndEvaluator,nameInDictionary,index.AndEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.AndEvaluator,nameInDictionary,index.AndEvaluator,and
131,Tue Dec 05 16:43:43 EST 2023,false,index.RunF23A5Tests,nameInDictionary,index.RunF23A5Tests,a
131,Tue Dec 05 16:43:43 EST 2023,false,index.RunF23A5Tests,nameInDictionary,index.RunF23A5Tests,run
131,Tue Dec 05 16:43:43 EST 2023,false,index.RunF23A5Tests,nameInDictionary,index.RunF23A5Tests,tests
131,Tue Dec 05 16:43:43 EST 2023,false,index.RunF23A5Tests,nameInDictionary,index.RunF23A5Tests,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.IdentifierAtomImpl,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Tue Dec 05 16:43:43 EST 2023,false,index.IdentifierAtomImpl,nameInDictionary,index.IdentifierAtomImpl,atom
131,Tue Dec 05 16:43:43 EST 2023,false,index.IdentifierAtomImpl,nameInDictionary,index.IdentifierAtomImpl,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.IdentifierAtomImpl,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Tue Dec 05 16:43:43 EST 2023,false,index.IdentifierAtomImpl,nameInDictionary,index.IdentifierAtomImpl,impl
131,Tue Dec 05 16:43:43 EST 2023,false,index.NotEvaluator,nameInDictionary,index.NotEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.NotEvaluator,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,index.NotEvaluator,nameInDictionary,index.NotEvaluator,not
131,Tue Dec 05 16:43:43 EST 2023,false,retVal,nameInDictionary,retVal,ret
131,Tue Dec 05 16:43:43 EST 2023,false,retVal,nameInDictionary,retVal,val
131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,e2Eval,nameNotInDictionary,e2Eval,e
131,Tue Dec 05 16:43:43 EST 2023,false,e2Eval,minimumLettersInNameCheck,e2Eval,e,2
131,Tue Dec 05 16:43:43 EST 2023,false,firstEvaled,nameInDictionary,firstEvaled,first
131,Tue Dec 05 16:43:43 EST 2023,false,firstEvaled,nameNotInDictionary,firstEvaled,evaled
131,Tue Dec 05 16:43:43 EST 2023,false,secondInt,nameInDictionary,secondInt,int
131,Tue Dec 05 16:43:43 EST 2023,false,secondInt,nameInDictionary,secondInt,second
131,Tue Dec 05 16:43:43 EST 2023,false,index.ListEvaluator,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,index.ListEvaluator,nameInDictionary,index.ListEvaluator,list
131,Tue Dec 05 16:43:43 EST 2023,false,index.ListEvaluator,nameInDictionary,index.ListEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.parser.terms.IdentifierAtom,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Tue Dec 05 16:43:43 EST 2023,false,secondDec,nameInDictionary,secondDec,dec
131,Tue Dec 05 16:43:43 EST 2023,false,secondDec,nameInDictionary,secondDec,second
131,Tue Dec 05 16:43:43 EST 2023,false,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,index.ArithmeticEvaluatorHelper,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Tue Dec 05 16:43:43 EST 2023,false,index.ArithmeticEvaluatorHelper,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Tue Dec 05 16:43:43 EST 2023,false,index.ArithmeticEvaluatorHelper,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,arg1,nameInDictionary,arg1,arg
131,Tue Dec 05 16:43:43 EST 2023,false,index.QuoteEvaluator,nameInDictionary,index.QuoteEvaluator,quote
131,Tue Dec 05 16:43:43 EST 2023,false,index.QuoteEvaluator,nameInDictionary,index.QuoteEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.QuoteEvaluator,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,arg0,nameInDictionary,arg0,arg
131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 16:43:43 EST 2023,false,index.OrEvaluator,nameInDictionary,index.OrEvaluator,or
131,Tue Dec 05 16:43:43 EST 2023,false,index.OrEvaluator,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,index.OrEvaluator,nameInDictionary,index.OrEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,maxPrintedTraces,nameInDictionary,maxPrintedTraces,printed
131,Tue Dec 05 16:43:43 EST 2023,false,maxPrintedTraces,nameInDictionary,maxPrintedTraces,traces
131,Tue Dec 05 16:43:43 EST 2023,false,maxPrintedTraces,nameInDictionary,maxPrintedTraces,max
131,Tue Dec 05 16:43:43 EST 2023,false,line,nameInDictionary,line,line
131,Tue Dec 05 16:43:43 EST 2023,false,interpreterModel,nameInDictionary,interpreterModel,model
131,Tue Dec 05 16:43:43 EST 2023,false,interpreterModel,nameInDictionary,interpreterModel,interpreter
131,Tue Dec 05 16:43:43 EST 2023,false,index.EvalEvaluator,nameInDictionary,index.EvalEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.EvalEvaluator,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,index.LesserEqualEvaluator,nameInDictionary,index.LesserEqualEvaluator,equal
131,Tue Dec 05 16:43:43 EST 2023,false,index.LesserEqualEvaluator,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,index.LesserEqualEvaluator,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Tue Dec 05 16:43:43 EST 2023,false,index.LesserEqualEvaluator,nameInDictionary,index.LesserEqualEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.GreaterEqualEvaluator,nameInDictionary,index.GreaterEqualEvaluator,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.GreaterEqualEvaluator,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Tue Dec 05 16:43:43 EST 2023,false,index.GreaterEqualEvaluator,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 16:43:43 EST 2023,false,index.GreaterEqualEvaluator,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Tue Dec 05 16:43:43 EST 2023,false,lines,nameInDictionary,lines,lines
131,Tue Dec 05 16:43:43 EST 2023,false,var1,nameNotInDictionary,var1,var
131,Tue Dec 05 16:43:43 EST 2023,false,index.index,nameInDictionary,index.index,index
131,Tue Dec 05 16:43:43 EST 2023,false,args,nameInDictionary,args,args
131,Tue Dec 05 16:43:43 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,class
131,Tue Dec 05 16:43:43 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,impl
131,Tue Dec 05 16:43:43 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.ClassRegistryImpl,nameInDictionary,index.ClassRegistryImpl,registry
131,Tue Dec 05 16:43:43 EST 2023,false,main.lisp.parser.terms.AbstractAtom,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Tue Dec 05 16:43:43 EST 2023,false,index.OperationRegistererImpl,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Tue Dec 05 16:43:43 EST 2023,false,index.OperationRegistererImpl,nameInDictionary,index.OperationRegistererImpl,index
131,Tue Dec 05 16:43:43 EST 2023,false,index.OperationRegistererImpl,nameInDictionary,index.OperationRegistererImpl,operation
131,Tue Dec 05 16:43:43 EST 2023,false,index.OperationRegistererImpl,nameInDictionary,index.OperationRegistererImpl,impl
131,Tue Dec 05 16:43:43 EST 2023,false,secondEvaled,nameInDictionary,secondEvaled,second
131,Tue Dec 05 16:43:43 EST 2023,false,secondEvaled,nameNotInDictionary,secondEvaled,evaled
131,Tue Dec 05 18:21:32 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Tue Dec 05 18:21:32 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Tue Dec 05 18:21:32 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Tue Dec 05 18:21:32 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Tue Dec 05 18:21:32 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Tue Dec 05 18:21:32 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Tue Dec 05 18:21:32 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Tue Dec 05 18:21:32 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Tue Dec 05 18:21:32 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,bulkierThen,182.0,39.0,4.666666666666667
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedBlockDepth,2,1
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Tue Dec 05 18:21:32 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Tue Dec 05 18:21:32 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Tue Dec 05 18:21:32 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Tue Dec 05 18:21:32 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Tue Dec 05 18:21:32 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LoadEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Tue Dec 05 18:21:32 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Tue Dec 05 18:21:32 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Tue Dec 05 18:21:32 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Tue Dec 05 18:21:32 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Tue Dec 05 18:21:32 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@FunctionEvaluator
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,tt,tt
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,minimumVowelInNameCheck,tt,tt,1
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,expression,expression
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@FunctionEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Tue Dec 05 18:21:32 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Tue Dec 05 18:21:32 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Tue Dec 05 18:21:32 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Tue Dec 05 18:21:32 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Tue Dec 05 18:21:32 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,methodAccessModifierMatched,extractIdentifiers:main.lisp.parser.terms.SExpression->IdentifierAtom[],private,[index.LambdaEvaluator],[private]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/LesserEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Tue Dec 05 18:21:32 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Tue Dec 05 18:21:32 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Tue Dec 05 18:21:32 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Tue Dec 05 18:21:32 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Tue Dec 05 18:21:32 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/QuoteEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Tue Dec 05 18:21:32 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:43 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 11:02:44 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 11:02:44 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 11:02:44 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 11:02:44 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 11:02:44 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 11:02:44 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 11:02:44 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 11:02:44 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,bulkierThen,182.0,39.0,4.666666666666667
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedBlockDepth,2,1
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LoadEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/AndEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 11:02:44 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@FunctionEvaluator
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,tt,tt
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,minimumVowelInNameCheck,tt,tt,1
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,expression,expression
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@FunctionEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 11:02:44 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 11:02:44 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 11:02:44 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 11:02:44 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 11:02:44 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EvalEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:02:44 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 11:02:44 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 11:02:44 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:02:44 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 11:02:44 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/QuoteEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:02:44 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 11:18:18 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 11:18:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 11:18:18 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 11:18:18 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 11:18:18 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 11:18:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 11:18:18 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 11:18:18 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,bulkierThen,182.0,39.0,4.666666666666667
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedBlockDepth,2,1
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 11:18:18 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 11:18:18 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 11:18:18 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 11:18:18 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 11:18:18 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 11:18:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 11:18:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 11:18:18 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 11:18:18 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 11:18:18 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/ListEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 11:18:18 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@FunctionEvaluator
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,expression,expression
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,tt,tt
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,minimumVowelInNameCheck,tt,tt,1
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@FunctionEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 11:18:18 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 11:18:18 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 11:18:18 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 11:18:18 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:18:18 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 11:18:18 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 11:18:18 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 11:18:18 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 11:18:18 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 11:18:18 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:58 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 14:13:59 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 14:13:59 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 14:13:59 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 14:13:59 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 14:13:59 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/CondEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 14:13:59 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 14:13:59 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 14:13:59 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,bulkierThen,182.0,39.0,4.666666666666667
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedBlockDepth,2,1
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/SetqEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LoadEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEqualEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 14:13:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 14:13:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 14:13:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 14:13:59 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/AndEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 14:13:59 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@BasicFuncallEvaluator
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,expression,expression
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@BasicFuncallEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/FuncallEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 14:13:59 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 14:13:59 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/OrEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/GreaterEqualEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 14:13:59 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 14:13:59 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/NotEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EvalEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LambdaEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/LesserEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:13:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 14:13:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 14:13:59 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 14:13:59 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:13:59 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/QuoteEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 14:13:59 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:07 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 14:31:08 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 14:31:08 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 14:31:08 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 14:31:08 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 14:31:08 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 14:31:08 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 14:31:08 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 14:31:08 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 14:31:08 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 14:31:08 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 14:31:08 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LoadEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 14:31:08 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 14:31:08 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 14:31:08 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 14:31:08 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 14:31:08 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@BasicFuncallEvaluator + @FunctionEvaluator
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,expression,expression
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@BasicFuncallEvaluator + @FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 14:31:08 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 14:31:08 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 14:31:08 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 14:31:08 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,tags,index.FunctionEvaluator,@FunctionEvaluator
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,function
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FunctionEvaluator[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/FunctionEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 14:31:08 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:31:08 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 14:31:08 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 14:31:08 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:31:08 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 14:31:08 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/QuoteEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:31:08 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 14:44:39 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 14:44:39 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 14:44:39 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 14:44:39 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 14:44:39 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 14:44:39 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 14:44:39 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 14:44:39 EST 2023,true,index/CondEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 14:44:39 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 14:44:39 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 14:44:39 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,function,function
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEqualEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 14:44:39 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/ListEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@BasicFuncallEvaluator + @FunctionEvaluator
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@BasicFuncallEvaluator + @FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,No method,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 14:44:39 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 14:44:39 EST 2023,true,index/OrEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEqualEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 14:44:39 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,tags,index.FunctionEvaluator,@FunctionEvaluator
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,function
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FunctionEvaluator[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/FunctionEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 14:44:39 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/NotEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/EvalEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 14:44:39 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 14:44:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 14:44:39 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 14:44:39 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 14:44:39 EST 2023,true,index/QuoteEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 14:44:39 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 14:44:39 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 15:03:28 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 15:03:28 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 15:03:28 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 15:03:28 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 15:03:28 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 15:03:28 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 15:03:28 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 15:03:28 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,function,function
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/SetqEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEqualEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 15:03:28 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 15:03:28 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 15:03:28 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 15:03:28 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 15:03:28 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@BasicFuncallEvaluator + @FunctionEvaluator
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@BasicFuncallEvaluator + @FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,No method,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 15:03:28 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 15:03:28 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 15:03:28 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,tags,index.FunctionEvaluator,@FunctionEvaluator
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,function
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FunctionEvaluator[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 15:03:28 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/NotEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/NotEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,methodAccessModifierMatched,extractIdentifiers:main.lisp.parser.terms.SExpression->IdentifierAtom[],private,[index.LambdaEvaluator],[private]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:03:28 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 15:03:28 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 15:03:28 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 15:03:28 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:03:28 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:03:28 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:44 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 15:41:45 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 15:41:45 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 15:41:45 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 15:41:45 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 15:41:45 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 15:41:45 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 15:41:45 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 15:41:45 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,function,function
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 15:41:45 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 15:41:45 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 15:41:45 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 15:41:45 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 15:41:45 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LoadEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 15:41:45 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 15:41:45 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 15:41:45 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 15:41:45 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 15:41:45 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/ListEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/ListEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@BasicFuncallEvaluator + @FunctionEvaluator
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@BasicFuncallEvaluator + @FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,No method,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 15:41:45 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 15:41:45 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 15:41:45 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,tags,index.FunctionEvaluator,@FunctionEvaluator
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,function
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FunctionEvaluator[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/FunctionEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 15:41:45 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:41:45 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 15:41:45 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 15:41:45 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 15:41:45 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 15:41:45 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/QuoteEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 15:41:45 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:38 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 21:21:38 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 21:21:38 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 21:21:38 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 21:21:38 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 21:21:38 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 21:21:38 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LetEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:38 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 21:21:38 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 21:21:38 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 21:21:38 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 21:21:38 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,function,function
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LetEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 21:21:39 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 21:21:39 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 21:21:39 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 21:21:39 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 21:21:39 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,tags,index.LetEvaluator,@LetEvaluator
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameInDictionary,index.LetEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameInDictionary,index.LetEvaluator,let
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameInDictionary,headExpr,head
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameInDictionary,temp,temp
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameInDictionary,temp2,temp
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameInDictionary,tailExpr,tail
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,headExpr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,tailExpr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,methodBlockLimit,LetEvaluator,METHOD_DEF[17x4],2,1
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.evaluator.Environment!newChild:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,@NestedLexicalEnvironment!assign:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LetEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LetEvaluator[@LetEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 21:21:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 21:21:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 21:21:39 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 21:21:39 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 21:21:39 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@BasicFuncallEvaluator + @FunctionEvaluator
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,peerOverriddingSignatures,index.CurryEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@BasicFuncallEvaluator + @FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,No method,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FuncallEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 21:21:39 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 21:21:39 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,index.CurryEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,index.CurryEvaluator,curry
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,identifierAtoms,identifier
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,identifierAtoms,atoms
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,expressions,expressions
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,curry
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,lambda
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,args
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,i,i
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,curry
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,lambda
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,body
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,tempExpression,temp
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,tempExpression,expression
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,expression,expression
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,nameNotInDictionary,flambda,flambda
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,methodBlockLimit,CurryEvaluator,METHOD_DEF[47x4],2,1
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,methodAccessModifierMatched,getExpressions:main.lisp.parser.terms.SExpression->SExpression[],private,[index.CurryEvaluator],[private]
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,methodAccessModifierMatched,quoteMakeList:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression[];main.lisp.evaluator.Environment->SExpression,private,[index.CurryEvaluator],[private]
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,methodAccessModifierMatched,makeList:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.IdentifierAtom[]->SExpression,private,[index.CurryEvaluator],[private]
131,Wed Dec 06 21:21:39 EST 2023,true,index/CurryEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 21:21:39 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,tags,index.FunctionEvaluator,@FunctionEvaluator
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,function
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/FunctionEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FunctionEvaluator[@FunctionEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 21:21:39 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:21:39 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 21:21:39 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 21:21:39 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 21:21:39 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:21:39 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:21:39 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:20 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 21:22:21 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 21:22:21 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 21:22:21 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 21:22:21 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 21:22:21 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LetEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 21:22:21 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 21:22:21 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 21:22:21 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,function,function
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.CurryEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,tags,index.LetEvaluator,@LetEvaluator
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,headExpr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,tailExpr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameInDictionary,index.LetEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameInDictionary,index.LetEvaluator,let
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameInDictionary,headExpr,head
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameInDictionary,temp,temp
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameInDictionary,temp2,temp
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,nameInDictionary,tailExpr,tail
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,methodBlockLimit,LetEvaluator,METHOD_DEF[17x4],2,1
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LetEvaluator[@LetEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.evaluator.Environment!newChild:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,@NestedLexicalEnvironment!assign:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LetEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LoadEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/AndEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 21:22:21 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/ListEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@BasicFuncallEvaluator + @FunctionEvaluator
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@BasicFuncallEvaluator + @FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 21:22:21 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 21:22:21 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/OrEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameNotInDictionary,flambda,flambda
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,index.CurryEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,index.CurryEvaluator,curry
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,identifierAtoms,identifier
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,identifierAtoms,atoms
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,expressions,expressions
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,curry
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,lambda
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,args
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,i,i
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,curry
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,lambda
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,body
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,tempExpression,temp
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,tempExpression,expression
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,expression,expression
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,methodBlockLimit,CurryEvaluator,METHOD_DEF[47x4],2,1
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,methodAccessModifierMatched,getExpressions:main.lisp.parser.terms.SExpression->SExpression[],private,[index.CurryEvaluator],[private]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,methodAccessModifierMatched,quoteMakeList:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression[];main.lisp.evaluator.Environment->SExpression,private,[index.CurryEvaluator],[private]
131,Wed Dec 06 21:22:21 EST 2023,true,index/CurryEvaluator.java,methodAccessModifierMatched,makeList:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.IdentifierAtom[]->SExpression,private,[index.CurryEvaluator],[private]
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/GreaterEqualEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 21:22:21 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 21:22:21 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,tags,index.FunctionEvaluator,@FunctionEvaluator
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,function
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FunctionEvaluator[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 21:22:21 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/NotEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EvalEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,methodAccessModifierMatched,extractIdentifiers:main.lisp.parser.terms.SExpression->IdentifierAtom[],private,[index.LambdaEvaluator],[private]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LambdaEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/LesserEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:22:21 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 21:22:21 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 21:22:21 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:22:21 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 21:22:21 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:22:21 EST 2023,true,index/QuoteEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:22:21 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:58 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 21:39:59 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 21:39:59 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 21:39:59 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 21:39:59 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 21:39:59 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LetEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 21:39:59 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 21:39:59 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 21:39:59 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,function,function
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LetEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.CurryEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,tags,index.LetEvaluator,@LetEvaluator
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameInDictionary,index.LetEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameInDictionary,index.LetEvaluator,let
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameInDictionary,headExpr,head
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameInDictionary,temp,temp
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameInDictionary,temp2,temp
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameInDictionary,tailExpr,tail
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,headExpr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,tailExpr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,methodBlockLimit,LetEvaluator,METHOD_DEF[17x4],2,1
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.evaluator.Environment!newChild:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,@NestedLexicalEnvironment!assign:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LetEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LetEvaluator[@LetEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.CurryEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEqualEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 21:39:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 21:39:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 21:39:59 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 21:39:59 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 21:39:59 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/ListEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@BasicFuncallEvaluator + @FunctionEvaluator
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@BasicFuncallEvaluator + @FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 21:39:59 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 21:39:59 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,index.CurryEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,index.CurryEvaluator,curry
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,identifierAtoms,identifier
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,identifierAtoms,atoms
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,expressions,expressions
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,curry
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,lambda
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,args
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,i,i
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,curry
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,lambda
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,body
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,tempExpression,temp
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,tempExpression,expression
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,expression,expression
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,nameNotInDictionary,flambda,flambda
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,methodBlockLimit,CurryEvaluator,METHOD_DEF[38x4],2,1
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,methodAccessModifierMatched,getExpressions:main.lisp.parser.terms.SExpression->SExpression[],private,[index.CurryEvaluator],[private]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,methodAccessModifierMatched,quoteMakeList:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression[];main.lisp.evaluator.Environment->SExpression,private,[index.CurryEvaluator],[private]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,methodAccessModifierMatched,makeList:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.IdentifierAtom[]->SExpression,private,[index.CurryEvaluator],[private]
131,Wed Dec 06 21:39:59 EST 2023,true,index/CurryEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/GreaterEqualEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 21:39:59 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,tags,index.FunctionEvaluator,@FunctionEvaluator
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,function
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FunctionEvaluator[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/FunctionEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 21:39:59 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EvalEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/LesserEvaluator.java,peerDuplicatedSignatures,index.BasicExpressionEvaluatorImpl,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:39:59 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 21:39:59 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 21:39:59 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 21:39:59 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 21:39:59 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 21:39:59 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:52 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 23:34:53 EST 2023,true,index/OperationRegistererImpl.java,expectedTypes,[@NestedLexicalEnvironment, @BasicFuncallEvaluator, @LetEvaluator, @IdentifierAtomWithLookup, @FunctionEvaluator, @SetqEvaluator, @FunctionCallingSExpression, @LambdaEvaluator, @LambdaCallingSExpression]
131,Wed Dec 06 23:34:53 EST 2023,true,index/OperationRegistererImpl.java,nameNotInDictionary,index.OperationRegistererImpl,registerer
131,Wed Dec 06 23:34:53 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,operation
131,Wed Dec 06 23:34:53 EST 2023,true,index/OperationRegistererImpl.java,nameInDictionary,index.OperationRegistererImpl,impl
131,Wed Dec 06 23:34:53 EST 2023,true,index/OperationRegistererImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,nameInDictionary,index.CondEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,bulkierThen,113.0,20.0,5.65
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,nestedIfDepth,2,1
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,peerOverriddingSignatures,index.CurryEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/CondEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,class
131,Wed Dec 06 23:34:53 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,registry
131,Wed Dec 06 23:34:53 EST 2023,true,index/ClassRegistryImpl.java,nameInDictionary,index.ClassRegistryImpl,impl
131,Wed Dec 06 23:34:53 EST 2023,true,index/ClassRegistryImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,basic
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,expression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,index.BasicExpressionEvaluatorImpl,impl
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,temp,temp
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,ids,ids
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,id,id
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nameInDictionary,function,function
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,thenBranching,eval
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,nestedIfDepth,2,1
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FunctionEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LetEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.EvalEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LambdaEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.LoadEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,peerDuplicatedSignatures,index.CurryEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionEvaluatorImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,tags,index.SetqEvaluator,@SetqEvaluator
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2,e
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2,e,2
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,nameNotInDictionary,e2Eval,e
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,minimumLettersInNameCheck,e2Eval,e,2
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,index.SetqEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.CondEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.FuncallEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.OrEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,peerOverriddingSignatures,index.LesserEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/SetqEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/index.java,nameInDictionary,index.index,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/index.java,nameInDictionary,args,args
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,tags,index.LetEvaluator,@LetEvaluator
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,headExpr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameNotInDictionary,tailExpr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameInDictionary,index.LetEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameInDictionary,index.LetEvaluator,let
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameInDictionary,childEnvironment,child
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameInDictionary,childEnvironment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameInDictionary,headExpr,head
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameInDictionary,temp,temp
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameInDictionary,temp2,temp
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,nameInDictionary,tailExpr,tail
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,methodBlockLimit,LetEvaluator,METHOD_DEF[17x4],2,1
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.evaluator.Environment!newChild:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,@NestedLexicalEnvironment!assign:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,peerOverriddingSignatures,index.NotEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,peerOverriddingSignatures,index.GreaterEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,peerOverriddingSignatures,index.QuoteEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,peerOverriddingSignatures,index.SetqEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,peerOverriddingSignatures,index.GreaterEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LetEvaluator[@LetEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LetEvaluator:[@LetEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LetEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,index.LoadEvaluator,load
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,file
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,fileName,name
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,lines,lines
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,interpreter
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,interpreterModel,model
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,line,line
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/LoadEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,lesser
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,index.LesserEqualEvaluator,equal
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.AndEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.LetEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEqualEvaluator.java,peerOverriddingSignatures,index.ListEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/AndEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/AndEvaluator.java,nameInDictionary,index.AndEvaluator,and
131,Wed Dec 06 23:34:53 EST 2023,true,index/AndEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/AndEvaluator.java,nameInDictionary,current,current
131,Wed Dec 06 23:34:53 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,last
131,Wed Dec 06 23:34:53 EST 2023,true,index/AndEvaluator.java,nameInDictionary,lastEvaluated,evaluated
131,Wed Dec 06 23:34:53 EST 2023,true,index/AndEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/ListEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/ListEvaluator.java,nameInDictionary,index.ListEvaluator,list
131,Wed Dec 06 23:34:53 EST 2023,true,index/ListEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/ListEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,tags,index.FuncallEvaluator,@BasicFuncallEvaluator + @FunctionEvaluator
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,index.FuncallEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,missingMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,No method,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FuncallEvaluator[@BasicFuncallEvaluator + @FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FuncallEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FuncallEvaluator:[@BasicFuncallEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/OrEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/OrEvaluator.java,nameInDictionary,index.OrEvaluator,or
131,Wed Dec 06 23:34:53 EST 2023,true,index/OrEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/OrEvaluator.java,thenBranching,evalHelper
131,Wed Dec 06 23:34:53 EST 2023,true,index/OrEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,index.GreaterEvaluator,greater
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameNotInDictionary,flambda,flambda
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,index.CurryEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,index.CurryEvaluator,curry
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,identifierAtoms,identifier
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,identifierAtoms,atoms
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,expressions,expressions
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,curry
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,lambda
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaArgs,args
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,i,i
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,curry
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,lambda
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,curryLambdaBody,body
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,tempExpression,temp
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,tempExpression,expression
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,expression,expression
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,methodBlockLimit,CurryEvaluator,METHOD_DEF[38x4],2,1
131,Wed Dec 06 23:34:53 EST 2023,true,index/CurryEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEqualEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,greater
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,index.GreaterEqualEvaluator,equal
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEqualEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/GreaterEqualEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,firstEvaled,evaled
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,secondEvaled,evaled
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameNotInDictionary,comparator,comparator
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,arithmetic
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,index.ArithmeticEvaluatorHelper,helper
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstEvaled,first
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondEvaled,second
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,first
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstInt,int
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,second
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondInt,int
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,first
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,firstDec,dec
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,second
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,secondDec,dec
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,difference,difference
131,Wed Dec 06 23:34:53 EST 2023,true,index/ArithmeticEvaluatorHelper.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,basic
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,expression
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionImpl.java,nameInDictionary,index.BasicExpressionImpl,impl
131,Wed Dec 06 23:34:53 EST 2023,true,index/BasicExpressionImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,tags,index.FunctionEvaluator,@FunctionEvaluator
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,index.FunctionEvaluator,function
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,lambda,lambda
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.FunctionEvaluator[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.FunctionFactory!newInstance:main.lisp.evaluator.function.Lambda;main.lisp.evaluator.Environment->Function,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!eval:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/FunctionEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.FunctionEvaluator:[@FunctionEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/NotEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/NotEvaluator.java,nameInDictionary,index.NotEvaluator,not
131,Wed Dec 06 23:34:53 EST 2023,true,index/NotEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/NotEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EvalEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,index.EvalEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/EvalEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/EvalEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,tags,index.LambdaEvaluator,@LambdaEvaluator
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,index.LambdaEvaluator,lambda
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,body,body
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,ids,ids
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,id
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,idArray,array
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,nameInDictionary,id,id
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,methodBlockLimit,LambdaEvaluator,METHOD_DEF[30x4],2,1
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,expectedInterface,main.lisp.evaluator.Evaluator,index.LambdaEvaluator[@LambdaEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,peerOverriddingSignatures,index.LesserEqualEvaluator,public  eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,[main.lisp.evaluator.Evaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,expectedSignature,eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.evaluator.function.LambdaFactory!newInstance:main.lisp.parser.terms.IdentifierAtom[];main.lisp.parser.terms.SExpression->Lambda,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getTail:->SExpression,Some method (eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LambdaEvaluator.java,expectedMethodCall,main.lisp.parser.terms.SExpression!getHead:*->.*,Some method (evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->SExpression),index.LambdaEvaluator:[@LambdaEvaluator]
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,index.LesserEvaluator,lesser
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/LesserEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,tags,index.IdentifierAtomImpl,@IdentifierAtomWithLookup
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,nameNotInDictionary,var1,var
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,identifier
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,atom
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,index.IdentifierAtomImpl,impl
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,expectedSignature,eval:main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,java.util.Optional!get:->Object,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,expectedMethodCall,main.lisp.evaluator.Environment!lookup:main.lisp.parser.terms.IdentifierAtom->Optional,Some method (eval:main.lisp.evaluator.Environment->SExpression),index.IdentifierAtomImpl:[@IdentifierAtomWithLookup]
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.IdentifierAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractAtom,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,expectedSuperType,main.lisp.parser.terms.AbstractSExpression,index.IdentifierAtomImpl[@IdentifierAtomWithLookup]
131,Wed Dec 06 23:34:53 EST 2023,true,index/IdentifierAtomImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,run
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,a
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,index.RunF23A5Tests,tests
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,max
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,printed
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxPrintedTraces,traces
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,max
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,maxTraces,traces
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,process
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,time
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,processTimeOut,out
131,Wed Dec 06 23:34:53 EST 2023,true,index/RunF23A5Tests.java,nameInDictionary,args,args
131,Wed Dec 06 23:34:53 EST 2023,true,index/QuoteEvaluator.java,nameNotInDictionary,expr,expr
131,Wed Dec 06 23:34:53 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,index.QuoteEvaluator,quote
131,Wed Dec 06 23:34:53 EST 2023,true,index/QuoteEvaluator.java,nameInDictionary,environment,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/QuoteEvaluator.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,tags,index.EnvironmentImpl,@NestedLexicalEnvironment
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,index
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,environment
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,index.EnvironmentImpl,impl
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg0,arg
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,arg1,arg
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,ret
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,nameInDictionary,retVal,val
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedSuperType,main.lisp.evaluator.environment.AbstractEnvironment,index.EnvironmentImpl[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookupFun:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,copy:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,lookup:main.lisp.parser.terms.IdentifierAtom->java.util.Optional,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,newChild:->main.lisp.evaluator.Environment,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedSignature,assignFun:main.lisp.parser.terms.IdentifierAtom;main.lisp.evaluator.function.Function->void,index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getParent:->Environment,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!get:*->.*,Some method (lookup:main.lisp.parser.terms.IdentifierAtom->Optional),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,expectedMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!put:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void,Some method (assign:main.lisp.parser.terms.IdentifierAtom;main.lisp.parser.terms.SExpression->void),index.EnvironmentImpl:[@NestedLexicalEnvironment]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,publicMethodsOverride,[]
131,Wed Dec 06 23:34:53 EST 2023,true,index/EnvironmentImpl.java,missingMethodCall,main.lisp.evaluator.environment.AbstractEnvironment!getScope:->CopyableScope,No method,index.EnvironmentImpl:[@NestedLexicalEnvironment]
