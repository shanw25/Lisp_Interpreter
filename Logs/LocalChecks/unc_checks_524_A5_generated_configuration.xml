	<module name="ClassDefined">
		<property name="severity" value="info"/>
		<property name="expectedTypes" value="
			@AndEvaluator,
			@CondEvaluator,
			@CustomOperationRegisterer,
			@EvalEvaluator,
			@GTEEvaluator,
			@GTEvaluator,
			@LTEEvaluator,
			@LTEvaluator,
			@ListEvaluator,
			@LoadEvaluator,
			@Main,
			@NotEvaluator,
			@OrEvaluator,
			@QuoteEvaluator,
			@StringFormattingSExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!isNIL:->boolean,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@AndEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!isNIL:->boolean,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedInterfaces" value="
			main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedInterfaces" value="
			main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedSuperTypes" value="
			main.lisp.parser.terms.AbstractSExpression,
			main.lisp.parser.terms.BasicExpression,
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedSuperTypes" value="
			main.lisp.parser.terms.AbstractSExpression,
			main.lisp.parser.terms.BasicExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedSignatures" value="
			isList:->boolean,
			toString:->String,
			toStringAsList:->String,
			toStringAsListHelperPublic:->String,
			toStringAsSExpression:->String,
			toStringAsSExpressionDeep:->String,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedSignatures" value="
			isList:->boolean,
			toString:->String,
			toStringAsList:->String,
			toStringAsListHelperPublic:->String,
			toStringAsSExpression:->String,
			toStringAsSExpressionDeep:->String,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.AbstractSExpression!isAtom:->boolean,
			main.lisp.parser.terms.BasicExpression!getHead:->SExpression,
			main.lisp.parser.terms.AbstractSExpression!toStringAsListHelperPublic:->String,
			main.lisp.parser.terms.AbstractSExpression!isNIL:->boolean,
			main.lisp.parser.terms.BasicExpression!getTail:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@StringFormattingSExpression"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.AbstractSExpression!isAtom:->boolean,
			main.lisp.parser.terms.BasicExpression!getHead:->SExpression,
			main.lisp.parser.terms.AbstractSExpression!toStringAsListHelperPublic:->String,
			main.lisp.parser.terms.AbstractSExpression!isNIL:->boolean,
			main.lisp.parser.terms.BasicExpression!getTail:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.SExpression!isNIL:->boolean,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CondEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.SExpression!isNIL:->boolean,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.evaluator.BuiltinOperationManagerSingleton!getEvaluator:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			java.nio.charset.Charset!toString:*->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,
			@QuoteEvaluator!eval:*->.*,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@EvalEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.evaluator.BuiltinOperationManagerSingleton!getEvaluator:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			java.nio.charset.Charset!toString:*->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,
			@QuoteEvaluator!eval:*->.*,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedSignatures" value="
			getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->main.lisp.parser.terms.SExpression,
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedSignatures" value="
			getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->main.lisp.parser.terms.SExpression,
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedSignatures" value="
			getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->main.lisp.parser.terms.SExpression,
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedSignatures" value="
			getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->main.lisp.parser.terms.SExpression,
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@GTEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedSignatures" value="
			getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->main.lisp.parser.terms.SExpression,
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedSignatures" value="
			getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->main.lisp.parser.terms.SExpression,
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedSignatures" value="
			getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->main.lisp.parser.terms.SExpression,
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedSignatures" value="
			getDifference:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment;String->main.lisp.parser.terms.SExpression,
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LTEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.IntegerAtom!getValue:*->.*,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@ListEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!eval:main.lisp.evaluator.Environment->SExpression,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
			main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedCalls" value="
			java.io.PrintStream!println:*->.*,
			main.lisp.interpreter.InterpreterModel!newInput:String->void,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.StringAtom!getValue:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.interpreter.InterpreterModelSingleton!get:->InterpreterModel,
			java.nio.file.Path!of:java.net.URI->Path,
			java.nio.file.Files!readAllLines:java.nio.file.Path->List,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@LoadEvaluator"/>
		<property name="expectedCalls" value="
			java.io.PrintStream!println:*->.*,
			main.lisp.interpreter.InterpreterModel!newInput:String->void,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.StringAtom!getValue:*->.*,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.interpreter.InterpreterModelSingleton!get:->InterpreterModel,
			java.nio.file.Path!of:java.net.URI->Path,
			java.nio.file.Files!readAllLines:java.nio.file.Path->List,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isNIL:->boolean,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@NotEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isNIL:->boolean,
			main.lisp.parser.terms.NilAtomicExpressionFactory!newInstance:->NilAtom,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.TAtomicExpressionFactory!newInstance:->.*,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.OperationRegisterer,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.OperationRegisterer,
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer"/>
		<property name="expectedSuperTypes" value="
			main.lisp.evaluator.BasicOperationRegisterer,
		"/>
	</module>
	<module name="ExpectedSuperTypes">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer"/>
		<property name="expectedSuperTypes" value="
			main.lisp.evaluator.BasicOperationRegisterer,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer"/>
		<property name="expectedSignatures" value="
			registerAll:->void,
			registerBasic:->void,
			registerArithmetic:->void,
			registerLogic:->void,
			registerOperations:->void,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer"/>
		<property name="expectedSignatures" value="
			registerAll:->void,
			registerBasic:->void,
			registerArithmetic:->void,
			registerLogic:->void,
			registerOperations:->void,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer"/>
		<property name="expectedCalls" value="
			main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,
			main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluatorIfNew:*->.*,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@CustomOperationRegisterer"/>
		<property name="expectedCalls" value="
			main.lisp.evaluator.BuiltinOperationManagerSingleton!get:->.*,
			main.lisp.evaluator.BuiltinOperationManagerSingleton!registerEvaluatorIfNew:*->.*,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
			evalHelper:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!isNIL:->boolean,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@OrEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!isAtom:->boolean,
			main.lisp.parser.terms.SExpression!isNIL:->boolean,
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
			main.lisp.parser.terms.SExpression!getHead:->SExpression,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedInterfaces">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedInterfaces" value="
			main.lisp.evaluator.Evaluator,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedSignatures" value="
			eval:main.lisp.parser.terms.SExpression;main.lisp.evaluator.Environment->main.lisp.parser.terms.SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@QuoteEvaluator"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.SExpression!getTail:->SExpression,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@Main"/>
		<property name="expectedSignatures" value="
			main:String[]->void,
		"/>
	</module>
	<module name="ExpectedSignatures">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@Main"/>
		<property name="expectedSignatures" value="
			main:String[]->void,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="warning"/>
		<property name="includeTypeTags" value="@Main"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,
			@CustomOperationRegisterer!registerAll:->void,
			main.Main!main:String[]->void,
		"/>
	</module>
	<module name="MissingMethodCall">
		<property name="severity" value="info"/>
		<property name="includeTypeTags" value="@Main"/>
		<property name="expectedCalls" value="
			main.lisp.parser.terms.ExpressionFactory!setClass:Class->void,
			@CustomOperationRegisterer!registerAll:->void,
			main.Main!main:String[]->void,
		"/>
	</module>
