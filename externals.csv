Caller Type,Caller Type Words,Caller Tag,Caller Tag Words,Caller Method,Caller Method Words,Caller Super Types,Calling Super Types Words,Called  Type,Called Type Words,Called  Tagged Type,Called Tagged Type Words,Called Method,Called Method Words
index.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator,none,index.AndEvaluator,and,@AndEvaluator,and,evalHelper,helper
index.AndEvaluator,and,@AndEvaluator,and,evalHelper,helper,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.AndEvaluator,and,@AndEvaluator,and,evalHelper,helper,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.AndEvaluator,and,@AndEvaluator,and,evalHelper,helper,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
index.AndEvaluator,and,@AndEvaluator,and,evalHelper,helper,Evaluator,none,index.AndEvaluator,and,@AndEvaluator,and,evalHelper,helper
index.AndEvaluator,and,@AndEvaluator,and,evalHelper,helper,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator,none,main.lisp.evaluator.function.FunctionFactory,function:factory,main.lisp.evaluator.function.FunctionFactory,function:factory,newInstance,new:instance
index.RunF23A5Tests,run:a:tests,RunF23A5Tests,run:a:tests,main,main,Evaluator:Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setTracerShowInfo,set:tracer:show:info
index.RunF23A5Tests,run:a:tests,RunF23A5Tests,run:a:tests,main,main,Evaluator:Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setBufferTracedMessages,set:buffer:traced:messages
index.RunF23A5Tests,run:a:tests,RunF23A5Tests,run:a:tests,main,main,Evaluator:Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setMaxPrintedTraces,set:max:printed:traces
index.RunF23A5Tests,run:a:tests,RunF23A5Tests,run:a:tests,main,main,Evaluator:Evaluator,none,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setMaxTraces,set:max:traces
index.RunF23A5Tests,run:a:tests,RunF23A5Tests,run:a:tests,main,main,Evaluator:Evaluator,none,grader.basics.execution.BasicProjectExecution,basic:project:execution,grader.basics.execution.BasicProjectExecution,basic:project:execution,setProcessTimeOut,set:process:time:out
index.RunF23A5Tests,run:a:tests,RunF23A5Tests,run:a:tests,main,main,Evaluator:Evaluator,none,gradingTools.comp524f23.assignment6.F23Assignment6Suite,assignment:suite,gradingTools.comp524f23.assignment6.F23Assignment6Suite,assignment:suite,main,main
index.IdentifierAtomImpl,identifier:atom:impl,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,lookup,none
index.IdentifierAtomImpl,identifier:atom:impl,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,isPresent,is:present
index.IdentifierAtomImpl,identifier:atom:impl,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,get,get
index.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
index.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
index.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
index.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LetEvaluator,let,@LetEvaluator,let,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,assign,assign
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.LetEvaluator,let,@LetEvaluator,let,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,index.ListEvaluator,list,@ListEvaluator,list,evalHelper,helper
index.ListEvaluator,list,@ListEvaluator,list,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
index.ListEvaluator,list,@ListEvaluator,list,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.ListEvaluator,list,@ListEvaluator,list,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
index.ListEvaluator,list,@ListEvaluator,list,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.ListEvaluator,list,@ListEvaluator,list,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.ListEvaluator,list,@ListEvaluator,list,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,index.ListEvaluator,list,@ListEvaluator,list,evalHelper,helper
index.ListEvaluator,list,@ListEvaluator,list,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper
index.CondEvaluator,none,@CondEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,equals,equals
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getClass,get:class
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,eval,none
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,getEvaluator,get
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,toString,to:string
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,lambdaHelper,lambda:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,lambdaHelper,lambda:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,getArgumentNames,get:argument:names
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,lambdaHelper,lambda:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,assign,assign
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,lambdaHelper,lambda:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,lambdaHelper,lambda:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,lambdaHelper,lambda:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,lambdaHelper,lambda:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,lambdaHelper,lambda:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,eval,none
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,functionHelper,function:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getLambda,get:lambda
index.BasicExpressionEvaluatorImpl,basic:expression:impl,BasicExpressionEvaluatorImpl,basic:expression:impl,functionHelper,function:helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getEnvironment,get:environment
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,String,string,java.lang.String,string,equals,equals
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,String,string,java.lang.String,string,equals,equals
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,String,string,java.lang.String,string,equals,equals
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
index.ArithmeticEvaluatorHelper,arithmetic:helper,ArithmeticEvaluatorHelper,arithmetic:helper,getDifference,get:difference,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
index.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
index.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.FuncallEvaluator,none,@BasicFuncallEvaluator+@FunctionEvaluator,basic:function,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.FuncallEvaluator,none,@BasicFuncallEvaluator+@FunctionEvaluator,basic:function,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,index.FuncallEvaluator,none,@BasicFuncallEvaluator+@FunctionEvaluator,basic:function,evalHelper,helper
index.FuncallEvaluator,none,@BasicFuncallEvaluator+@FunctionEvaluator,basic:function,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
index.FuncallEvaluator,none,@BasicFuncallEvaluator+@FunctionEvaluator,basic:function,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.FuncallEvaluator,none,@BasicFuncallEvaluator+@FunctionEvaluator,basic:function,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.FuncallEvaluator,none,@BasicFuncallEvaluator+@FunctionEvaluator,basic:function,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,lambdaHelper,lambda:helper
index.FuncallEvaluator,none,@BasicFuncallEvaluator+@FunctionEvaluator,basic:function,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,functionHelper,function:helper
index.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper
index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper
index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.OrEvaluator,or,@OrEvaluator,or,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,index.SetqEvaluator,none,@SetqEvaluator,none,evalHelper,helper
index.SetqEvaluator,none,@SetqEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.SetqEvaluator,none,@SetqEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.SetqEvaluator,none,@SetqEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.SetqEvaluator,none,@SetqEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,assign,assign
index.SetqEvaluator,none,@SetqEvaluator,none,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,evalHelper,helper
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,extractIdentifiers,extract:identifiers
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,extractIdentifiers,extract:identifiers,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,java.util.ArrayList,array:list,java.util.ArrayList,array:list,ArrayList,array:list
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,extractIdentifiers,extract:identifiers,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,add,add
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,extractIdentifiers,extract:identifiers,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,extractIdentifiers,extract:identifiers,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,extractIdentifiers,extract:identifiers,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,java.util.ArrayList,array:list,java.util.ArrayList,array:list,size,size
index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,extractIdentifiers,extract:identifiers,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression,java.util.ArrayList,array:list,java.util.ArrayList,array:list,indexOf,index:of
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isNIL,is:nil
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,isList,is:list
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isAtom,is:atom
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toString,to:string
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toString,to:string
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toString,to:string
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,toStringAsListHelperPublic,to:string:as:list:helper:public
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,isList,is:list
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isNIL,is:nil
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toString,to:string
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toString,to:string
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,toStringAsListHelperPublic,to:string:as:list:helper:public
index.BasicExpressionImpl,basic:expression:impl,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
index.index,index,@Main,main,main,main,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.evaluator.ExpressionEvaluatorFactory,expression:factory,main.lisp.evaluator.ExpressionEvaluatorFactory,expression:factory,setClass,set:class
index.index,index,@Main,main,main,main,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.IdentifierAtomFactory,identifier:atom:factory,main.lisp.parser.terms.IdentifierAtomFactory,identifier:atom:factory,setClass,set:class
index.index,index,@Main,main,main,main,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.evaluator.environment.EnvironmentFactory,environment:factory,main.lisp.evaluator.environment.EnvironmentFactory,environment:factory,setClass,set:class
index.index,index,@Main,main,main,main,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAll,register:all
index.index,index,@Main,main,main,main,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,setClass,set:class
index.index,index,@Main,main,main,main,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression,main.Main,main,main.Main,main,main,main
index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,assign,assign,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,put,put
index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,get,get
index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment,java.util.Optional,optional,java.util.Optional,optional,isEmpty,is:empty
index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment,index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none
index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment,java.util.Optional,optional,java.util.Optional,optional,empty,empty
index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,newChild,new:child,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment,index.EnvironmentImpl,environment:impl,@NestedLexicalEnvironment,nested:lexical:environment,EnvironmentImpl,environment:impl
index.ClassRegistryImpl,class:registry:impl,ClassRegistryImpl,class:registry:impl,getFunctionCallingSExpression,get:function:calling:expression,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry,UnsupportedOperationException,unsupported:operation:exception,java.lang.UnsupportedOperationException,unsupported:operation:exception,UnsupportedOperationException,unsupported:operation:exception
index.ClassRegistryImpl,class:registry:impl,ClassRegistryImpl,class:registry:impl,getStatefulOperationRegisterer,get:operation,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry,UnsupportedOperationException,unsupported:operation:exception,java.lang.UnsupportedOperationException,unsupported:operation:exception,UnsupportedOperationException,unsupported:operation:exception
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.QuoteEvaluator,quote,@QuoteEvaluator,quote,QuoteEvaluator,quote
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.ListEvaluator,list,@ListEvaluator,list,ListEvaluator,list
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.LoadEvaluator,load,@LoadEvaluator,load,LoadEvaluator,load
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.EvalEvaluator,none,@EvalEvaluator,none,EvalEvaluator,none
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.CondEvaluator,none,@CondEvaluator,none,CondEvaluator,none
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.GreaterEvaluator,greater,@GTEvaluator,none,GreaterEvaluator,greater
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.LesserEvaluator,lesser,@LTEvaluator,lt,LesserEvaluator,lesser
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.GreaterEqualEvaluator,greater:equal,@GTEEvaluator,gte,GreaterEqualEvaluator,greater:equal
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.LesserEqualEvaluator,lesser:equal,@LTEEvaluator,none,LesserEqualEvaluator,lesser:equal
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.AndEvaluator,and,@AndEvaluator,and,AndEvaluator,and
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.OrEvaluator,or,@OrEvaluator,or,OrEvaluator,or
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.NotEvaluator,not,@NotEvaluator,not,NotEvaluator,not
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.SetqEvaluator,none,@SetqEvaluator,none,SetqEvaluator,none
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,LambdaEvaluator,lambda
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.FuncallEvaluator,none,@BasicFuncallEvaluator+@FunctionEvaluator,basic:function,FuncallEvaluator,none
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.LetEvaluator,let,@LetEvaluator,let,LetEvaluator,let
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAll,register:all
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerBasic,register:basic
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerArithmetic,register:arithmetic
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerLogic,register:logic
index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAll,register:all,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,index.OperationRegistererImpl,operation:impl,@CustomOperationRegisterer,custom:operation,registerAdvance,register:advance
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.StringAtom,string:atom,main.lisp.parser.terms.StringAtom,string:atom,getValue,get:value
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,java.nio.file.Files,files,java.nio.file.Files,files,readAllLines,read:all:lines
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,java.nio.file.Path,path,java.nio.file.Path,path,of,of
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,get,get
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.interpreter.InterpreterModel,interpreter:model,main.lisp.interpreter.InterpreterModel,interpreter:model,newInput,new:input
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,java.io.PrintStream,print:stream,java.io.PrintStream,print:stream,println,none
index.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
index.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.CurryEvaluator,curry,CurryEvaluator,curry,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.CurryEvaluator,curry,CurryEvaluator,curry,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CurryEvaluator,curry,CurryEvaluator,curry,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,getArgumentNames,get:argument:names
index.CurryEvaluator,curry,CurryEvaluator,curry,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.CurryEvaluator,curry,CurryEvaluator,curry,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
index.CurryEvaluator,curry,CurryEvaluator,curry,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,IdentifierAtom,identifier:atom
index.CurryEvaluator,curry,CurryEvaluator,curry,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
index.CurryEvaluator,curry,CurryEvaluator,curry,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,IdentifierAtom,identifier:atom
index.CurryEvaluator,curry,CurryEvaluator,curry,evalHelper,helper,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
index.CurryEvaluator,curry,CurryEvaluator,curry,getExpressions,get:expressions,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,java.util.ArrayList,array:list,java.util.ArrayList,array:list,ArrayList,array:list
index.CurryEvaluator,curry,CurryEvaluator,curry,getExpressions,get:expressions,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,java.util.ArrayList,array:list,java.util.ArrayList,array:list,add,add
index.CurryEvaluator,curry,CurryEvaluator,curry,getExpressions,get:expressions,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
index.CurryEvaluator,curry,CurryEvaluator,curry,getExpressions,get:expressions,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
index.CurryEvaluator,curry,CurryEvaluator,curry,getExpressions,get:expressions,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,java.util.ArrayList,array:list,java.util.ArrayList,array:list,size,size
index.CurryEvaluator,curry,CurryEvaluator,curry,getExpressions,get:expressions,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,java.util.ArrayList,array:list,java.util.ArrayList,array:list,indexOf,index:of
index.CurryEvaluator,curry,CurryEvaluator,curry,quoteMakeList,quote:make:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
index.CurryEvaluator,curry,CurryEvaluator,curry,quoteMakeList,quote:make:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,IdentifierAtom,identifier:atom
index.CurryEvaluator,curry,CurryEvaluator,curry,quoteMakeList,quote:make:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
index.CurryEvaluator,curry,CurryEvaluator,curry,quoteMakeList,quote:make:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
index.CurryEvaluator,curry,CurryEvaluator,curry,makeList,make:list,Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpressionEvaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:BasicExpression:AbstractSExpression:SExpression:AbstractEnvironment:ClassRegistryA6:ClassRegistryA3:ClassRegistryA2:ClassRegistry:BasicOperationRegisterer:OperationRegisterer:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:basic:expression:basic:expression:abstract:expression:expression:abstract:environment:class:registry:a:class:registry:a:class:registry:a:class:registry:basic:operation:operation,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
